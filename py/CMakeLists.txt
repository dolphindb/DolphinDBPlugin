cmake_minimum_required(VERSION 3.0)
project(PluginPy)
add_definitions(-DLOCKFREE_SYMBASE)

set(CMAKE_CXX_STANDARD 11)
set(PYTHON "3.7" CACHE STRING "python edition")
if(PYTHON STREQUAL "3.6")
    set(PYBIND11_PYTHON_VERSION 3.6)
    message("python edition is 3.6")
elseif(PYTHON STREQUAL "3.7")
    set(PYBIND11_PYTHON_VERSION 3.7)
    message("python edition is 3.7")
elseif(PYTHON STREQUAL "3.8")
    set(PYBIND11_PYTHON_VERSION 3.8)
    message("python edition is 3.8")
endif()

if (WIN32)
    set(platform_macro "-DWINDOWS")
    add_compile_options("-D_WIN32_WINNT=0x0600" "-DWINVER=0x0600")
    if(PYTHON STREQUAL "3.6")
        link_libraries(${PROJECT_SOURCE_DIR}/bin/windows/python36.dll)
    elseif(PYTHON STREQUAL "3.7")
        link_libraries(${PROJECT_SOURCE_DIR}/bin/windows/python37.dll)
    elseif(PYTHON STREQUAL "3.8")
        link_libraries(${PROJECT_SOURCE_DIR}/bin/windows/python38.dll)
    endif()
elseif(UNIX)
    set(platform_macro "-DLINUX")
    link_directories(${PROJECT_SOURCE_DIR}/bin/linux)
    add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)
    add_definitions(-Xlinker -export-dynamic)
    if(PYTHON STREQUAL "3.6")
        include_directories(${PROJECT_SOURCE_DIR}/pyinclude/python3.6m/)
        link_libraries(${PROJECT_SOURCE_DIR}/bin/linux/libpython3.6m.so)
    elseif(PYTHON STREQUAL "3.7")
        include_directories(${PROJECT_SOURCE_DIR}/pyinclude/python3.7m/)
        link_libraries(${PROJECT_SOURCE_DIR}/bin/linux/libpython3.7m.so.1.0)
    elseif(PYTHON STREQUAL "3.8")
        include_directories(${PROJECT_SOURCE_DIR}/pyinclude/python3.8/)
        link_libraries(${PROJECT_SOURCE_DIR}/bin/linux/libpython3.8.so.1.0)
    endif()
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${platform_macro} -O0 -fPIC -Wall  -D_hypot=hypot")

add_subdirectory(pybind11)

include_directories(${PROJECT_SOURCE_DIR}/pyinclude)
include_directories(${PROJECT_SOURCE_DIR}/../include)

link_directories(${CMAKE_BINARY_DIR})

aux_source_directory(${PROJECT_SOURCE_DIR}/src DIR_SRCS)

add_library(PluginPy SHARED ${DIR_SRCS})

target_link_libraries(PluginPy DolphinDB pybind11::embed)
