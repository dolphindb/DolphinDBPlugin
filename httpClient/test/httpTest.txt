/* notes:
 *  1. The Test sites is http://www.webxml.com.cn . If test failed, please check status of test sites.
 */

#include "setup/setting.txt"
try{loadPlugin(pluginPath)}catch(ex){print ex};
go
use httpClient;

@testing:case="test_http_get_stock_image_by_code"
dic = dict(['theStockCode'], ['sh000001']);
res = httpGet("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockImageByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];


@testing:case="test_http_post_stock_image_by_code"
res = httpPost("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockImageByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];

@testing:case="test_http_get_stock_imagebyte_by_code"
res = httpGet("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockImageByteByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];


@testing:case="test_http_post_stock_imagebyte_by_code"
res = httpPost("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockImageByteByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];


@testing:case="test_http_get_stockinfo_by_code"
res = httpGet("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockInfoByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];


@testing:case="test_http_post_stockinfo_by_code"
res = httpGet("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx/getStockInfoByCode", dic, 1000);
assert 1, res['responseCode'] == 200;
assert 2, res['elapsed'] < 1000 && res['elapsed'] > 0;
print res['headers'], res['text'];

@tesing:case="test_http_params_get"
url="127.0.0.1:8900"
param=dict(string,string)
param['name']='dolphindb';
param['id']='111';
res=httpClient::httpGet(url,param,1000)
assert 1,res[`responseCode]==200

param="dolphindb,helloworld,123"
res=httpClient::httpGet(url,param,1000)
assert 2, res[`responseCode]==200

@testing:case="test_http_params_post"
url="127.0.0.1:8900"
param=dict(string,string)
param['name']='dolphindb';
param['id']='111';
res=httpClient::httpPost(url,param,1000)
assert 1,res[`responseCode]==501

param="dolphindb,helloworld,123"
res=httpClient::httpPost(url,param,1000)
assert 2, res[`responseCode]==501

param="dolphindb,helloworld,123"
res=httpClient::httpPost("https://www.dolphindb.cn",param,10000)
assert 3, res[`responseCode]==200

@testing:case="test_http_headers_get"
url="127.0.0.1:8900"
res=httpClient::httpGet(url,,1000,"groupName:zhang")
assert 1, res[`responseCode]==200

dic=dict([`groupName,`groupId],[`zhang,"001"])
res=httpClient::httpGet(url,,1000,dic)
assert 2, res[`responseCode]==200

@testing:case="test_http_headers_post"
url="127.0.0.1:8900"
res=httpClient::httpPost(url,,1000,"groupName:zhang")
assert 1, res[`responseCode]==501

dic=dict([`groupName,`groupId],[`zhang,"001"])
res=httpClient::httpPost(url,,1000,dic)
assert 2, res[`responseCode]==501

dic=dict([`groupName,`groupId],[`zhang,"001"])
res=httpClient::httpPost("https://www.dolphindb.cn",,10000,dic)
assert 3, res[`responseCode]==200

@testing:case="test_email_single_send"
res=httpClient::sendEmail(userId,psw,'dolphindbtest@163.com','This is a subject','It is a text');
assert 1, res[`responseCode]==250;

@testing:case="test_email_multi_send"
recipient=`dolphindbtest@163.com`dolphindbtest@yeah.net`dolphindbtest@sohu.com;
res=httpClient::sendEmail(userId,psw,recipient,'This is a subject','It is a text');
assert 1, res[`responseCode]==250;
