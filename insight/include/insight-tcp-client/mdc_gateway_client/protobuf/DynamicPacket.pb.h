// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DynamicPacket.proto

#ifndef PROTOBUF_DynamicPacket_2eproto__INCLUDED
#define PROTOBUF_DynamicPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_DynamicPacket_2eproto();
void protobuf_InitDefaults_DynamicPacket_2eproto();
void protobuf_AssignDesc_DynamicPacket_2eproto();
void protobuf_ShutdownFile_DynamicPacket_2eproto();

class DynamicPacket;

// ===================================================================

class DynamicPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.DynamicPacket) */ {
 public:
  DynamicPacket();
  virtual ~DynamicPacket();

  DynamicPacket(const DynamicPacket& from);

  inline DynamicPacket& operator=(const DynamicPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicPacket& default_instance();

  static const DynamicPacket* internal_default_instance();

  void Swap(DynamicPacket* other);

  // implements Message ----------------------------------------------

  inline DynamicPacket* New() const { return New(NULL); }

  DynamicPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynamicPacket& from);
  void MergeFrom(const DynamicPacket& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DynamicPacket* other);
  void UnsafeMergeFrom(const DynamicPacket& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const ::std::string& htscsecurityid() const;
  void set_htscsecurityid(const ::std::string& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  ::std::string* mutable_htscsecurityid();
  ::std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(::std::string* htscsecurityid);

  // optional int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::google::protobuf::int32 mddate() const;
  void set_mddate(::google::protobuf::int32 value);

  // optional int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::google::protobuf::int32 mdtime() const;
  void set_mdtime(::google::protobuf::int32 value);

  // optional int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::google::protobuf::int64 datatimestamp() const;
  void set_datatimestamp(::google::protobuf::int64 value);

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 5;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // optional int32 packetType = 7;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 7;
  ::google::protobuf::int32 packettype() const;
  void set_packettype(::google::protobuf::int32 value);

  // optional string stringContent = 8;
  void clear_stringcontent();
  static const int kStringContentFieldNumber = 8;
  const ::std::string& stringcontent() const;
  void set_stringcontent(const ::std::string& value);
  void set_stringcontent(const char* value);
  void set_stringcontent(const char* value, size_t size);
  ::std::string* mutable_stringcontent();
  ::std::string* release_stringcontent();
  void set_allocated_stringcontent(::std::string* stringcontent);

  // optional bytes bytesContent = 9;
  void clear_bytescontent();
  static const int kBytesContentFieldNumber = 9;
  const ::std::string& bytescontent() const;
  void set_bytescontent(const ::std::string& value);
  void set_bytescontent(const char* value);
  void set_bytescontent(const void* value, size_t size);
  ::std::string* mutable_bytescontent();
  ::std::string* release_bytescontent();
  void set_allocated_bytescontent(::std::string* bytescontent);

  // optional int32 ExchangeDate = 10;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 10;
  ::google::protobuf::int32 exchangedate() const;
  void set_exchangedate(::google::protobuf::int32 value);

  // optional int32 ExchangeTime = 11;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 11;
  ::google::protobuf::int32 exchangetime() const;
  void set_exchangetime(::google::protobuf::int32 value);

  // optional int32 DataMultiplePowerOf10 = 12;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 12;
  ::google::protobuf::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.DynamicPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr htscsecurityid_;
  ::google::protobuf::internal::ArenaStringPtr stringcontent_;
  ::google::protobuf::internal::ArenaStringPtr bytescontent_;
  ::google::protobuf::int32 mddate_;
  ::google::protobuf::int32 mdtime_;
  ::google::protobuf::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::google::protobuf::int32 packettype_;
  ::google::protobuf::int32 exchangedate_;
  ::google::protobuf::int32 exchangetime_;
  ::google::protobuf::int32 datamultiplepowerof10_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DynamicPacket_2eproto_impl();
  friend void  protobuf_AddDesc_DynamicPacket_2eproto_impl();
  friend void protobuf_AssignDesc_DynamicPacket_2eproto();
  friend void protobuf_ShutdownFile_DynamicPacket_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DynamicPacket> DynamicPacket_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DynamicPacket

// optional string HTSCSecurityID = 1;
inline void DynamicPacket::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DynamicPacket::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
}
inline void DynamicPacket::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
}
inline void DynamicPacket::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
}
inline ::std::string* DynamicPacket::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DynamicPacket::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.DynamicPacket.HTSCSecurityID)
}

// optional int32 MDDate = 2;
inline void DynamicPacket::clear_mddate() {
  mddate_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.MDDate)
  return mddate_;
}
inline void DynamicPacket::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.MDDate)
}

// optional int32 MDTime = 3;
inline void DynamicPacket::clear_mdtime() {
  mdtime_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.MDTime)
  return mdtime_;
}
inline void DynamicPacket::set_mdtime(::google::protobuf::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.MDTime)
}

// optional int64 DataTimestamp = 4;
inline void DynamicPacket::clear_datatimestamp() {
  datatimestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DynamicPacket::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.DataTimestamp)
  return datatimestamp_;
}
inline void DynamicPacket::set_datatimestamp(::google::protobuf::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.DataTimestamp)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
inline void DynamicPacket::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource DynamicPacket::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void DynamicPacket::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 6;
inline void DynamicPacket::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType DynamicPacket::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void DynamicPacket::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.securityType)
}

// optional int32 packetType = 7;
inline void DynamicPacket::clear_packettype() {
  packettype_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::packettype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.packetType)
  return packettype_;
}
inline void DynamicPacket::set_packettype(::google::protobuf::int32 value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.packetType)
}

// optional string stringContent = 8;
inline void DynamicPacket::clear_stringcontent() {
  stringcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DynamicPacket::stringcontent() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
  return stringcontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_stringcontent(const ::std::string& value) {
  
  stringcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
}
inline void DynamicPacket::set_stringcontent(const char* value) {
  
  stringcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
}
inline void DynamicPacket::set_stringcontent(const char* value, size_t size) {
  
  stringcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
}
inline ::std::string* DynamicPacket::mutable_stringcontent() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
  return stringcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DynamicPacket::release_stringcontent() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
  
  return stringcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_allocated_stringcontent(::std::string* stringcontent) {
  if (stringcontent != NULL) {
    
  } else {
    
  }
  stringcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringcontent);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.DynamicPacket.stringContent)
}

// optional bytes bytesContent = 9;
inline void DynamicPacket::clear_bytescontent() {
  bytescontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DynamicPacket::bytescontent() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
  return bytescontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_bytescontent(const ::std::string& value) {
  
  bytescontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
}
inline void DynamicPacket::set_bytescontent(const char* value) {
  
  bytescontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
}
inline void DynamicPacket::set_bytescontent(const void* value, size_t size) {
  
  bytescontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
}
inline ::std::string* DynamicPacket::mutable_bytescontent() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
  return bytescontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DynamicPacket::release_bytescontent() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
  
  return bytescontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicPacket::set_allocated_bytescontent(::std::string* bytescontent) {
  if (bytescontent != NULL) {
    
  } else {
    
  }
  bytescontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytescontent);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.DynamicPacket.bytesContent)
}

// optional int32 ExchangeDate = 10;
inline void DynamicPacket::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.ExchangeDate)
  return exchangedate_;
}
inline void DynamicPacket::set_exchangedate(::google::protobuf::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.ExchangeDate)
}

// optional int32 ExchangeTime = 11;
inline void DynamicPacket::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.ExchangeTime)
  return exchangetime_;
}
inline void DynamicPacket::set_exchangetime(::google::protobuf::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.ExchangeTime)
}

// optional int32 DataMultiplePowerOf10 = 12;
inline void DynamicPacket::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::google::protobuf::int32 DynamicPacket::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.DynamicPacket.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void DynamicPacket::set_datamultiplepowerof10(::google::protobuf::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.DynamicPacket.DataMultiplePowerOf10)
}

inline const DynamicPacket* DynamicPacket::internal_default_instance() {
  return &DynamicPacket_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DynamicPacket_2eproto__INCLUDED
