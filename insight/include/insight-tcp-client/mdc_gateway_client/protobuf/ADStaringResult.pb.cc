// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADStaringResult.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ADStaringResult.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::Descriptor* ADStaringResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADStaringResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ADStaringResult_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ADStaringResult_2eproto() {
  protobuf_AddDesc_ADStaringResult_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ADStaringResult.proto");
  GOOGLE_CHECK(file != NULL);
  ADStaringResult_descriptor_ = file->message_type(0);
  static const int ADStaringResult_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, htscsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, mddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, mdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, datatimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, securityidsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, securitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, exchangedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, exchangetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, staringresultid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, strategyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, algorithmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, algorithmname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, customerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, systemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, rmindvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, realcalvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, datamultiplepowerof10_),
  };
  ADStaringResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADStaringResult_descriptor_,
      ADStaringResult::internal_default_instance(),
      ADStaringResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADStaringResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADStaringResult, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ADStaringResult_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADStaringResult_descriptor_, ADStaringResult::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ADStaringResult_2eproto() {
  ADStaringResult_default_instance_.Shutdown();
  delete ADStaringResult_reflection_;
}

void protobuf_InitDefaults_ADStaringResult_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ADStaringResult_default_instance_.DefaultConstruct();
  ADStaringResult_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ADStaringResult_2eproto_once_);
void protobuf_InitDefaults_ADStaringResult_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ADStaringResult_2eproto_once_,
                 &protobuf_InitDefaults_ADStaringResult_2eproto_impl);
}
void protobuf_AddDesc_ADStaringResult_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ADStaringResult_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ADStaringResult.proto\022\032com.htsc.mdc.in"
    "sight.model\032\023ESecurityType.proto\032\027ESecur"
    "ityIDSource.proto\"\316\003\n\017ADStaringResult\022\026\n"
    "\016HTSCSecurityID\030\001 \001(\t\022\016\n\006MDDate\030\002 \001(\005\022\016\n"
    "\006MDTime\030\003 \001(\005\022\025\n\rDataTimestamp\030\004 \001(\003\022\?\n\020"
    "securityIDSource\030\005 \001(\0162%.com.htsc.mdc.mo"
    "del.ESecurityIDSource\0227\n\014securityType\030\006 "
    "\001(\0162!.com.htsc.mdc.model.ESecurityType\022\024"
    "\n\014ExchangeDate\030\007 \001(\005\022\024\n\014ExchangeTime\030\010 \001"
    "(\005\022\027\n\017StaringResultID\030\t \001(\t\022\022\n\nStrategyI"
    "D\030\n \001(\t\022\023\n\013AlgorithmID\030\013 \001(\t\022\025\n\rAlgorith"
    "mName\030\014 \001(\t\022\022\n\nCustomerID\030\r \001(\t\022\020\n\010Syste"
    "mID\030\016 \001(\t\022\022\n\nRmindValue\030\017 \001(\003\022\024\n\014RealCal"
    "Value\030\020 \001(\003\022\035\n\025DataMultiplePowerOf10\030\021 \001"
    "(\005B8\n\032com.htsc.mdc.insight.modelB\025ADStar"
    "ingResultProtosH\001\240\001\001b\006proto3", 628);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ADStaringResult.proto", &protobuf_RegisterTypes);
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ADStaringResult_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ADStaringResult_2eproto_once_);
void protobuf_AddDesc_ADStaringResult_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ADStaringResult_2eproto_once_,
                 &protobuf_AddDesc_ADStaringResult_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ADStaringResult_2eproto {
  StaticDescriptorInitializer_ADStaringResult_2eproto() {
    protobuf_AddDesc_ADStaringResult_2eproto();
  }
} static_descriptor_initializer_ADStaringResult_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADStaringResult::kHTSCSecurityIDFieldNumber;
const int ADStaringResult::kMDDateFieldNumber;
const int ADStaringResult::kMDTimeFieldNumber;
const int ADStaringResult::kDataTimestampFieldNumber;
const int ADStaringResult::kSecurityIDSourceFieldNumber;
const int ADStaringResult::kSecurityTypeFieldNumber;
const int ADStaringResult::kExchangeDateFieldNumber;
const int ADStaringResult::kExchangeTimeFieldNumber;
const int ADStaringResult::kStaringResultIDFieldNumber;
const int ADStaringResult::kStrategyIDFieldNumber;
const int ADStaringResult::kAlgorithmIDFieldNumber;
const int ADStaringResult::kAlgorithmNameFieldNumber;
const int ADStaringResult::kCustomerIDFieldNumber;
const int ADStaringResult::kSystemIDFieldNumber;
const int ADStaringResult::kRmindValueFieldNumber;
const int ADStaringResult::kRealCalValueFieldNumber;
const int ADStaringResult::kDataMultiplePowerOf10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADStaringResult::ADStaringResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADStaringResult_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADStaringResult)
}

void ADStaringResult::InitAsDefaultInstance() {
}

ADStaringResult::ADStaringResult(const ADStaringResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADStaringResult)
}

void ADStaringResult::SharedCtor() {
  htscsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  staringresultid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mddate_, 0, reinterpret_cast<char*>(&datamultiplepowerof10_) -
    reinterpret_cast<char*>(&mddate_) + sizeof(datamultiplepowerof10_));
  _cached_size_ = 0;
}

ADStaringResult::~ADStaringResult() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADStaringResult)
  SharedDtor();
}

void ADStaringResult::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  staringresultid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ADStaringResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADStaringResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADStaringResult_descriptor_;
}

const ADStaringResult& ADStaringResult::default_instance() {
  protobuf_InitDefaults_ADStaringResult_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADStaringResult> ADStaringResult_default_instance_;

ADStaringResult* ADStaringResult::New(::google::protobuf::Arena* arena) const {
  ADStaringResult* n = new ADStaringResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADStaringResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADStaringResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADStaringResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADStaringResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mddate_, exchangetime_);
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(rmindvalue_, realcalvalue_);
  staringresultid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datamultiplepowerof10_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool ADStaringResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADStaringResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string HTSCSecurityID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), this->htscsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MDDate;
        break;
      }

      // optional int32 MDDate = 2;
      case 2: {
        if (tag == 16) {
         parse_MDDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MDTime;
        break;
      }

      // optional int32 MDTime = 3;
      case 3: {
        if (tag == 24) {
         parse_MDTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DataTimestamp;
        break;
      }

      // optional int64 DataTimestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_DataTimestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datatimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_securityIDSource;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
      case 5: {
        if (tag == 40) {
         parse_securityIDSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_securityType;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
      case 6: {
        if (tag == 48) {
         parse_securityType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ExchangeDate;
        break;
      }

      // optional int32 ExchangeDate = 7;
      case 7: {
        if (tag == 56) {
         parse_ExchangeDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangedate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ExchangeTime;
        break;
      }

      // optional int32 ExchangeTime = 8;
      case 8: {
        if (tag == 64) {
         parse_ExchangeTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_StaringResultID;
        break;
      }

      // optional string StaringResultID = 9;
      case 9: {
        if (tag == 74) {
         parse_StaringResultID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_staringresultid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->staringresultid().data(), this->staringresultid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.StaringResultID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_StrategyID;
        break;
      }

      // optional string StrategyID = 10;
      case 10: {
        if (tag == 82) {
         parse_StrategyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strategyid().data(), this->strategyid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.StrategyID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_AlgorithmID;
        break;
      }

      // optional string AlgorithmID = 11;
      case 11: {
        if (tag == 90) {
         parse_AlgorithmID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithmid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithmid().data(), this->algorithmid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_AlgorithmName;
        break;
      }

      // optional string AlgorithmName = 12;
      case 12: {
        if (tag == 98) {
         parse_AlgorithmName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithmname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithmname().data(), this->algorithmname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_CustomerID;
        break;
      }

      // optional string CustomerID = 13;
      case 13: {
        if (tag == 106) {
         parse_CustomerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customerid().data(), this->customerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.CustomerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_SystemID;
        break;
      }

      // optional string SystemID = 14;
      case 14: {
        if (tag == 114) {
         parse_SystemID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_systemid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->systemid().data(), this->systemid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADStaringResult.SystemID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_RmindValue;
        break;
      }

      // optional int64 RmindValue = 15;
      case 15: {
        if (tag == 120) {
         parse_RmindValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rmindvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_RealCalValue;
        break;
      }

      // optional int64 RealCalValue = 16;
      case 16: {
        if (tag == 128) {
         parse_RealCalValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &realcalvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_DataMultiplePowerOf10;
        break;
      }

      // optional int32 DataMultiplePowerOf10 = 17;
      case 17: {
        if (tag == 136) {
         parse_DataMultiplePowerOf10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datamultiplepowerof10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADStaringResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADStaringResult)
  return false;
#undef DO_
}

void ADStaringResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADStaringResult)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mddate(), output);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mdtime(), output);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datatimestamp(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->securityidsource(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->securitytype(), output);
  }

  // optional int32 ExchangeDate = 7;
  if (this->exchangedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exchangedate(), output);
  }

  // optional int32 ExchangeTime = 8;
  if (this->exchangetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exchangetime(), output);
  }

  // optional string StaringResultID = 9;
  if (this->staringresultid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->staringresultid().data(), this->staringresultid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.StaringResultID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->staringresultid(), output);
  }

  // optional string StrategyID = 10;
  if (this->strategyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategyid().data(), this->strategyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.StrategyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strategyid(), output);
  }

  // optional string AlgorithmID = 11;
  if (this->algorithmid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmid().data(), this->algorithmid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->algorithmid(), output);
  }

  // optional string AlgorithmName = 12;
  if (this->algorithmname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmname().data(), this->algorithmname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->algorithmname(), output);
  }

  // optional string CustomerID = 13;
  if (this->customerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customerid().data(), this->customerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.CustomerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->customerid(), output);
  }

  // optional string SystemID = 14;
  if (this->systemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemid().data(), this->systemid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.SystemID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->systemid(), output);
  }

  // optional int64 RmindValue = 15;
  if (this->rmindvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->rmindvalue(), output);
  }

  // optional int64 RealCalValue = 16;
  if (this->realcalvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->realcalvalue(), output);
  }

  // optional int32 DataMultiplePowerOf10 = 17;
  if (this->datamultiplepowerof10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->datamultiplepowerof10(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADStaringResult)
}

::google::protobuf::uint8* ADStaringResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADStaringResult)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mddate(), target);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mdtime(), target);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datatimestamp(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->securityidsource(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->securitytype(), target);
  }

  // optional int32 ExchangeDate = 7;
  if (this->exchangedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exchangedate(), target);
  }

  // optional int32 ExchangeTime = 8;
  if (this->exchangetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exchangetime(), target);
  }

  // optional string StaringResultID = 9;
  if (this->staringresultid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->staringresultid().data(), this->staringresultid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.StaringResultID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->staringresultid(), target);
  }

  // optional string StrategyID = 10;
  if (this->strategyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategyid().data(), this->strategyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.StrategyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strategyid(), target);
  }

  // optional string AlgorithmID = 11;
  if (this->algorithmid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmid().data(), this->algorithmid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->algorithmid(), target);
  }

  // optional string AlgorithmName = 12;
  if (this->algorithmname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmname().data(), this->algorithmname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->algorithmname(), target);
  }

  // optional string CustomerID = 13;
  if (this->customerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customerid().data(), this->customerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.CustomerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->customerid(), target);
  }

  // optional string SystemID = 14;
  if (this->systemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemid().data(), this->systemid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADStaringResult.SystemID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->systemid(), target);
  }

  // optional int64 RmindValue = 15;
  if (this->rmindvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->rmindvalue(), target);
  }

  // optional int64 RealCalValue = 16;
  if (this->realcalvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->realcalvalue(), target);
  }

  // optional int32 DataMultiplePowerOf10 = 17;
  if (this->datamultiplepowerof10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->datamultiplepowerof10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADStaringResult)
  return target;
}

size_t ADStaringResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADStaringResult)
  size_t total_size = 0;

  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mdtime());
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datatimestamp());
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // optional int32 ExchangeDate = 7;
  if (this->exchangedate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangedate());
  }

  // optional int32 ExchangeTime = 8;
  if (this->exchangetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangetime());
  }

  // optional string StaringResultID = 9;
  if (this->staringresultid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->staringresultid());
  }

  // optional string StrategyID = 10;
  if (this->strategyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strategyid());
  }

  // optional string AlgorithmID = 11;
  if (this->algorithmid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithmid());
  }

  // optional string AlgorithmName = 12;
  if (this->algorithmname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithmname());
  }

  // optional string CustomerID = 13;
  if (this->customerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customerid());
  }

  // optional string SystemID = 14;
  if (this->systemid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->systemid());
  }

  // optional int64 RmindValue = 15;
  if (this->rmindvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rmindvalue());
  }

  // optional int64 RealCalValue = 16;
  if (this->realcalvalue() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->realcalvalue());
  }

  // optional int32 DataMultiplePowerOf10 = 17;
  if (this->datamultiplepowerof10() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datamultiplepowerof10());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADStaringResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADStaringResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADStaringResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADStaringResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADStaringResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADStaringResult)
    UnsafeMergeFrom(*source);
  }
}

void ADStaringResult::MergeFrom(const ADStaringResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADStaringResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADStaringResult::UnsafeMergeFrom(const ADStaringResult& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.mdtime() != 0) {
    set_mdtime(from.mdtime());
  }
  if (from.datatimestamp() != 0) {
    set_datatimestamp(from.datatimestamp());
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.exchangedate() != 0) {
    set_exchangedate(from.exchangedate());
  }
  if (from.exchangetime() != 0) {
    set_exchangetime(from.exchangetime());
  }
  if (from.staringresultid().size() > 0) {

    staringresultid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.staringresultid_);
  }
  if (from.strategyid().size() > 0) {

    strategyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategyid_);
  }
  if (from.algorithmid().size() > 0) {

    algorithmid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithmid_);
  }
  if (from.algorithmname().size() > 0) {

    algorithmname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithmname_);
  }
  if (from.customerid().size() > 0) {

    customerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customerid_);
  }
  if (from.systemid().size() > 0) {

    systemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemid_);
  }
  if (from.rmindvalue() != 0) {
    set_rmindvalue(from.rmindvalue());
  }
  if (from.realcalvalue() != 0) {
    set_realcalvalue(from.realcalvalue());
  }
  if (from.datamultiplepowerof10() != 0) {
    set_datamultiplepowerof10(from.datamultiplepowerof10());
  }
}

void ADStaringResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADStaringResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADStaringResult::CopyFrom(const ADStaringResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADStaringResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADStaringResult::IsInitialized() const {

  return true;
}

void ADStaringResult::Swap(ADStaringResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADStaringResult::InternalSwap(ADStaringResult* other) {
  htscsecurityid_.Swap(&other->htscsecurityid_);
  std::swap(mddate_, other->mddate_);
  std::swap(mdtime_, other->mdtime_);
  std::swap(datatimestamp_, other->datatimestamp_);
  std::swap(securityidsource_, other->securityidsource_);
  std::swap(securitytype_, other->securitytype_);
  std::swap(exchangedate_, other->exchangedate_);
  std::swap(exchangetime_, other->exchangetime_);
  staringresultid_.Swap(&other->staringresultid_);
  strategyid_.Swap(&other->strategyid_);
  algorithmid_.Swap(&other->algorithmid_);
  algorithmname_.Swap(&other->algorithmname_);
  customerid_.Swap(&other->customerid_);
  systemid_.Swap(&other->systemid_);
  std::swap(rmindvalue_, other->rmindvalue_);
  std::swap(realcalvalue_, other->realcalvalue_);
  std::swap(datamultiplepowerof10_, other->datamultiplepowerof10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADStaringResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADStaringResult_descriptor_;
  metadata.reflection = ADStaringResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADStaringResult

// optional string HTSCSecurityID = 1;
void ADStaringResult::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
}
void ADStaringResult::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
}
void ADStaringResult::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
}
::std::string* ADStaringResult::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.HTSCSecurityID)
}

// optional int32 MDDate = 2;
void ADStaringResult::clear_mddate() {
  mddate_ = 0;
}
::google::protobuf::int32 ADStaringResult::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.MDDate)
  return mddate_;
}
void ADStaringResult::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.MDDate)
}

// optional int32 MDTime = 3;
void ADStaringResult::clear_mdtime() {
  mdtime_ = 0;
}
::google::protobuf::int32 ADStaringResult::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.MDTime)
  return mdtime_;
}
void ADStaringResult::set_mdtime(::google::protobuf::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.MDTime)
}

// optional int64 DataTimestamp = 4;
void ADStaringResult::clear_datatimestamp() {
  datatimestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADStaringResult::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.DataTimestamp)
  return datatimestamp_;
}
void ADStaringResult::set_datatimestamp(::google::protobuf::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.DataTimestamp)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
void ADStaringResult::clear_securityidsource() {
  securityidsource_ = 0;
}
::com::htsc::mdc::model::ESecurityIDSource ADStaringResult::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
void ADStaringResult::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 6;
void ADStaringResult::clear_securitytype() {
  securitytype_ = 0;
}
::com::htsc::mdc::model::ESecurityType ADStaringResult::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
void ADStaringResult::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.securityType)
}

// optional int32 ExchangeDate = 7;
void ADStaringResult::clear_exchangedate() {
  exchangedate_ = 0;
}
::google::protobuf::int32 ADStaringResult::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.ExchangeDate)
  return exchangedate_;
}
void ADStaringResult::set_exchangedate(::google::protobuf::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.ExchangeDate)
}

// optional int32 ExchangeTime = 8;
void ADStaringResult::clear_exchangetime() {
  exchangetime_ = 0;
}
::google::protobuf::int32 ADStaringResult::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.ExchangeTime)
  return exchangetime_;
}
void ADStaringResult::set_exchangetime(::google::protobuf::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.ExchangeTime)
}

// optional string StaringResultID = 9;
void ADStaringResult::clear_staringresultid() {
  staringresultid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::staringresultid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
  return staringresultid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_staringresultid(const ::std::string& value) {
  
  staringresultid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
}
void ADStaringResult::set_staringresultid(const char* value) {
  
  staringresultid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
}
void ADStaringResult::set_staringresultid(const char* value, size_t size) {
  
  staringresultid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
}
::std::string* ADStaringResult::mutable_staringresultid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
  return staringresultid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_staringresultid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
  
  return staringresultid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_staringresultid(::std::string* staringresultid) {
  if (staringresultid != NULL) {
    
  } else {
    
  }
  staringresultid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), staringresultid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.StaringResultID)
}

// optional string StrategyID = 10;
void ADStaringResult::clear_strategyid() {
  strategyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::strategyid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
  return strategyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_strategyid(const ::std::string& value) {
  
  strategyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
}
void ADStaringResult::set_strategyid(const char* value) {
  
  strategyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
}
void ADStaringResult::set_strategyid(const char* value, size_t size) {
  
  strategyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
}
::std::string* ADStaringResult::mutable_strategyid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
  return strategyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_strategyid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
  
  return strategyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_strategyid(::std::string* strategyid) {
  if (strategyid != NULL) {
    
  } else {
    
  }
  strategyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategyid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.StrategyID)
}

// optional string AlgorithmID = 11;
void ADStaringResult::clear_algorithmid() {
  algorithmid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::algorithmid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
  return algorithmid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_algorithmid(const ::std::string& value) {
  
  algorithmid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
}
void ADStaringResult::set_algorithmid(const char* value) {
  
  algorithmid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
}
void ADStaringResult::set_algorithmid(const char* value, size_t size) {
  
  algorithmid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
}
::std::string* ADStaringResult::mutable_algorithmid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
  return algorithmid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_algorithmid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
  
  return algorithmid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_algorithmid(::std::string* algorithmid) {
  if (algorithmid != NULL) {
    
  } else {
    
  }
  algorithmid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithmid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmID)
}

// optional string AlgorithmName = 12;
void ADStaringResult::clear_algorithmname() {
  algorithmname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::algorithmname() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
  return algorithmname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_algorithmname(const ::std::string& value) {
  
  algorithmname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
}
void ADStaringResult::set_algorithmname(const char* value) {
  
  algorithmname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
}
void ADStaringResult::set_algorithmname(const char* value, size_t size) {
  
  algorithmname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
}
::std::string* ADStaringResult::mutable_algorithmname() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
  return algorithmname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_algorithmname() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
  
  return algorithmname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_algorithmname(::std::string* algorithmname) {
  if (algorithmname != NULL) {
    
  } else {
    
  }
  algorithmname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithmname);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.AlgorithmName)
}

// optional string CustomerID = 13;
void ADStaringResult::clear_customerid() {
  customerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::customerid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
  return customerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_customerid(const ::std::string& value) {
  
  customerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
}
void ADStaringResult::set_customerid(const char* value) {
  
  customerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
}
void ADStaringResult::set_customerid(const char* value, size_t size) {
  
  customerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
}
::std::string* ADStaringResult::mutable_customerid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
  return customerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_customerid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
  
  return customerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_customerid(::std::string* customerid) {
  if (customerid != NULL) {
    
  } else {
    
  }
  customerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customerid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.CustomerID)
}

// optional string SystemID = 14;
void ADStaringResult::clear_systemid() {
  systemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADStaringResult::systemid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
  return systemid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_systemid(const ::std::string& value) {
  
  systemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
}
void ADStaringResult::set_systemid(const char* value) {
  
  systemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
}
void ADStaringResult::set_systemid(const char* value, size_t size) {
  
  systemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
}
::std::string* ADStaringResult::mutable_systemid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
  return systemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADStaringResult::release_systemid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
  
  return systemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADStaringResult::set_allocated_systemid(::std::string* systemid) {
  if (systemid != NULL) {
    
  } else {
    
  }
  systemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADStaringResult.SystemID)
}

// optional int64 RmindValue = 15;
void ADStaringResult::clear_rmindvalue() {
  rmindvalue_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADStaringResult::rmindvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.RmindValue)
  return rmindvalue_;
}
void ADStaringResult::set_rmindvalue(::google::protobuf::int64 value) {
  
  rmindvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.RmindValue)
}

// optional int64 RealCalValue = 16;
void ADStaringResult::clear_realcalvalue() {
  realcalvalue_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADStaringResult::realcalvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.RealCalValue)
  return realcalvalue_;
}
void ADStaringResult::set_realcalvalue(::google::protobuf::int64 value) {
  
  realcalvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.RealCalValue)
}

// optional int32 DataMultiplePowerOf10 = 17;
void ADStaringResult::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
::google::protobuf::int32 ADStaringResult::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADStaringResult.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
void ADStaringResult::set_datamultiplepowerof10(::google::protobuf::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADStaringResult.DataMultiplePowerOf10)
}

inline const ADStaringResult* ADStaringResult::internal_default_instance() {
  return &ADStaringResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
