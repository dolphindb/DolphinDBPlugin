// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EMDTickLevel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EMDTickLevel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::EnumDescriptor* EMDTickLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_EMDTickLevel_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_EMDTickLevel_2eproto() {
  protobuf_AddDesc_EMDTickLevel_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EMDTickLevel.proto");
  GOOGLE_CHECK(file != NULL);
  EMDTickLevel_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EMDTickLevel_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_EMDTickLevel_2eproto() {
}

void protobuf_InitDefaults_EMDTickLevel_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_EMDTickLevel_2eproto_once_);
void protobuf_InitDefaults_EMDTickLevel_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_EMDTickLevel_2eproto_once_,
                 &protobuf_InitDefaults_EMDTickLevel_2eproto_impl);
}
void protobuf_AddDesc_EMDTickLevel_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_EMDTickLevel_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022EMDTickLevel.proto\022\032com.htsc.mdc.insig"
    "ht.model*\214\001\n\014EMDTickLevel\022\026\n\022DEFAULT_TIC"
    "K_LEVEL\020\000\022\023\n\017TICK_LEVEL_ZERO\020\001\022\022\n\016TICK_L"
    "EVEL_ONE\020\002\022\023\n\017TICK_LEVEL_FIVE\020\003\022\022\n\016TICK_"
    "LEVEL_TEN\020\004\022\022\n\016TICK_LEVEL_ALL\020\005B5\n\032com.h"
    "tsc.mdc.insight.modelB\022EMDTickLevelProto"
    "sH\001\240\001\001b\006proto3", 254);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EMDTickLevel.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EMDTickLevel_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_EMDTickLevel_2eproto_once_);
void protobuf_AddDesc_EMDTickLevel_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_EMDTickLevel_2eproto_once_,
                 &protobuf_AddDesc_EMDTickLevel_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EMDTickLevel_2eproto {
  StaticDescriptorInitializer_EMDTickLevel_2eproto() {
    protobuf_AddDesc_EMDTickLevel_2eproto();
  }
} static_descriptor_initializer_EMDTickLevel_2eproto_;
const ::google::protobuf::EnumDescriptor* EMDTickLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMDTickLevel_descriptor_;
}
bool EMDTickLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
