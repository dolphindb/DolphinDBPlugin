// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EMDPeriodType.proto

#ifndef PROTOBUF_EMDPeriodType_2eproto__INCLUDED
#define PROTOBUF_EMDPeriodType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_EMDPeriodType_2eproto();
void protobuf_InitDefaults_EMDPeriodType_2eproto();
void protobuf_AssignDesc_EMDPeriodType_2eproto();
void protobuf_ShutdownFile_EMDPeriodType_2eproto();


enum EMDPeriodType {
  DefaultPeriod = 0,
  Period1Min = 1,
  Period1D = 2,
  Period5Min = 3,
  Period15Min = 4,
  Period30Min = 5,
  Period1H = 6,
  Period1S = 7,
  Period3S = 8,
  Period5S = 9,
  Period15S = 10,
  Period30S = 11,
  Period2H = 12,
  Period1W = 13,
  Period15D = 14,
  Period1Month = 15,
  Period3Month = 16,
  Period4Month = 17,
  Period6Month = 18,
  Period1Y = 19,
  EMDPeriodType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EMDPeriodType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EMDPeriodType_IsValid(int value);
const EMDPeriodType EMDPeriodType_MIN = DefaultPeriod;
const EMDPeriodType EMDPeriodType_MAX = Period1Y;
const int EMDPeriodType_ARRAYSIZE = EMDPeriodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMDPeriodType_descriptor();
inline const ::std::string& EMDPeriodType_Name(EMDPeriodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMDPeriodType_descriptor(), value);
}
inline bool EMDPeriodType_Parse(
    const ::std::string& name, EMDPeriodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMDPeriodType>(
    EMDPeriodType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace mdc
}  // namespace htsc
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::htsc::mdc::model::EMDPeriodType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::htsc::mdc::model::EMDPeriodType>() {
  return ::com::htsc::mdc::model::EMDPeriodType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EMDPeriodType_2eproto__INCLUDED
