// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADDerivedAnalysis.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ADDerivedAnalysis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::Descriptor* ADDerivedAnalysis_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADDerivedAnalysis_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADAmv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADAmv_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADArBr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADArBr_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADBias_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADBias_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADBoll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADBoll_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADCr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADCr_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADVmaMa_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADVmaMa_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADVr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADVr_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADWr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADWr_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ADDerivedAnalysis_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ADDerivedAnalysis_2eproto() {
  protobuf_AddDesc_ADDerivedAnalysis_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ADDerivedAnalysis.proto");
  GOOGLE_CHECK(file != NULL);
  ADDerivedAnalysis_descriptor_ = file->message_type(0);
  static const int ADDerivedAnalysis_offsets_[34] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, htscsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, mddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, mdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, datatimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, tradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, securityidsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, securitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, numtrades_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, totalvolumetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, totalvaluetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, preclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, lastpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, openpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, closepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, highpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, lowpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, iopv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, preiopv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, openinterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, preopeninterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, settleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, presettleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, exchangedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, exchangetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, bbi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, amv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, arbr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, boll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, cr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, vmama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, vr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, wr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, datamultiplepowerof10_),
  };
  ADDerivedAnalysis_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADDerivedAnalysis_descriptor_,
      ADDerivedAnalysis::internal_default_instance(),
      ADDerivedAnalysis_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADDerivedAnalysis),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADDerivedAnalysis, _internal_metadata_));
  ADAmv_descriptor_ = file->message_type(1);
  static const int ADAmv_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADAmv, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADAmv, amv_),
  };
  ADAmv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADAmv_descriptor_,
      ADAmv::internal_default_instance(),
      ADAmv_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADAmv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADAmv, _internal_metadata_));
  ADArBr_descriptor_ = file->message_type(2);
  static const int ADArBr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADArBr, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADArBr, ar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADArBr, br_),
  };
  ADArBr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADArBr_descriptor_,
      ADArBr::internal_default_instance(),
      ADArBr_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADArBr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADArBr, _internal_metadata_));
  ADBias_descriptor_ = file->message_type(3);
  static const int ADBias_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBias, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBias, bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBias, closepx_),
  };
  ADBias_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADBias_descriptor_,
      ADBias::internal_default_instance(),
      ADBias_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADBias),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBias, _internal_metadata_));
  ADBoll_descriptor_ = file->message_type(4);
  static const int ADBoll_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, pvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, upper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, lower_),
  };
  ADBoll_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADBoll_descriptor_,
      ADBoll::internal_default_instance(),
      ADBoll_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADBoll),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADBoll, _internal_metadata_));
  ADCr_descriptor_ = file->message_type(5);
  static const int ADCr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, cr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, p1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, p2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, ym_),
  };
  ADCr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADCr_descriptor_,
      ADCr::internal_default_instance(),
      ADCr_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADCr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADCr, _internal_metadata_));
  ADVmaMa_descriptor_ = file->message_type(6);
  static const int ADVmaMa_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVmaMa, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVmaMa, vma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVmaMa, ma_),
  };
  ADVmaMa_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADVmaMa_descriptor_,
      ADVmaMa::internal_default_instance(),
      ADVmaMa_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADVmaMa),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVmaMa, _internal_metadata_));
  ADVr_descriptor_ = file->message_type(7);
  static const int ADVr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, vr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, avs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, bvs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, cvs_),
  };
  ADVr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADVr_descriptor_,
      ADVr::internal_default_instance(),
      ADVr_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADVr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADVr, _internal_metadata_));
  ADWr_descriptor_ = file->message_type(8);
  static const int ADWr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, nvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, wr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, closepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, nhighpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, nlowpx_),
  };
  ADWr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADWr_descriptor_,
      ADWr::internal_default_instance(),
      ADWr_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADWr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADWr, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ADDerivedAnalysis_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADDerivedAnalysis_descriptor_, ADDerivedAnalysis::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADAmv_descriptor_, ADAmv::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADArBr_descriptor_, ADArBr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADBias_descriptor_, ADBias::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADBoll_descriptor_, ADBoll::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADCr_descriptor_, ADCr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADVmaMa_descriptor_, ADVmaMa::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADVr_descriptor_, ADVr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADWr_descriptor_, ADWr::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ADDerivedAnalysis_2eproto() {
  ADDerivedAnalysis_default_instance_.Shutdown();
  delete ADDerivedAnalysis_reflection_;
  ADAmv_default_instance_.Shutdown();
  delete ADAmv_reflection_;
  ADArBr_default_instance_.Shutdown();
  delete ADArBr_reflection_;
  ADBias_default_instance_.Shutdown();
  delete ADBias_reflection_;
  ADBoll_default_instance_.Shutdown();
  delete ADBoll_reflection_;
  ADCr_default_instance_.Shutdown();
  delete ADCr_reflection_;
  ADVmaMa_default_instance_.Shutdown();
  delete ADVmaMa_reflection_;
  ADVr_default_instance_.Shutdown();
  delete ADVr_reflection_;
  ADWr_default_instance_.Shutdown();
  delete ADWr_reflection_;
}

void protobuf_InitDefaults_ADDerivedAnalysis_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ADDerivedAnalysis_default_instance_.DefaultConstruct();
  ADAmv_default_instance_.DefaultConstruct();
  ADArBr_default_instance_.DefaultConstruct();
  ADBias_default_instance_.DefaultConstruct();
  ADBoll_default_instance_.DefaultConstruct();
  ADCr_default_instance_.DefaultConstruct();
  ADVmaMa_default_instance_.DefaultConstruct();
  ADVr_default_instance_.DefaultConstruct();
  ADWr_default_instance_.DefaultConstruct();
  ADDerivedAnalysis_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADAmv_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADArBr_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADBias_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADBoll_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADCr_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADVmaMa_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADVr_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADWr_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ADDerivedAnalysis_2eproto_once_);
void protobuf_InitDefaults_ADDerivedAnalysis_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ADDerivedAnalysis_2eproto_once_,
                 &protobuf_InitDefaults_ADDerivedAnalysis_2eproto_impl);
}
void protobuf_AddDesc_ADDerivedAnalysis_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ADDerivedAnalysis.proto\022\032com.htsc.mdc."
    "insight.model\032\023ESecurityType.proto\032\027ESec"
    "urityIDSource.proto\"\367\007\n\021ADDerivedAnalysi"
    "s\022\026\n\016HTSCSecurityID\030\001 \001(\t\022\016\n\006MDDate\030\002 \001("
    "\005\022\016\n\006MDTime\030\003 \001(\005\022\025\n\rDataTimestamp\030\004 \001(\003"
    "\022\030\n\020TradingPhaseCode\030\005 \001(\t\022\?\n\020securityID"
    "Source\030\006 \001(\0162%.com.htsc.mdc.model.ESecur"
    "ityIDSource\0227\n\014securityType\030\007 \001(\0162!.com."
    "htsc.mdc.model.ESecurityType\022\021\n\tNumTrade"
    "s\030\010 \001(\003\022\030\n\020TotalVolumeTrade\030\t \001(\003\022\027\n\017Tot"
    "alValueTrade\030\n \001(\003\022\022\n\nPreClosePx\030\013 \001(\003\022\016"
    "\n\006LastPx\030\014 \001(\003\022\016\n\006OpenPx\030\r \001(\003\022\017\n\007CloseP"
    "x\030\016 \001(\003\022\016\n\006HighPx\030\017 \001(\003\022\r\n\005LowPx\030\020 \001(\003\022\014"
    "\n\004IOPV\030\021 \001(\003\022\017\n\007PreIOPV\030\022 \001(\003\022\024\n\014OpenInt"
    "erest\030\023 \001(\003\022\027\n\017PreOpenInterest\030\024 \001(\003\022\023\n\013"
    "SettlePrice\030\025 \001(\003\022\026\n\016PreSettlePrice\030\026 \001("
    "\003\022\024\n\014ExchangeDate\030\027 \001(\005\022\024\n\014ExchangeTime\030"
    "\030 \001(\005\022\013\n\003BBI\030( \001(\003\022.\n\003Amv\030) \003(\0132!.com.ht"
    "sc.mdc.insight.model.ADAmv\0220\n\004ArBr\030* \003(\013"
    "2\".com.htsc.mdc.insight.model.ADArBr\0220\n\004"
    "Bias\030+ \003(\0132\".com.htsc.mdc.insight.model."
    "ADBias\0220\n\004Boll\030, \003(\0132\".com.htsc.mdc.insi"
    "ght.model.ADBoll\022,\n\002Cr\030- \003(\0132 .com.htsc."
    "mdc.insight.model.ADCr\0222\n\005VmaMa\030. \003(\0132#."
    "com.htsc.mdc.insight.model.ADVmaMa\022,\n\002Vr"
    "\030/ \003(\0132 .com.htsc.mdc.insight.model.ADVr"
    "\022,\n\002Wr\0300 \003(\0132 .com.htsc.mdc.insight.mode"
    "l.ADWr\022\035\n\025DataMultiplePowerOf10\0301 \001(\005\"$\n"
    "\005ADAmv\022\016\n\006NValue\030\001 \001(\005\022\013\n\003Amv\030\002 \001(\003\"0\n\006A"
    "DArBr\022\016\n\006NValue\030\001 \001(\005\022\n\n\002Ar\030\002 \001(\003\022\n\n\002Br\030"
    "\003 \001(\003\"7\n\006ADBias\022\016\n\006NValue\030\001 \001(\005\022\014\n\004Bias\030"
    "\002 \001(\003\022\017\n\007ClosePx\030\003 \001(\003\"S\n\006ADBoll\022\016\n\006NVal"
    "ue\030\001 \001(\005\022\016\n\006PValue\030\002 \001(\005\022\013\n\003Mid\030\003 \001(\003\022\r\n"
    "\005Upper\030\004 \001(\003\022\r\n\005Lower\030\005 \001(\003\"F\n\004ADCr\022\016\n\006N"
    "Value\030\001 \001(\005\022\n\n\002Cr\030\002 \001(\003\022\n\n\002P1\030\003 \001(\003\022\n\n\002P"
    "2\030\004 \001(\003\022\n\n\002YM\030\005 \001(\003\"2\n\007ADVmaMa\022\016\n\006NValue"
    "\030\001 \001(\003\022\013\n\003Vma\030\002 \001(\003\022\n\n\002Ma\030\003 \001(\003\"I\n\004ADVr\022"
    "\016\n\006NValue\030\001 \001(\005\022\n\n\002VR\030\002 \001(\003\022\013\n\003AVS\030\003 \001(\003"
    "\022\013\n\003BVS\030\004 \001(\003\022\013\n\003CVS\030\005 \001(\003\"T\n\004ADWr\022\016\n\006NV"
    "alue\030\001 \001(\005\022\n\n\002Wr\030\002 \001(\003\022\017\n\007ClosePx\030\003 \001(\003\022"
    "\017\n\007NHighPx\030\004 \001(\003\022\016\n\006NLowPx\030\005 \001(\003B:\n\032com."
    "htsc.mdc.insight.modelB\027ADDerivedAnalysi"
    "sProtosH\001\240\001\001b\006proto3", 1700);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ADDerivedAnalysis.proto", &protobuf_RegisterTypes);
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ADDerivedAnalysis_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ADDerivedAnalysis_2eproto_once_);
void protobuf_AddDesc_ADDerivedAnalysis_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ADDerivedAnalysis_2eproto_once_,
                 &protobuf_AddDesc_ADDerivedAnalysis_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ADDerivedAnalysis_2eproto {
  StaticDescriptorInitializer_ADDerivedAnalysis_2eproto() {
    protobuf_AddDesc_ADDerivedAnalysis_2eproto();
  }
} static_descriptor_initializer_ADDerivedAnalysis_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADDerivedAnalysis::kHTSCSecurityIDFieldNumber;
const int ADDerivedAnalysis::kMDDateFieldNumber;
const int ADDerivedAnalysis::kMDTimeFieldNumber;
const int ADDerivedAnalysis::kDataTimestampFieldNumber;
const int ADDerivedAnalysis::kTradingPhaseCodeFieldNumber;
const int ADDerivedAnalysis::kSecurityIDSourceFieldNumber;
const int ADDerivedAnalysis::kSecurityTypeFieldNumber;
const int ADDerivedAnalysis::kNumTradesFieldNumber;
const int ADDerivedAnalysis::kTotalVolumeTradeFieldNumber;
const int ADDerivedAnalysis::kTotalValueTradeFieldNumber;
const int ADDerivedAnalysis::kPreClosePxFieldNumber;
const int ADDerivedAnalysis::kLastPxFieldNumber;
const int ADDerivedAnalysis::kOpenPxFieldNumber;
const int ADDerivedAnalysis::kClosePxFieldNumber;
const int ADDerivedAnalysis::kHighPxFieldNumber;
const int ADDerivedAnalysis::kLowPxFieldNumber;
const int ADDerivedAnalysis::kIOPVFieldNumber;
const int ADDerivedAnalysis::kPreIOPVFieldNumber;
const int ADDerivedAnalysis::kOpenInterestFieldNumber;
const int ADDerivedAnalysis::kPreOpenInterestFieldNumber;
const int ADDerivedAnalysis::kSettlePriceFieldNumber;
const int ADDerivedAnalysis::kPreSettlePriceFieldNumber;
const int ADDerivedAnalysis::kExchangeDateFieldNumber;
const int ADDerivedAnalysis::kExchangeTimeFieldNumber;
const int ADDerivedAnalysis::kBBIFieldNumber;
const int ADDerivedAnalysis::kAmvFieldNumber;
const int ADDerivedAnalysis::kArBrFieldNumber;
const int ADDerivedAnalysis::kBiasFieldNumber;
const int ADDerivedAnalysis::kBollFieldNumber;
const int ADDerivedAnalysis::kCrFieldNumber;
const int ADDerivedAnalysis::kVmaMaFieldNumber;
const int ADDerivedAnalysis::kVrFieldNumber;
const int ADDerivedAnalysis::kWrFieldNumber;
const int ADDerivedAnalysis::kDataMultiplePowerOf10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADDerivedAnalysis::ADDerivedAnalysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADDerivedAnalysis)
}

void ADDerivedAnalysis::InitAsDefaultInstance() {
}

ADDerivedAnalysis::ADDerivedAnalysis(const ADDerivedAnalysis& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADDerivedAnalysis)
}

void ADDerivedAnalysis::SharedCtor() {
  htscsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mddate_, 0, reinterpret_cast<char*>(&datamultiplepowerof10_) -
    reinterpret_cast<char*>(&mddate_) + sizeof(datamultiplepowerof10_));
  _cached_size_ = 0;
}

ADDerivedAnalysis::~ADDerivedAnalysis() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  SharedDtor();
}

void ADDerivedAnalysis::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ADDerivedAnalysis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADDerivedAnalysis::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADDerivedAnalysis_descriptor_;
}

const ADDerivedAnalysis& ADDerivedAnalysis::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADDerivedAnalysis> ADDerivedAnalysis_default_instance_;

ADDerivedAnalysis* ADDerivedAnalysis::New(::google::protobuf::Arena* arena) const {
  ADDerivedAnalysis* n = new ADDerivedAnalysis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADDerivedAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADDerivedAnalysis, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADDerivedAnalysis*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mddate_, numtrades_);
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(totalvolumetrade_, lowpx_);
  ZR_(iopv_, exchangetime_);
  bbi_ = GOOGLE_LONGLONG(0);
  datamultiplepowerof10_ = 0;

#undef ZR_HELPER_
#undef ZR_

  amv_.Clear();
  arbr_.Clear();
  bias_.Clear();
  boll_.Clear();
  cr_.Clear();
  vmama_.Clear();
  vr_.Clear();
  wr_.Clear();
}

bool ADDerivedAnalysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string HTSCSecurityID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), this->htscsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MDDate;
        break;
      }

      // optional int32 MDDate = 2;
      case 2: {
        if (tag == 16) {
         parse_MDDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MDTime;
        break;
      }

      // optional int32 MDTime = 3;
      case 3: {
        if (tag == 24) {
         parse_MDTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DataTimestamp;
        break;
      }

      // optional int64 DataTimestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_DataTimestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datatimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TradingPhaseCode;
        break;
      }

      // optional string TradingPhaseCode = 5;
      case 5: {
        if (tag == 42) {
         parse_TradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingphasecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingphasecode().data(), this->tradingphasecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_securityIDSource;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6: {
        if (tag == 48) {
         parse_securityIDSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_securityType;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7: {
        if (tag == 56) {
         parse_securityType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_NumTrades;
        break;
      }

      // optional int64 NumTrades = 8;
      case 8: {
        if (tag == 64) {
         parse_NumTrades:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &numtrades_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_TotalVolumeTrade;
        break;
      }

      // optional int64 TotalVolumeTrade = 9;
      case 9: {
        if (tag == 72) {
         parse_TotalVolumeTrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvolumetrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_TotalValueTrade;
        break;
      }

      // optional int64 TotalValueTrade = 10;
      case 10: {
        if (tag == 80) {
         parse_TotalValueTrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvaluetrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_PreClosePx;
        break;
      }

      // optional int64 PreClosePx = 11;
      case 11: {
        if (tag == 88) {
         parse_PreClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preclosepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_LastPx;
        break;
      }

      // optional int64 LastPx = 12;
      case 12: {
        if (tag == 96) {
         parse_LastPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lastpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_OpenPx;
        break;
      }

      // optional int64 OpenPx = 13;
      case 13: {
        if (tag == 104) {
         parse_OpenPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_ClosePx;
        break;
      }

      // optional int64 ClosePx = 14;
      case 14: {
        if (tag == 112) {
         parse_ClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &closepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_HighPx;
        break;
      }

      // optional int64 HighPx = 15;
      case 15: {
        if (tag == 120) {
         parse_HighPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_LowPx;
        break;
      }

      // optional int64 LowPx = 16;
      case 16: {
        if (tag == 128) {
         parse_LowPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_IOPV;
        break;
      }

      // optional int64 IOPV = 17;
      case 17: {
        if (tag == 136) {
         parse_IOPV:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iopv_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_PreIOPV;
        break;
      }

      // optional int64 PreIOPV = 18;
      case 18: {
        if (tag == 144) {
         parse_PreIOPV:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preiopv_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_OpenInterest;
        break;
      }

      // optional int64 OpenInterest = 19;
      case 19: {
        if (tag == 152) {
         parse_OpenInterest:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_PreOpenInterest;
        break;
      }

      // optional int64 PreOpenInterest = 20;
      case 20: {
        if (tag == 160) {
         parse_PreOpenInterest:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preopeninterest_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_SettlePrice;
        break;
      }

      // optional int64 SettlePrice = 21;
      case 21: {
        if (tag == 168) {
         parse_SettlePrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &settleprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_PreSettlePrice;
        break;
      }

      // optional int64 PreSettlePrice = 22;
      case 22: {
        if (tag == 176) {
         parse_PreSettlePrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &presettleprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_ExchangeDate;
        break;
      }

      // optional int32 ExchangeDate = 23;
      case 23: {
        if (tag == 184) {
         parse_ExchangeDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangedate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_ExchangeTime;
        break;
      }

      // optional int32 ExchangeTime = 24;
      case 24: {
        if (tag == 192) {
         parse_ExchangeTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_BBI;
        break;
      }

      // optional int64 BBI = 40;
      case 40: {
        if (tag == 320) {
         parse_BBI:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bbi_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_Amv;
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
      case 41: {
        if (tag == 330) {
         parse_Amv:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Amv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_amv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_loop_Amv;
        if (input->ExpectTag(338)) goto parse_loop_ArBr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
      case 42: {
        if (tag == 338) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ArBr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arbr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_loop_ArBr;
        if (input->ExpectTag(346)) goto parse_loop_Bias;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
      case 43: {
        if (tag == 346) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Bias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bias()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_loop_Bias;
        if (input->ExpectTag(354)) goto parse_loop_Boll;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
      case 44: {
        if (tag == 354) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Boll:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_boll()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_loop_Boll;
        if (input->ExpectTag(362)) goto parse_loop_Cr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
      case 45: {
        if (tag == 362) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Cr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_loop_Cr;
        if (input->ExpectTag(370)) goto parse_loop_VmaMa;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
      case 46: {
        if (tag == 370) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_VmaMa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vmama()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_loop_VmaMa;
        if (input->ExpectTag(378)) goto parse_loop_Vr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
      case 47: {
        if (tag == 378) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Vr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_loop_Vr;
        if (input->ExpectTag(386)) goto parse_loop_Wr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
      case 48: {
        if (tag == 386) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Wr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_wr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_loop_Wr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(392)) goto parse_DataMultiplePowerOf10;
        break;
      }

      // optional int32 DataMultiplePowerOf10 = 49;
      case 49: {
        if (tag == 392) {
         parse_DataMultiplePowerOf10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datamultiplepowerof10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  return false;
#undef DO_
}

void ADDerivedAnalysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mddate(), output);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mdtime(), output);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datatimestamp(), output);
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tradingphasecode(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->securityidsource(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->securitytype(), output);
  }

  // optional int64 NumTrades = 8;
  if (this->numtrades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->numtrades(), output);
  }

  // optional int64 TotalVolumeTrade = 9;
  if (this->totalvolumetrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->totalvolumetrade(), output);
  }

  // optional int64 TotalValueTrade = 10;
  if (this->totalvaluetrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->totalvaluetrade(), output);
  }

  // optional int64 PreClosePx = 11;
  if (this->preclosepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->preclosepx(), output);
  }

  // optional int64 LastPx = 12;
  if (this->lastpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->lastpx(), output);
  }

  // optional int64 OpenPx = 13;
  if (this->openpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->openpx(), output);
  }

  // optional int64 ClosePx = 14;
  if (this->closepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->closepx(), output);
  }

  // optional int64 HighPx = 15;
  if (this->highpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->highpx(), output);
  }

  // optional int64 LowPx = 16;
  if (this->lowpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->lowpx(), output);
  }

  // optional int64 IOPV = 17;
  if (this->iopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->iopv(), output);
  }

  // optional int64 PreIOPV = 18;
  if (this->preiopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->preiopv(), output);
  }

  // optional int64 OpenInterest = 19;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->openinterest(), output);
  }

  // optional int64 PreOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->preopeninterest(), output);
  }

  // optional int64 SettlePrice = 21;
  if (this->settleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->settleprice(), output);
  }

  // optional int64 PreSettlePrice = 22;
  if (this->presettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->presettleprice(), output);
  }

  // optional int32 ExchangeDate = 23;
  if (this->exchangedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->exchangedate(), output);
  }

  // optional int32 ExchangeTime = 24;
  if (this->exchangetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->exchangetime(), output);
  }

  // optional int64 BBI = 40;
  if (this->bbi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(40, this->bbi(), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
  for (unsigned int i = 0, n = this->amv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->amv(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
  for (unsigned int i = 0, n = this->arbr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->arbr(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
  for (unsigned int i = 0, n = this->bias_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->bias(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
  for (unsigned int i = 0, n = this->boll_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->boll(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
  for (unsigned int i = 0, n = this->cr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->cr(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
  for (unsigned int i = 0, n = this->vmama_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->vmama(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
  for (unsigned int i = 0, n = this->vr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->vr(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
  for (unsigned int i = 0, n = this->wr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->wr(i), output);
  }

  // optional int32 DataMultiplePowerOf10 = 49;
  if (this->datamultiplepowerof10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(49, this->datamultiplepowerof10(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADDerivedAnalysis)
}

::google::protobuf::uint8* ADDerivedAnalysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mddate(), target);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mdtime(), target);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datatimestamp(), target);
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tradingphasecode(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->securityidsource(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->securitytype(), target);
  }

  // optional int64 NumTrades = 8;
  if (this->numtrades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->numtrades(), target);
  }

  // optional int64 TotalVolumeTrade = 9;
  if (this->totalvolumetrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->totalvolumetrade(), target);
  }

  // optional int64 TotalValueTrade = 10;
  if (this->totalvaluetrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->totalvaluetrade(), target);
  }

  // optional int64 PreClosePx = 11;
  if (this->preclosepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->preclosepx(), target);
  }

  // optional int64 LastPx = 12;
  if (this->lastpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->lastpx(), target);
  }

  // optional int64 OpenPx = 13;
  if (this->openpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->openpx(), target);
  }

  // optional int64 ClosePx = 14;
  if (this->closepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->closepx(), target);
  }

  // optional int64 HighPx = 15;
  if (this->highpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->highpx(), target);
  }

  // optional int64 LowPx = 16;
  if (this->lowpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->lowpx(), target);
  }

  // optional int64 IOPV = 17;
  if (this->iopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->iopv(), target);
  }

  // optional int64 PreIOPV = 18;
  if (this->preiopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->preiopv(), target);
  }

  // optional int64 OpenInterest = 19;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->openinterest(), target);
  }

  // optional int64 PreOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->preopeninterest(), target);
  }

  // optional int64 SettlePrice = 21;
  if (this->settleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->settleprice(), target);
  }

  // optional int64 PreSettlePrice = 22;
  if (this->presettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->presettleprice(), target);
  }

  // optional int32 ExchangeDate = 23;
  if (this->exchangedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->exchangedate(), target);
  }

  // optional int32 ExchangeTime = 24;
  if (this->exchangetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->exchangetime(), target);
  }

  // optional int64 BBI = 40;
  if (this->bbi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(40, this->bbi(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
  for (unsigned int i = 0, n = this->amv_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        41, this->amv(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
  for (unsigned int i = 0, n = this->arbr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        42, this->arbr(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
  for (unsigned int i = 0, n = this->bias_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        43, this->bias(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
  for (unsigned int i = 0, n = this->boll_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        44, this->boll(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
  for (unsigned int i = 0, n = this->cr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        45, this->cr(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
  for (unsigned int i = 0, n = this->vmama_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        46, this->vmama(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
  for (unsigned int i = 0, n = this->vr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        47, this->vr(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
  for (unsigned int i = 0, n = this->wr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        48, this->wr(i), false, target);
  }

  // optional int32 DataMultiplePowerOf10 = 49;
  if (this->datamultiplepowerof10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(49, this->datamultiplepowerof10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  return target;
}

size_t ADDerivedAnalysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  size_t total_size = 0;

  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mdtime());
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datatimestamp());
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingphasecode());
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // optional int64 NumTrades = 8;
  if (this->numtrades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->numtrades());
  }

  // optional int64 TotalVolumeTrade = 9;
  if (this->totalvolumetrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalvolumetrade());
  }

  // optional int64 TotalValueTrade = 10;
  if (this->totalvaluetrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalvaluetrade());
  }

  // optional int64 PreClosePx = 11;
  if (this->preclosepx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preclosepx());
  }

  // optional int64 LastPx = 12;
  if (this->lastpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lastpx());
  }

  // optional int64 OpenPx = 13;
  if (this->openpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openpx());
  }

  // optional int64 ClosePx = 14;
  if (this->closepx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->closepx());
  }

  // optional int64 HighPx = 15;
  if (this->highpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highpx());
  }

  // optional int64 LowPx = 16;
  if (this->lowpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowpx());
  }

  // optional int64 IOPV = 17;
  if (this->iopv() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iopv());
  }

  // optional int64 PreIOPV = 18;
  if (this->preiopv() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preiopv());
  }

  // optional int64 OpenInterest = 19;
  if (this->openinterest() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openinterest());
  }

  // optional int64 PreOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preopeninterest());
  }

  // optional int64 SettlePrice = 21;
  if (this->settleprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->settleprice());
  }

  // optional int64 PreSettlePrice = 22;
  if (this->presettleprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->presettleprice());
  }

  // optional int32 ExchangeDate = 23;
  if (this->exchangedate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangedate());
  }

  // optional int32 ExchangeTime = 24;
  if (this->exchangetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangetime());
  }

  // optional int64 BBI = 40;
  if (this->bbi() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bbi());
  }

  // optional int32 DataMultiplePowerOf10 = 49;
  if (this->datamultiplepowerof10() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datamultiplepowerof10());
  }

  // repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
  {
    unsigned int count = this->amv_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->amv(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
  {
    unsigned int count = this->arbr_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arbr(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
  {
    unsigned int count = this->bias_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bias(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
  {
    unsigned int count = this->boll_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->boll(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
  {
    unsigned int count = this->cr_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cr(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
  {
    unsigned int count = this->vmama_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vmama(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
  {
    unsigned int count = this->vr_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vr(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
  {
    unsigned int count = this->wr_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wr(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADDerivedAnalysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADDerivedAnalysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADDerivedAnalysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADDerivedAnalysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADDerivedAnalysis)
    UnsafeMergeFrom(*source);
  }
}

void ADDerivedAnalysis::MergeFrom(const ADDerivedAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADDerivedAnalysis::UnsafeMergeFrom(const ADDerivedAnalysis& from) {
  GOOGLE_DCHECK(&from != this);
  amv_.MergeFrom(from.amv_);
  arbr_.MergeFrom(from.arbr_);
  bias_.MergeFrom(from.bias_);
  boll_.MergeFrom(from.boll_);
  cr_.MergeFrom(from.cr_);
  vmama_.MergeFrom(from.vmama_);
  vr_.MergeFrom(from.vr_);
  wr_.MergeFrom(from.wr_);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.mdtime() != 0) {
    set_mdtime(from.mdtime());
  }
  if (from.datatimestamp() != 0) {
    set_datatimestamp(from.datatimestamp());
  }
  if (from.tradingphasecode().size() > 0) {

    tradingphasecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingphasecode_);
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.numtrades() != 0) {
    set_numtrades(from.numtrades());
  }
  if (from.totalvolumetrade() != 0) {
    set_totalvolumetrade(from.totalvolumetrade());
  }
  if (from.totalvaluetrade() != 0) {
    set_totalvaluetrade(from.totalvaluetrade());
  }
  if (from.preclosepx() != 0) {
    set_preclosepx(from.preclosepx());
  }
  if (from.lastpx() != 0) {
    set_lastpx(from.lastpx());
  }
  if (from.openpx() != 0) {
    set_openpx(from.openpx());
  }
  if (from.closepx() != 0) {
    set_closepx(from.closepx());
  }
  if (from.highpx() != 0) {
    set_highpx(from.highpx());
  }
  if (from.lowpx() != 0) {
    set_lowpx(from.lowpx());
  }
  if (from.iopv() != 0) {
    set_iopv(from.iopv());
  }
  if (from.preiopv() != 0) {
    set_preiopv(from.preiopv());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.settleprice() != 0) {
    set_settleprice(from.settleprice());
  }
  if (from.presettleprice() != 0) {
    set_presettleprice(from.presettleprice());
  }
  if (from.exchangedate() != 0) {
    set_exchangedate(from.exchangedate());
  }
  if (from.exchangetime() != 0) {
    set_exchangetime(from.exchangetime());
  }
  if (from.bbi() != 0) {
    set_bbi(from.bbi());
  }
  if (from.datamultiplepowerof10() != 0) {
    set_datamultiplepowerof10(from.datamultiplepowerof10());
  }
}

void ADDerivedAnalysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADDerivedAnalysis::CopyFrom(const ADDerivedAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADDerivedAnalysis)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADDerivedAnalysis::IsInitialized() const {

  return true;
}

void ADDerivedAnalysis::Swap(ADDerivedAnalysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADDerivedAnalysis::InternalSwap(ADDerivedAnalysis* other) {
  htscsecurityid_.Swap(&other->htscsecurityid_);
  std::swap(mddate_, other->mddate_);
  std::swap(mdtime_, other->mdtime_);
  std::swap(datatimestamp_, other->datatimestamp_);
  tradingphasecode_.Swap(&other->tradingphasecode_);
  std::swap(securityidsource_, other->securityidsource_);
  std::swap(securitytype_, other->securitytype_);
  std::swap(numtrades_, other->numtrades_);
  std::swap(totalvolumetrade_, other->totalvolumetrade_);
  std::swap(totalvaluetrade_, other->totalvaluetrade_);
  std::swap(preclosepx_, other->preclosepx_);
  std::swap(lastpx_, other->lastpx_);
  std::swap(openpx_, other->openpx_);
  std::swap(closepx_, other->closepx_);
  std::swap(highpx_, other->highpx_);
  std::swap(lowpx_, other->lowpx_);
  std::swap(iopv_, other->iopv_);
  std::swap(preiopv_, other->preiopv_);
  std::swap(openinterest_, other->openinterest_);
  std::swap(preopeninterest_, other->preopeninterest_);
  std::swap(settleprice_, other->settleprice_);
  std::swap(presettleprice_, other->presettleprice_);
  std::swap(exchangedate_, other->exchangedate_);
  std::swap(exchangetime_, other->exchangetime_);
  std::swap(bbi_, other->bbi_);
  amv_.UnsafeArenaSwap(&other->amv_);
  arbr_.UnsafeArenaSwap(&other->arbr_);
  bias_.UnsafeArenaSwap(&other->bias_);
  boll_.UnsafeArenaSwap(&other->boll_);
  cr_.UnsafeArenaSwap(&other->cr_);
  vmama_.UnsafeArenaSwap(&other->vmama_);
  vr_.UnsafeArenaSwap(&other->vr_);
  wr_.UnsafeArenaSwap(&other->wr_);
  std::swap(datamultiplepowerof10_, other->datamultiplepowerof10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADDerivedAnalysis::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADDerivedAnalysis_descriptor_;
  metadata.reflection = ADDerivedAnalysis_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADDerivedAnalysis

// optional string HTSCSecurityID = 1;
void ADDerivedAnalysis::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADDerivedAnalysis::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADDerivedAnalysis::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}
void ADDerivedAnalysis::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}
void ADDerivedAnalysis::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}
::std::string* ADDerivedAnalysis::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADDerivedAnalysis::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADDerivedAnalysis::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}

// optional int32 MDDate = 2;
void ADDerivedAnalysis::clear_mddate() {
  mddate_ = 0;
}
::google::protobuf::int32 ADDerivedAnalysis::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDDate)
  return mddate_;
}
void ADDerivedAnalysis::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDDate)
}

// optional int32 MDTime = 3;
void ADDerivedAnalysis::clear_mdtime() {
  mdtime_ = 0;
}
::google::protobuf::int32 ADDerivedAnalysis::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDTime)
  return mdtime_;
}
void ADDerivedAnalysis::set_mdtime(::google::protobuf::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDTime)
}

// optional int64 DataTimestamp = 4;
void ADDerivedAnalysis::clear_datatimestamp() {
  datatimestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataTimestamp)
  return datatimestamp_;
}
void ADDerivedAnalysis::set_datatimestamp(::google::protobuf::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataTimestamp)
}

// optional string TradingPhaseCode = 5;
void ADDerivedAnalysis::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADDerivedAnalysis::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  return tradingphasecode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADDerivedAnalysis::set_tradingphasecode(const ::std::string& value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}
void ADDerivedAnalysis::set_tradingphasecode(const char* value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}
void ADDerivedAnalysis::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}
::std::string* ADDerivedAnalysis::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADDerivedAnalysis::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADDerivedAnalysis::set_allocated_tradingphasecode(::std::string* tradingphasecode) {
  if (tradingphasecode != NULL) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
void ADDerivedAnalysis::clear_securityidsource() {
  securityidsource_ = 0;
}
::com::htsc::mdc::model::ESecurityIDSource ADDerivedAnalysis::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
void ADDerivedAnalysis::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 7;
void ADDerivedAnalysis::clear_securitytype() {
  securitytype_ = 0;
}
::com::htsc::mdc::model::ESecurityType ADDerivedAnalysis::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
void ADDerivedAnalysis::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityType)
}

// optional int64 NumTrades = 8;
void ADDerivedAnalysis::clear_numtrades() {
  numtrades_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.NumTrades)
  return numtrades_;
}
void ADDerivedAnalysis::set_numtrades(::google::protobuf::int64 value) {
  
  numtrades_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.NumTrades)
}

// optional int64 TotalVolumeTrade = 9;
void ADDerivedAnalysis::clear_totalvolumetrade() {
  totalvolumetrade_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalVolumeTrade)
  return totalvolumetrade_;
}
void ADDerivedAnalysis::set_totalvolumetrade(::google::protobuf::int64 value) {
  
  totalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalVolumeTrade)
}

// optional int64 TotalValueTrade = 10;
void ADDerivedAnalysis::clear_totalvaluetrade() {
  totalvaluetrade_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalValueTrade)
  return totalvaluetrade_;
}
void ADDerivedAnalysis::set_totalvaluetrade(::google::protobuf::int64 value) {
  
  totalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalValueTrade)
}

// optional int64 PreClosePx = 11;
void ADDerivedAnalysis::clear_preclosepx() {
  preclosepx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreClosePx)
  return preclosepx_;
}
void ADDerivedAnalysis::set_preclosepx(::google::protobuf::int64 value) {
  
  preclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreClosePx)
}

// optional int64 LastPx = 12;
void ADDerivedAnalysis::clear_lastpx() {
  lastpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.LastPx)
  return lastpx_;
}
void ADDerivedAnalysis::set_lastpx(::google::protobuf::int64 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.LastPx)
}

// optional int64 OpenPx = 13;
void ADDerivedAnalysis::clear_openpx() {
  openpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::openpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenPx)
  return openpx_;
}
void ADDerivedAnalysis::set_openpx(::google::protobuf::int64 value) {
  
  openpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenPx)
}

// optional int64 ClosePx = 14;
void ADDerivedAnalysis::clear_closepx() {
  closepx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ClosePx)
  return closepx_;
}
void ADDerivedAnalysis::set_closepx(::google::protobuf::int64 value) {
  
  closepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ClosePx)
}

// optional int64 HighPx = 15;
void ADDerivedAnalysis::clear_highpx() {
  highpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.HighPx)
  return highpx_;
}
void ADDerivedAnalysis::set_highpx(::google::protobuf::int64 value) {
  
  highpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.HighPx)
}

// optional int64 LowPx = 16;
void ADDerivedAnalysis::clear_lowpx() {
  lowpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.LowPx)
  return lowpx_;
}
void ADDerivedAnalysis::set_lowpx(::google::protobuf::int64 value) {
  
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.LowPx)
}

// optional int64 IOPV = 17;
void ADDerivedAnalysis::clear_iopv() {
  iopv_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::iopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.IOPV)
  return iopv_;
}
void ADDerivedAnalysis::set_iopv(::google::protobuf::int64 value) {
  
  iopv_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.IOPV)
}

// optional int64 PreIOPV = 18;
void ADDerivedAnalysis::clear_preiopv() {
  preiopv_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::preiopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreIOPV)
  return preiopv_;
}
void ADDerivedAnalysis::set_preiopv(::google::protobuf::int64 value) {
  
  preiopv_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreIOPV)
}

// optional int64 OpenInterest = 19;
void ADDerivedAnalysis::clear_openinterest() {
  openinterest_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::openinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenInterest)
  return openinterest_;
}
void ADDerivedAnalysis::set_openinterest(::google::protobuf::int64 value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenInterest)
}

// optional int64 PreOpenInterest = 20;
void ADDerivedAnalysis::clear_preopeninterest() {
  preopeninterest_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::preopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreOpenInterest)
  return preopeninterest_;
}
void ADDerivedAnalysis::set_preopeninterest(::google::protobuf::int64 value) {
  
  preopeninterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreOpenInterest)
}

// optional int64 SettlePrice = 21;
void ADDerivedAnalysis::clear_settleprice() {
  settleprice_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::settleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.SettlePrice)
  return settleprice_;
}
void ADDerivedAnalysis::set_settleprice(::google::protobuf::int64 value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.SettlePrice)
}

// optional int64 PreSettlePrice = 22;
void ADDerivedAnalysis::clear_presettleprice() {
  presettleprice_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::presettleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreSettlePrice)
  return presettleprice_;
}
void ADDerivedAnalysis::set_presettleprice(::google::protobuf::int64 value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreSettlePrice)
}

// optional int32 ExchangeDate = 23;
void ADDerivedAnalysis::clear_exchangedate() {
  exchangedate_ = 0;
}
::google::protobuf::int32 ADDerivedAnalysis::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeDate)
  return exchangedate_;
}
void ADDerivedAnalysis::set_exchangedate(::google::protobuf::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeDate)
}

// optional int32 ExchangeTime = 24;
void ADDerivedAnalysis::clear_exchangetime() {
  exchangetime_ = 0;
}
::google::protobuf::int32 ADDerivedAnalysis::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeTime)
  return exchangetime_;
}
void ADDerivedAnalysis::set_exchangetime(::google::protobuf::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeTime)
}

// optional int64 BBI = 40;
void ADDerivedAnalysis::clear_bbi() {
  bbi_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADDerivedAnalysis::bbi() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.BBI)
  return bbi_;
}
void ADDerivedAnalysis::set_bbi(::google::protobuf::int64 value) {
  
  bbi_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.BBI)
}

// repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
int ADDerivedAnalysis::amv_size() const {
  return amv_.size();
}
void ADDerivedAnalysis::clear_amv() {
  amv_.Clear();
}
const ::com::htsc::mdc::insight::model::ADAmv& ADDerivedAnalysis::amv(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return amv_.Get(index);
}
::com::htsc::mdc::insight::model::ADAmv* ADDerivedAnalysis::mutable_amv(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return amv_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADAmv* ADDerivedAnalysis::add_amv() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return amv_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >*
ADDerivedAnalysis::mutable_amv() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return &amv_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >&
ADDerivedAnalysis::amv() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return amv_;
}

// repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
int ADDerivedAnalysis::arbr_size() const {
  return arbr_.size();
}
void ADDerivedAnalysis::clear_arbr() {
  arbr_.Clear();
}
const ::com::htsc::mdc::insight::model::ADArBr& ADDerivedAnalysis::arbr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return arbr_.Get(index);
}
::com::htsc::mdc::insight::model::ADArBr* ADDerivedAnalysis::mutable_arbr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return arbr_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADArBr* ADDerivedAnalysis::add_arbr() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return arbr_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >*
ADDerivedAnalysis::mutable_arbr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return &arbr_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >&
ADDerivedAnalysis::arbr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return arbr_;
}

// repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
int ADDerivedAnalysis::bias_size() const {
  return bias_.size();
}
void ADDerivedAnalysis::clear_bias() {
  bias_.Clear();
}
const ::com::htsc::mdc::insight::model::ADBias& ADDerivedAnalysis::bias(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return bias_.Get(index);
}
::com::htsc::mdc::insight::model::ADBias* ADDerivedAnalysis::mutable_bias(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return bias_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADBias* ADDerivedAnalysis::add_bias() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return bias_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >*
ADDerivedAnalysis::mutable_bias() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return &bias_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >&
ADDerivedAnalysis::bias() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return bias_;
}

// repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
int ADDerivedAnalysis::boll_size() const {
  return boll_.size();
}
void ADDerivedAnalysis::clear_boll() {
  boll_.Clear();
}
const ::com::htsc::mdc::insight::model::ADBoll& ADDerivedAnalysis::boll(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return boll_.Get(index);
}
::com::htsc::mdc::insight::model::ADBoll* ADDerivedAnalysis::mutable_boll(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return boll_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADBoll* ADDerivedAnalysis::add_boll() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return boll_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >*
ADDerivedAnalysis::mutable_boll() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return &boll_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >&
ADDerivedAnalysis::boll() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return boll_;
}

// repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
int ADDerivedAnalysis::cr_size() const {
  return cr_.size();
}
void ADDerivedAnalysis::clear_cr() {
  cr_.Clear();
}
const ::com::htsc::mdc::insight::model::ADCr& ADDerivedAnalysis::cr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return cr_.Get(index);
}
::com::htsc::mdc::insight::model::ADCr* ADDerivedAnalysis::mutable_cr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return cr_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADCr* ADDerivedAnalysis::add_cr() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return cr_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >*
ADDerivedAnalysis::mutable_cr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return &cr_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >&
ADDerivedAnalysis::cr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return cr_;
}

// repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
int ADDerivedAnalysis::vmama_size() const {
  return vmama_.size();
}
void ADDerivedAnalysis::clear_vmama() {
  vmama_.Clear();
}
const ::com::htsc::mdc::insight::model::ADVmaMa& ADDerivedAnalysis::vmama(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return vmama_.Get(index);
}
::com::htsc::mdc::insight::model::ADVmaMa* ADDerivedAnalysis::mutable_vmama(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return vmama_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADVmaMa* ADDerivedAnalysis::add_vmama() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return vmama_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >*
ADDerivedAnalysis::mutable_vmama() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return &vmama_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >&
ADDerivedAnalysis::vmama() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return vmama_;
}

// repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
int ADDerivedAnalysis::vr_size() const {
  return vr_.size();
}
void ADDerivedAnalysis::clear_vr() {
  vr_.Clear();
}
const ::com::htsc::mdc::insight::model::ADVr& ADDerivedAnalysis::vr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return vr_.Get(index);
}
::com::htsc::mdc::insight::model::ADVr* ADDerivedAnalysis::mutable_vr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return vr_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADVr* ADDerivedAnalysis::add_vr() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return vr_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >*
ADDerivedAnalysis::mutable_vr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return &vr_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >&
ADDerivedAnalysis::vr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return vr_;
}

// repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
int ADDerivedAnalysis::wr_size() const {
  return wr_.size();
}
void ADDerivedAnalysis::clear_wr() {
  wr_.Clear();
}
const ::com::htsc::mdc::insight::model::ADWr& ADDerivedAnalysis::wr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return wr_.Get(index);
}
::com::htsc::mdc::insight::model::ADWr* ADDerivedAnalysis::mutable_wr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return wr_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADWr* ADDerivedAnalysis::add_wr() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return wr_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >*
ADDerivedAnalysis::mutable_wr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return &wr_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >&
ADDerivedAnalysis::wr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return wr_;
}

// optional int32 DataMultiplePowerOf10 = 49;
void ADDerivedAnalysis::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
::google::protobuf::int32 ADDerivedAnalysis::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
void ADDerivedAnalysis::set_datamultiplepowerof10(::google::protobuf::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataMultiplePowerOf10)
}

inline const ADDerivedAnalysis* ADDerivedAnalysis::internal_default_instance() {
  return &ADDerivedAnalysis_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADAmv::kNValueFieldNumber;
const int ADAmv::kAmvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADAmv::ADAmv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADAmv)
}

void ADAmv::InitAsDefaultInstance() {
}

ADAmv::ADAmv(const ADAmv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADAmv)
}

void ADAmv::SharedCtor() {
  ::memset(&amv_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&amv_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADAmv::~ADAmv() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADAmv)
  SharedDtor();
}

void ADAmv::SharedDtor() {
}

void ADAmv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADAmv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADAmv_descriptor_;
}

const ADAmv& ADAmv::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADAmv> ADAmv_default_instance_;

ADAmv* ADAmv::New(::google::protobuf::Arena* arena) const {
  ADAmv* n = new ADAmv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADAmv::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADAmv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADAmv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADAmv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amv_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADAmv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADAmv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Amv;
        break;
      }

      // optional int64 Amv = 2;
      case 2: {
        if (tag == 16) {
         parse_Amv:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amv_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADAmv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADAmv)
  return false;
#undef DO_
}

void ADAmv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADAmv)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 Amv = 2;
  if (this->amv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amv(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADAmv)
}

::google::protobuf::uint8* ADAmv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADAmv)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 Amv = 2;
  if (this->amv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADAmv)
  return target;
}

size_t ADAmv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADAmv)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 Amv = 2;
  if (this->amv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADAmv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADAmv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADAmv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADAmv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADAmv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADAmv)
    UnsafeMergeFrom(*source);
  }
}

void ADAmv::MergeFrom(const ADAmv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADAmv)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADAmv::UnsafeMergeFrom(const ADAmv& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.amv() != 0) {
    set_amv(from.amv());
  }
}

void ADAmv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADAmv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADAmv::CopyFrom(const ADAmv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADAmv)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADAmv::IsInitialized() const {

  return true;
}

void ADAmv::Swap(ADAmv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADAmv::InternalSwap(ADAmv* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(amv_, other->amv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADAmv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADAmv_descriptor_;
  metadata.reflection = ADAmv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADAmv

// optional int32 NValue = 1;
void ADAmv::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADAmv::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADAmv.NValue)
  return nvalue_;
}
void ADAmv::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADAmv.NValue)
}

// optional int64 Amv = 2;
void ADAmv::clear_amv() {
  amv_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADAmv::amv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADAmv.Amv)
  return amv_;
}
void ADAmv::set_amv(::google::protobuf::int64 value) {
  
  amv_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADAmv.Amv)
}

inline const ADAmv* ADAmv::internal_default_instance() {
  return &ADAmv_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADArBr::kNValueFieldNumber;
const int ADArBr::kArFieldNumber;
const int ADArBr::kBrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADArBr::ADArBr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADArBr)
}

void ADArBr::InitAsDefaultInstance() {
}

ADArBr::ADArBr(const ADArBr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADArBr)
}

void ADArBr::SharedCtor() {
  ::memset(&ar_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&ar_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADArBr::~ADArBr() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADArBr)
  SharedDtor();
}

void ADArBr::SharedDtor() {
}

void ADArBr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADArBr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADArBr_descriptor_;
}

const ADArBr& ADArBr::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADArBr> ADArBr_default_instance_;

ADArBr* ADArBr::New(::google::protobuf::Arena* arena) const {
  ADArBr* n = new ADArBr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADArBr::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADArBr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADArBr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADArBr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ar_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADArBr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADArBr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Ar;
        break;
      }

      // optional int64 Ar = 2;
      case 2: {
        if (tag == 16) {
         parse_Ar:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ar_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Br;
        break;
      }

      // optional int64 Br = 3;
      case 3: {
        if (tag == 24) {
         parse_Br:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &br_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADArBr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADArBr)
  return false;
#undef DO_
}

void ADArBr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADArBr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 Ar = 2;
  if (this->ar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ar(), output);
  }

  // optional int64 Br = 3;
  if (this->br() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->br(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADArBr)
}

::google::protobuf::uint8* ADArBr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADArBr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 Ar = 2;
  if (this->ar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ar(), target);
  }

  // optional int64 Br = 3;
  if (this->br() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->br(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADArBr)
  return target;
}

size_t ADArBr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADArBr)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 Ar = 2;
  if (this->ar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ar());
  }

  // optional int64 Br = 3;
  if (this->br() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->br());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADArBr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADArBr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADArBr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADArBr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADArBr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADArBr)
    UnsafeMergeFrom(*source);
  }
}

void ADArBr::MergeFrom(const ADArBr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADArBr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADArBr::UnsafeMergeFrom(const ADArBr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.ar() != 0) {
    set_ar(from.ar());
  }
  if (from.br() != 0) {
    set_br(from.br());
  }
}

void ADArBr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADArBr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADArBr::CopyFrom(const ADArBr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADArBr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADArBr::IsInitialized() const {

  return true;
}

void ADArBr::Swap(ADArBr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADArBr::InternalSwap(ADArBr* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(ar_, other->ar_);
  std::swap(br_, other->br_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADArBr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADArBr_descriptor_;
  metadata.reflection = ADArBr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADArBr

// optional int32 NValue = 1;
void ADArBr::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADArBr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.NValue)
  return nvalue_;
}
void ADArBr::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.NValue)
}

// optional int64 Ar = 2;
void ADArBr::clear_ar() {
  ar_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADArBr::ar() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.Ar)
  return ar_;
}
void ADArBr::set_ar(::google::protobuf::int64 value) {
  
  ar_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.Ar)
}

// optional int64 Br = 3;
void ADArBr::clear_br() {
  br_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADArBr::br() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.Br)
  return br_;
}
void ADArBr::set_br(::google::protobuf::int64 value) {
  
  br_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.Br)
}

inline const ADArBr* ADArBr::internal_default_instance() {
  return &ADArBr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADBias::kNValueFieldNumber;
const int ADBias::kBiasFieldNumber;
const int ADBias::kClosePxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADBias::ADBias()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADBias)
}

void ADBias::InitAsDefaultInstance() {
}

ADBias::ADBias(const ADBias& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADBias)
}

void ADBias::SharedCtor() {
  ::memset(&bias_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&bias_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADBias::~ADBias() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADBias)
  SharedDtor();
}

void ADBias::SharedDtor() {
}

void ADBias::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADBias::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADBias_descriptor_;
}

const ADBias& ADBias::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADBias> ADBias_default_instance_;

ADBias* ADBias::New(::google::protobuf::Arena* arena) const {
  ADBias* n = new ADBias;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADBias::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADBias)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADBias, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADBias*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bias_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADBias::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADBias)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Bias;
        break;
      }

      // optional int64 Bias = 2;
      case 2: {
        if (tag == 16) {
         parse_Bias:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bias_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ClosePx;
        break;
      }

      // optional int64 ClosePx = 3;
      case 3: {
        if (tag == 24) {
         parse_ClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &closepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADBias)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADBias)
  return false;
#undef DO_
}

void ADBias::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADBias)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 Bias = 2;
  if (this->bias() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bias(), output);
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->closepx(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADBias)
}

::google::protobuf::uint8* ADBias::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADBias)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 Bias = 2;
  if (this->bias() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bias(), target);
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->closepx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADBias)
  return target;
}

size_t ADBias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADBias)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 Bias = 2;
  if (this->bias() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bias());
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->closepx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADBias::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADBias)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADBias* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADBias>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADBias)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADBias)
    UnsafeMergeFrom(*source);
  }
}

void ADBias::MergeFrom(const ADBias& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADBias)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADBias::UnsafeMergeFrom(const ADBias& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.bias() != 0) {
    set_bias(from.bias());
  }
  if (from.closepx() != 0) {
    set_closepx(from.closepx());
  }
}

void ADBias::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADBias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADBias::CopyFrom(const ADBias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADBias)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADBias::IsInitialized() const {

  return true;
}

void ADBias::Swap(ADBias* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADBias::InternalSwap(ADBias* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(bias_, other->bias_);
  std::swap(closepx_, other->closepx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADBias::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADBias_descriptor_;
  metadata.reflection = ADBias_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADBias

// optional int32 NValue = 1;
void ADBias::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADBias::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.NValue)
  return nvalue_;
}
void ADBias::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.NValue)
}

// optional int64 Bias = 2;
void ADBias::clear_bias() {
  bias_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADBias::bias() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.Bias)
  return bias_;
}
void ADBias::set_bias(::google::protobuf::int64 value) {
  
  bias_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.Bias)
}

// optional int64 ClosePx = 3;
void ADBias::clear_closepx() {
  closepx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADBias::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.ClosePx)
  return closepx_;
}
void ADBias::set_closepx(::google::protobuf::int64 value) {
  
  closepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.ClosePx)
}

inline const ADBias* ADBias::internal_default_instance() {
  return &ADBias_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADBoll::kNValueFieldNumber;
const int ADBoll::kPValueFieldNumber;
const int ADBoll::kMidFieldNumber;
const int ADBoll::kUpperFieldNumber;
const int ADBoll::kLowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADBoll::ADBoll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADBoll)
}

void ADBoll::InitAsDefaultInstance() {
}

ADBoll::ADBoll(const ADBoll& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADBoll)
}

void ADBoll::SharedCtor() {
  ::memset(&nvalue_, 0, reinterpret_cast<char*>(&lower_) -
    reinterpret_cast<char*>(&nvalue_) + sizeof(lower_));
  _cached_size_ = 0;
}

ADBoll::~ADBoll() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADBoll)
  SharedDtor();
}

void ADBoll::SharedDtor() {
}

void ADBoll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADBoll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADBoll_descriptor_;
}

const ADBoll& ADBoll::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADBoll> ADBoll_default_instance_;

ADBoll* ADBoll::New(::google::protobuf::Arena* arena) const {
  ADBoll* n = new ADBoll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADBoll::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADBoll)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADBoll, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADBoll*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nvalue_, lower_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADBoll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADBoll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PValue;
        break;
      }

      // optional int32 PValue = 2;
      case 2: {
        if (tag == 16) {
         parse_PValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Mid;
        break;
      }

      // optional int64 Mid = 3;
      case 3: {
        if (tag == 24) {
         parse_Mid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Upper;
        break;
      }

      // optional int64 Upper = 4;
      case 4: {
        if (tag == 32) {
         parse_Upper:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &upper_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Lower;
        break;
      }

      // optional int64 Lower = 5;
      case 5: {
        if (tag == 40) {
         parse_Lower:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lower_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADBoll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADBoll)
  return false;
#undef DO_
}

void ADBoll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADBoll)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int32 PValue = 2;
  if (this->pvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pvalue(), output);
  }

  // optional int64 Mid = 3;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mid(), output);
  }

  // optional int64 Upper = 4;
  if (this->upper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->upper(), output);
  }

  // optional int64 Lower = 5;
  if (this->lower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->lower(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADBoll)
}

::google::protobuf::uint8* ADBoll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADBoll)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int32 PValue = 2;
  if (this->pvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pvalue(), target);
  }

  // optional int64 Mid = 3;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mid(), target);
  }

  // optional int64 Upper = 4;
  if (this->upper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->upper(), target);
  }

  // optional int64 Lower = 5;
  if (this->lower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->lower(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADBoll)
  return target;
}

size_t ADBoll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADBoll)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int32 PValue = 2;
  if (this->pvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pvalue());
  }

  // optional int64 Mid = 3;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mid());
  }

  // optional int64 Upper = 4;
  if (this->upper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->upper());
  }

  // optional int64 Lower = 5;
  if (this->lower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lower());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADBoll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADBoll)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADBoll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADBoll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADBoll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADBoll)
    UnsafeMergeFrom(*source);
  }
}

void ADBoll::MergeFrom(const ADBoll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADBoll)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADBoll::UnsafeMergeFrom(const ADBoll& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.pvalue() != 0) {
    set_pvalue(from.pvalue());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.upper() != 0) {
    set_upper(from.upper());
  }
  if (from.lower() != 0) {
    set_lower(from.lower());
  }
}

void ADBoll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADBoll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADBoll::CopyFrom(const ADBoll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADBoll)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADBoll::IsInitialized() const {

  return true;
}

void ADBoll::Swap(ADBoll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADBoll::InternalSwap(ADBoll* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(pvalue_, other->pvalue_);
  std::swap(mid_, other->mid_);
  std::swap(upper_, other->upper_);
  std::swap(lower_, other->lower_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADBoll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADBoll_descriptor_;
  metadata.reflection = ADBoll_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADBoll

// optional int32 NValue = 1;
void ADBoll::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADBoll::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.NValue)
  return nvalue_;
}
void ADBoll::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.NValue)
}

// optional int32 PValue = 2;
void ADBoll::clear_pvalue() {
  pvalue_ = 0;
}
::google::protobuf::int32 ADBoll::pvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.PValue)
  return pvalue_;
}
void ADBoll::set_pvalue(::google::protobuf::int32 value) {
  
  pvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.PValue)
}

// optional int64 Mid = 3;
void ADBoll::clear_mid() {
  mid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADBoll::mid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Mid)
  return mid_;
}
void ADBoll::set_mid(::google::protobuf::int64 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Mid)
}

// optional int64 Upper = 4;
void ADBoll::clear_upper() {
  upper_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADBoll::upper() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Upper)
  return upper_;
}
void ADBoll::set_upper(::google::protobuf::int64 value) {
  
  upper_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Upper)
}

// optional int64 Lower = 5;
void ADBoll::clear_lower() {
  lower_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADBoll::lower() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Lower)
  return lower_;
}
void ADBoll::set_lower(::google::protobuf::int64 value) {
  
  lower_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Lower)
}

inline const ADBoll* ADBoll::internal_default_instance() {
  return &ADBoll_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADCr::kNValueFieldNumber;
const int ADCr::kCrFieldNumber;
const int ADCr::kP1FieldNumber;
const int ADCr::kP2FieldNumber;
const int ADCr::kYMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADCr::ADCr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADCr)
}

void ADCr::InitAsDefaultInstance() {
}

ADCr::ADCr(const ADCr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADCr)
}

void ADCr::SharedCtor() {
  ::memset(&cr_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&cr_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADCr::~ADCr() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADCr)
  SharedDtor();
}

void ADCr::SharedDtor() {
}

void ADCr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADCr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADCr_descriptor_;
}

const ADCr& ADCr::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADCr> ADCr_default_instance_;

ADCr* ADCr::New(::google::protobuf::Arena* arena) const {
  ADCr* n = new ADCr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADCr::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADCr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADCr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADCr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cr_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADCr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADCr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Cr;
        break;
      }

      // optional int64 Cr = 2;
      case 2: {
        if (tag == 16) {
         parse_Cr:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cr_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_P1;
        break;
      }

      // optional int64 P1 = 3;
      case 3: {
        if (tag == 24) {
         parse_P1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &p1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_P2;
        break;
      }

      // optional int64 P2 = 4;
      case 4: {
        if (tag == 32) {
         parse_P2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &p2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_YM;
        break;
      }

      // optional int64 YM = 5;
      case 5: {
        if (tag == 40) {
         parse_YM:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ym_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADCr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADCr)
  return false;
#undef DO_
}

void ADCr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADCr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 Cr = 2;
  if (this->cr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cr(), output);
  }

  // optional int64 P1 = 3;
  if (this->p1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->p1(), output);
  }

  // optional int64 P2 = 4;
  if (this->p2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->p2(), output);
  }

  // optional int64 YM = 5;
  if (this->ym() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->ym(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADCr)
}

::google::protobuf::uint8* ADCr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADCr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 Cr = 2;
  if (this->cr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cr(), target);
  }

  // optional int64 P1 = 3;
  if (this->p1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->p1(), target);
  }

  // optional int64 P2 = 4;
  if (this->p2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->p2(), target);
  }

  // optional int64 YM = 5;
  if (this->ym() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->ym(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADCr)
  return target;
}

size_t ADCr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADCr)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 Cr = 2;
  if (this->cr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cr());
  }

  // optional int64 P1 = 3;
  if (this->p1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->p1());
  }

  // optional int64 P2 = 4;
  if (this->p2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->p2());
  }

  // optional int64 YM = 5;
  if (this->ym() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ym());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADCr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADCr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADCr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADCr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADCr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADCr)
    UnsafeMergeFrom(*source);
  }
}

void ADCr::MergeFrom(const ADCr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADCr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADCr::UnsafeMergeFrom(const ADCr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.cr() != 0) {
    set_cr(from.cr());
  }
  if (from.p1() != 0) {
    set_p1(from.p1());
  }
  if (from.p2() != 0) {
    set_p2(from.p2());
  }
  if (from.ym() != 0) {
    set_ym(from.ym());
  }
}

void ADCr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADCr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADCr::CopyFrom(const ADCr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADCr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADCr::IsInitialized() const {

  return true;
}

void ADCr::Swap(ADCr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADCr::InternalSwap(ADCr* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(cr_, other->cr_);
  std::swap(p1_, other->p1_);
  std::swap(p2_, other->p2_);
  std::swap(ym_, other->ym_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADCr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADCr_descriptor_;
  metadata.reflection = ADCr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADCr

// optional int32 NValue = 1;
void ADCr::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADCr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.NValue)
  return nvalue_;
}
void ADCr::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.NValue)
}

// optional int64 Cr = 2;
void ADCr::clear_cr() {
  cr_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADCr::cr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.Cr)
  return cr_;
}
void ADCr::set_cr(::google::protobuf::int64 value) {
  
  cr_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.Cr)
}

// optional int64 P1 = 3;
void ADCr::clear_p1() {
  p1_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADCr::p1() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.P1)
  return p1_;
}
void ADCr::set_p1(::google::protobuf::int64 value) {
  
  p1_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.P1)
}

// optional int64 P2 = 4;
void ADCr::clear_p2() {
  p2_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADCr::p2() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.P2)
  return p2_;
}
void ADCr::set_p2(::google::protobuf::int64 value) {
  
  p2_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.P2)
}

// optional int64 YM = 5;
void ADCr::clear_ym() {
  ym_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADCr::ym() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.YM)
  return ym_;
}
void ADCr::set_ym(::google::protobuf::int64 value) {
  
  ym_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.YM)
}

inline const ADCr* ADCr::internal_default_instance() {
  return &ADCr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADVmaMa::kNValueFieldNumber;
const int ADVmaMa::kVmaFieldNumber;
const int ADVmaMa::kMaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADVmaMa::ADVmaMa()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADVmaMa)
}

void ADVmaMa::InitAsDefaultInstance() {
}

ADVmaMa::ADVmaMa(const ADVmaMa& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADVmaMa)
}

void ADVmaMa::SharedCtor() {
  ::memset(&nvalue_, 0, reinterpret_cast<char*>(&ma_) -
    reinterpret_cast<char*>(&nvalue_) + sizeof(ma_));
  _cached_size_ = 0;
}

ADVmaMa::~ADVmaMa() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADVmaMa)
  SharedDtor();
}

void ADVmaMa::SharedDtor() {
}

void ADVmaMa::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADVmaMa::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADVmaMa_descriptor_;
}

const ADVmaMa& ADVmaMa::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADVmaMa> ADVmaMa_default_instance_;

ADVmaMa* ADVmaMa::New(::google::protobuf::Arena* arena) const {
  ADVmaMa* n = new ADVmaMa;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADVmaMa::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADVmaMa)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADVmaMa, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADVmaMa*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nvalue_, ma_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADVmaMa::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADVmaMa)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Vma;
        break;
      }

      // optional int64 Vma = 2;
      case 2: {
        if (tag == 16) {
         parse_Vma:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vma_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Ma;
        break;
      }

      // optional int64 Ma = 3;
      case 3: {
        if (tag == 24) {
         parse_Ma:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ma_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADVmaMa)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADVmaMa)
  return false;
#undef DO_
}

void ADVmaMa::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADVmaMa)
  // optional int64 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nvalue(), output);
  }

  // optional int64 Vma = 2;
  if (this->vma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->vma(), output);
  }

  // optional int64 Ma = 3;
  if (this->ma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ma(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADVmaMa)
}

::google::protobuf::uint8* ADVmaMa::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADVmaMa)
  // optional int64 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nvalue(), target);
  }

  // optional int64 Vma = 2;
  if (this->vma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->vma(), target);
  }

  // optional int64 Ma = 3;
  if (this->ma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ma(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADVmaMa)
  return target;
}

size_t ADVmaMa::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADVmaMa)
  size_t total_size = 0;

  // optional int64 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nvalue());
  }

  // optional int64 Vma = 2;
  if (this->vma() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vma());
  }

  // optional int64 Ma = 3;
  if (this->ma() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ma());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADVmaMa::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADVmaMa)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADVmaMa* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADVmaMa>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADVmaMa)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADVmaMa)
    UnsafeMergeFrom(*source);
  }
}

void ADVmaMa::MergeFrom(const ADVmaMa& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADVmaMa)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADVmaMa::UnsafeMergeFrom(const ADVmaMa& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.vma() != 0) {
    set_vma(from.vma());
  }
  if (from.ma() != 0) {
    set_ma(from.ma());
  }
}

void ADVmaMa::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADVmaMa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADVmaMa::CopyFrom(const ADVmaMa& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADVmaMa)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADVmaMa::IsInitialized() const {

  return true;
}

void ADVmaMa::Swap(ADVmaMa* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADVmaMa::InternalSwap(ADVmaMa* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(vma_, other->vma_);
  std::swap(ma_, other->ma_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADVmaMa::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADVmaMa_descriptor_;
  metadata.reflection = ADVmaMa_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADVmaMa

// optional int64 NValue = 1;
void ADVmaMa::clear_nvalue() {
  nvalue_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVmaMa::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.NValue)
  return nvalue_;
}
void ADVmaMa::set_nvalue(::google::protobuf::int64 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.NValue)
}

// optional int64 Vma = 2;
void ADVmaMa::clear_vma() {
  vma_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVmaMa::vma() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.Vma)
  return vma_;
}
void ADVmaMa::set_vma(::google::protobuf::int64 value) {
  
  vma_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.Vma)
}

// optional int64 Ma = 3;
void ADVmaMa::clear_ma() {
  ma_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVmaMa::ma() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.Ma)
  return ma_;
}
void ADVmaMa::set_ma(::google::protobuf::int64 value) {
  
  ma_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.Ma)
}

inline const ADVmaMa* ADVmaMa::internal_default_instance() {
  return &ADVmaMa_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADVr::kNValueFieldNumber;
const int ADVr::kVRFieldNumber;
const int ADVr::kAVSFieldNumber;
const int ADVr::kBVSFieldNumber;
const int ADVr::kCVSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADVr::ADVr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADVr)
}

void ADVr::InitAsDefaultInstance() {
}

ADVr::ADVr(const ADVr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADVr)
}

void ADVr::SharedCtor() {
  ::memset(&vr_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&vr_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADVr::~ADVr() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADVr)
  SharedDtor();
}

void ADVr::SharedDtor() {
}

void ADVr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADVr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADVr_descriptor_;
}

const ADVr& ADVr::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADVr> ADVr_default_instance_;

ADVr* ADVr::New(::google::protobuf::Arena* arena) const {
  ADVr* n = new ADVr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADVr::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADVr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADVr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADVr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vr_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADVr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADVr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_VR;
        break;
      }

      // optional int64 VR = 2;
      case 2: {
        if (tag == 16) {
         parse_VR:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vr_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AVS;
        break;
      }

      // optional int64 AVS = 3;
      case 3: {
        if (tag == 24) {
         parse_AVS:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &avs_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BVS;
        break;
      }

      // optional int64 BVS = 4;
      case 4: {
        if (tag == 32) {
         parse_BVS:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bvs_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_CVS;
        break;
      }

      // optional int64 CVS = 5;
      case 5: {
        if (tag == 40) {
         parse_CVS:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cvs_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADVr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADVr)
  return false;
#undef DO_
}

void ADVr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADVr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 VR = 2;
  if (this->vr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->vr(), output);
  }

  // optional int64 AVS = 3;
  if (this->avs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->avs(), output);
  }

  // optional int64 BVS = 4;
  if (this->bvs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->bvs(), output);
  }

  // optional int64 CVS = 5;
  if (this->cvs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->cvs(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADVr)
}

::google::protobuf::uint8* ADVr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADVr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 VR = 2;
  if (this->vr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->vr(), target);
  }

  // optional int64 AVS = 3;
  if (this->avs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->avs(), target);
  }

  // optional int64 BVS = 4;
  if (this->bvs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->bvs(), target);
  }

  // optional int64 CVS = 5;
  if (this->cvs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->cvs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADVr)
  return target;
}

size_t ADVr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADVr)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 VR = 2;
  if (this->vr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vr());
  }

  // optional int64 AVS = 3;
  if (this->avs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->avs());
  }

  // optional int64 BVS = 4;
  if (this->bvs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bvs());
  }

  // optional int64 CVS = 5;
  if (this->cvs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cvs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADVr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADVr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADVr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADVr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADVr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADVr)
    UnsafeMergeFrom(*source);
  }
}

void ADVr::MergeFrom(const ADVr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADVr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADVr::UnsafeMergeFrom(const ADVr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.vr() != 0) {
    set_vr(from.vr());
  }
  if (from.avs() != 0) {
    set_avs(from.avs());
  }
  if (from.bvs() != 0) {
    set_bvs(from.bvs());
  }
  if (from.cvs() != 0) {
    set_cvs(from.cvs());
  }
}

void ADVr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADVr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADVr::CopyFrom(const ADVr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADVr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADVr::IsInitialized() const {

  return true;
}

void ADVr::Swap(ADVr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADVr::InternalSwap(ADVr* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(vr_, other->vr_);
  std::swap(avs_, other->avs_);
  std::swap(bvs_, other->bvs_);
  std::swap(cvs_, other->cvs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADVr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADVr_descriptor_;
  metadata.reflection = ADVr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADVr

// optional int32 NValue = 1;
void ADVr::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADVr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.NValue)
  return nvalue_;
}
void ADVr::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.NValue)
}

// optional int64 VR = 2;
void ADVr::clear_vr() {
  vr_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVr::vr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.VR)
  return vr_;
}
void ADVr::set_vr(::google::protobuf::int64 value) {
  
  vr_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.VR)
}

// optional int64 AVS = 3;
void ADVr::clear_avs() {
  avs_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVr::avs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.AVS)
  return avs_;
}
void ADVr::set_avs(::google::protobuf::int64 value) {
  
  avs_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.AVS)
}

// optional int64 BVS = 4;
void ADVr::clear_bvs() {
  bvs_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVr::bvs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.BVS)
  return bvs_;
}
void ADVr::set_bvs(::google::protobuf::int64 value) {
  
  bvs_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.BVS)
}

// optional int64 CVS = 5;
void ADVr::clear_cvs() {
  cvs_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADVr::cvs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.CVS)
  return cvs_;
}
void ADVr::set_cvs(::google::protobuf::int64 value) {
  
  cvs_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.CVS)
}

inline const ADVr* ADVr::internal_default_instance() {
  return &ADVr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADWr::kNValueFieldNumber;
const int ADWr::kWrFieldNumber;
const int ADWr::kClosePxFieldNumber;
const int ADWr::kNHighPxFieldNumber;
const int ADWr::kNLowPxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADWr::ADWr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADWr)
}

void ADWr::InitAsDefaultInstance() {
}

ADWr::ADWr(const ADWr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADWr)
}

void ADWr::SharedCtor() {
  ::memset(&wr_, 0, reinterpret_cast<char*>(&nvalue_) -
    reinterpret_cast<char*>(&wr_) + sizeof(nvalue_));
  _cached_size_ = 0;
}

ADWr::~ADWr() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADWr)
  SharedDtor();
}

void ADWr::SharedDtor() {
}

void ADWr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADWr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADWr_descriptor_;
}

const ADWr& ADWr::default_instance() {
  protobuf_InitDefaults_ADDerivedAnalysis_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADWr> ADWr_default_instance_;

ADWr* ADWr::New(::google::protobuf::Arena* arena) const {
  ADWr* n = new ADWr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADWr::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADWr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADWr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADWr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(wr_, nvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool ADWr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADWr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 NValue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Wr;
        break;
      }

      // optional int64 Wr = 2;
      case 2: {
        if (tag == 16) {
         parse_Wr:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wr_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ClosePx;
        break;
      }

      // optional int64 ClosePx = 3;
      case 3: {
        if (tag == 24) {
         parse_ClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &closepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NHighPx;
        break;
      }

      // optional int64 NHighPx = 4;
      case 4: {
        if (tag == 32) {
         parse_NHighPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nhighpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_NLowPx;
        break;
      }

      // optional int64 NLowPx = 5;
      case 5: {
        if (tag == 40) {
         parse_NLowPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nlowpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADWr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADWr)
  return false;
#undef DO_
}

void ADWr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADWr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nvalue(), output);
  }

  // optional int64 Wr = 2;
  if (this->wr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wr(), output);
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->closepx(), output);
  }

  // optional int64 NHighPx = 4;
  if (this->nhighpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->nhighpx(), output);
  }

  // optional int64 NLowPx = 5;
  if (this->nlowpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->nlowpx(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADWr)
}

::google::protobuf::uint8* ADWr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADWr)
  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nvalue(), target);
  }

  // optional int64 Wr = 2;
  if (this->wr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wr(), target);
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->closepx(), target);
  }

  // optional int64 NHighPx = 4;
  if (this->nhighpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->nhighpx(), target);
  }

  // optional int64 NLowPx = 5;
  if (this->nlowpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->nlowpx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADWr)
  return target;
}

size_t ADWr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADWr)
  size_t total_size = 0;

  // optional int32 NValue = 1;
  if (this->nvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nvalue());
  }

  // optional int64 Wr = 2;
  if (this->wr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wr());
  }

  // optional int64 ClosePx = 3;
  if (this->closepx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->closepx());
  }

  // optional int64 NHighPx = 4;
  if (this->nhighpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nhighpx());
  }

  // optional int64 NLowPx = 5;
  if (this->nlowpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nlowpx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADWr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADWr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADWr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADWr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADWr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADWr)
    UnsafeMergeFrom(*source);
  }
}

void ADWr::MergeFrom(const ADWr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADWr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADWr::UnsafeMergeFrom(const ADWr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nvalue() != 0) {
    set_nvalue(from.nvalue());
  }
  if (from.wr() != 0) {
    set_wr(from.wr());
  }
  if (from.closepx() != 0) {
    set_closepx(from.closepx());
  }
  if (from.nhighpx() != 0) {
    set_nhighpx(from.nhighpx());
  }
  if (from.nlowpx() != 0) {
    set_nlowpx(from.nlowpx());
  }
}

void ADWr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADWr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADWr::CopyFrom(const ADWr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADWr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADWr::IsInitialized() const {

  return true;
}

void ADWr::Swap(ADWr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADWr::InternalSwap(ADWr* other) {
  std::swap(nvalue_, other->nvalue_);
  std::swap(wr_, other->wr_);
  std::swap(closepx_, other->closepx_);
  std::swap(nhighpx_, other->nhighpx_);
  std::swap(nlowpx_, other->nlowpx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADWr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADWr_descriptor_;
  metadata.reflection = ADWr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADWr

// optional int32 NValue = 1;
void ADWr::clear_nvalue() {
  nvalue_ = 0;
}
::google::protobuf::int32 ADWr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NValue)
  return nvalue_;
}
void ADWr::set_nvalue(::google::protobuf::int32 value) {
  
  nvalue_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NValue)
}

// optional int64 Wr = 2;
void ADWr::clear_wr() {
  wr_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADWr::wr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.Wr)
  return wr_;
}
void ADWr::set_wr(::google::protobuf::int64 value) {
  
  wr_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.Wr)
}

// optional int64 ClosePx = 3;
void ADWr::clear_closepx() {
  closepx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADWr::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.ClosePx)
  return closepx_;
}
void ADWr::set_closepx(::google::protobuf::int64 value) {
  
  closepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.ClosePx)
}

// optional int64 NHighPx = 4;
void ADWr::clear_nhighpx() {
  nhighpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADWr::nhighpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NHighPx)
  return nhighpx_;
}
void ADWr::set_nhighpx(::google::protobuf::int64 value) {
  
  nhighpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NHighPx)
}

// optional int64 NLowPx = 5;
void ADWr::clear_nlowpx() {
  nlowpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADWr::nlowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NLowPx)
  return nlowpx_;
}
void ADWr::set_nlowpx(::google::protobuf::int64 value) {
  
  nlowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NLowPx)
}

inline const ADWr* ADWr::internal_default_instance() {
  return &ADWr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
