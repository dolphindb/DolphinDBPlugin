// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADIndicatorsRanking.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ADIndicatorsRanking.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::Descriptor* ADIndicatorsRanking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADIndicatorsRanking_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ADIndicatorsRanking_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ADIndicatorsRanking_2eproto() {
  protobuf_AddDesc_ADIndicatorsRanking_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ADIndicatorsRanking.proto");
  GOOGLE_CHECK(file != NULL);
  ADIndicatorsRanking_descriptor_ = file->message_type(0);
  static const int ADIndicatorsRanking_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, htscsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, mddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, mdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, datatimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, securityidsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, securitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, rankingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, typicalvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, rankinglist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, exchangedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, exchangetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, datamultiplepowerof10_),
  };
  ADIndicatorsRanking_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADIndicatorsRanking_descriptor_,
      ADIndicatorsRanking::internal_default_instance(),
      ADIndicatorsRanking_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADIndicatorsRanking),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADIndicatorsRanking, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ADIndicatorsRanking_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADIndicatorsRanking_descriptor_, ADIndicatorsRanking::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ADIndicatorsRanking_2eproto() {
  ADIndicatorsRanking_default_instance_.Shutdown();
  delete ADIndicatorsRanking_reflection_;
}

void protobuf_InitDefaults_ADIndicatorsRanking_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityIDSource_2eproto();
  ::com::htsc::mdc::insight::model::protobuf_InitDefaults_MDSimpleTick_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ADIndicatorsRanking_default_instance_.DefaultConstruct();
  ADIndicatorsRanking_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ADIndicatorsRanking_2eproto_once_);
void protobuf_InitDefaults_ADIndicatorsRanking_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ADIndicatorsRanking_2eproto_once_,
                 &protobuf_InitDefaults_ADIndicatorsRanking_2eproto_impl);
}
void protobuf_AddDesc_ADIndicatorsRanking_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ADIndicatorsRanking_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031ADIndicatorsRanking.proto\022\032com.htsc.md"
    "c.insight.model\032\023ESecurityType.proto\032\027ES"
    "ecurityIDSource.proto\032\022MDSimpleTick.prot"
    "o\"\275\003\n\023ADIndicatorsRanking\022\026\n\016HTSCSecurit"
    "yID\030\001 \001(\t\022\016\n\006MDDate\030\002 \001(\005\022\016\n\006MDTime\030\003 \001("
    "\005\022\025\n\rDataTimestamp\030\004 \001(\003\022\?\n\020securityIDSo"
    "urce\030\005 \001(\0162%.com.htsc.mdc.model.ESecurit"
    "yIDSource\0227\n\014securityType\030\006 \001(\0162!.com.ht"
    "sc.mdc.model.ESecurityType\022\023\n\013RankingTyp"
    "e\030\007 \001(\005\022>\n\014TypicalValue\030\010 \001(\0132(.com.htsc"
    ".mdc.insight.model.MDSimpleTick\022=\n\013Ranki"
    "ngList\030\t \003(\0132(.com.htsc.mdc.insight.mode"
    "l.MDSimpleTick\022\024\n\014ExchangeDate\030\n \001(\005\022\024\n\014"
    "ExchangeTime\030\013 \001(\005\022\035\n\025DataMultiplePowerO"
    "f10\030\014 \001(\005B<\n\032com.htsc.mdc.insight.modelB"
    "\031ADIndicatorsRankingProtosH\001\240\001\001b\006proto3", 639);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ADIndicatorsRanking.proto", &protobuf_RegisterTypes);
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityIDSource_2eproto();
  ::com::htsc::mdc::insight::model::protobuf_AddDesc_MDSimpleTick_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ADIndicatorsRanking_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ADIndicatorsRanking_2eproto_once_);
void protobuf_AddDesc_ADIndicatorsRanking_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ADIndicatorsRanking_2eproto_once_,
                 &protobuf_AddDesc_ADIndicatorsRanking_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ADIndicatorsRanking_2eproto {
  StaticDescriptorInitializer_ADIndicatorsRanking_2eproto() {
    protobuf_AddDesc_ADIndicatorsRanking_2eproto();
  }
} static_descriptor_initializer_ADIndicatorsRanking_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADIndicatorsRanking::kHTSCSecurityIDFieldNumber;
const int ADIndicatorsRanking::kMDDateFieldNumber;
const int ADIndicatorsRanking::kMDTimeFieldNumber;
const int ADIndicatorsRanking::kDataTimestampFieldNumber;
const int ADIndicatorsRanking::kSecurityIDSourceFieldNumber;
const int ADIndicatorsRanking::kSecurityTypeFieldNumber;
const int ADIndicatorsRanking::kRankingTypeFieldNumber;
const int ADIndicatorsRanking::kTypicalValueFieldNumber;
const int ADIndicatorsRanking::kRankingListFieldNumber;
const int ADIndicatorsRanking::kExchangeDateFieldNumber;
const int ADIndicatorsRanking::kExchangeTimeFieldNumber;
const int ADIndicatorsRanking::kDataMultiplePowerOf10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADIndicatorsRanking::ADIndicatorsRanking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADIndicatorsRanking_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADIndicatorsRanking)
}

void ADIndicatorsRanking::InitAsDefaultInstance() {
  typicalvalue_ = const_cast< ::com::htsc::mdc::insight::model::MDSimpleTick*>(
      ::com::htsc::mdc::insight::model::MDSimpleTick::internal_default_instance());
}

ADIndicatorsRanking::ADIndicatorsRanking(const ADIndicatorsRanking& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADIndicatorsRanking)
}

void ADIndicatorsRanking::SharedCtor() {
  htscsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  typicalvalue_ = NULL;
  ::memset(&mddate_, 0, reinterpret_cast<char*>(&datamultiplepowerof10_) -
    reinterpret_cast<char*>(&mddate_) + sizeof(datamultiplepowerof10_));
  _cached_size_ = 0;
}

ADIndicatorsRanking::~ADIndicatorsRanking() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  SharedDtor();
}

void ADIndicatorsRanking::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ADIndicatorsRanking_default_instance_.get()) {
    delete typicalvalue_;
  }
}

void ADIndicatorsRanking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADIndicatorsRanking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADIndicatorsRanking_descriptor_;
}

const ADIndicatorsRanking& ADIndicatorsRanking::default_instance() {
  protobuf_InitDefaults_ADIndicatorsRanking_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADIndicatorsRanking> ADIndicatorsRanking_default_instance_;

ADIndicatorsRanking* ADIndicatorsRanking::New(::google::protobuf::Arena* arena) const {
  ADIndicatorsRanking* n = new ADIndicatorsRanking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADIndicatorsRanking::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADIndicatorsRanking, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADIndicatorsRanking*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mddate_, rankingtype_);
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && typicalvalue_ != NULL) delete typicalvalue_;
  typicalvalue_ = NULL;
  ZR_(exchangedate_, datamultiplepowerof10_);

#undef ZR_HELPER_
#undef ZR_

  rankinglist_.Clear();
}

bool ADIndicatorsRanking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string HTSCSecurityID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), this->htscsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MDDate;
        break;
      }

      // optional int32 MDDate = 2;
      case 2: {
        if (tag == 16) {
         parse_MDDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MDTime;
        break;
      }

      // optional int32 MDTime = 3;
      case 3: {
        if (tag == 24) {
         parse_MDTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DataTimestamp;
        break;
      }

      // optional int64 DataTimestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_DataTimestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datatimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_securityIDSource;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
      case 5: {
        if (tag == 40) {
         parse_securityIDSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_securityType;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
      case 6: {
        if (tag == 48) {
         parse_securityType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RankingType;
        break;
      }

      // optional int32 RankingType = 7;
      case 7: {
        if (tag == 56) {
         parse_RankingType:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rankingtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_TypicalValue;
        break;
      }

      // optional .com.htsc.mdc.insight.model.MDSimpleTick TypicalValue = 8;
      case 8: {
        if (tag == 66) {
         parse_TypicalValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_typicalvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_RankingList;
        break;
      }

      // repeated .com.htsc.mdc.insight.model.MDSimpleTick RankingList = 9;
      case 9: {
        if (tag == 74) {
         parse_RankingList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RankingList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rankinglist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_RankingList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(80)) goto parse_ExchangeDate;
        break;
      }

      // optional int32 ExchangeDate = 10;
      case 10: {
        if (tag == 80) {
         parse_ExchangeDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangedate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_ExchangeTime;
        break;
      }

      // optional int32 ExchangeTime = 11;
      case 11: {
        if (tag == 88) {
         parse_ExchangeTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_DataMultiplePowerOf10;
        break;
      }

      // optional int32 DataMultiplePowerOf10 = 12;
      case 12: {
        if (tag == 96) {
         parse_DataMultiplePowerOf10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datamultiplepowerof10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  return false;
#undef DO_
}

void ADIndicatorsRanking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mddate(), output);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mdtime(), output);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datatimestamp(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->securityidsource(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->securitytype(), output);
  }

  // optional int32 RankingType = 7;
  if (this->rankingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rankingtype(), output);
  }

  // optional .com.htsc.mdc.insight.model.MDSimpleTick TypicalValue = 8;
  if (this->has_typicalvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->typicalvalue_, output);
  }

  // repeated .com.htsc.mdc.insight.model.MDSimpleTick RankingList = 9;
  for (unsigned int i = 0, n = this->rankinglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->rankinglist(i), output);
  }

  // optional int32 ExchangeDate = 10;
  if (this->exchangedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->exchangedate(), output);
  }

  // optional int32 ExchangeTime = 11;
  if (this->exchangetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->exchangetime(), output);
  }

  // optional int32 DataMultiplePowerOf10 = 12;
  if (this->datamultiplepowerof10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->datamultiplepowerof10(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADIndicatorsRanking)
}

::google::protobuf::uint8* ADIndicatorsRanking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mddate(), target);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mdtime(), target);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datatimestamp(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->securityidsource(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->securitytype(), target);
  }

  // optional int32 RankingType = 7;
  if (this->rankingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rankingtype(), target);
  }

  // optional .com.htsc.mdc.insight.model.MDSimpleTick TypicalValue = 8;
  if (this->has_typicalvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->typicalvalue_, false, target);
  }

  // repeated .com.htsc.mdc.insight.model.MDSimpleTick RankingList = 9;
  for (unsigned int i = 0, n = this->rankinglist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->rankinglist(i), false, target);
  }

  // optional int32 ExchangeDate = 10;
  if (this->exchangedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->exchangedate(), target);
  }

  // optional int32 ExchangeTime = 11;
  if (this->exchangetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->exchangetime(), target);
  }

  // optional int32 DataMultiplePowerOf10 = 12;
  if (this->datamultiplepowerof10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->datamultiplepowerof10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  return target;
}

size_t ADIndicatorsRanking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  size_t total_size = 0;

  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mdtime());
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datatimestamp());
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 6;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // optional int32 RankingType = 7;
  if (this->rankingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rankingtype());
  }

  // optional .com.htsc.mdc.insight.model.MDSimpleTick TypicalValue = 8;
  if (this->has_typicalvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->typicalvalue_);
  }

  // optional int32 ExchangeDate = 10;
  if (this->exchangedate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangedate());
  }

  // optional int32 ExchangeTime = 11;
  if (this->exchangetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangetime());
  }

  // optional int32 DataMultiplePowerOf10 = 12;
  if (this->datamultiplepowerof10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datamultiplepowerof10());
  }

  // repeated .com.htsc.mdc.insight.model.MDSimpleTick RankingList = 9;
  {
    unsigned int count = this->rankinglist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rankinglist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADIndicatorsRanking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADIndicatorsRanking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADIndicatorsRanking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADIndicatorsRanking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADIndicatorsRanking)
    UnsafeMergeFrom(*source);
  }
}

void ADIndicatorsRanking::MergeFrom(const ADIndicatorsRanking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADIndicatorsRanking::UnsafeMergeFrom(const ADIndicatorsRanking& from) {
  GOOGLE_DCHECK(&from != this);
  rankinglist_.MergeFrom(from.rankinglist_);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.mdtime() != 0) {
    set_mdtime(from.mdtime());
  }
  if (from.datatimestamp() != 0) {
    set_datatimestamp(from.datatimestamp());
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.rankingtype() != 0) {
    set_rankingtype(from.rankingtype());
  }
  if (from.has_typicalvalue()) {
    mutable_typicalvalue()->::com::htsc::mdc::insight::model::MDSimpleTick::MergeFrom(from.typicalvalue());
  }
  if (from.exchangedate() != 0) {
    set_exchangedate(from.exchangedate());
  }
  if (from.exchangetime() != 0) {
    set_exchangetime(from.exchangetime());
  }
  if (from.datamultiplepowerof10() != 0) {
    set_datamultiplepowerof10(from.datamultiplepowerof10());
  }
}

void ADIndicatorsRanking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADIndicatorsRanking::CopyFrom(const ADIndicatorsRanking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADIndicatorsRanking)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADIndicatorsRanking::IsInitialized() const {

  return true;
}

void ADIndicatorsRanking::Swap(ADIndicatorsRanking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADIndicatorsRanking::InternalSwap(ADIndicatorsRanking* other) {
  htscsecurityid_.Swap(&other->htscsecurityid_);
  std::swap(mddate_, other->mddate_);
  std::swap(mdtime_, other->mdtime_);
  std::swap(datatimestamp_, other->datatimestamp_);
  std::swap(securityidsource_, other->securityidsource_);
  std::swap(securitytype_, other->securitytype_);
  std::swap(rankingtype_, other->rankingtype_);
  std::swap(typicalvalue_, other->typicalvalue_);
  rankinglist_.UnsafeArenaSwap(&other->rankinglist_);
  std::swap(exchangedate_, other->exchangedate_);
  std::swap(exchangetime_, other->exchangetime_);
  std::swap(datamultiplepowerof10_, other->datamultiplepowerof10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADIndicatorsRanking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADIndicatorsRanking_descriptor_;
  metadata.reflection = ADIndicatorsRanking_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADIndicatorsRanking

// optional string HTSCSecurityID = 1;
void ADIndicatorsRanking::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADIndicatorsRanking::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADIndicatorsRanking::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
}
void ADIndicatorsRanking::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
}
void ADIndicatorsRanking::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
}
::std::string* ADIndicatorsRanking::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADIndicatorsRanking::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADIndicatorsRanking::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADIndicatorsRanking.HTSCSecurityID)
}

// optional int32 MDDate = 2;
void ADIndicatorsRanking::clear_mddate() {
  mddate_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.MDDate)
  return mddate_;
}
void ADIndicatorsRanking::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.MDDate)
}

// optional int32 MDTime = 3;
void ADIndicatorsRanking::clear_mdtime() {
  mdtime_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.MDTime)
  return mdtime_;
}
void ADIndicatorsRanking::set_mdtime(::google::protobuf::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.MDTime)
}

// optional int64 DataTimestamp = 4;
void ADIndicatorsRanking::clear_datatimestamp() {
  datatimestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADIndicatorsRanking::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.DataTimestamp)
  return datatimestamp_;
}
void ADIndicatorsRanking::set_datatimestamp(::google::protobuf::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.DataTimestamp)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
void ADIndicatorsRanking::clear_securityidsource() {
  securityidsource_ = 0;
}
::com::htsc::mdc::model::ESecurityIDSource ADIndicatorsRanking::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
void ADIndicatorsRanking::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 6;
void ADIndicatorsRanking::clear_securitytype() {
  securitytype_ = 0;
}
::com::htsc::mdc::model::ESecurityType ADIndicatorsRanking::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
void ADIndicatorsRanking::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.securityType)
}

// optional int32 RankingType = 7;
void ADIndicatorsRanking::clear_rankingtype() {
  rankingtype_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::rankingtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingType)
  return rankingtype_;
}
void ADIndicatorsRanking::set_rankingtype(::google::protobuf::int32 value) {
  
  rankingtype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingType)
}

// optional .com.htsc.mdc.insight.model.MDSimpleTick TypicalValue = 8;
bool ADIndicatorsRanking::has_typicalvalue() const {
  return this != internal_default_instance() && typicalvalue_ != NULL;
}
void ADIndicatorsRanking::clear_typicalvalue() {
  if (GetArenaNoVirtual() == NULL && typicalvalue_ != NULL) delete typicalvalue_;
  typicalvalue_ = NULL;
}
const ::com::htsc::mdc::insight::model::MDSimpleTick& ADIndicatorsRanking::typicalvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.TypicalValue)
  return typicalvalue_ != NULL ? *typicalvalue_
                         : *::com::htsc::mdc::insight::model::MDSimpleTick::internal_default_instance();
}
::com::htsc::mdc::insight::model::MDSimpleTick* ADIndicatorsRanking::mutable_typicalvalue() {
  
  if (typicalvalue_ == NULL) {
    typicalvalue_ = new ::com::htsc::mdc::insight::model::MDSimpleTick;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADIndicatorsRanking.TypicalValue)
  return typicalvalue_;
}
::com::htsc::mdc::insight::model::MDSimpleTick* ADIndicatorsRanking::release_typicalvalue() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADIndicatorsRanking.TypicalValue)
  
  ::com::htsc::mdc::insight::model::MDSimpleTick* temp = typicalvalue_;
  typicalvalue_ = NULL;
  return temp;
}
void ADIndicatorsRanking::set_allocated_typicalvalue(::com::htsc::mdc::insight::model::MDSimpleTick* typicalvalue) {
  delete typicalvalue_;
  typicalvalue_ = typicalvalue;
  if (typicalvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADIndicatorsRanking.TypicalValue)
}

// repeated .com.htsc.mdc.insight.model.MDSimpleTick RankingList = 9;
int ADIndicatorsRanking::rankinglist_size() const {
  return rankinglist_.size();
}
void ADIndicatorsRanking::clear_rankinglist() {
  rankinglist_.Clear();
}
const ::com::htsc::mdc::insight::model::MDSimpleTick& ADIndicatorsRanking::rankinglist(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingList)
  return rankinglist_.Get(index);
}
::com::htsc::mdc::insight::model::MDSimpleTick* ADIndicatorsRanking::mutable_rankinglist(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingList)
  return rankinglist_.Mutable(index);
}
::com::htsc::mdc::insight::model::MDSimpleTick* ADIndicatorsRanking::add_rankinglist() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingList)
  return rankinglist_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::MDSimpleTick >*
ADIndicatorsRanking::mutable_rankinglist() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingList)
  return &rankinglist_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::MDSimpleTick >&
ADIndicatorsRanking::rankinglist() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADIndicatorsRanking.RankingList)
  return rankinglist_;
}

// optional int32 ExchangeDate = 10;
void ADIndicatorsRanking::clear_exchangedate() {
  exchangedate_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.ExchangeDate)
  return exchangedate_;
}
void ADIndicatorsRanking::set_exchangedate(::google::protobuf::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.ExchangeDate)
}

// optional int32 ExchangeTime = 11;
void ADIndicatorsRanking::clear_exchangetime() {
  exchangetime_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.ExchangeTime)
  return exchangetime_;
}
void ADIndicatorsRanking::set_exchangetime(::google::protobuf::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.ExchangeTime)
}

// optional int32 DataMultiplePowerOf10 = 12;
void ADIndicatorsRanking::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
::google::protobuf::int32 ADIndicatorsRanking::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicatorsRanking.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
void ADIndicatorsRanking::set_datamultiplepowerof10(::google::protobuf::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicatorsRanking.DataMultiplePowerOf10)
}

inline const ADIndicatorsRanking* ADIndicatorsRanking::internal_default_instance() {
  return &ADIndicatorsRanking_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
