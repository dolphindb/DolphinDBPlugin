// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADOrderbookSnapshot.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ADOrderbookSnapshot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::Descriptor* ADOrderbookSnapshot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADOrderbookSnapshot_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADEntryDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADEntryDetail_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ADOrderbookSnapshot_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ADOrderbookSnapshot_2eproto() {
  protobuf_AddDesc_ADOrderbookSnapshot_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ADOrderbookSnapshot.proto");
  GOOGLE_CHECK(file != NULL);
  ADOrderbookSnapshot_descriptor_ = file->message_type(0);
  static const int ADOrderbookSnapshot_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, htscsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, mddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, mdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, datatimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, tradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, securityidsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, securitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, channelno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, applseqnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, snapshotmddatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, numtrades_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalvolumetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalvaluetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, lastpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, highpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, lowpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalbuyqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalsellqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, weightedavgbuypx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, weightedavgsellpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalbuynumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, totalsellnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, numbuyorders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, numsellorders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, exchangedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, exchangetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, buyentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, sellentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, buymarketorders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, sellmarketorders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, aftermatchedbuyentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, aftermatchedsellentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, datamultiplepowerof10_),
  };
  ADOrderbookSnapshot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADOrderbookSnapshot_descriptor_,
      ADOrderbookSnapshot::internal_default_instance(),
      ADOrderbookSnapshot_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADOrderbookSnapshot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADOrderbookSnapshot, _internal_metadata_));
  ADEntryDetail_descriptor_ = file->message_type(1);
  static const int ADEntryDetail_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, totalqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, numberoforders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, orderqtylist_),
  };
  ADEntryDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ADEntryDetail_descriptor_,
      ADEntryDetail::internal_default_instance(),
      ADEntryDetail_offsets_,
      -1,
      -1,
      -1,
      sizeof(ADEntryDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADEntryDetail, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ADOrderbookSnapshot_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADOrderbookSnapshot_descriptor_, ADOrderbookSnapshot::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ADEntryDetail_descriptor_, ADEntryDetail::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ADOrderbookSnapshot_2eproto() {
  ADOrderbookSnapshot_default_instance_.Shutdown();
  delete ADOrderbookSnapshot_reflection_;
  ADEntryDetail_default_instance_.Shutdown();
  delete ADEntryDetail_reflection_;
}

void protobuf_InitDefaults_ADOrderbookSnapshot_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ADOrderbookSnapshot_default_instance_.DefaultConstruct();
  ADEntryDetail_default_instance_.DefaultConstruct();
  ADOrderbookSnapshot_default_instance_.get_mutable()->InitAsDefaultInstance();
  ADEntryDetail_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ADOrderbookSnapshot_2eproto_once_);
void protobuf_InitDefaults_ADOrderbookSnapshot_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ADOrderbookSnapshot_2eproto_once_,
                 &protobuf_InitDefaults_ADOrderbookSnapshot_2eproto_impl);
}
void protobuf_AddDesc_ADOrderbookSnapshot_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ADOrderbookSnapshot_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031ADOrderbookSnapshot.proto\022\032com.htsc.md"
    "c.insight.model\032\023ESecurityType.proto\032\027ES"
    "ecurityIDSource.proto\"\212\010\n\023ADOrderbookSna"
    "pshot\022\026\n\016HTSCSecurityID\030\001 \001(\t\022\016\n\006MDDate\030"
    "\002 \001(\005\022\016\n\006MDTime\030\003 \001(\005\022\025\n\rDataTimestamp\030\004"
    " \001(\003\022\030\n\020TradingPhaseCode\030\005 \001(\t\022\?\n\020securi"
    "tyIDSource\030\006 \001(\0162%.com.htsc.mdc.model.ES"
    "ecurityIDSource\0227\n\014securityType\030\007 \001(\0162!."
    "com.htsc.mdc.model.ESecurityType\022\021\n\tChan"
    "nelNo\030\010 \001(\005\022\022\n\nApplSeqNum\030\t \001(\003\022\032\n\022Snaps"
    "hotMDDateTime\030\n \001(\003\022\021\n\tNumTrades\030\013 \001(\003\022\030"
    "\n\020TotalVolumeTrade\030\014 \001(\003\022\027\n\017TotalValueTr"
    "ade\030\r \001(\003\022\016\n\006LastPx\030\016 \001(\003\022\016\n\006HighPx\030\021 \001("
    "\003\022\r\n\005LowPx\030\022 \001(\003\022\023\n\013TotalBuyQty\030\023 \001(\003\022\024\n"
    "\014TotalSellQty\030\024 \001(\003\022\030\n\020WeightedAvgBuyPx\030"
    "\025 \001(\003\022\031\n\021WeightedAvgSellPx\030\026 \001(\003\022\026\n\016Tota"
    "lBuyNumber\030\027 \001(\003\022\027\n\017TotalSellNumber\030\030 \001("
    "\003\022\024\n\014NumBuyOrders\030\031 \001(\005\022\025\n\rNumSellOrders"
    "\030\032 \001(\005\022\024\n\014ExchangeDate\030\033 \001(\005\022\024\n\014Exchange"
    "Time\030\034 \001(\005\022=\n\nBuyEntries\030\036 \003(\0132).com.hts"
    "c.mdc.insight.model.ADEntryDetail\022>\n\013Sel"
    "lEntries\030\037 \003(\0132).com.htsc.mdc.insight.mo"
    "del.ADEntryDetail\022\033\n\017BuyMarketOrders\030  \003"
    "(\003B\002\020\001\022\034\n\020SellMarketOrders\030! \003(\003B\002\020\001\022I\n\026"
    "afterMatchedBuyEntries\030\" \003(\0132).com.htsc."
    "mdc.insight.model.ADEntryDetail\022J\n\027after"
    "MatchedSellEntries\030# \003(\0132).com.htsc.mdc."
    "insight.model.ADEntryDetail\022\035\n\025DataMulti"
    "plePowerOf10\030$ \001(\005\"q\n\rADEntryDetail\022\r\n\005L"
    "evel\030\001 \001(\005\022\r\n\005Price\030\002 \001(\003\022\020\n\010TotalQty\030\003 "
    "\001(\005\022\026\n\016NumberOfOrders\030\004 \001(\005\022\030\n\014OrderQtyL"
    "ist\030\005 \003(\005B\002\020\001B<\n\032com.htsc.mdc.insight.mo"
    "delB\031ADOrderbookSnapshotProtosH\001\240\001\001b\006pro"
    "to3", 1323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ADOrderbookSnapshot.proto", &protobuf_RegisterTypes);
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityType_2eproto();
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityIDSource_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ADOrderbookSnapshot_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ADOrderbookSnapshot_2eproto_once_);
void protobuf_AddDesc_ADOrderbookSnapshot_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ADOrderbookSnapshot_2eproto_once_,
                 &protobuf_AddDesc_ADOrderbookSnapshot_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ADOrderbookSnapshot_2eproto {
  StaticDescriptorInitializer_ADOrderbookSnapshot_2eproto() {
    protobuf_AddDesc_ADOrderbookSnapshot_2eproto();
  }
} static_descriptor_initializer_ADOrderbookSnapshot_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADOrderbookSnapshot::kHTSCSecurityIDFieldNumber;
const int ADOrderbookSnapshot::kMDDateFieldNumber;
const int ADOrderbookSnapshot::kMDTimeFieldNumber;
const int ADOrderbookSnapshot::kDataTimestampFieldNumber;
const int ADOrderbookSnapshot::kTradingPhaseCodeFieldNumber;
const int ADOrderbookSnapshot::kSecurityIDSourceFieldNumber;
const int ADOrderbookSnapshot::kSecurityTypeFieldNumber;
const int ADOrderbookSnapshot::kChannelNoFieldNumber;
const int ADOrderbookSnapshot::kApplSeqNumFieldNumber;
const int ADOrderbookSnapshot::kSnapshotMDDateTimeFieldNumber;
const int ADOrderbookSnapshot::kNumTradesFieldNumber;
const int ADOrderbookSnapshot::kTotalVolumeTradeFieldNumber;
const int ADOrderbookSnapshot::kTotalValueTradeFieldNumber;
const int ADOrderbookSnapshot::kLastPxFieldNumber;
const int ADOrderbookSnapshot::kHighPxFieldNumber;
const int ADOrderbookSnapshot::kLowPxFieldNumber;
const int ADOrderbookSnapshot::kTotalBuyQtyFieldNumber;
const int ADOrderbookSnapshot::kTotalSellQtyFieldNumber;
const int ADOrderbookSnapshot::kWeightedAvgBuyPxFieldNumber;
const int ADOrderbookSnapshot::kWeightedAvgSellPxFieldNumber;
const int ADOrderbookSnapshot::kTotalBuyNumberFieldNumber;
const int ADOrderbookSnapshot::kTotalSellNumberFieldNumber;
const int ADOrderbookSnapshot::kNumBuyOrdersFieldNumber;
const int ADOrderbookSnapshot::kNumSellOrdersFieldNumber;
const int ADOrderbookSnapshot::kExchangeDateFieldNumber;
const int ADOrderbookSnapshot::kExchangeTimeFieldNumber;
const int ADOrderbookSnapshot::kBuyEntriesFieldNumber;
const int ADOrderbookSnapshot::kSellEntriesFieldNumber;
const int ADOrderbookSnapshot::kBuyMarketOrdersFieldNumber;
const int ADOrderbookSnapshot::kSellMarketOrdersFieldNumber;
const int ADOrderbookSnapshot::kAfterMatchedBuyEntriesFieldNumber;
const int ADOrderbookSnapshot::kAfterMatchedSellEntriesFieldNumber;
const int ADOrderbookSnapshot::kDataMultiplePowerOf10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADOrderbookSnapshot::ADOrderbookSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADOrderbookSnapshot_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
}

void ADOrderbookSnapshot::InitAsDefaultInstance() {
}

ADOrderbookSnapshot::ADOrderbookSnapshot(const ADOrderbookSnapshot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
}

void ADOrderbookSnapshot::SharedCtor() {
  htscsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mddate_, 0, reinterpret_cast<char*>(&datamultiplepowerof10_) -
    reinterpret_cast<char*>(&mddate_) + sizeof(datamultiplepowerof10_));
  _cached_size_ = 0;
}

ADOrderbookSnapshot::~ADOrderbookSnapshot() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  SharedDtor();
}

void ADOrderbookSnapshot::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ADOrderbookSnapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADOrderbookSnapshot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADOrderbookSnapshot_descriptor_;
}

const ADOrderbookSnapshot& ADOrderbookSnapshot::default_instance() {
  protobuf_InitDefaults_ADOrderbookSnapshot_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADOrderbookSnapshot> ADOrderbookSnapshot_default_instance_;

ADOrderbookSnapshot* ADOrderbookSnapshot::New(::google::protobuf::Arena* arena) const {
  ADOrderbookSnapshot* n = new ADOrderbookSnapshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADOrderbookSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADOrderbookSnapshot, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADOrderbookSnapshot*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mddate_, securitytype_);
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channelno_ = 0;
  ZR_(applseqnum_, highpx_);
  lowpx_ = GOOGLE_LONGLONG(0);
  ZR_(totalbuyqty_, numsellorders_);
  numbuyorders_ = 0;
  ZR_(exchangedate_, exchangetime_);
  datamultiplepowerof10_ = 0;

#undef ZR_HELPER_
#undef ZR_

  buyentries_.Clear();
  sellentries_.Clear();
  buymarketorders_.Clear();
  sellmarketorders_.Clear();
  aftermatchedbuyentries_.Clear();
  aftermatchedsellentries_.Clear();
}

bool ADOrderbookSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string HTSCSecurityID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), this->htscsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MDDate;
        break;
      }

      // optional int32 MDDate = 2;
      case 2: {
        if (tag == 16) {
         parse_MDDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MDTime;
        break;
      }

      // optional int32 MDTime = 3;
      case 3: {
        if (tag == 24) {
         parse_MDTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DataTimestamp;
        break;
      }

      // optional int64 DataTimestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_DataTimestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datatimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TradingPhaseCode;
        break;
      }

      // optional string TradingPhaseCode = 5;
      case 5: {
        if (tag == 42) {
         parse_TradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingphasecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingphasecode().data(), this->tradingphasecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_securityIDSource;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6: {
        if (tag == 48) {
         parse_securityIDSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_securityType;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7: {
        if (tag == 56) {
         parse_securityType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ChannelNo;
        break;
      }

      // optional int32 ChannelNo = 8;
      case 8: {
        if (tag == 64) {
         parse_ChannelNo:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channelno_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ApplSeqNum;
        break;
      }

      // optional int64 ApplSeqNum = 9;
      case 9: {
        if (tag == 72) {
         parse_ApplSeqNum:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &applseqnum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_SnapshotMDDateTime;
        break;
      }

      // optional int64 SnapshotMDDateTime = 10;
      case 10: {
        if (tag == 80) {
         parse_SnapshotMDDateTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &snapshotmddatetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_NumTrades;
        break;
      }

      // optional int64 NumTrades = 11;
      case 11: {
        if (tag == 88) {
         parse_NumTrades:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &numtrades_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_TotalVolumeTrade;
        break;
      }

      // optional int64 TotalVolumeTrade = 12;
      case 12: {
        if (tag == 96) {
         parse_TotalVolumeTrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvolumetrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_TotalValueTrade;
        break;
      }

      // optional int64 TotalValueTrade = 13;
      case 13: {
        if (tag == 104) {
         parse_TotalValueTrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvaluetrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_LastPx;
        break;
      }

      // optional int64 LastPx = 14;
      case 14: {
        if (tag == 112) {
         parse_LastPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lastpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_HighPx;
        break;
      }

      // optional int64 HighPx = 17;
      case 17: {
        if (tag == 136) {
         parse_HighPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_LowPx;
        break;
      }

      // optional int64 LowPx = 18;
      case 18: {
        if (tag == 144) {
         parse_LowPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_TotalBuyQty;
        break;
      }

      // optional int64 TotalBuyQty = 19;
      case 19: {
        if (tag == 152) {
         parse_TotalBuyQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalbuyqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_TotalSellQty;
        break;
      }

      // optional int64 TotalSellQty = 20;
      case 20: {
        if (tag == 160) {
         parse_TotalSellQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalsellqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_WeightedAvgBuyPx;
        break;
      }

      // optional int64 WeightedAvgBuyPx = 21;
      case 21: {
        if (tag == 168) {
         parse_WeightedAvgBuyPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weightedavgbuypx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_WeightedAvgSellPx;
        break;
      }

      // optional int64 WeightedAvgSellPx = 22;
      case 22: {
        if (tag == 176) {
         parse_WeightedAvgSellPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weightedavgsellpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_TotalBuyNumber;
        break;
      }

      // optional int64 TotalBuyNumber = 23;
      case 23: {
        if (tag == 184) {
         parse_TotalBuyNumber:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalbuynumber_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_TotalSellNumber;
        break;
      }

      // optional int64 TotalSellNumber = 24;
      case 24: {
        if (tag == 192) {
         parse_TotalSellNumber:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalsellnumber_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_NumBuyOrders;
        break;
      }

      // optional int32 NumBuyOrders = 25;
      case 25: {
        if (tag == 200) {
         parse_NumBuyOrders:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numbuyorders_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_NumSellOrders;
        break;
      }

      // optional int32 NumSellOrders = 26;
      case 26: {
        if (tag == 208) {
         parse_NumSellOrders:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numsellorders_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_ExchangeDate;
        break;
      }

      // optional int32 ExchangeDate = 27;
      case 27: {
        if (tag == 216) {
         parse_ExchangeDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangedate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_ExchangeTime;
        break;
      }

      // optional int32 ExchangeTime = 28;
      case 28: {
        if (tag == 224) {
         parse_ExchangeTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_BuyEntries;
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
      case 30: {
        if (tag == 242) {
         parse_BuyEntries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_BuyEntries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buyentries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_loop_BuyEntries;
        if (input->ExpectTag(250)) goto parse_loop_SellEntries;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
      case 31: {
        if (tag == 250) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_SellEntries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sellentries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_loop_SellEntries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(258)) goto parse_BuyMarketOrders;
        break;
      }

      // repeated int64 BuyMarketOrders = 32 [packed = true];
      case 32: {
        if (tag == 258) {
         parse_BuyMarketOrders:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_buymarketorders())));
        } else if (tag == 256) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 258, input, this->mutable_buymarketorders())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_SellMarketOrders;
        break;
      }

      // repeated int64 SellMarketOrders = 33 [packed = true];
      case 33: {
        if (tag == 266) {
         parse_SellMarketOrders:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_sellmarketorders())));
        } else if (tag == 264) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 266, input, this->mutable_sellmarketorders())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_afterMatchedBuyEntries;
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
      case 34: {
        if (tag == 274) {
         parse_afterMatchedBuyEntries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_afterMatchedBuyEntries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_aftermatchedbuyentries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_loop_afterMatchedBuyEntries;
        if (input->ExpectTag(282)) goto parse_loop_afterMatchedSellEntries;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
      case 35: {
        if (tag == 282) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_afterMatchedSellEntries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_aftermatchedsellentries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_loop_afterMatchedSellEntries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(288)) goto parse_DataMultiplePowerOf10;
        break;
      }

      // optional int32 DataMultiplePowerOf10 = 36;
      case 36: {
        if (tag == 288) {
         parse_DataMultiplePowerOf10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datamultiplepowerof10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  return false;
#undef DO_
}

void ADOrderbookSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mddate(), output);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mdtime(), output);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datatimestamp(), output);
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tradingphasecode(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->securityidsource(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->securitytype(), output);
  }

  // optional int32 ChannelNo = 8;
  if (this->channelno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->channelno(), output);
  }

  // optional int64 ApplSeqNum = 9;
  if (this->applseqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->applseqnum(), output);
  }

  // optional int64 SnapshotMDDateTime = 10;
  if (this->snapshotmddatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->snapshotmddatetime(), output);
  }

  // optional int64 NumTrades = 11;
  if (this->numtrades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->numtrades(), output);
  }

  // optional int64 TotalVolumeTrade = 12;
  if (this->totalvolumetrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->totalvolumetrade(), output);
  }

  // optional int64 TotalValueTrade = 13;
  if (this->totalvaluetrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->totalvaluetrade(), output);
  }

  // optional int64 LastPx = 14;
  if (this->lastpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->lastpx(), output);
  }

  // optional int64 HighPx = 17;
  if (this->highpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->highpx(), output);
  }

  // optional int64 LowPx = 18;
  if (this->lowpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->lowpx(), output);
  }

  // optional int64 TotalBuyQty = 19;
  if (this->totalbuyqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->totalbuyqty(), output);
  }

  // optional int64 TotalSellQty = 20;
  if (this->totalsellqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->totalsellqty(), output);
  }

  // optional int64 WeightedAvgBuyPx = 21;
  if (this->weightedavgbuypx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->weightedavgbuypx(), output);
  }

  // optional int64 WeightedAvgSellPx = 22;
  if (this->weightedavgsellpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->weightedavgsellpx(), output);
  }

  // optional int64 TotalBuyNumber = 23;
  if (this->totalbuynumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->totalbuynumber(), output);
  }

  // optional int64 TotalSellNumber = 24;
  if (this->totalsellnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->totalsellnumber(), output);
  }

  // optional int32 NumBuyOrders = 25;
  if (this->numbuyorders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->numbuyorders(), output);
  }

  // optional int32 NumSellOrders = 26;
  if (this->numsellorders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->numsellorders(), output);
  }

  // optional int32 ExchangeDate = 27;
  if (this->exchangedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->exchangedate(), output);
  }

  // optional int32 ExchangeTime = 28;
  if (this->exchangetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->exchangetime(), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
  for (unsigned int i = 0, n = this->buyentries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->buyentries(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
  for (unsigned int i = 0, n = this->sellentries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->sellentries(i), output);
  }

  // repeated int64 BuyMarketOrders = 32 [packed = true];
  if (this->buymarketorders_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(32, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_buymarketorders_cached_byte_size_);
  }
  for (int i = 0; i < this->buymarketorders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->buymarketorders(i), output);
  }

  // repeated int64 SellMarketOrders = 33 [packed = true];
  if (this->sellmarketorders_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(33, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_sellmarketorders_cached_byte_size_);
  }
  for (int i = 0; i < this->sellmarketorders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->sellmarketorders(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
  for (unsigned int i = 0, n = this->aftermatchedbuyentries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->aftermatchedbuyentries(i), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
  for (unsigned int i = 0, n = this->aftermatchedsellentries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->aftermatchedsellentries(i), output);
  }

  // optional int32 DataMultiplePowerOf10 = 36;
  if (this->datamultiplepowerof10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->datamultiplepowerof10(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
}

::google::protobuf::uint8* ADOrderbookSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mddate(), target);
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mdtime(), target);
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datatimestamp(), target);
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tradingphasecode(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->securityidsource(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->securitytype(), target);
  }

  // optional int32 ChannelNo = 8;
  if (this->channelno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->channelno(), target);
  }

  // optional int64 ApplSeqNum = 9;
  if (this->applseqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->applseqnum(), target);
  }

  // optional int64 SnapshotMDDateTime = 10;
  if (this->snapshotmddatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->snapshotmddatetime(), target);
  }

  // optional int64 NumTrades = 11;
  if (this->numtrades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->numtrades(), target);
  }

  // optional int64 TotalVolumeTrade = 12;
  if (this->totalvolumetrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->totalvolumetrade(), target);
  }

  // optional int64 TotalValueTrade = 13;
  if (this->totalvaluetrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->totalvaluetrade(), target);
  }

  // optional int64 LastPx = 14;
  if (this->lastpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->lastpx(), target);
  }

  // optional int64 HighPx = 17;
  if (this->highpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->highpx(), target);
  }

  // optional int64 LowPx = 18;
  if (this->lowpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->lowpx(), target);
  }

  // optional int64 TotalBuyQty = 19;
  if (this->totalbuyqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->totalbuyqty(), target);
  }

  // optional int64 TotalSellQty = 20;
  if (this->totalsellqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->totalsellqty(), target);
  }

  // optional int64 WeightedAvgBuyPx = 21;
  if (this->weightedavgbuypx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->weightedavgbuypx(), target);
  }

  // optional int64 WeightedAvgSellPx = 22;
  if (this->weightedavgsellpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->weightedavgsellpx(), target);
  }

  // optional int64 TotalBuyNumber = 23;
  if (this->totalbuynumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->totalbuynumber(), target);
  }

  // optional int64 TotalSellNumber = 24;
  if (this->totalsellnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->totalsellnumber(), target);
  }

  // optional int32 NumBuyOrders = 25;
  if (this->numbuyorders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->numbuyorders(), target);
  }

  // optional int32 NumSellOrders = 26;
  if (this->numsellorders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->numsellorders(), target);
  }

  // optional int32 ExchangeDate = 27;
  if (this->exchangedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->exchangedate(), target);
  }

  // optional int32 ExchangeTime = 28;
  if (this->exchangetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->exchangetime(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
  for (unsigned int i = 0, n = this->buyentries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, this->buyentries(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
  for (unsigned int i = 0, n = this->sellentries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, this->sellentries(i), false, target);
  }

  // repeated int64 BuyMarketOrders = 32 [packed = true];
  if (this->buymarketorders_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      32,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _buymarketorders_cached_byte_size_, target);
  }
  for (int i = 0; i < this->buymarketorders_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->buymarketorders(i), target);
  }

  // repeated int64 SellMarketOrders = 33 [packed = true];
  if (this->sellmarketorders_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      33,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _sellmarketorders_cached_byte_size_, target);
  }
  for (int i = 0; i < this->sellmarketorders_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->sellmarketorders(i), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
  for (unsigned int i = 0, n = this->aftermatchedbuyentries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        34, this->aftermatchedbuyentries(i), false, target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
  for (unsigned int i = 0, n = this->aftermatchedsellentries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        35, this->aftermatchedsellentries(i), false, target);
  }

  // optional int32 DataMultiplePowerOf10 = 36;
  if (this->datamultiplepowerof10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->datamultiplepowerof10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  return target;
}

size_t ADOrderbookSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  size_t total_size = 0;

  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // optional int32 MDDate = 2;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // optional int32 MDTime = 3;
  if (this->mdtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mdtime());
  }

  // optional int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datatimestamp());
  }

  // optional string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingphasecode());
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // optional int32 ChannelNo = 8;
  if (this->channelno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channelno());
  }

  // optional int64 ApplSeqNum = 9;
  if (this->applseqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->applseqnum());
  }

  // optional int64 SnapshotMDDateTime = 10;
  if (this->snapshotmddatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->snapshotmddatetime());
  }

  // optional int64 NumTrades = 11;
  if (this->numtrades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->numtrades());
  }

  // optional int64 TotalVolumeTrade = 12;
  if (this->totalvolumetrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalvolumetrade());
  }

  // optional int64 TotalValueTrade = 13;
  if (this->totalvaluetrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalvaluetrade());
  }

  // optional int64 LastPx = 14;
  if (this->lastpx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lastpx());
  }

  // optional int64 HighPx = 17;
  if (this->highpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highpx());
  }

  // optional int64 LowPx = 18;
  if (this->lowpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowpx());
  }

  // optional int64 TotalBuyQty = 19;
  if (this->totalbuyqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalbuyqty());
  }

  // optional int64 TotalSellQty = 20;
  if (this->totalsellqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalsellqty());
  }

  // optional int64 WeightedAvgBuyPx = 21;
  if (this->weightedavgbuypx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->weightedavgbuypx());
  }

  // optional int64 WeightedAvgSellPx = 22;
  if (this->weightedavgsellpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->weightedavgsellpx());
  }

  // optional int64 TotalBuyNumber = 23;
  if (this->totalbuynumber() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalbuynumber());
  }

  // optional int64 TotalSellNumber = 24;
  if (this->totalsellnumber() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalsellnumber());
  }

  // optional int32 NumBuyOrders = 25;
  if (this->numbuyorders() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numbuyorders());
  }

  // optional int32 NumSellOrders = 26;
  if (this->numsellorders() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numsellorders());
  }

  // optional int32 ExchangeDate = 27;
  if (this->exchangedate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangedate());
  }

  // optional int32 ExchangeTime = 28;
  if (this->exchangetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exchangetime());
  }

  // optional int32 DataMultiplePowerOf10 = 36;
  if (this->datamultiplepowerof10() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datamultiplepowerof10());
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
  {
    unsigned int count = this->buyentries_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buyentries(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
  {
    unsigned int count = this->sellentries_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sellentries(i));
    }
  }

  // repeated int64 BuyMarketOrders = 32 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->buymarketorders_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->buymarketorders(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buymarketorders_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 SellMarketOrders = 33 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->sellmarketorders_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->sellmarketorders(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sellmarketorders_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
  {
    unsigned int count = this->aftermatchedbuyentries_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->aftermatchedbuyentries(i));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
  {
    unsigned int count = this->aftermatchedsellentries_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->aftermatchedsellentries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADOrderbookSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADOrderbookSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADOrderbookSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
    UnsafeMergeFrom(*source);
  }
}

void ADOrderbookSnapshot::MergeFrom(const ADOrderbookSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADOrderbookSnapshot::UnsafeMergeFrom(const ADOrderbookSnapshot& from) {
  GOOGLE_DCHECK(&from != this);
  buyentries_.MergeFrom(from.buyentries_);
  sellentries_.MergeFrom(from.sellentries_);
  buymarketorders_.UnsafeMergeFrom(from.buymarketorders_);
  sellmarketorders_.UnsafeMergeFrom(from.sellmarketorders_);
  aftermatchedbuyentries_.MergeFrom(from.aftermatchedbuyentries_);
  aftermatchedsellentries_.MergeFrom(from.aftermatchedsellentries_);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.mdtime() != 0) {
    set_mdtime(from.mdtime());
  }
  if (from.datatimestamp() != 0) {
    set_datatimestamp(from.datatimestamp());
  }
  if (from.tradingphasecode().size() > 0) {

    tradingphasecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingphasecode_);
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.channelno() != 0) {
    set_channelno(from.channelno());
  }
  if (from.applseqnum() != 0) {
    set_applseqnum(from.applseqnum());
  }
  if (from.snapshotmddatetime() != 0) {
    set_snapshotmddatetime(from.snapshotmddatetime());
  }
  if (from.numtrades() != 0) {
    set_numtrades(from.numtrades());
  }
  if (from.totalvolumetrade() != 0) {
    set_totalvolumetrade(from.totalvolumetrade());
  }
  if (from.totalvaluetrade() != 0) {
    set_totalvaluetrade(from.totalvaluetrade());
  }
  if (from.lastpx() != 0) {
    set_lastpx(from.lastpx());
  }
  if (from.highpx() != 0) {
    set_highpx(from.highpx());
  }
  if (from.lowpx() != 0) {
    set_lowpx(from.lowpx());
  }
  if (from.totalbuyqty() != 0) {
    set_totalbuyqty(from.totalbuyqty());
  }
  if (from.totalsellqty() != 0) {
    set_totalsellqty(from.totalsellqty());
  }
  if (from.weightedavgbuypx() != 0) {
    set_weightedavgbuypx(from.weightedavgbuypx());
  }
  if (from.weightedavgsellpx() != 0) {
    set_weightedavgsellpx(from.weightedavgsellpx());
  }
  if (from.totalbuynumber() != 0) {
    set_totalbuynumber(from.totalbuynumber());
  }
  if (from.totalsellnumber() != 0) {
    set_totalsellnumber(from.totalsellnumber());
  }
  if (from.numbuyorders() != 0) {
    set_numbuyorders(from.numbuyorders());
  }
  if (from.numsellorders() != 0) {
    set_numsellorders(from.numsellorders());
  }
  if (from.exchangedate() != 0) {
    set_exchangedate(from.exchangedate());
  }
  if (from.exchangetime() != 0) {
    set_exchangetime(from.exchangetime());
  }
  if (from.datamultiplepowerof10() != 0) {
    set_datamultiplepowerof10(from.datamultiplepowerof10());
  }
}

void ADOrderbookSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADOrderbookSnapshot::CopyFrom(const ADOrderbookSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADOrderbookSnapshot::IsInitialized() const {

  return true;
}

void ADOrderbookSnapshot::Swap(ADOrderbookSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADOrderbookSnapshot::InternalSwap(ADOrderbookSnapshot* other) {
  htscsecurityid_.Swap(&other->htscsecurityid_);
  std::swap(mddate_, other->mddate_);
  std::swap(mdtime_, other->mdtime_);
  std::swap(datatimestamp_, other->datatimestamp_);
  tradingphasecode_.Swap(&other->tradingphasecode_);
  std::swap(securityidsource_, other->securityidsource_);
  std::swap(securitytype_, other->securitytype_);
  std::swap(channelno_, other->channelno_);
  std::swap(applseqnum_, other->applseqnum_);
  std::swap(snapshotmddatetime_, other->snapshotmddatetime_);
  std::swap(numtrades_, other->numtrades_);
  std::swap(totalvolumetrade_, other->totalvolumetrade_);
  std::swap(totalvaluetrade_, other->totalvaluetrade_);
  std::swap(lastpx_, other->lastpx_);
  std::swap(highpx_, other->highpx_);
  std::swap(lowpx_, other->lowpx_);
  std::swap(totalbuyqty_, other->totalbuyqty_);
  std::swap(totalsellqty_, other->totalsellqty_);
  std::swap(weightedavgbuypx_, other->weightedavgbuypx_);
  std::swap(weightedavgsellpx_, other->weightedavgsellpx_);
  std::swap(totalbuynumber_, other->totalbuynumber_);
  std::swap(totalsellnumber_, other->totalsellnumber_);
  std::swap(numbuyorders_, other->numbuyorders_);
  std::swap(numsellorders_, other->numsellorders_);
  std::swap(exchangedate_, other->exchangedate_);
  std::swap(exchangetime_, other->exchangetime_);
  buyentries_.UnsafeArenaSwap(&other->buyentries_);
  sellentries_.UnsafeArenaSwap(&other->sellentries_);
  buymarketorders_.UnsafeArenaSwap(&other->buymarketorders_);
  sellmarketorders_.UnsafeArenaSwap(&other->sellmarketorders_);
  aftermatchedbuyentries_.UnsafeArenaSwap(&other->aftermatchedbuyentries_);
  aftermatchedsellentries_.UnsafeArenaSwap(&other->aftermatchedsellentries_);
  std::swap(datamultiplepowerof10_, other->datamultiplepowerof10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADOrderbookSnapshot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADOrderbookSnapshot_descriptor_;
  metadata.reflection = ADOrderbookSnapshot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADOrderbookSnapshot

// optional string HTSCSecurityID = 1;
void ADOrderbookSnapshot::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADOrderbookSnapshot::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADOrderbookSnapshot::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
void ADOrderbookSnapshot::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
void ADOrderbookSnapshot::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
::std::string* ADOrderbookSnapshot::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADOrderbookSnapshot::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADOrderbookSnapshot::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}

// optional int32 MDDate = 2;
void ADOrderbookSnapshot::clear_mddate() {
  mddate_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDDate)
  return mddate_;
}
void ADOrderbookSnapshot::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDDate)
}

// optional int32 MDTime = 3;
void ADOrderbookSnapshot::clear_mdtime() {
  mdtime_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDTime)
  return mdtime_;
}
void ADOrderbookSnapshot::set_mdtime(::google::protobuf::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDTime)
}

// optional int64 DataTimestamp = 4;
void ADOrderbookSnapshot::clear_datatimestamp() {
  datatimestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataTimestamp)
  return datatimestamp_;
}
void ADOrderbookSnapshot::set_datatimestamp(::google::protobuf::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataTimestamp)
}

// optional string TradingPhaseCode = 5;
void ADOrderbookSnapshot::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ADOrderbookSnapshot::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  return tradingphasecode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADOrderbookSnapshot::set_tradingphasecode(const ::std::string& value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
void ADOrderbookSnapshot::set_tradingphasecode(const char* value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
void ADOrderbookSnapshot::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
::std::string* ADOrderbookSnapshot::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ADOrderbookSnapshot::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ADOrderbookSnapshot::set_allocated_tradingphasecode(::std::string* tradingphasecode) {
  if (tradingphasecode != NULL) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
void ADOrderbookSnapshot::clear_securityidsource() {
  securityidsource_ = 0;
}
::com::htsc::mdc::model::ESecurityIDSource ADOrderbookSnapshot::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
void ADOrderbookSnapshot::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 7;
void ADOrderbookSnapshot::clear_securitytype() {
  securitytype_ = 0;
}
::com::htsc::mdc::model::ESecurityType ADOrderbookSnapshot::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
void ADOrderbookSnapshot::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityType)
}

// optional int32 ChannelNo = 8;
void ADOrderbookSnapshot::clear_channelno() {
  channelno_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::channelno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ChannelNo)
  return channelno_;
}
void ADOrderbookSnapshot::set_channelno(::google::protobuf::int32 value) {
  
  channelno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ChannelNo)
}

// optional int64 ApplSeqNum = 9;
void ADOrderbookSnapshot::clear_applseqnum() {
  applseqnum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::applseqnum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ApplSeqNum)
  return applseqnum_;
}
void ADOrderbookSnapshot::set_applseqnum(::google::protobuf::int64 value) {
  
  applseqnum_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ApplSeqNum)
}

// optional int64 SnapshotMDDateTime = 10;
void ADOrderbookSnapshot::clear_snapshotmddatetime() {
  snapshotmddatetime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::snapshotmddatetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SnapshotMDDateTime)
  return snapshotmddatetime_;
}
void ADOrderbookSnapshot::set_snapshotmddatetime(::google::protobuf::int64 value) {
  
  snapshotmddatetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SnapshotMDDateTime)
}

// optional int64 NumTrades = 11;
void ADOrderbookSnapshot::clear_numtrades() {
  numtrades_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumTrades)
  return numtrades_;
}
void ADOrderbookSnapshot::set_numtrades(::google::protobuf::int64 value) {
  
  numtrades_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumTrades)
}

// optional int64 TotalVolumeTrade = 12;
void ADOrderbookSnapshot::clear_totalvolumetrade() {
  totalvolumetrade_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalVolumeTrade)
  return totalvolumetrade_;
}
void ADOrderbookSnapshot::set_totalvolumetrade(::google::protobuf::int64 value) {
  
  totalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalVolumeTrade)
}

// optional int64 TotalValueTrade = 13;
void ADOrderbookSnapshot::clear_totalvaluetrade() {
  totalvaluetrade_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalValueTrade)
  return totalvaluetrade_;
}
void ADOrderbookSnapshot::set_totalvaluetrade(::google::protobuf::int64 value) {
  
  totalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalValueTrade)
}

// optional int64 LastPx = 14;
void ADOrderbookSnapshot::clear_lastpx() {
  lastpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LastPx)
  return lastpx_;
}
void ADOrderbookSnapshot::set_lastpx(::google::protobuf::int64 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LastPx)
}

// optional int64 HighPx = 17;
void ADOrderbookSnapshot::clear_highpx() {
  highpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HighPx)
  return highpx_;
}
void ADOrderbookSnapshot::set_highpx(::google::protobuf::int64 value) {
  
  highpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HighPx)
}

// optional int64 LowPx = 18;
void ADOrderbookSnapshot::clear_lowpx() {
  lowpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LowPx)
  return lowpx_;
}
void ADOrderbookSnapshot::set_lowpx(::google::protobuf::int64 value) {
  
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LowPx)
}

// optional int64 TotalBuyQty = 19;
void ADOrderbookSnapshot::clear_totalbuyqty() {
  totalbuyqty_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalbuyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyQty)
  return totalbuyqty_;
}
void ADOrderbookSnapshot::set_totalbuyqty(::google::protobuf::int64 value) {
  
  totalbuyqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyQty)
}

// optional int64 TotalSellQty = 20;
void ADOrderbookSnapshot::clear_totalsellqty() {
  totalsellqty_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalsellqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellQty)
  return totalsellqty_;
}
void ADOrderbookSnapshot::set_totalsellqty(::google::protobuf::int64 value) {
  
  totalsellqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellQty)
}

// optional int64 WeightedAvgBuyPx = 21;
void ADOrderbookSnapshot::clear_weightedavgbuypx() {
  weightedavgbuypx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::weightedavgbuypx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgBuyPx)
  return weightedavgbuypx_;
}
void ADOrderbookSnapshot::set_weightedavgbuypx(::google::protobuf::int64 value) {
  
  weightedavgbuypx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgBuyPx)
}

// optional int64 WeightedAvgSellPx = 22;
void ADOrderbookSnapshot::clear_weightedavgsellpx() {
  weightedavgsellpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::weightedavgsellpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgSellPx)
  return weightedavgsellpx_;
}
void ADOrderbookSnapshot::set_weightedavgsellpx(::google::protobuf::int64 value) {
  
  weightedavgsellpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgSellPx)
}

// optional int64 TotalBuyNumber = 23;
void ADOrderbookSnapshot::clear_totalbuynumber() {
  totalbuynumber_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalbuynumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyNumber)
  return totalbuynumber_;
}
void ADOrderbookSnapshot::set_totalbuynumber(::google::protobuf::int64 value) {
  
  totalbuynumber_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyNumber)
}

// optional int64 TotalSellNumber = 24;
void ADOrderbookSnapshot::clear_totalsellnumber() {
  totalsellnumber_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADOrderbookSnapshot::totalsellnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellNumber)
  return totalsellnumber_;
}
void ADOrderbookSnapshot::set_totalsellnumber(::google::protobuf::int64 value) {
  
  totalsellnumber_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellNumber)
}

// optional int32 NumBuyOrders = 25;
void ADOrderbookSnapshot::clear_numbuyorders() {
  numbuyorders_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::numbuyorders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumBuyOrders)
  return numbuyorders_;
}
void ADOrderbookSnapshot::set_numbuyorders(::google::protobuf::int32 value) {
  
  numbuyorders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumBuyOrders)
}

// optional int32 NumSellOrders = 26;
void ADOrderbookSnapshot::clear_numsellorders() {
  numsellorders_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::numsellorders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumSellOrders)
  return numsellorders_;
}
void ADOrderbookSnapshot::set_numsellorders(::google::protobuf::int32 value) {
  
  numsellorders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumSellOrders)
}

// optional int32 ExchangeDate = 27;
void ADOrderbookSnapshot::clear_exchangedate() {
  exchangedate_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeDate)
  return exchangedate_;
}
void ADOrderbookSnapshot::set_exchangedate(::google::protobuf::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeDate)
}

// optional int32 ExchangeTime = 28;
void ADOrderbookSnapshot::clear_exchangetime() {
  exchangetime_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeTime)
  return exchangetime_;
}
void ADOrderbookSnapshot::set_exchangetime(::google::protobuf::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeTime)
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
int ADOrderbookSnapshot::buyentries_size() const {
  return buyentries_.size();
}
void ADOrderbookSnapshot::clear_buyentries() {
  buyentries_.Clear();
}
const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::buyentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Get(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_buyentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_buyentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_buyentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return &buyentries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::buyentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
int ADOrderbookSnapshot::sellentries_size() const {
  return sellentries_.size();
}
void ADOrderbookSnapshot::clear_sellentries() {
  sellentries_.Clear();
}
const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::sellentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Get(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_sellentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_sellentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_sellentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return &sellentries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::sellentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_;
}

// repeated int64 BuyMarketOrders = 32 [packed = true];
int ADOrderbookSnapshot::buymarketorders_size() const {
  return buymarketorders_.size();
}
void ADOrderbookSnapshot::clear_buymarketorders() {
  buymarketorders_.Clear();
}
::google::protobuf::int64 ADOrderbookSnapshot::buymarketorders(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return buymarketorders_.Get(index);
}
void ADOrderbookSnapshot::set_buymarketorders(int index, ::google::protobuf::int64 value) {
  buymarketorders_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
}
void ADOrderbookSnapshot::add_buymarketorders(::google::protobuf::int64 value) {
  buymarketorders_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ADOrderbookSnapshot::buymarketorders() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return buymarketorders_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ADOrderbookSnapshot::mutable_buymarketorders() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return &buymarketorders_;
}

// repeated int64 SellMarketOrders = 33 [packed = true];
int ADOrderbookSnapshot::sellmarketorders_size() const {
  return sellmarketorders_.size();
}
void ADOrderbookSnapshot::clear_sellmarketorders() {
  sellmarketorders_.Clear();
}
::google::protobuf::int64 ADOrderbookSnapshot::sellmarketorders(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return sellmarketorders_.Get(index);
}
void ADOrderbookSnapshot::set_sellmarketorders(int index, ::google::protobuf::int64 value) {
  sellmarketorders_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
}
void ADOrderbookSnapshot::add_sellmarketorders(::google::protobuf::int64 value) {
  sellmarketorders_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ADOrderbookSnapshot::sellmarketorders() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return sellmarketorders_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ADOrderbookSnapshot::mutable_sellmarketorders() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return &sellmarketorders_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
int ADOrderbookSnapshot::aftermatchedbuyentries_size() const {
  return aftermatchedbuyentries_.size();
}
void ADOrderbookSnapshot::clear_aftermatchedbuyentries() {
  aftermatchedbuyentries_.Clear();
}
const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::aftermatchedbuyentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Get(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_aftermatchedbuyentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_aftermatchedbuyentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_aftermatchedbuyentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return &aftermatchedbuyentries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::aftermatchedbuyentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
int ADOrderbookSnapshot::aftermatchedsellentries_size() const {
  return aftermatchedsellentries_.size();
}
void ADOrderbookSnapshot::clear_aftermatchedsellentries() {
  aftermatchedsellentries_.Clear();
}
const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::aftermatchedsellentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Get(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_aftermatchedsellentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Mutable(index);
}
::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_aftermatchedsellentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_aftermatchedsellentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return &aftermatchedsellentries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::aftermatchedsellentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_;
}

// optional int32 DataMultiplePowerOf10 = 36;
void ADOrderbookSnapshot::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
::google::protobuf::int32 ADOrderbookSnapshot::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
void ADOrderbookSnapshot::set_datamultiplepowerof10(::google::protobuf::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataMultiplePowerOf10)
}

inline const ADOrderbookSnapshot* ADOrderbookSnapshot::internal_default_instance() {
  return &ADOrderbookSnapshot_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADEntryDetail::kLevelFieldNumber;
const int ADEntryDetail::kPriceFieldNumber;
const int ADEntryDetail::kTotalQtyFieldNumber;
const int ADEntryDetail::kNumberOfOrdersFieldNumber;
const int ADEntryDetail::kOrderQtyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADEntryDetail::ADEntryDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ADOrderbookSnapshot_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADEntryDetail)
}

void ADEntryDetail::InitAsDefaultInstance() {
}

ADEntryDetail::ADEntryDetail(const ADEntryDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADEntryDetail)
}

void ADEntryDetail::SharedCtor() {
  ::memset(&price_, 0, reinterpret_cast<char*>(&numberoforders_) -
    reinterpret_cast<char*>(&price_) + sizeof(numberoforders_));
  _cached_size_ = 0;
}

ADEntryDetail::~ADEntryDetail() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADEntryDetail)
  SharedDtor();
}

void ADEntryDetail::SharedDtor() {
}

void ADEntryDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADEntryDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADEntryDetail_descriptor_;
}

const ADEntryDetail& ADEntryDetail::default_instance() {
  protobuf_InitDefaults_ADOrderbookSnapshot_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ADEntryDetail> ADEntryDetail_default_instance_;

ADEntryDetail* ADEntryDetail::New(::google::protobuf::Arena* arena) const {
  ADEntryDetail* n = new ADEntryDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ADEntryDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADEntryDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ADEntryDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ADEntryDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(price_, numberoforders_);

#undef ZR_HELPER_
#undef ZR_

  orderqtylist_.Clear();
}

bool ADEntryDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADEntryDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Level = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Price;
        break;
      }

      // optional int64 Price = 2;
      case 2: {
        if (tag == 16) {
         parse_Price:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TotalQty;
        break;
      }

      // optional int32 TotalQty = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NumberOfOrders;
        break;
      }

      // optional int32 NumberOfOrders = 4;
      case 4: {
        if (tag == 32) {
         parse_NumberOfOrders:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numberoforders_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_OrderQtyList;
        break;
      }

      // repeated int32 OrderQtyList = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_OrderQtyList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_orderqtylist())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_orderqtylist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADEntryDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADEntryDetail)
  return false;
#undef DO_
}

void ADEntryDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADEntryDetail)
  // optional int32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // optional int64 Price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->price(), output);
  }

  // optional int32 TotalQty = 3;
  if (this->totalqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totalqty(), output);
  }

  // optional int32 NumberOfOrders = 4;
  if (this->numberoforders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->numberoforders(), output);
  }

  // repeated int32 OrderQtyList = 5 [packed = true];
  if (this->orderqtylist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_orderqtylist_cached_byte_size_);
  }
  for (int i = 0; i < this->orderqtylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->orderqtylist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADEntryDetail)
}

::google::protobuf::uint8* ADEntryDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADEntryDetail)
  // optional int32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // optional int64 Price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->price(), target);
  }

  // optional int32 TotalQty = 3;
  if (this->totalqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totalqty(), target);
  }

  // optional int32 NumberOfOrders = 4;
  if (this->numberoforders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->numberoforders(), target);
  }

  // repeated int32 OrderQtyList = 5 [packed = true];
  if (this->orderqtylist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _orderqtylist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->orderqtylist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->orderqtylist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADEntryDetail)
  return target;
}

size_t ADEntryDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADEntryDetail)
  size_t total_size = 0;

  // optional int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int64 Price = 2;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // optional int32 TotalQty = 3;
  if (this->totalqty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalqty());
  }

  // optional int32 NumberOfOrders = 4;
  if (this->numberoforders() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numberoforders());
  }

  // repeated int32 OrderQtyList = 5 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->orderqtylist_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->orderqtylist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _orderqtylist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADEntryDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADEntryDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ADEntryDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ADEntryDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADEntryDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADEntryDetail)
    UnsafeMergeFrom(*source);
  }
}

void ADEntryDetail::MergeFrom(const ADEntryDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADEntryDetail)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ADEntryDetail::UnsafeMergeFrom(const ADEntryDetail& from) {
  GOOGLE_DCHECK(&from != this);
  orderqtylist_.UnsafeMergeFrom(from.orderqtylist_);
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.totalqty() != 0) {
    set_totalqty(from.totalqty());
  }
  if (from.numberoforders() != 0) {
    set_numberoforders(from.numberoforders());
  }
}

void ADEntryDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADEntryDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADEntryDetail::CopyFrom(const ADEntryDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADEntryDetail)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ADEntryDetail::IsInitialized() const {

  return true;
}

void ADEntryDetail::Swap(ADEntryDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADEntryDetail::InternalSwap(ADEntryDetail* other) {
  std::swap(level_, other->level_);
  std::swap(price_, other->price_);
  std::swap(totalqty_, other->totalqty_);
  std::swap(numberoforders_, other->numberoforders_);
  orderqtylist_.UnsafeArenaSwap(&other->orderqtylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ADEntryDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADEntryDetail_descriptor_;
  metadata.reflection = ADEntryDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ADEntryDetail

// optional int32 Level = 1;
void ADEntryDetail::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 ADEntryDetail::level() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.Level)
  return level_;
}
void ADEntryDetail::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.Level)
}

// optional int64 Price = 2;
void ADEntryDetail::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ADEntryDetail::price() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.Price)
  return price_;
}
void ADEntryDetail::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.Price)
}

// optional int32 TotalQty = 3;
void ADEntryDetail::clear_totalqty() {
  totalqty_ = 0;
}
::google::protobuf::int32 ADEntryDetail::totalqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.TotalQty)
  return totalqty_;
}
void ADEntryDetail::set_totalqty(::google::protobuf::int32 value) {
  
  totalqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.TotalQty)
}

// optional int32 NumberOfOrders = 4;
void ADEntryDetail::clear_numberoforders() {
  numberoforders_ = 0;
}
::google::protobuf::int32 ADEntryDetail::numberoforders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.NumberOfOrders)
  return numberoforders_;
}
void ADEntryDetail::set_numberoforders(::google::protobuf::int32 value) {
  
  numberoforders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.NumberOfOrders)
}

// repeated int32 OrderQtyList = 5 [packed = true];
int ADEntryDetail::orderqtylist_size() const {
  return orderqtylist_.size();
}
void ADEntryDetail::clear_orderqtylist() {
  orderqtylist_.Clear();
}
::google::protobuf::int32 ADEntryDetail::orderqtylist(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return orderqtylist_.Get(index);
}
void ADEntryDetail::set_orderqtylist(int index, ::google::protobuf::int32 value) {
  orderqtylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
}
void ADEntryDetail::add_orderqtylist(::google::protobuf::int32 value) {
  orderqtylist_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ADEntryDetail::orderqtylist() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return orderqtylist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ADEntryDetail::mutable_orderqtylist() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return &orderqtylist_;
}

inline const ADEntryDetail* ADEntryDetail::internal_default_instance() {
  return &ADEntryDetail_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
