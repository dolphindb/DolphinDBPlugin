// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include <google/protobuf/unittest.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestAllTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_reflection_ = NULL;
struct TestAllTypesOneofInstance {
  ::google::protobuf::uint32 oneof_uint32_;
  const ::protobuf_unittest::TestAllTypes_NestedMessage* oneof_nested_message_;
  ::google::protobuf::internal::ArenaStringPtr oneof_string_;
  ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
}* TestAllTypes_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_OptionalGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_OptionalGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_RepeatedGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_RepeatedGroup_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NestedTestAllTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NestedTestAllTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDeprecatedFields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDeprecatedFields_reflection_ = NULL;
const ::google::protobuf::Descriptor* ForeignMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForeignMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestReservedFields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestReservedFields_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* OptionalGroup_extension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OptionalGroup_extension_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepeatedGroup_extension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepeatedGroup_extension_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedExtension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedExtension_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRequired_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequired_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredForeign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredForeign_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestForeignNested_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestForeignNested_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEmptyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEmptyMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEmptyMessageWithExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEmptyMessageWithExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMultipleExtensionRanges_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMultipleExtensionRanges_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestReallyLargeTagNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestReallyLargeTagNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRecursiveMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRecursiveMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMutualRecursionA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMutualRecursionA_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMutualRecursionB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMutualRecursionB_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_Foo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_Foo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_Bar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_Bar_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEagerMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEagerMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestLazyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestLazyMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedMessageHasBits_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedMessageHasBits_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestCamelCaseFieldNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestCamelCaseFieldNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldOrderings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldOrderings_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldOrderings_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldOrderings_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestExtremeDefaultValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestExtremeDefaultValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* SparseEnumMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SparseEnumMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneString_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoreString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoreString_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoreBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoreBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Int32Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Int32Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Uint32Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Uint32Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Int64Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Int64Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Uint64Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Uint64Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* BoolMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoolMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof_reflection_ = NULL;
struct TestOneofOneofInstance {
  ::google::protobuf::int32 foo_int_;
  ::google::protobuf::internal::ArenaStringPtr foo_string_;
  const ::protobuf_unittest::TestAllTypes* foo_message_;
  const ::protobuf_unittest::TestOneof_FooGroup* foogroup_;
}* TestOneof_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestOneof_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneofBackwardsCompatible_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneofBackwardsCompatible_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_reflection_ = NULL;
struct TestOneof2OneofInstance {
  ::google::protobuf::int32 foo_int_;
  ::google::protobuf::internal::ArenaStringPtr foo_string_;
  ::google::protobuf::internal::ArenaStringPtr foo_cord_;
  ::google::protobuf::internal::ArenaStringPtr foo_string_piece_;
  ::google::protobuf::internal::ArenaStringPtr foo_bytes_;
  int foo_enum_;
  const ::protobuf_unittest::TestOneof2_NestedMessage* foo_message_;
  const ::protobuf_unittest::TestOneof2_FooGroup* foogroup_;
  const ::protobuf_unittest::TestOneof2_NestedMessage* foo_lazy_message_;
  ::google::protobuf::int32 bar_int_;
  ::google::protobuf::internal::ArenaStringPtr bar_string_;
  ::google::protobuf::internal::ArenaStringPtr bar_cord_;
  ::google::protobuf::internal::ArenaStringPtr bar_string_piece_;
  ::google::protobuf::internal::ArenaStringPtr bar_bytes_;
  int bar_enum_;
}* TestOneof2_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_NestedMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestOneof2_NestedEnum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredOneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredOneof_reflection_ = NULL;
struct TestRequiredOneofOneofInstance {
  ::google::protobuf::int32 foo_int_;
  ::google::protobuf::internal::ArenaStringPtr foo_string_;
  const ::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_message_;
}* TestRequiredOneof_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredOneof_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredOneof_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestPackedTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestPackedTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestUnpackedTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestUnpackedTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestPackedExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestPackedExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestUnpackedExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestUnpackedExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDynamicExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDynamicExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDynamicExtensions_DynamicMessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDynamicExtensions_DynamicMessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestDynamicExtensions_DynamicEnumType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestRepeatedScalarDifferentTagSizes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRepeatedScalarDifferentTagSizes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_OptionalGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_OptionalGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestCommentInjectionMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestCommentInjectionMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooClientMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooClientMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooServerMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooServerMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BarRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BarRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BarResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BarResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestJsonName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestJsonName_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestEnumWithDupValue_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestSparseEnum_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* TestService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2funittest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fprotobuf_2funittest_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/unittest.proto");
  GOOGLE_CHECK(file != NULL);
  TestAllTypes_descriptor_ = file->message_type(0);
  static const int TestAllTypes_offsets_[76] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optionalgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_nested_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_foreign_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_cord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_public_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_lazy_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeatedgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_nested_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_foreign_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_cord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_lazy_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_uint32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_nested_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, oneof_field_),
  };
  TestAllTypes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestAllTypes_descriptor_,
      TestAllTypes::internal_default_instance(),
      TestAllTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _has_bits_),
      -1,
      -1,
      TestAllTypes_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _oneof_case_[0]),
      sizeof(TestAllTypes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _internal_metadata_));
  TestAllTypes_NestedMessage_descriptor_ = TestAllTypes_descriptor_->nested_type(0);
  static const int TestAllTypes_NestedMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, bb_),
  };
  TestAllTypes_NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestAllTypes_NestedMessage_descriptor_,
      TestAllTypes_NestedMessage::internal_default_instance(),
      TestAllTypes_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestAllTypes_NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, _internal_metadata_));
  TestAllTypes_OptionalGroup_descriptor_ = TestAllTypes_descriptor_->nested_type(1);
  static const int TestAllTypes_OptionalGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, a_),
  };
  TestAllTypes_OptionalGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestAllTypes_OptionalGroup_descriptor_,
      TestAllTypes_OptionalGroup::internal_default_instance(),
      TestAllTypes_OptionalGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestAllTypes_OptionalGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, _internal_metadata_));
  TestAllTypes_RepeatedGroup_descriptor_ = TestAllTypes_descriptor_->nested_type(2);
  static const int TestAllTypes_RepeatedGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, a_),
  };
  TestAllTypes_RepeatedGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestAllTypes_RepeatedGroup_descriptor_,
      TestAllTypes_RepeatedGroup::internal_default_instance(),
      TestAllTypes_RepeatedGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestAllTypes_RepeatedGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _internal_metadata_));
  TestAllTypes_NestedEnum_descriptor_ = TestAllTypes_descriptor_->enum_type(0);
  NestedTestAllTypes_descriptor_ = file->message_type(1);
  static const int NestedTestAllTypes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, child_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, repeated_child_),
  };
  NestedTestAllTypes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NestedTestAllTypes_descriptor_,
      NestedTestAllTypes::internal_default_instance(),
      NestedTestAllTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, _has_bits_),
      -1,
      -1,
      sizeof(NestedTestAllTypes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, _internal_metadata_));
  TestDeprecatedFields_descriptor_ = file->message_type(2);
  static const int TestDeprecatedFields_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, deprecated_int32_),
  };
  TestDeprecatedFields_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDeprecatedFields_descriptor_,
      TestDeprecatedFields::internal_default_instance(),
      TestDeprecatedFields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, _has_bits_),
      -1,
      -1,
      sizeof(TestDeprecatedFields),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, _internal_metadata_));
  ForeignMessage_descriptor_ = file->message_type(3);
  static const int ForeignMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, d_),
  };
  ForeignMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ForeignMessage_descriptor_,
      ForeignMessage::internal_default_instance(),
      ForeignMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, _has_bits_),
      -1,
      -1,
      sizeof(ForeignMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, _internal_metadata_));
  TestReservedFields_descriptor_ = file->message_type(4);
  static const int TestReservedFields_offsets_[1] = {
  };
  TestReservedFields_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestReservedFields_descriptor_,
      TestReservedFields::internal_default_instance(),
      TestReservedFields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReservedFields, _has_bits_),
      -1,
      -1,
      sizeof(TestReservedFields),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReservedFields, _internal_metadata_));
  TestAllExtensions_descriptor_ = file->message_type(5);
  static const int TestAllExtensions_offsets_[1] = {
  };
  TestAllExtensions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestAllExtensions_descriptor_,
      TestAllExtensions::internal_default_instance(),
      TestAllExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _extensions_),
      sizeof(TestAllExtensions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _internal_metadata_));
  OptionalGroup_extension_descriptor_ = file->message_type(6);
  static const int OptionalGroup_extension_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, a_),
  };
  OptionalGroup_extension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OptionalGroup_extension_descriptor_,
      OptionalGroup_extension::internal_default_instance(),
      OptionalGroup_extension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, _has_bits_),
      -1,
      -1,
      sizeof(OptionalGroup_extension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, _internal_metadata_));
  RepeatedGroup_extension_descriptor_ = file->message_type(7);
  static const int RepeatedGroup_extension_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, a_),
  };
  RepeatedGroup_extension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RepeatedGroup_extension_descriptor_,
      RepeatedGroup_extension::internal_default_instance(),
      RepeatedGroup_extension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, _has_bits_),
      -1,
      -1,
      sizeof(RepeatedGroup_extension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, _internal_metadata_));
  TestNestedExtension_descriptor_ = file->message_type(8);
  static const int TestNestedExtension_offsets_[1] = {
  };
  TestNestedExtension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestNestedExtension_descriptor_,
      TestNestedExtension::internal_default_instance(),
      TestNestedExtension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedExtension, _has_bits_),
      -1,
      -1,
      sizeof(TestNestedExtension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedExtension, _internal_metadata_));
  TestRequired_descriptor_ = file->message_type(9);
  static const int TestRequired_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy24_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy26_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy27_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy28_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy29_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy31_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, c_),
  };
  TestRequired_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRequired_descriptor_,
      TestRequired::internal_default_instance(),
      TestRequired_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, _has_bits_),
      -1,
      -1,
      sizeof(TestRequired),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, _internal_metadata_));
  TestRequiredForeign_descriptor_ = file->message_type(10);
  static const int TestRequiredForeign_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, optional_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, repeated_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, dummy_),
  };
  TestRequiredForeign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRequiredForeign_descriptor_,
      TestRequiredForeign::internal_default_instance(),
      TestRequiredForeign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, _has_bits_),
      -1,
      -1,
      sizeof(TestRequiredForeign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, _internal_metadata_));
  TestForeignNested_descriptor_ = file->message_type(11);
  static const int TestForeignNested_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, foreign_nested_),
  };
  TestForeignNested_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestForeignNested_descriptor_,
      TestForeignNested::internal_default_instance(),
      TestForeignNested_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, _has_bits_),
      -1,
      -1,
      sizeof(TestForeignNested),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, _internal_metadata_));
  TestEmptyMessage_descriptor_ = file->message_type(12);
  static const int TestEmptyMessage_offsets_[1] = {
  };
  TestEmptyMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestEmptyMessage_descriptor_,
      TestEmptyMessage::internal_default_instance(),
      TestEmptyMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestEmptyMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessage, _internal_metadata_));
  TestEmptyMessageWithExtensions_descriptor_ = file->message_type(13);
  static const int TestEmptyMessageWithExtensions_offsets_[1] = {
  };
  TestEmptyMessageWithExtensions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestEmptyMessageWithExtensions_descriptor_,
      TestEmptyMessageWithExtensions::internal_default_instance(),
      TestEmptyMessageWithExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _extensions_),
      sizeof(TestEmptyMessageWithExtensions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _internal_metadata_));
  TestMultipleExtensionRanges_descriptor_ = file->message_type(14);
  static const int TestMultipleExtensionRanges_offsets_[1] = {
  };
  TestMultipleExtensionRanges_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestMultipleExtensionRanges_descriptor_,
      TestMultipleExtensionRanges::internal_default_instance(),
      TestMultipleExtensionRanges_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _extensions_),
      sizeof(TestMultipleExtensionRanges),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _internal_metadata_));
  TestReallyLargeTagNumber_descriptor_ = file->message_type(15);
  static const int TestReallyLargeTagNumber_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, bb_),
  };
  TestReallyLargeTagNumber_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestReallyLargeTagNumber_descriptor_,
      TestReallyLargeTagNumber::internal_default_instance(),
      TestReallyLargeTagNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, _has_bits_),
      -1,
      -1,
      sizeof(TestReallyLargeTagNumber),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, _internal_metadata_));
  TestRecursiveMessage_descriptor_ = file->message_type(16);
  static const int TestRecursiveMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, i_),
  };
  TestRecursiveMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRecursiveMessage_descriptor_,
      TestRecursiveMessage::internal_default_instance(),
      TestRecursiveMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestRecursiveMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, _internal_metadata_));
  TestMutualRecursionA_descriptor_ = file->message_type(17);
  static const int TestMutualRecursionA_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, bb_),
  };
  TestMutualRecursionA_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestMutualRecursionA_descriptor_,
      TestMutualRecursionA::internal_default_instance(),
      TestMutualRecursionA_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, _has_bits_),
      -1,
      -1,
      sizeof(TestMutualRecursionA),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, _internal_metadata_));
  TestMutualRecursionB_descriptor_ = file->message_type(18);
  static const int TestMutualRecursionB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, optional_int32_),
  };
  TestMutualRecursionB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestMutualRecursionB_descriptor_,
      TestMutualRecursionB::internal_default_instance(),
      TestMutualRecursionB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, _has_bits_),
      -1,
      -1,
      sizeof(TestMutualRecursionB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, _internal_metadata_));
  TestDupFieldNumber_descriptor_ = file->message_type(19);
  static const int TestDupFieldNumber_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, foo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, bar_),
  };
  TestDupFieldNumber_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDupFieldNumber_descriptor_,
      TestDupFieldNumber::internal_default_instance(),
      TestDupFieldNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, _has_bits_),
      -1,
      -1,
      sizeof(TestDupFieldNumber),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, _internal_metadata_));
  TestDupFieldNumber_Foo_descriptor_ = TestDupFieldNumber_descriptor_->nested_type(0);
  static const int TestDupFieldNumber_Foo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, a_),
  };
  TestDupFieldNumber_Foo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDupFieldNumber_Foo_descriptor_,
      TestDupFieldNumber_Foo::internal_default_instance(),
      TestDupFieldNumber_Foo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, _has_bits_),
      -1,
      -1,
      sizeof(TestDupFieldNumber_Foo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, _internal_metadata_));
  TestDupFieldNumber_Bar_descriptor_ = TestDupFieldNumber_descriptor_->nested_type(1);
  static const int TestDupFieldNumber_Bar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, a_),
  };
  TestDupFieldNumber_Bar_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDupFieldNumber_Bar_descriptor_,
      TestDupFieldNumber_Bar::internal_default_instance(),
      TestDupFieldNumber_Bar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, _has_bits_),
      -1,
      -1,
      sizeof(TestDupFieldNumber_Bar),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, _internal_metadata_));
  TestEagerMessage_descriptor_ = file->message_type(20);
  static const int TestEagerMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, sub_message_),
  };
  TestEagerMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestEagerMessage_descriptor_,
      TestEagerMessage::internal_default_instance(),
      TestEagerMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestEagerMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, _internal_metadata_));
  TestLazyMessage_descriptor_ = file->message_type(21);
  static const int TestLazyMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, sub_message_),
  };
  TestLazyMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestLazyMessage_descriptor_,
      TestLazyMessage::internal_default_instance(),
      TestLazyMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestLazyMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, _internal_metadata_));
  TestNestedMessageHasBits_descriptor_ = file->message_type(22);
  static const int TestNestedMessageHasBits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, optional_nested_message_),
  };
  TestNestedMessageHasBits_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestNestedMessageHasBits_descriptor_,
      TestNestedMessageHasBits::internal_default_instance(),
      TestNestedMessageHasBits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, _has_bits_),
      -1,
      -1,
      sizeof(TestNestedMessageHasBits),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, _internal_metadata_));
  TestNestedMessageHasBits_NestedMessage_descriptor_ = TestNestedMessageHasBits_descriptor_->nested_type(0);
  static const int TestNestedMessageHasBits_NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, nestedmessage_repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, nestedmessage_repeated_foreignmessage_),
  };
  TestNestedMessageHasBits_NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestNestedMessageHasBits_NestedMessage_descriptor_,
      TestNestedMessageHasBits_NestedMessage::internal_default_instance(),
      TestNestedMessageHasBits_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestNestedMessageHasBits_NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _internal_metadata_));
  TestCamelCaseFieldNames_descriptor_ = file->message_type(23);
  static const int TestCamelCaseFieldNames_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, primitivefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, stringfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, enumfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, messagefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, stringpiecefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, cordfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedprimitivefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedstringfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedenumfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedmessagefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedstringpiecefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedcordfield_),
  };
  TestCamelCaseFieldNames_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestCamelCaseFieldNames_descriptor_,
      TestCamelCaseFieldNames::internal_default_instance(),
      TestCamelCaseFieldNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, _has_bits_),
      -1,
      -1,
      sizeof(TestCamelCaseFieldNames),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, _internal_metadata_));
  TestFieldOrderings_descriptor_ = file->message_type(24);
  static const int TestFieldOrderings_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, optional_nested_message_),
  };
  TestFieldOrderings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestFieldOrderings_descriptor_,
      TestFieldOrderings::internal_default_instance(),
      TestFieldOrderings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _extensions_),
      sizeof(TestFieldOrderings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _internal_metadata_));
  TestFieldOrderings_NestedMessage_descriptor_ = TestFieldOrderings_descriptor_->nested_type(0);
  static const int TestFieldOrderings_NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings_NestedMessage, oo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings_NestedMessage, bb_),
  };
  TestFieldOrderings_NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestFieldOrderings_NestedMessage_descriptor_,
      TestFieldOrderings_NestedMessage::internal_default_instance(),
      TestFieldOrderings_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestFieldOrderings_NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _internal_metadata_));
  TestExtremeDefaultValues_descriptor_ = file->message_type(25);
  static const int TestExtremeDefaultValues_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, escaped_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, really_small_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, really_small_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, utf8_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, zero_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, one_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, negative_one_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, negative_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_negative_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, inf_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, neg_inf_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, nan_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, inf_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, neg_inf_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, nan_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, cpp_trigraph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, string_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, bytes_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, string_piece_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, cord_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, replacement_string_),
  };
  TestExtremeDefaultValues_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestExtremeDefaultValues_descriptor_,
      TestExtremeDefaultValues::internal_default_instance(),
      TestExtremeDefaultValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, _has_bits_),
      -1,
      -1,
      sizeof(TestExtremeDefaultValues),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, _internal_metadata_));
  SparseEnumMessage_descriptor_ = file->message_type(26);
  static const int SparseEnumMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, sparse_enum_),
  };
  SparseEnumMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SparseEnumMessage_descriptor_,
      SparseEnumMessage::internal_default_instance(),
      SparseEnumMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, _has_bits_),
      -1,
      -1,
      sizeof(SparseEnumMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, _internal_metadata_));
  OneString_descriptor_ = file->message_type(27);
  static const int OneString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, data_),
  };
  OneString_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OneString_descriptor_,
      OneString::internal_default_instance(),
      OneString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, _has_bits_),
      -1,
      -1,
      sizeof(OneString),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, _internal_metadata_));
  MoreString_descriptor_ = file->message_type(28);
  static const int MoreString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, data_),
  };
  MoreString_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MoreString_descriptor_,
      MoreString::internal_default_instance(),
      MoreString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, _has_bits_),
      -1,
      -1,
      sizeof(MoreString),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, _internal_metadata_));
  OneBytes_descriptor_ = file->message_type(29);
  static const int OneBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, data_),
  };
  OneBytes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OneBytes_descriptor_,
      OneBytes::internal_default_instance(),
      OneBytes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, _has_bits_),
      -1,
      -1,
      sizeof(OneBytes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, _internal_metadata_));
  MoreBytes_descriptor_ = file->message_type(30);
  static const int MoreBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, data_),
  };
  MoreBytes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MoreBytes_descriptor_,
      MoreBytes::internal_default_instance(),
      MoreBytes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, _has_bits_),
      -1,
      -1,
      sizeof(MoreBytes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, _internal_metadata_));
  Int32Message_descriptor_ = file->message_type(31);
  static const int Int32Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, data_),
  };
  Int32Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Int32Message_descriptor_,
      Int32Message::internal_default_instance(),
      Int32Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, _has_bits_),
      -1,
      -1,
      sizeof(Int32Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, _internal_metadata_));
  Uint32Message_descriptor_ = file->message_type(32);
  static const int Uint32Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, data_),
  };
  Uint32Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Uint32Message_descriptor_,
      Uint32Message::internal_default_instance(),
      Uint32Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, _has_bits_),
      -1,
      -1,
      sizeof(Uint32Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, _internal_metadata_));
  Int64Message_descriptor_ = file->message_type(33);
  static const int Int64Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, data_),
  };
  Int64Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Int64Message_descriptor_,
      Int64Message::internal_default_instance(),
      Int64Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, _has_bits_),
      -1,
      -1,
      sizeof(Int64Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, _internal_metadata_));
  Uint64Message_descriptor_ = file->message_type(34);
  static const int Uint64Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, data_),
  };
  Uint64Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Uint64Message_descriptor_,
      Uint64Message::internal_default_instance(),
      Uint64Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, _has_bits_),
      -1,
      -1,
      sizeof(Uint64Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, _internal_metadata_));
  BoolMessage_descriptor_ = file->message_type(35);
  static const int BoolMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, data_),
  };
  BoolMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BoolMessage_descriptor_,
      BoolMessage::internal_default_instance(),
      BoolMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, _has_bits_),
      -1,
      -1,
      sizeof(BoolMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, _internal_metadata_));
  TestOneof_descriptor_ = file->message_type(36);
  static const int TestOneof_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foogroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, foo_),
  };
  TestOneof_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneof_descriptor_,
      TestOneof::internal_default_instance(),
      TestOneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _has_bits_),
      -1,
      -1,
      TestOneof_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _oneof_case_[0]),
      sizeof(TestOneof),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _internal_metadata_));
  TestOneof_FooGroup_descriptor_ = TestOneof_descriptor_->nested_type(0);
  static const int TestOneof_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, b_),
  };
  TestOneof_FooGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneof_FooGroup_descriptor_,
      TestOneof_FooGroup::internal_default_instance(),
      TestOneof_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestOneof_FooGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, _internal_metadata_));
  TestOneofBackwardsCompatible_descriptor_ = file->message_type(37);
  static const int TestOneofBackwardsCompatible_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foogroup_),
  };
  TestOneofBackwardsCompatible_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneofBackwardsCompatible_descriptor_,
      TestOneofBackwardsCompatible::internal_default_instance(),
      TestOneofBackwardsCompatible_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, _has_bits_),
      -1,
      -1,
      sizeof(TestOneofBackwardsCompatible),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, _internal_metadata_));
  TestOneofBackwardsCompatible_FooGroup_descriptor_ = TestOneofBackwardsCompatible_descriptor_->nested_type(0);
  static const int TestOneofBackwardsCompatible_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, b_),
  };
  TestOneofBackwardsCompatible_FooGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneofBackwardsCompatible_FooGroup_descriptor_,
      TestOneofBackwardsCompatible_FooGroup::internal_default_instance(),
      TestOneofBackwardsCompatible_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestOneofBackwardsCompatible_FooGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _internal_metadata_));
  TestOneof2_descriptor_ = file->message_type(38);
  static const int TestOneof2_offsets_[19] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_string_piece_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_bytes_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_enum_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foogroup_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_lazy_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_string_piece_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_bytes_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, baz_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, baz_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, foo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, bar_),
  };
  TestOneof2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneof2_descriptor_,
      TestOneof2::internal_default_instance(),
      TestOneof2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _has_bits_),
      -1,
      -1,
      TestOneof2_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _oneof_case_[0]),
      sizeof(TestOneof2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _internal_metadata_));
  TestOneof2_FooGroup_descriptor_ = TestOneof2_descriptor_->nested_type(0);
  static const int TestOneof2_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, b_),
  };
  TestOneof2_FooGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneof2_FooGroup_descriptor_,
      TestOneof2_FooGroup::internal_default_instance(),
      TestOneof2_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestOneof2_FooGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, _internal_metadata_));
  TestOneof2_NestedMessage_descriptor_ = TestOneof2_descriptor_->nested_type(1);
  static const int TestOneof2_NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, qux_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, corge_int_),
  };
  TestOneof2_NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestOneof2_NestedMessage_descriptor_,
      TestOneof2_NestedMessage::internal_default_instance(),
      TestOneof2_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestOneof2_NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, _internal_metadata_));
  TestOneof2_NestedEnum_descriptor_ = TestOneof2_descriptor_->enum_type(0);
  TestRequiredOneof_descriptor_ = file->message_type(39);
  static const int TestRequiredOneof_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, foo_),
  };
  TestRequiredOneof_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRequiredOneof_descriptor_,
      TestRequiredOneof::internal_default_instance(),
      TestRequiredOneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _has_bits_),
      -1,
      -1,
      TestRequiredOneof_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _oneof_case_[0]),
      sizeof(TestRequiredOneof),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _internal_metadata_));
  TestRequiredOneof_NestedMessage_descriptor_ = TestRequiredOneof_descriptor_->nested_type(0);
  static const int TestRequiredOneof_NestedMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, required_double_),
  };
  TestRequiredOneof_NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRequiredOneof_NestedMessage_descriptor_,
      TestRequiredOneof_NestedMessage::internal_default_instance(),
      TestRequiredOneof_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestRequiredOneof_NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _internal_metadata_));
  TestPackedTypes_descriptor_ = file->message_type(40);
  static const int TestPackedTypes_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_enum_),
  };
  TestPackedTypes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestPackedTypes_descriptor_,
      TestPackedTypes::internal_default_instance(),
      TestPackedTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, _has_bits_),
      -1,
      -1,
      sizeof(TestPackedTypes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, _internal_metadata_));
  TestUnpackedTypes_descriptor_ = file->message_type(41);
  static const int TestUnpackedTypes_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_enum_),
  };
  TestUnpackedTypes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestUnpackedTypes_descriptor_,
      TestUnpackedTypes::internal_default_instance(),
      TestUnpackedTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, _has_bits_),
      -1,
      -1,
      sizeof(TestUnpackedTypes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, _internal_metadata_));
  TestPackedExtensions_descriptor_ = file->message_type(42);
  static const int TestPackedExtensions_offsets_[1] = {
  };
  TestPackedExtensions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestPackedExtensions_descriptor_,
      TestPackedExtensions::internal_default_instance(),
      TestPackedExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _extensions_),
      sizeof(TestPackedExtensions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _internal_metadata_));
  TestUnpackedExtensions_descriptor_ = file->message_type(43);
  static const int TestUnpackedExtensions_offsets_[1] = {
  };
  TestUnpackedExtensions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestUnpackedExtensions_descriptor_,
      TestUnpackedExtensions::internal_default_instance(),
      TestUnpackedExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _extensions_),
      sizeof(TestUnpackedExtensions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _internal_metadata_));
  TestDynamicExtensions_descriptor_ = file->message_type(44);
  static const int TestDynamicExtensions_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, scalar_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, enum_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, dynamic_enum_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, message_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, dynamic_message_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, repeated_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, packed_extension_),
  };
  TestDynamicExtensions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDynamicExtensions_descriptor_,
      TestDynamicExtensions::internal_default_instance(),
      TestDynamicExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, _has_bits_),
      -1,
      -1,
      sizeof(TestDynamicExtensions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, _internal_metadata_));
  TestDynamicExtensions_DynamicMessageType_descriptor_ = TestDynamicExtensions_descriptor_->nested_type(0);
  static const int TestDynamicExtensions_DynamicMessageType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, dynamic_field_),
  };
  TestDynamicExtensions_DynamicMessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestDynamicExtensions_DynamicMessageType_descriptor_,
      TestDynamicExtensions_DynamicMessageType::internal_default_instance(),
      TestDynamicExtensions_DynamicMessageType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _has_bits_),
      -1,
      -1,
      sizeof(TestDynamicExtensions_DynamicMessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _internal_metadata_));
  TestDynamicExtensions_DynamicEnumType_descriptor_ = TestDynamicExtensions_descriptor_->enum_type(0);
  TestRepeatedScalarDifferentTagSizes_descriptor_ = file->message_type(45);
  static const int TestRepeatedScalarDifferentTagSizes_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_uint64_),
  };
  TestRepeatedScalarDifferentTagSizes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestRepeatedScalarDifferentTagSizes_descriptor_,
      TestRepeatedScalarDifferentTagSizes::internal_default_instance(),
      TestRepeatedScalarDifferentTagSizes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _has_bits_),
      -1,
      -1,
      sizeof(TestRepeatedScalarDifferentTagSizes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _internal_metadata_));
  TestParsingMerge_descriptor_ = file->message_type(46);
  static const int TestParsingMerge_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, required_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, optional_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, repeated_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, optionalgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, repeatedgroup_),
  };
  TestParsingMerge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_descriptor_,
      TestParsingMerge::internal_default_instance(),
      TestParsingMerge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _extensions_),
      sizeof(TestParsingMerge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _internal_metadata_));
  TestParsingMerge_RepeatedFieldsGenerator_descriptor_ = TestParsingMerge_descriptor_->nested_type(0);
  static const int TestParsingMerge_RepeatedFieldsGenerator_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, group1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, group2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, ext1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, ext2_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator::internal_default_instance(),
      TestParsingMerge_RepeatedFieldsGenerator_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _has_bits_),
      -1,
      -1,
      sizeof(TestParsingMerge_RepeatedFieldsGenerator),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _internal_metadata_));
  TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_ = TestParsingMerge_RepeatedFieldsGenerator_descriptor_->nested_type(0);
  static const int TestParsingMerge_RepeatedFieldsGenerator_Group1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, field1_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator_Group1::internal_default_instance(),
      TestParsingMerge_RepeatedFieldsGenerator_Group1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _has_bits_),
      -1,
      -1,
      sizeof(TestParsingMerge_RepeatedFieldsGenerator_Group1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _internal_metadata_));
  TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_ = TestParsingMerge_RepeatedFieldsGenerator_descriptor_->nested_type(1);
  static const int TestParsingMerge_RepeatedFieldsGenerator_Group2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, field1_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator_Group2::internal_default_instance(),
      TestParsingMerge_RepeatedFieldsGenerator_Group2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _has_bits_),
      -1,
      -1,
      sizeof(TestParsingMerge_RepeatedFieldsGenerator_Group2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _internal_metadata_));
  TestParsingMerge_OptionalGroup_descriptor_ = TestParsingMerge_descriptor_->nested_type(1);
  static const int TestParsingMerge_OptionalGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, optional_group_all_types_),
  };
  TestParsingMerge_OptionalGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_OptionalGroup_descriptor_,
      TestParsingMerge_OptionalGroup::internal_default_instance(),
      TestParsingMerge_OptionalGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestParsingMerge_OptionalGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _internal_metadata_));
  TestParsingMerge_RepeatedGroup_descriptor_ = TestParsingMerge_descriptor_->nested_type(2);
  static const int TestParsingMerge_RepeatedGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, repeated_group_all_types_),
  };
  TestParsingMerge_RepeatedGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParsingMerge_RepeatedGroup_descriptor_,
      TestParsingMerge_RepeatedGroup::internal_default_instance(),
      TestParsingMerge_RepeatedGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _has_bits_),
      -1,
      -1,
      sizeof(TestParsingMerge_RepeatedGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _internal_metadata_));
  TestCommentInjectionMessage_descriptor_ = file->message_type(47);
  static const int TestCommentInjectionMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, a_),
  };
  TestCommentInjectionMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestCommentInjectionMessage_descriptor_,
      TestCommentInjectionMessage::internal_default_instance(),
      TestCommentInjectionMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, _has_bits_),
      -1,
      -1,
      sizeof(TestCommentInjectionMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, _internal_metadata_));
  FooRequest_descriptor_ = file->message_type(48);
  static const int FooRequest_offsets_[1] = {
  };
  FooRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FooRequest_descriptor_,
      FooRequest::internal_default_instance(),
      FooRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooRequest, _has_bits_),
      -1,
      -1,
      sizeof(FooRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooRequest, _internal_metadata_));
  FooResponse_descriptor_ = file->message_type(49);
  static const int FooResponse_offsets_[1] = {
  };
  FooResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FooResponse_descriptor_,
      FooResponse::internal_default_instance(),
      FooResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooResponse, _has_bits_),
      -1,
      -1,
      sizeof(FooResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooResponse, _internal_metadata_));
  FooClientMessage_descriptor_ = file->message_type(50);
  static const int FooClientMessage_offsets_[1] = {
  };
  FooClientMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FooClientMessage_descriptor_,
      FooClientMessage::internal_default_instance(),
      FooClientMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooClientMessage, _has_bits_),
      -1,
      -1,
      sizeof(FooClientMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooClientMessage, _internal_metadata_));
  FooServerMessage_descriptor_ = file->message_type(51);
  static const int FooServerMessage_offsets_[1] = {
  };
  FooServerMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FooServerMessage_descriptor_,
      FooServerMessage::internal_default_instance(),
      FooServerMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooServerMessage, _has_bits_),
      -1,
      -1,
      sizeof(FooServerMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooServerMessage, _internal_metadata_));
  BarRequest_descriptor_ = file->message_type(52);
  static const int BarRequest_offsets_[1] = {
  };
  BarRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BarRequest_descriptor_,
      BarRequest::internal_default_instance(),
      BarRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarRequest, _has_bits_),
      -1,
      -1,
      sizeof(BarRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarRequest, _internal_metadata_));
  BarResponse_descriptor_ = file->message_type(53);
  static const int BarResponse_offsets_[1] = {
  };
  BarResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BarResponse_descriptor_,
      BarResponse::internal_default_instance(),
      BarResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarResponse, _has_bits_),
      -1,
      -1,
      sizeof(BarResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarResponse, _internal_metadata_));
  TestJsonName_descriptor_ = file->message_type(54);
  static const int TestJsonName_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, field_name1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, fieldname2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, fieldname3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, _field_name4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, field_name5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, field_name6_),
  };
  TestJsonName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestJsonName_descriptor_,
      TestJsonName::internal_default_instance(),
      TestJsonName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, _has_bits_),
      -1,
      -1,
      sizeof(TestJsonName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestJsonName, _internal_metadata_));
  ForeignEnum_descriptor_ = file->enum_type(0);
  TestEnumWithDupValue_descriptor_ = file->enum_type(1);
  TestSparseEnum_descriptor_ = file->enum_type(2);
  TestService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2funittest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestAllTypes_descriptor_, TestAllTypes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestAllTypes_NestedMessage_descriptor_, TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestAllTypes_OptionalGroup_descriptor_, TestAllTypes_OptionalGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestAllTypes_RepeatedGroup_descriptor_, TestAllTypes_RepeatedGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NestedTestAllTypes_descriptor_, NestedTestAllTypes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDeprecatedFields_descriptor_, TestDeprecatedFields::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ForeignMessage_descriptor_, ForeignMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestReservedFields_descriptor_, TestReservedFields::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestAllExtensions_descriptor_, TestAllExtensions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OptionalGroup_extension_descriptor_, OptionalGroup_extension::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RepeatedGroup_extension_descriptor_, RepeatedGroup_extension::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestNestedExtension_descriptor_, TestNestedExtension::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRequired_descriptor_, TestRequired::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRequiredForeign_descriptor_, TestRequiredForeign::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestForeignNested_descriptor_, TestForeignNested::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestEmptyMessage_descriptor_, TestEmptyMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestEmptyMessageWithExtensions_descriptor_, TestEmptyMessageWithExtensions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestMultipleExtensionRanges_descriptor_, TestMultipleExtensionRanges::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestReallyLargeTagNumber_descriptor_, TestReallyLargeTagNumber::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRecursiveMessage_descriptor_, TestRecursiveMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestMutualRecursionA_descriptor_, TestMutualRecursionA::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestMutualRecursionB_descriptor_, TestMutualRecursionB::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDupFieldNumber_descriptor_, TestDupFieldNumber::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDupFieldNumber_Foo_descriptor_, TestDupFieldNumber_Foo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDupFieldNumber_Bar_descriptor_, TestDupFieldNumber_Bar::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestEagerMessage_descriptor_, TestEagerMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestLazyMessage_descriptor_, TestLazyMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestNestedMessageHasBits_descriptor_, TestNestedMessageHasBits::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestNestedMessageHasBits_NestedMessage_descriptor_, TestNestedMessageHasBits_NestedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestCamelCaseFieldNames_descriptor_, TestCamelCaseFieldNames::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestFieldOrderings_descriptor_, TestFieldOrderings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestFieldOrderings_NestedMessage_descriptor_, TestFieldOrderings_NestedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestExtremeDefaultValues_descriptor_, TestExtremeDefaultValues::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SparseEnumMessage_descriptor_, SparseEnumMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OneString_descriptor_, OneString::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MoreString_descriptor_, MoreString::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OneBytes_descriptor_, OneBytes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MoreBytes_descriptor_, MoreBytes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Int32Message_descriptor_, Int32Message::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Uint32Message_descriptor_, Uint32Message::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Int64Message_descriptor_, Int64Message::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Uint64Message_descriptor_, Uint64Message::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BoolMessage_descriptor_, BoolMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneof_descriptor_, TestOneof::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneof_FooGroup_descriptor_, TestOneof_FooGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneofBackwardsCompatible_descriptor_, TestOneofBackwardsCompatible::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneofBackwardsCompatible_FooGroup_descriptor_, TestOneofBackwardsCompatible_FooGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneof2_descriptor_, TestOneof2::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneof2_FooGroup_descriptor_, TestOneof2_FooGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestOneof2_NestedMessage_descriptor_, TestOneof2_NestedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRequiredOneof_descriptor_, TestRequiredOneof::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRequiredOneof_NestedMessage_descriptor_, TestRequiredOneof_NestedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestPackedTypes_descriptor_, TestPackedTypes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestUnpackedTypes_descriptor_, TestUnpackedTypes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestPackedExtensions_descriptor_, TestPackedExtensions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestUnpackedExtensions_descriptor_, TestUnpackedExtensions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDynamicExtensions_descriptor_, TestDynamicExtensions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestDynamicExtensions_DynamicMessageType_descriptor_, TestDynamicExtensions_DynamicMessageType::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestRepeatedScalarDifferentTagSizes_descriptor_, TestRepeatedScalarDifferentTagSizes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_descriptor_, TestParsingMerge::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_RepeatedFieldsGenerator_descriptor_, TestParsingMerge_RepeatedFieldsGenerator::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_, TestParsingMerge_RepeatedFieldsGenerator_Group1::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_, TestParsingMerge_RepeatedFieldsGenerator_Group2::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_OptionalGroup_descriptor_, TestParsingMerge_OptionalGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParsingMerge_RepeatedGroup_descriptor_, TestParsingMerge_RepeatedGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestCommentInjectionMessage_descriptor_, TestCommentInjectionMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FooRequest_descriptor_, FooRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FooResponse_descriptor_, FooResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FooClientMessage_descriptor_, FooClientMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FooServerMessage_descriptor_, FooServerMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BarRequest_descriptor_, BarRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BarResponse_descriptor_, BarResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestJsonName_descriptor_, TestJsonName::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2funittest_2eproto() {
  TestAllTypes_default_instance_.Shutdown();
  delete TestAllTypes_default_oneof_instance_;
  delete TestAllTypes_reflection_;
  delete TestAllTypes::_default_default_string_;
  delete TestAllTypes::_default_default_bytes_;
  delete TestAllTypes::_default_default_string_piece_;
  delete TestAllTypes::_default_default_cord_;
  TestAllTypes_NestedMessage_default_instance_.Shutdown();
  delete TestAllTypes_NestedMessage_reflection_;
  TestAllTypes_OptionalGroup_default_instance_.Shutdown();
  delete TestAllTypes_OptionalGroup_reflection_;
  TestAllTypes_RepeatedGroup_default_instance_.Shutdown();
  delete TestAllTypes_RepeatedGroup_reflection_;
  NestedTestAllTypes_default_instance_.Shutdown();
  delete NestedTestAllTypes_reflection_;
  TestDeprecatedFields_default_instance_.Shutdown();
  delete TestDeprecatedFields_reflection_;
  ForeignMessage_default_instance_.Shutdown();
  delete ForeignMessage_reflection_;
  TestReservedFields_default_instance_.Shutdown();
  delete TestReservedFields_reflection_;
  TestAllExtensions_default_instance_.Shutdown();
  delete TestAllExtensions_reflection_;
  OptionalGroup_extension_default_instance_.Shutdown();
  delete OptionalGroup_extension_reflection_;
  RepeatedGroup_extension_default_instance_.Shutdown();
  delete RepeatedGroup_extension_reflection_;
  TestNestedExtension_default_instance_.Shutdown();
  delete TestNestedExtension_reflection_;
  TestRequired_default_instance_.Shutdown();
  delete TestRequired_reflection_;
  TestRequiredForeign_default_instance_.Shutdown();
  delete TestRequiredForeign_reflection_;
  TestForeignNested_default_instance_.Shutdown();
  delete TestForeignNested_reflection_;
  TestEmptyMessage_default_instance_.Shutdown();
  delete TestEmptyMessage_reflection_;
  TestEmptyMessageWithExtensions_default_instance_.Shutdown();
  delete TestEmptyMessageWithExtensions_reflection_;
  TestMultipleExtensionRanges_default_instance_.Shutdown();
  delete TestMultipleExtensionRanges_reflection_;
  TestReallyLargeTagNumber_default_instance_.Shutdown();
  delete TestReallyLargeTagNumber_reflection_;
  TestRecursiveMessage_default_instance_.Shutdown();
  delete TestRecursiveMessage_reflection_;
  TestMutualRecursionA_default_instance_.Shutdown();
  delete TestMutualRecursionA_reflection_;
  TestMutualRecursionB_default_instance_.Shutdown();
  delete TestMutualRecursionB_reflection_;
  TestDupFieldNumber_default_instance_.Shutdown();
  delete TestDupFieldNumber_reflection_;
  TestDupFieldNumber_Foo_default_instance_.Shutdown();
  delete TestDupFieldNumber_Foo_reflection_;
  TestDupFieldNumber_Bar_default_instance_.Shutdown();
  delete TestDupFieldNumber_Bar_reflection_;
  TestEagerMessage_default_instance_.Shutdown();
  delete TestEagerMessage_reflection_;
  TestLazyMessage_default_instance_.Shutdown();
  delete TestLazyMessage_reflection_;
  TestNestedMessageHasBits_default_instance_.Shutdown();
  delete TestNestedMessageHasBits_reflection_;
  TestNestedMessageHasBits_NestedMessage_default_instance_.Shutdown();
  delete TestNestedMessageHasBits_NestedMessage_reflection_;
  TestCamelCaseFieldNames_default_instance_.Shutdown();
  delete TestCamelCaseFieldNames_reflection_;
  TestFieldOrderings_default_instance_.Shutdown();
  delete TestFieldOrderings_reflection_;
  TestFieldOrderings_NestedMessage_default_instance_.Shutdown();
  delete TestFieldOrderings_NestedMessage_reflection_;
  TestExtremeDefaultValues_default_instance_.Shutdown();
  delete TestExtremeDefaultValues_reflection_;
  delete TestExtremeDefaultValues::_default_escaped_bytes_;
  delete TestExtremeDefaultValues::_default_utf8_string_;
  delete TestExtremeDefaultValues::_default_cpp_trigraph_;
  delete TestExtremeDefaultValues::_default_string_with_zero_;
  delete TestExtremeDefaultValues::_default_bytes_with_zero_;
  delete TestExtremeDefaultValues::_default_string_piece_with_zero_;
  delete TestExtremeDefaultValues::_default_cord_with_zero_;
  delete TestExtremeDefaultValues::_default_replacement_string_;
  SparseEnumMessage_default_instance_.Shutdown();
  delete SparseEnumMessage_reflection_;
  OneString_default_instance_.Shutdown();
  delete OneString_reflection_;
  MoreString_default_instance_.Shutdown();
  delete MoreString_reflection_;
  OneBytes_default_instance_.Shutdown();
  delete OneBytes_reflection_;
  MoreBytes_default_instance_.Shutdown();
  delete MoreBytes_reflection_;
  Int32Message_default_instance_.Shutdown();
  delete Int32Message_reflection_;
  Uint32Message_default_instance_.Shutdown();
  delete Uint32Message_reflection_;
  Int64Message_default_instance_.Shutdown();
  delete Int64Message_reflection_;
  Uint64Message_default_instance_.Shutdown();
  delete Uint64Message_reflection_;
  BoolMessage_default_instance_.Shutdown();
  delete BoolMessage_reflection_;
  TestOneof_default_instance_.Shutdown();
  delete TestOneof_default_oneof_instance_;
  delete TestOneof_reflection_;
  TestOneof_FooGroup_default_instance_.Shutdown();
  delete TestOneof_FooGroup_reflection_;
  TestOneofBackwardsCompatible_default_instance_.Shutdown();
  delete TestOneofBackwardsCompatible_reflection_;
  TestOneofBackwardsCompatible_FooGroup_default_instance_.Shutdown();
  delete TestOneofBackwardsCompatible_FooGroup_reflection_;
  TestOneof2_default_instance_.Shutdown();
  delete TestOneof2_default_oneof_instance_;
  delete TestOneof2_reflection_;
  delete TestOneof2::_default_bar_string_;
  delete TestOneof2::_default_bar_cord_;
  delete TestOneof2::_default_bar_string_piece_;
  delete TestOneof2::_default_bar_bytes_;
  delete TestOneof2::_default_baz_string_;
  TestOneof2_FooGroup_default_instance_.Shutdown();
  delete TestOneof2_FooGroup_reflection_;
  TestOneof2_NestedMessage_default_instance_.Shutdown();
  delete TestOneof2_NestedMessage_reflection_;
  TestRequiredOneof_default_instance_.Shutdown();
  delete TestRequiredOneof_default_oneof_instance_;
  delete TestRequiredOneof_reflection_;
  TestRequiredOneof_NestedMessage_default_instance_.Shutdown();
  delete TestRequiredOneof_NestedMessage_reflection_;
  TestPackedTypes_default_instance_.Shutdown();
  delete TestPackedTypes_reflection_;
  TestUnpackedTypes_default_instance_.Shutdown();
  delete TestUnpackedTypes_reflection_;
  TestPackedExtensions_default_instance_.Shutdown();
  delete TestPackedExtensions_reflection_;
  TestUnpackedExtensions_default_instance_.Shutdown();
  delete TestUnpackedExtensions_reflection_;
  TestDynamicExtensions_default_instance_.Shutdown();
  delete TestDynamicExtensions_reflection_;
  TestDynamicExtensions_DynamicMessageType_default_instance_.Shutdown();
  delete TestDynamicExtensions_DynamicMessageType_reflection_;
  TestRepeatedScalarDifferentTagSizes_default_instance_.Shutdown();
  delete TestRepeatedScalarDifferentTagSizes_reflection_;
  TestParsingMerge_default_instance_.Shutdown();
  delete TestParsingMerge_reflection_;
  TestParsingMerge_RepeatedFieldsGenerator_default_instance_.Shutdown();
  delete TestParsingMerge_RepeatedFieldsGenerator_reflection_;
  TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_.Shutdown();
  delete TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_;
  TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_.Shutdown();
  delete TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_;
  TestParsingMerge_OptionalGroup_default_instance_.Shutdown();
  delete TestParsingMerge_OptionalGroup_reflection_;
  TestParsingMerge_RepeatedGroup_default_instance_.Shutdown();
  delete TestParsingMerge_RepeatedGroup_reflection_;
  TestCommentInjectionMessage_default_instance_.Shutdown();
  delete TestCommentInjectionMessage_reflection_;
  delete TestCommentInjectionMessage::_default_a_;
  FooRequest_default_instance_.Shutdown();
  delete FooRequest_reflection_;
  FooResponse_default_instance_.Shutdown();
  delete FooResponse_reflection_;
  FooClientMessage_default_instance_.Shutdown();
  delete FooClientMessage_reflection_;
  FooServerMessage_default_instance_.Shutdown();
  delete FooServerMessage_reflection_;
  BarRequest_default_instance_.Shutdown();
  delete BarRequest_reflection_;
  BarResponse_default_instance_.Shutdown();
  delete BarResponse_reflection_;
  TestJsonName_default_instance_.Shutdown();
  delete TestJsonName_reflection_;
}

void protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_unittest_import::protobuf_InitDefaults_google_2fprotobuf_2funittest_5fimport_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TestAllTypes::_default_default_string_ =
      new ::std::string("hello", 5);
  TestAllTypes::_default_default_bytes_ =
      new ::std::string("world", 5);
  TestAllTypes::_default_default_string_piece_ =
      new ::std::string("abc", 3);
  TestAllTypes::_default_default_cord_ =
      new ::std::string("123", 3);
  TestAllTypes_default_instance_.DefaultConstruct();
  TestAllTypes_default_oneof_instance_ = new TestAllTypesOneofInstance();
  TestAllTypes_NestedMessage_default_instance_.DefaultConstruct();
  TestAllTypes_OptionalGroup_default_instance_.DefaultConstruct();
  TestAllTypes_RepeatedGroup_default_instance_.DefaultConstruct();
  NestedTestAllTypes_default_instance_.DefaultConstruct();
  TestDeprecatedFields_default_instance_.DefaultConstruct();
  ForeignMessage_default_instance_.DefaultConstruct();
  TestReservedFields_default_instance_.DefaultConstruct();
  TestAllExtensions_default_instance_.DefaultConstruct();
  OptionalGroup_extension_default_instance_.DefaultConstruct();
  RepeatedGroup_extension_default_instance_.DefaultConstruct();
  TestNestedExtension_default_instance_.DefaultConstruct();
  TestRequired_default_instance_.DefaultConstruct();
  TestRequiredForeign_default_instance_.DefaultConstruct();
  TestForeignNested_default_instance_.DefaultConstruct();
  TestEmptyMessage_default_instance_.DefaultConstruct();
  TestEmptyMessageWithExtensions_default_instance_.DefaultConstruct();
  TestMultipleExtensionRanges_default_instance_.DefaultConstruct();
  TestReallyLargeTagNumber_default_instance_.DefaultConstruct();
  TestRecursiveMessage_default_instance_.DefaultConstruct();
  TestMutualRecursionA_default_instance_.DefaultConstruct();
  TestMutualRecursionB_default_instance_.DefaultConstruct();
  TestDupFieldNumber_default_instance_.DefaultConstruct();
  TestDupFieldNumber_Foo_default_instance_.DefaultConstruct();
  TestDupFieldNumber_Bar_default_instance_.DefaultConstruct();
  TestEagerMessage_default_instance_.DefaultConstruct();
  TestLazyMessage_default_instance_.DefaultConstruct();
  TestNestedMessageHasBits_default_instance_.DefaultConstruct();
  TestNestedMessageHasBits_NestedMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestCamelCaseFieldNames_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestFieldOrderings_default_instance_.DefaultConstruct();
  TestFieldOrderings_NestedMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestExtremeDefaultValues::_default_escaped_bytes_ =
      new ::std::string("\000\001\007\010\014\n\r\t\013\\\'\"\376", 13);
  TestExtremeDefaultValues::_default_utf8_string_ =
      new ::std::string("\341\210\264", 3);
  TestExtremeDefaultValues::_default_cpp_trigraph_ =
      new ::std::string("\? \? \?\? \?\? \?\?\? \?\?/ \?\?-", 21);
  TestExtremeDefaultValues::_default_string_with_zero_ =
      new ::std::string("hel\000lo", 6);
  TestExtremeDefaultValues::_default_bytes_with_zero_ =
      new ::std::string("wor\000ld", 6);
  TestExtremeDefaultValues::_default_string_piece_with_zero_ =
      new ::std::string("ab\000c", 4);
  TestExtremeDefaultValues::_default_cord_with_zero_ =
      new ::std::string("12\0003", 4);
  TestExtremeDefaultValues::_default_replacement_string_ =
      new ::std::string("${unknown}", 10);
  TestExtremeDefaultValues_default_instance_.DefaultConstruct();
  SparseEnumMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OneString_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MoreString_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OneBytes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MoreBytes_default_instance_.DefaultConstruct();
  Int32Message_default_instance_.DefaultConstruct();
  Uint32Message_default_instance_.DefaultConstruct();
  Int64Message_default_instance_.DefaultConstruct();
  Uint64Message_default_instance_.DefaultConstruct();
  BoolMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestOneof_default_instance_.DefaultConstruct();
  TestOneof_default_oneof_instance_ = new TestOneofOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  TestOneof_FooGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestOneofBackwardsCompatible_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestOneofBackwardsCompatible_FooGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestOneof2::_default_bar_string_ =
      new ::std::string("STRING", 6);
  TestOneof2::_default_bar_cord_ =
      new ::std::string("CORD", 4);
  TestOneof2::_default_bar_string_piece_ =
      new ::std::string("SPIECE", 6);
  TestOneof2::_default_bar_bytes_ =
      new ::std::string("BYTES", 5);
  TestOneof2::_default_baz_string_ =
      new ::std::string("BAZ", 3);
  TestOneof2_default_instance_.DefaultConstruct();
  TestOneof2_default_oneof_instance_ = new TestOneof2OneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  TestOneof2_FooGroup_default_instance_.DefaultConstruct();
  TestOneof2_NestedMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestRequiredOneof_default_instance_.DefaultConstruct();
  TestRequiredOneof_default_oneof_instance_ = new TestRequiredOneofOneofInstance();
  TestRequiredOneof_NestedMessage_default_instance_.DefaultConstruct();
  TestPackedTypes_default_instance_.DefaultConstruct();
  TestUnpackedTypes_default_instance_.DefaultConstruct();
  TestPackedExtensions_default_instance_.DefaultConstruct();
  TestUnpackedExtensions_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestDynamicExtensions_default_instance_.DefaultConstruct();
  TestDynamicExtensions_DynamicMessageType_default_instance_.DefaultConstruct();
  TestRepeatedScalarDifferentTagSizes_default_instance_.DefaultConstruct();
  TestParsingMerge_default_instance_.DefaultConstruct();
  TestParsingMerge_RepeatedFieldsGenerator_default_instance_.DefaultConstruct();
  TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_.DefaultConstruct();
  TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_.DefaultConstruct();
  TestParsingMerge_OptionalGroup_default_instance_.DefaultConstruct();
  TestParsingMerge_RepeatedGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestCommentInjectionMessage::_default_a_ =
      new ::std::string("*/ <- Neither should this.", 26);
  TestCommentInjectionMessage_default_instance_.DefaultConstruct();
  FooRequest_default_instance_.DefaultConstruct();
  FooResponse_default_instance_.DefaultConstruct();
  FooClientMessage_default_instance_.DefaultConstruct();
  FooServerMessage_default_instance_.DefaultConstruct();
  BarRequest_default_instance_.DefaultConstruct();
  BarResponse_default_instance_.DefaultConstruct();
  TestJsonName_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    1, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    2, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    3, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    4, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    5, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    6, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    7, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    8, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    9, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    10, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    11, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    12, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    13, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    14, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    15, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    16, 10, false, false,
    ::protobuf_unittest::OptionalGroup_extension::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    18, 11, false, false,
    ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    19, 11, false, false,
    ::protobuf_unittest::ForeignMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    20, 11, false, false,
    ::protobuf_unittest_import::ImportMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    21, 14, false, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    22, 14, false, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    23, 14, false, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    24, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    25, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    26, 11, false, false,
    ::protobuf_unittest_import::PublicImportMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    27, 11, false, false,
    ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    31, 5, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    32, 3, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    33, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    34, 4, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    35, 17, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    36, 18, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    37, 7, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    38, 6, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    39, 15, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    40, 16, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    41, 2, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    42, 1, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    43, 8, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    44, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    45, 12, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    46, 10, true, false,
    ::protobuf_unittest::RepeatedGroup_extension::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    48, 11, true, false,
    ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    49, 11, true, false,
    ::protobuf_unittest::ForeignMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    50, 11, true, false,
    ::protobuf_unittest_import::ImportMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    51, 14, true, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    52, 14, true, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    53, 14, true, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    54, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    55, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    57, 11, true, false,
    ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    61, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    62, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    63, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    64, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    65, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    66, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    67, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    68, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    69, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    70, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    71, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    72, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    73, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    74, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    75, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    81, 14, false, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    82, 14, false, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    83, 14, false, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    84, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    85, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    111, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    112, 11, false, false,
    ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    113, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    114, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestFieldOrderings::internal_default_instance(),
    50, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestFieldOrderings::internal_default_instance(),
    5, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    90, 5, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    91, 3, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    92, 13, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    93, 4, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    94, 17, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    95, 18, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    96, 7, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    97, 6, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    98, 15, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    99, 16, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    100, 2, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    101, 1, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    102, 8, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestPackedExtensions::internal_default_instance(),
    103, 14, true, true,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    90, 5, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    91, 3, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    92, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    93, 4, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    94, 17, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    95, 18, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    96, 7, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    97, 6, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    98, 15, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    99, 16, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    100, 2, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    101, 1, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    102, 8, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestUnpackedExtensions::internal_default_instance(),
    103, 14, true, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  TestAllTypes_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypes_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypes_OptionalGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypes_RepeatedGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  NestedTestAllTypes_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDeprecatedFields_default_instance_.get_mutable()->InitAsDefaultInstance();
  ForeignMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestReservedFields_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllExtensions_default_instance_.get_mutable()->InitAsDefaultInstance();
  OptionalGroup_extension_default_instance_.get_mutable()->InitAsDefaultInstance();
  RepeatedGroup_extension_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestNestedExtension_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    1002, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    1003, 9, false, false);
  TestRequired_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    1000, 11, false, false,
    ::protobuf_unittest::TestRequired::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensions::internal_default_instance(),
    1001, 11, true, false,
    ::protobuf_unittest::TestRequired::internal_default_instance());
  TestRequiredForeign_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestForeignNested_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestEmptyMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestEmptyMessageWithExtensions_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestMultipleExtensionRanges_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestReallyLargeTagNumber_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestRecursiveMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestMutualRecursionA_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestMutualRecursionB_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDupFieldNumber_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDupFieldNumber_Foo_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDupFieldNumber_Bar_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestEagerMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestLazyMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestNestedMessageHasBits_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestNestedMessageHasBits_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestCamelCaseFieldNames_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestFieldOrderings_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestFieldOrderings_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestExtremeDefaultValues_default_instance_.get_mutable()->InitAsDefaultInstance();
  SparseEnumMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  OneString_default_instance_.get_mutable()->InitAsDefaultInstance();
  MoreString_default_instance_.get_mutable()->InitAsDefaultInstance();
  OneBytes_default_instance_.get_mutable()->InitAsDefaultInstance();
  MoreBytes_default_instance_.get_mutable()->InitAsDefaultInstance();
  Int32Message_default_instance_.get_mutable()->InitAsDefaultInstance();
  Uint32Message_default_instance_.get_mutable()->InitAsDefaultInstance();
  Int64Message_default_instance_.get_mutable()->InitAsDefaultInstance();
  Uint64Message_default_instance_.get_mutable()->InitAsDefaultInstance();
  BoolMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneof_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneof_FooGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneofBackwardsCompatible_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneofBackwardsCompatible_FooGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneof2_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneof2_FooGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestOneof2_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestRequiredOneof_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestRequiredOneof_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestPackedTypes_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestUnpackedTypes_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestPackedExtensions_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestUnpackedExtensions_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDynamicExtensions_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestDynamicExtensions_DynamicMessageType_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestRepeatedScalarDifferentTagSizes_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMerge_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestParsingMerge::internal_default_instance(),
    1000, 11, false, false,
    ::protobuf_unittest::TestAllTypes::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestParsingMerge::internal_default_instance(),
    1001, 11, true, false,
    ::protobuf_unittest::TestAllTypes::internal_default_instance());
  TestParsingMerge_RepeatedFieldsGenerator_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMerge_OptionalGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMerge_RepeatedGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestCommentInjectionMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  FooRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  FooResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  FooClientMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  FooServerMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  BarRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  BarResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestJsonName_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto_once_);
void protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto_once_,
                 &protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto_impl);
}
void protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036google/protobuf/unittest.proto\022\021protob"
    "uf_unittest\032%google/protobuf/unittest_im"
    "port.proto\"\355\030\n\014TestAllTypes\022\026\n\016optional_"
    "int32\030\001 \001(\005\022\026\n\016optional_int64\030\002 \001(\003\022\027\n\017o"
    "ptional_uint32\030\003 \001(\r\022\027\n\017optional_uint64\030"
    "\004 \001(\004\022\027\n\017optional_sint32\030\005 \001(\021\022\027\n\017option"
    "al_sint64\030\006 \001(\022\022\030\n\020optional_fixed32\030\007 \001("
    "\007\022\030\n\020optional_fixed64\030\010 \001(\006\022\031\n\021optional_"
    "sfixed32\030\t \001(\017\022\031\n\021optional_sfixed64\030\n \001("
    "\020\022\026\n\016optional_float\030\013 \001(\002\022\027\n\017optional_do"
    "uble\030\014 \001(\001\022\025\n\roptional_bool\030\r \001(\010\022\027\n\017opt"
    "ional_string\030\016 \001(\t\022\026\n\016optional_bytes\030\017 \001"
    "(\014\022D\n\roptionalgroup\030\020 \001(\n2-.protobuf_uni"
    "ttest.TestAllTypes.OptionalGroup\022N\n\027opti"
    "onal_nested_message\030\022 \001(\0132-.protobuf_uni"
    "ttest.TestAllTypes.NestedMessage\022C\n\030opti"
    "onal_foreign_message\030\023 \001(\0132!.protobuf_un"
    "ittest.ForeignMessage\022H\n\027optional_import"
    "_message\030\024 \001(\0132\'.protobuf_unittest_impor"
    "t.ImportMessage\022H\n\024optional_nested_enum\030"
    "\025 \001(\0162*.protobuf_unittest.TestAllTypes.N"
    "estedEnum\022=\n\025optional_foreign_enum\030\026 \001(\016"
    "2\036.protobuf_unittest.ForeignEnum\022B\n\024opti"
    "onal_import_enum\030\027 \001(\0162$.protobuf_unitte"
    "st_import.ImportEnum\022!\n\025optional_string_"
    "piece\030\030 \001(\tB\002\010\002\022\031\n\roptional_cord\030\031 \001(\tB\002"
    "\010\001\022U\n\036optional_public_import_message\030\032 \001"
    "(\0132-.protobuf_unittest_import.PublicImpo"
    "rtMessage\022P\n\025optional_lazy_message\030\033 \001(\013"
    "2-.protobuf_unittest.TestAllTypes.Nested"
    "MessageB\002(\001\022\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016r"
    "epeated_int64\030  \003(\003\022\027\n\017repeated_uint32\030!"
    " \003(\r\022\027\n\017repeated_uint64\030\" \003(\004\022\027\n\017repeate"
    "d_sint32\030# \003(\021\022\027\n\017repeated_sint64\030$ \003(\022\022"
    "\030\n\020repeated_fixed32\030% \003(\007\022\030\n\020repeated_fi"
    "xed64\030& \003(\006\022\031\n\021repeated_sfixed32\030\' \003(\017\022\031"
    "\n\021repeated_sfixed64\030( \003(\020\022\026\n\016repeated_fl"
    "oat\030) \003(\002\022\027\n\017repeated_double\030* \003(\001\022\025\n\rre"
    "peated_bool\030+ \003(\010\022\027\n\017repeated_string\030, \003"
    "(\t\022\026\n\016repeated_bytes\030- \003(\014\022D\n\rrepeatedgr"
    "oup\030. \003(\n2-.protobuf_unittest.TestAllTyp"
    "es.RepeatedGroup\022N\n\027repeated_nested_mess"
    "age\0300 \003(\0132-.protobuf_unittest.TestAllTyp"
    "es.NestedMessage\022C\n\030repeated_foreign_mes"
    "sage\0301 \003(\0132!.protobuf_unittest.ForeignMe"
    "ssage\022H\n\027repeated_import_message\0302 \003(\0132\'"
    ".protobuf_unittest_import.ImportMessage\022"
    "H\n\024repeated_nested_enum\0303 \003(\0162*.protobuf"
    "_unittest.TestAllTypes.NestedEnum\022=\n\025rep"
    "eated_foreign_enum\0304 \003(\0162\036.protobuf_unit"
    "test.ForeignEnum\022B\n\024repeated_import_enum"
    "\0305 \003(\0162$.protobuf_unittest_import.Import"
    "Enum\022!\n\025repeated_string_piece\0306 \003(\tB\002\010\002\022"
    "\031\n\rrepeated_cord\0307 \003(\tB\002\010\001\022P\n\025repeated_l"
    "azy_message\0309 \003(\0132-.protobuf_unittest.Te"
    "stAllTypes.NestedMessageB\002(\001\022\031\n\rdefault_"
    "int32\030= \001(\005:\00241\022\031\n\rdefault_int64\030> \001(\003:\002"
    "42\022\032\n\016default_uint32\030\? \001(\r:\00243\022\032\n\016defaul"
    "t_uint64\030@ \001(\004:\00244\022\033\n\016default_sint32\030A \001"
    "(\021:\003-45\022\032\n\016default_sint64\030B \001(\022:\00246\022\033\n\017d"
    "efault_fixed32\030C \001(\007:\00247\022\033\n\017default_fixe"
    "d64\030D \001(\006:\00248\022\034\n\020default_sfixed32\030E \001(\017:"
    "\00249\022\035\n\020default_sfixed64\030F \001(\020:\003-50\022\033\n\rde"
    "fault_float\030G \001(\002:\00451.5\022\035\n\016default_doubl"
    "e\030H \001(\001:\00552000\022\032\n\014default_bool\030I \001(\010:\004tr"
    "ue\022\035\n\016default_string\030J \001(\t:\005hello\022\034\n\rdef"
    "ault_bytes\030K \001(\014:\005world\022L\n\023default_neste"
    "d_enum\030Q \001(\0162*.protobuf_unittest.TestAll"
    "Types.NestedEnum:\003BAR\022I\n\024default_foreign"
    "_enum\030R \001(\0162\036.protobuf_unittest.ForeignE"
    "num:\013FOREIGN_BAR\022M\n\023default_import_enum\030"
    "S \001(\0162$.protobuf_unittest_import.ImportE"
    "num:\nIMPORT_BAR\022%\n\024default_string_piece\030"
    "T \001(\t:\003abcB\002\010\002\022\035\n\014default_cord\030U \001(\t:\00312"
    "3B\002\010\001\022\026\n\014oneof_uint32\030o \001(\rH\000\022M\n\024oneof_n"
    "ested_message\030p \001(\0132-.protobuf_unittest."
    "TestAllTypes.NestedMessageH\000\022\026\n\014oneof_st"
    "ring\030q \001(\tH\000\022\025\n\013oneof_bytes\030r \001(\014H\000\032\033\n\rN"
    "estedMessage\022\n\n\002bb\030\001 \001(\005\032\032\n\rOptionalGrou"
    "p\022\t\n\001a\030\021 \001(\005\032\032\n\rRepeatedGroup\022\t\n\001a\030/ \001(\005"
    "\"9\n\nNestedEnum\022\007\n\003FOO\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020"
    "\003\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001B\r\n\013oneof_field\"\273\001\n\022N"
    "estedTestAllTypes\0224\n\005child\030\001 \001(\0132%.proto"
    "buf_unittest.NestedTestAllTypes\0220\n\007paylo"
    "ad\030\002 \001(\0132\037.protobuf_unittest.TestAllType"
    "s\022=\n\016repeated_child\030\003 \003(\0132%.protobuf_uni"
    "ttest.NestedTestAllTypes\"4\n\024TestDeprecat"
    "edFields\022\034\n\020deprecated_int32\030\001 \001(\005B\002\030\001\"&"
    "\n\016ForeignMessage\022\t\n\001c\030\001 \001(\005\022\t\n\001d\030\002 \001(\005\"0"
    "\n\022TestReservedFieldsJ\004\010\002\020\003J\004\010\017\020\020J\004\010\t\020\014R\003"
    "barR\003baz\"\035\n\021TestAllExtensions*\010\010\001\020\200\200\200\200\002\""
    "$\n\027OptionalGroup_extension\022\t\n\001a\030\021 \001(\005\"$\n"
    "\027RepeatedGroup_extension\022\t\n\001a\030/ \001(\005\"\230\001\n\023"
    "TestNestedExtension29\n\004test\022$.protobuf_u"
    "nittest.TestAllExtensions\030\352\007 \001(\t:\004test2F"
    "\n\027nested_string_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030\353\007 \001(\t\"\325\005\n\014TestR"
    "equired\022\t\n\001a\030\001 \002(\005\022\016\n\006dummy2\030\002 \001(\005\022\t\n\001b\030"
    "\003 \002(\005\022\016\n\006dummy4\030\004 \001(\005\022\016\n\006dummy5\030\005 \001(\005\022\016\n"
    "\006dummy6\030\006 \001(\005\022\016\n\006dummy7\030\007 \001(\005\022\016\n\006dummy8\030"
    "\010 \001(\005\022\016\n\006dummy9\030\t \001(\005\022\017\n\007dummy10\030\n \001(\005\022\017"
    "\n\007dummy11\030\013 \001(\005\022\017\n\007dummy12\030\014 \001(\005\022\017\n\007dumm"
    "y13\030\r \001(\005\022\017\n\007dummy14\030\016 \001(\005\022\017\n\007dummy15\030\017 "
    "\001(\005\022\017\n\007dummy16\030\020 \001(\005\022\017\n\007dummy17\030\021 \001(\005\022\017\n"
    "\007dummy18\030\022 \001(\005\022\017\n\007dummy19\030\023 \001(\005\022\017\n\007dummy"
    "20\030\024 \001(\005\022\017\n\007dummy21\030\025 \001(\005\022\017\n\007dummy22\030\026 \001"
    "(\005\022\017\n\007dummy23\030\027 \001(\005\022\017\n\007dummy24\030\030 \001(\005\022\017\n\007"
    "dummy25\030\031 \001(\005\022\017\n\007dummy26\030\032 \001(\005\022\017\n\007dummy2"
    "7\030\033 \001(\005\022\017\n\007dummy28\030\034 \001(\005\022\017\n\007dummy29\030\035 \001("
    "\005\022\017\n\007dummy30\030\036 \001(\005\022\017\n\007dummy31\030\037 \001(\005\022\017\n\007d"
    "ummy32\030  \001(\005\022\t\n\001c\030! \002(\0052V\n\006single\022$.prot"
    "obuf_unittest.TestAllExtensions\030\350\007 \001(\0132\037"
    ".protobuf_unittest.TestRequired2U\n\005multi"
    "\022$.protobuf_unittest.TestAllExtensions\030\351"
    "\007 \003(\0132\037.protobuf_unittest.TestRequired\"\232"
    "\001\n\023TestRequiredForeign\0229\n\020optional_messa"
    "ge\030\001 \001(\0132\037.protobuf_unittest.TestRequire"
    "d\0229\n\020repeated_message\030\002 \003(\0132\037.protobuf_u"
    "nittest.TestRequired\022\r\n\005dummy\030\003 \001(\005\"Z\n\021T"
    "estForeignNested\022E\n\016foreign_nested\030\001 \001(\013"
    "2-.protobuf_unittest.TestAllTypes.Nested"
    "Message\"\022\n\020TestEmptyMessage\"*\n\036TestEmpty"
    "MessageWithExtensions*\010\010\001\020\200\200\200\200\002\"7\n\033TestM"
    "ultipleExtensionRanges*\004\010*\020+*\006\010\257 \020\224!*\n\010\200"
    "\200\004\020\200\200\200\200\002\"4\n\030TestReallyLargeTagNumber\022\t\n\001"
    "a\030\001 \001(\005\022\r\n\002bb\030\377\377\377\177 \001(\005\"U\n\024TestRecursiveM"
    "essage\0222\n\001a\030\001 \001(\0132\'.protobuf_unittest.Te"
    "stRecursiveMessage\022\t\n\001i\030\002 \001(\005\"K\n\024TestMut"
    "ualRecursionA\0223\n\002bb\030\001 \001(\0132\'.protobuf_uni"
    "ttest.TestMutualRecursionB\"b\n\024TestMutual"
    "RecursionB\0222\n\001a\030\001 \001(\0132\'.protobuf_unittes"
    "t.TestMutualRecursionA\022\026\n\016optional_int32"
    "\030\002 \001(\005\"\263\001\n\022TestDupFieldNumber\022\t\n\001a\030\001 \001(\005"
    "\0226\n\003foo\030\002 \001(\n2).protobuf_unittest.TestDu"
    "pFieldNumber.Foo\0226\n\003bar\030\003 \001(\n2).protobuf"
    "_unittest.TestDupFieldNumber.Bar\032\020\n\003Foo\022"
    "\t\n\001a\030\001 \001(\005\032\020\n\003Bar\022\t\n\001a\030\001 \001(\005\"L\n\020TestEage"
    "rMessage\0228\n\013sub_message\030\001 \001(\0132\037.protobuf"
    "_unittest.TestAllTypesB\002(\000\"K\n\017TestLazyMe"
    "ssage\0228\n\013sub_message\030\001 \001(\0132\037.protobuf_un"
    "ittest.TestAllTypesB\002(\001\"\200\002\n\030TestNestedMe"
    "ssageHasBits\022Z\n\027optional_nested_message\030"
    "\001 \001(\01329.protobuf_unittest.TestNestedMess"
    "ageHasBits.NestedMessage\032\207\001\n\rNestedMessa"
    "ge\022$\n\034nestedmessage_repeated_int32\030\001 \003(\005"
    "\022P\n%nestedmessage_repeated_foreignmessag"
    "e\030\002 \003(\0132!.protobuf_unittest.ForeignMessa"
    "ge\"\345\003\n\027TestCamelCaseFieldNames\022\026\n\016Primit"
    "iveField\030\001 \001(\005\022\023\n\013StringField\030\002 \001(\t\0221\n\tE"
    "numField\030\003 \001(\0162\036.protobuf_unittest.Forei"
    "gnEnum\0227\n\014MessageField\030\004 \001(\0132!.protobuf_"
    "unittest.ForeignMessage\022\034\n\020StringPieceFi"
    "eld\030\005 \001(\tB\002\010\002\022\025\n\tCordField\030\006 \001(\tB\002\010\001\022\036\n\026"
    "RepeatedPrimitiveField\030\007 \003(\005\022\033\n\023Repeated"
    "StringField\030\010 \003(\t\0229\n\021RepeatedEnumField\030\t"
    " \003(\0162\036.protobuf_unittest.ForeignEnum\022\?\n\024"
    "RepeatedMessageField\030\n \003(\0132!.protobuf_un"
    "ittest.ForeignMessage\022$\n\030RepeatedStringP"
    "ieceField\030\013 \003(\tB\002\010\002\022\035\n\021RepeatedCordField"
    "\030\014 \003(\tB\002\010\001\"\325\001\n\022TestFieldOrderings\022\021\n\tmy_"
    "string\030\013 \001(\t\022\016\n\006my_int\030\001 \001(\003\022\020\n\010my_float"
    "\030e \001(\002\022U\n\027optional_nested_message\030\310\001 \001(\013"
    "23.protobuf_unittest.TestFieldOrderings."
    "NestedMessage\032\'\n\rNestedMessage\022\n\n\002oo\030\002 \001"
    "(\003\022\n\n\002bb\030\001 \001(\005*\004\010\002\020\013*\004\010\014\020e\"\266\007\n\030TestExtre"
    "meDefaultValues\022\?\n\rescaped_bytes\030\001 \001(\014:("
    "\\000\\001\\007\\010\\014\\n\\r\\t\\013\\\\\\\'\\\"\\376"
    "\022 \n\014large_uint32\030\002 \001(\r:\n4294967295\022*\n\014la"
    "rge_uint64\030\003 \001(\004:\02418446744073709551615\022 "
    "\n\013small_int32\030\004 \001(\005:\013-2147483647\022)\n\013smal"
    "l_int64\030\005 \001(\003:\024-9223372036854775807\022\'\n\022r"
    "eally_small_int32\030\025 \001(\005:\013-2147483648\0220\n\022"
    "really_small_int64\030\026 \001(\003:\024-9223372036854"
    "775808\022\030\n\013utf8_string\030\006 \001(\t:\003\341\210\264\022\025\n\nzero"
    "_float\030\007 \001(\002:\0010\022\024\n\tone_float\030\010 \001(\002:\0011\022\030\n"
    "\013small_float\030\t \001(\002:\0031.5\022\036\n\022negative_one_"
    "float\030\n \001(\002:\002-1\022\034\n\016negative_float\030\013 \001(\002:"
    "\004-1.5\022\032\n\013large_float\030\014 \001(\002:\0052e+08\022$\n\024sma"
    "ll_negative_float\030\r \001(\002:\006-8e-28\022\027\n\ninf_d"
    "ouble\030\016 \001(\001:\003inf\022\034\n\016neg_inf_double\030\017 \001(\001"
    ":\004-inf\022\027\n\nnan_double\030\020 \001(\001:\003nan\022\026\n\tinf_f"
    "loat\030\021 \001(\002:\003inf\022\033\n\rneg_inf_float\030\022 \001(\002:\004"
    "-inf\022\026\n\tnan_float\030\023 \001(\002:\003nan\022+\n\014cpp_trig"
    "raph\030\024 \001(\t:\025\? \? \?\? \?\? \?\?\? \?\?/ \?\?-\022 \n\020str"
    "ing_with_zero\030\027 \001(\t:\006hel\000lo\022\"\n\017bytes_wit"
    "h_zero\030\030 \001(\014:\twor\\000ld\022(\n\026string_piece_"
    "with_zero\030\031 \001(\t:\004ab\000cB\002\010\002\022 \n\016cord_with_z"
    "ero\030\032 \001(\t:\00412\0003B\002\010\001\022&\n\022replacement_strin"
    "g\030\033 \001(\t:\n${unknown}\"K\n\021SparseEnumMessage"
    "\0226\n\013sparse_enum\030\001 \001(\0162!.protobuf_unittes"
    "t.TestSparseEnum\"\031\n\tOneString\022\014\n\004data\030\001 "
    "\001(\t\"\032\n\nMoreString\022\014\n\004data\030\001 \003(\t\"\030\n\010OneBy"
    "tes\022\014\n\004data\030\001 \001(\014\"\031\n\tMoreBytes\022\014\n\004data\030\001"
    " \003(\014\"\034\n\014Int32Message\022\014\n\004data\030\001 \001(\005\"\035\n\rUi"
    "nt32Message\022\014\n\004data\030\001 \001(\r\"\034\n\014Int64Messag"
    "e\022\014\n\004data\030\001 \001(\003\"\035\n\rUint64Message\022\014\n\004data"
    "\030\001 \001(\004\"\033\n\013BoolMessage\022\014\n\004data\030\001 \001(\010\"\320\001\n\t"
    "TestOneof\022\021\n\007foo_int\030\001 \001(\005H\000\022\024\n\nfoo_stri"
    "ng\030\002 \001(\tH\000\0226\n\013foo_message\030\003 \001(\0132\037.protob"
    "uf_unittest.TestAllTypesH\000\0229\n\010foogroup\030\004"
    " \001(\n2%.protobuf_unittest.TestOneof.FooGr"
    "oupH\000\032 \n\010FooGroup\022\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\tB"
    "\005\n\003foo\"\347\001\n\034TestOneofBackwardsCompatible\022"
    "\017\n\007foo_int\030\001 \001(\005\022\022\n\nfoo_string\030\002 \001(\t\0224\n\013"
    "foo_message\030\003 \001(\0132\037.protobuf_unittest.Te"
    "stAllTypes\022J\n\010foogroup\030\004 \001(\n28.protobuf_"
    "unittest.TestOneofBackwardsCompatible.Fo"
    "oGroup\032 \n\010FooGroup\022\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\t"
    "\"\236\006\n\nTestOneof2\022\021\n\007foo_int\030\001 \001(\005H\000\022\024\n\nfo"
    "o_string\030\002 \001(\tH\000\022\026\n\010foo_cord\030\003 \001(\tB\002\010\001H\000"
    "\022\036\n\020foo_string_piece\030\004 \001(\tB\002\010\002H\000\022\023\n\tfoo_"
    "bytes\030\005 \001(\014H\000\022<\n\010foo_enum\030\006 \001(\0162(.protob"
    "uf_unittest.TestOneof2.NestedEnumH\000\022B\n\013f"
    "oo_message\030\007 \001(\0132+.protobuf_unittest.Tes"
    "tOneof2.NestedMessageH\000\022:\n\010foogroup\030\010 \001("
    "\n2&.protobuf_unittest.TestOneof2.FooGrou"
    "pH\000\022K\n\020foo_lazy_message\030\013 \001(\0132+.protobuf"
    "_unittest.TestOneof2.NestedMessageB\002(\001H\000"
    "\022\024\n\007bar_int\030\014 \001(\005:\0015H\001\022\034\n\nbar_string\030\r \001"
    "(\t:\006STRINGH\001\022\034\n\010bar_cord\030\016 \001(\t:\004CORDB\002\010\001"
    "H\001\022&\n\020bar_string_piece\030\017 \001(\t:\006SPIECEB\002\010\002"
    "H\001\022\032\n\tbar_bytes\030\020 \001(\014:\005BYTESH\001\022A\n\010bar_en"
    "um\030\021 \001(\0162(.protobuf_unittest.TestOneof2."
    "NestedEnum:\003BARH\001\022\017\n\007baz_int\030\022 \001(\005\022\027\n\nba"
    "z_string\030\023 \001(\t:\003BAZ\032 \n\010FooGroup\022\t\n\001a\030\t \001"
    "(\005\022\t\n\001b\030\n \001(\t\0323\n\rNestedMessage\022\017\n\007qux_in"
    "t\030\001 \001(\003\022\021\n\tcorge_int\030\002 \003(\005\"\'\n\nNestedEnum"
    "\022\007\n\003FOO\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020\003B\005\n\003fooB\005\n\003ba"
    "r\"\270\001\n\021TestRequiredOneof\022\021\n\007foo_int\030\001 \001(\005"
    "H\000\022\024\n\nfoo_string\030\002 \001(\tH\000\022I\n\013foo_message\030"
    "\003 \001(\01322.protobuf_unittest.TestRequiredOn"
    "eof.NestedMessageH\000\032(\n\rNestedMessage\022\027\n\017"
    "required_double\030\001 \002(\001B\005\n\003foo\"\252\003\n\017TestPac"
    "kedTypes\022\030\n\014packed_int32\030Z \003(\005B\002\020\001\022\030\n\014pa"
    "cked_int64\030[ \003(\003B\002\020\001\022\031\n\rpacked_uint32\030\\ "
    "\003(\rB\002\020\001\022\031\n\rpacked_uint64\030] \003(\004B\002\020\001\022\031\n\rpa"
    "cked_sint32\030^ \003(\021B\002\020\001\022\031\n\rpacked_sint64\030_"
    " \003(\022B\002\020\001\022\032\n\016packed_fixed32\030` \003(\007B\002\020\001\022\032\n\016"
    "packed_fixed64\030a \003(\006B\002\020\001\022\033\n\017packed_sfixe"
    "d32\030b \003(\017B\002\020\001\022\033\n\017packed_sfixed64\030c \003(\020B\002"
    "\020\001\022\030\n\014packed_float\030d \003(\002B\002\020\001\022\031\n\rpacked_d"
    "ouble\030e \003(\001B\002\020\001\022\027\n\013packed_bool\030f \003(\010B\002\020\001"
    "\0227\n\013packed_enum\030g \003(\0162\036.protobuf_unittes"
    "t.ForeignEnumB\002\020\001\"\310\003\n\021TestUnpackedTypes\022"
    "\032\n\016unpacked_int32\030Z \003(\005B\002\020\000\022\032\n\016unpacked_"
    "int64\030[ \003(\003B\002\020\000\022\033\n\017unpacked_uint32\030\\ \003(\r"
    "B\002\020\000\022\033\n\017unpacked_uint64\030] \003(\004B\002\020\000\022\033\n\017unp"
    "acked_sint32\030^ \003(\021B\002\020\000\022\033\n\017unpacked_sint6"
    "4\030_ \003(\022B\002\020\000\022\034\n\020unpacked_fixed32\030` \003(\007B\002\020"
    "\000\022\034\n\020unpacked_fixed64\030a \003(\006B\002\020\000\022\035\n\021unpac"
    "ked_sfixed32\030b \003(\017B\002\020\000\022\035\n\021unpacked_sfixe"
    "d64\030c \003(\020B\002\020\000\022\032\n\016unpacked_float\030d \003(\002B\002\020"
    "\000\022\033\n\017unpacked_double\030e \003(\001B\002\020\000\022\031\n\runpack"
    "ed_bool\030f \003(\010B\002\020\000\0229\n\runpacked_enum\030g \003(\016"
    "2\036.protobuf_unittest.ForeignEnumB\002\020\000\" \n\024"
    "TestPackedExtensions*\010\010\001\020\200\200\200\200\002\"\"\n\026TestUn"
    "packedExtensions*\010\010\001\020\200\200\200\200\002\"\231\004\n\025TestDynam"
    "icExtensions\022\031\n\020scalar_extension\030\320\017 \001(\007\022"
    "7\n\016enum_extension\030\321\017 \001(\0162\036.protobuf_unit"
    "test.ForeignEnum\022Y\n\026dynamic_enum_extensi"
    "on\030\322\017 \001(\01628.protobuf_unittest.TestDynami"
    "cExtensions.DynamicEnumType\022=\n\021message_e"
    "xtension\030\323\017 \001(\0132!.protobuf_unittest.Fore"
    "ignMessage\022_\n\031dynamic_message_extension\030"
    "\324\017 \001(\0132;.protobuf_unittest.TestDynamicEx"
    "tensions.DynamicMessageType\022\033\n\022repeated_"
    "extension\030\325\017 \003(\t\022\035\n\020packed_extension\030\326\017 "
    "\003(\021B\002\020\001\032,\n\022DynamicMessageType\022\026\n\rdynamic"
    "_field\030\264\020 \001(\005\"G\n\017DynamicEnumType\022\020\n\013DYNA"
    "MIC_FOO\020\230\021\022\020\n\013DYNAMIC_BAR\020\231\021\022\020\n\013DYNAMIC_"
    "BAZ\020\232\021\"\300\001\n#TestRepeatedScalarDifferentTa"
    "gSizes\022\030\n\020repeated_fixed32\030\014 \003(\007\022\026\n\016repe"
    "ated_int32\030\r \003(\005\022\031\n\020repeated_fixed64\030\376\017 "
    "\003(\006\022\027\n\016repeated_int64\030\377\017 \003(\003\022\030\n\016repeated"
    "_float\030\376\377\017 \003(\002\022\031\n\017repeated_uint64\030\377\377\017 \003("
    "\004\"\367\t\n\020TestParsingMerge\022;\n\022required_all_t"
    "ypes\030\001 \002(\0132\037.protobuf_unittest.TestAllTy"
    "pes\022;\n\022optional_all_types\030\002 \001(\0132\037.protob"
    "uf_unittest.TestAllTypes\022;\n\022repeated_all"
    "_types\030\003 \003(\0132\037.protobuf_unittest.TestAll"
    "Types\022H\n\roptionalgroup\030\n \001(\n21.protobuf_"
    "unittest.TestParsingMerge.OptionalGroup\022"
    "H\n\rrepeatedgroup\030\024 \003(\n21.protobuf_unitte"
    "st.TestParsingMerge.RepeatedGroup\032\252\004\n\027Re"
    "peatedFieldsGenerator\022/\n\006field1\030\001 \003(\0132\037."
    "protobuf_unittest.TestAllTypes\022/\n\006field2"
    "\030\002 \003(\0132\037.protobuf_unittest.TestAllTypes\022"
    "/\n\006field3\030\003 \003(\0132\037.protobuf_unittest.Test"
    "AllTypes\022R\n\006group1\030\n \003(\n2B.protobuf_unit"
    "test.TestParsingMerge.RepeatedFieldsGene"
    "rator.Group1\022R\n\006group2\030\024 \003(\n2B.protobuf_"
    "unittest.TestParsingMerge.RepeatedFields"
    "Generator.Group2\022.\n\004ext1\030\350\007 \003(\0132\037.protob"
    "uf_unittest.TestAllTypes\022.\n\004ext2\030\351\007 \003(\0132"
    "\037.protobuf_unittest.TestAllTypes\0329\n\006Grou"
    "p1\022/\n\006field1\030\013 \001(\0132\037.protobuf_unittest.T"
    "estAllTypes\0329\n\006Group2\022/\n\006field1\030\025 \001(\0132\037."
    "protobuf_unittest.TestAllTypes\032R\n\rOption"
    "alGroup\022A\n\030optional_group_all_types\030\013 \001("
    "\0132\037.protobuf_unittest.TestAllTypes\032R\n\rRe"
    "peatedGroup\022A\n\030repeated_group_all_types\030"
    "\025 \001(\0132\037.protobuf_unittest.TestAllTypes*\t"
    "\010\350\007\020\200\200\200\200\0022[\n\014optional_ext\022#.protobuf_uni"
    "ttest.TestParsingMerge\030\350\007 \001(\0132\037.protobuf"
    "_unittest.TestAllTypes2[\n\014repeated_ext\022#"
    ".protobuf_unittest.TestParsingMerge\030\351\007 \003"
    "(\0132\037.protobuf_unittest.TestAllTypes\"D\n\033T"
    "estCommentInjectionMessage\022%\n\001a\030\001 \001(\t:\032*"
    "/ <- Neither should this.\"\014\n\nFooRequest\""
    "\r\n\013FooResponse\"\022\n\020FooClientMessage\"\022\n\020Fo"
    "oServerMessage\"\014\n\nBarRequest\"\r\n\013BarRespo"
    "nse\"\222\001\n\014TestJsonName\022\023\n\013field_name1\030\001 \001("
    "\005\022\022\n\nfieldName2\030\002 \001(\005\022\022\n\nFieldName3\030\003 \001("
    "\005\022\024\n\014_field_name4\030\004 \001(\005\022\023\n\013FIELD_NAME5\030\005"
    " \001(\005\022\032\n\013field_name6\030\006 \001(\005R\005@type*@\n\013Fore"
    "ignEnum\022\017\n\013FOREIGN_FOO\020\004\022\017\n\013FOREIGN_BAR\020"
    "\005\022\017\n\013FOREIGN_BAZ\020\006*K\n\024TestEnumWithDupVal"
    "ue\022\010\n\004FOO1\020\001\022\010\n\004BAR1\020\002\022\007\n\003BAZ\020\003\022\010\n\004FOO2\020"
    "\001\022\010\n\004BAR2\020\002\032\002\020\001*\211\001\n\016TestSparseEnum\022\014\n\010SP"
    "ARSE_A\020{\022\016\n\010SPARSE_B\020\246\347\003\022\017\n\010SPARSE_C\020\262\261\200"
    "\006\022\025\n\010SPARSE_D\020\361\377\377\377\377\377\377\377\377\001\022\025\n\010SPARSE_E\020\264\336\374"
    "\377\377\377\377\377\377\001\022\014\n\010SPARSE_F\020\000\022\014\n\010SPARSE_G\020\0022\231\001\n\013"
    "TestService\022D\n\003Foo\022\035.protobuf_unittest.F"
    "ooRequest\032\036.protobuf_unittest.FooRespons"
    "e\022D\n\003Bar\022\035.protobuf_unittest.BarRequest\032"
    "\036.protobuf_unittest.BarResponse:F\n\030optio"
    "nal_int32_extension\022$.protobuf_unittest."
    "TestAllExtensions\030\001 \001(\005:F\n\030optional_int6"
    "4_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030\002 \001(\003:G\n\031optional_uint32_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\030\003 \001(\r:G\n\031optional_uint64_extension\022$."
    "protobuf_unittest.TestAllExtensions\030\004 \001("
    "\004:G\n\031optional_sint32_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030\005 \001(\021:G\n\031op"
    "tional_sint64_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\030\006 \001(\022:H\n\032optional_"
    "fixed32_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030\007 \001(\007:H\n\032optional_fixed6"
    "4_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030\010 \001(\006:I\n\033optional_sfixed32_ext"
    "ension\022$.protobuf_unittest.TestAllExtens"
    "ions\030\t \001(\017:I\n\033optional_sfixed64_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "\n \001(\020:F\n\030optional_float_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030\013 \001(\002:G\n"
    "\031optional_double_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\030\014 \001(\001:E\n\027option"
    "al_bool_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030\r \001(\010:G\n\031optional_string"
    "_extension\022$.protobuf_unittest.TestAllEx"
    "tensions\030\016 \001(\t:F\n\030optional_bytes_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030\017 \001(\014:q\n\027optionalgroup_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030\020 \001(\n2*."
    "protobuf_unittest.OptionalGroup_extensio"
    "n:~\n!optional_nested_message_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030\022 \001"
    "(\0132-.protobuf_unittest.TestAllTypes.Nest"
    "edMessage:s\n\"optional_foreign_message_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\023 \001(\0132!.protobuf_unittest.ForeignM"
    "essage:x\n!optional_import_message_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030\024 \001(\0132\'.protobuf_unittest_import.Impor"
    "tMessage:x\n\036optional_nested_enum_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030\025 \001(\0162*.protobuf_unittest.TestAllTypes."
    "NestedEnum:m\n\037optional_foreign_enum_exte"
    "nsion\022$.protobuf_unittest.TestAllExtensi"
    "ons\030\026 \001(\0162\036.protobuf_unittest.ForeignEnu"
    "m:r\n\036optional_import_enum_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030\027 \001(\0162"
    "$.protobuf_unittest_import.ImportEnum:Q\n"
    "\037optional_string_piece_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030\030 \001(\tB\002\010\002"
    ":I\n\027optional_cord_extension\022$.protobuf_u"
    "nittest.TestAllExtensions\030\031 \001(\tB\002\010\001:\205\001\n("
    "optional_public_import_message_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030\032"
    " \001(\0132-.protobuf_unittest_import.PublicIm"
    "portMessage:\200\001\n\037optional_lazy_message_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\033 \001(\0132-.protobuf_unittest.TestAllT"
    "ypes.NestedMessageB\002(\001:F\n\030repeated_int32"
    "_extension\022$.protobuf_unittest.TestAllEx"
    "tensions\030\037 \003(\005:F\n\030repeated_int64_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030  \003(\003:G\n\031repeated_uint32_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030! \003(\r:"
    "G\n\031repeated_uint64_extension\022$.protobuf_"
    "unittest.TestAllExtensions\030\" \003(\004:G\n\031repe"
    "ated_sint32_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030# \003(\021:G\n\031repeated_si"
    "nt64_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030$ \003(\022:H\n\032repeated_fixed32_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030% \003(\007:H\n\032repeated_fixed64_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030& \003(\006:I\n\033repeated_sfixed32_extension\022$."
    "protobuf_unittest.TestAllExtensions\030\' \003("
    "\017:I\n\033repeated_sfixed64_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030( \003(\020:F\n\030"
    "repeated_float_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030) \003(\002:G\n\031repeated"
    "_double_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030* \003(\001:E\n\027repeated_bool_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030+ \003(\010:G\n\031repeated_string_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    ", \003(\t:F\n\030repeated_bytes_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030- \003(\014:q\n"
    "\027repeatedgroup_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030. \003(\n2*.protobuf_"
    "unittest.RepeatedGroup_extension:~\n!repe"
    "ated_nested_message_extension\022$.protobuf"
    "_unittest.TestAllExtensions\0300 \003(\0132-.prot"
    "obuf_unittest.TestAllTypes.NestedMessage"
    ":s\n\"repeated_foreign_message_extension\022$"
    ".protobuf_unittest.TestAllExtensions\0301 \003"
    "(\0132!.protobuf_unittest.ForeignMessage:x\n"
    "!repeated_import_message_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\0302 \003(\0132\'"
    ".protobuf_unittest_import.ImportMessage:"
    "x\n\036repeated_nested_enum_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\0303 \003(\0162*."
    "protobuf_unittest.TestAllTypes.NestedEnu"
    "m:m\n\037repeated_foreign_enum_extension\022$.p"
    "rotobuf_unittest.TestAllExtensions\0304 \003(\016"
    "2\036.protobuf_unittest.ForeignEnum:r\n\036repe"
    "ated_import_enum_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\0305 \003(\0162$.protobu"
    "f_unittest_import.ImportEnum:Q\n\037repeated"
    "_string_piece_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\0306 \003(\tB\002\010\002:I\n\027repea"
    "ted_cord_extension\022$.protobuf_unittest.T"
    "estAllExtensions\0307 \003(\tB\002\010\001:\200\001\n\037repeated_"
    "lazy_message_extension\022$.protobuf_unitte"
    "st.TestAllExtensions\0309 \003(\0132-.protobuf_un"
    "ittest.TestAllTypes.NestedMessageB\002(\001:I\n"
    "\027default_int32_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030= \001(\005:\00241:I\n\027defa"
    "ult_int64_extension\022$.protobuf_unittest."
    "TestAllExtensions\030> \001(\003:\00242:J\n\030default_u"
    "int32_extension\022$.protobuf_unittest.Test"
    "AllExtensions\030\? \001(\r:\00243:J\n\030default_uint6"
    "4_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030@ \001(\004:\00244:K\n\030default_sint32_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030A \001(\021:\003-45:J\n\030default_sint64_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\030B \001(\022:\00246:K\n\031default_fixed32_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "C \001(\007:\00247:K\n\031default_fixed64_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030D \001"
    "(\006:\00248:L\n\032default_sfixed32_extension\022$.p"
    "rotobuf_unittest.TestAllExtensions\030E \001(\017"
    ":\00249:M\n\032default_sfixed64_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030F \001(\020:\003"
    "-50:K\n\027default_float_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030G \001(\002:\00451.5"
    ":M\n\030default_double_extension\022$.protobuf_"
    "unittest.TestAllExtensions\030H \001(\001:\00552000:"
    "J\n\026default_bool_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030I \001(\010:\004true:M\n\030d"
    "efault_string_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\030J \001(\t:\005hello:L\n\027de"
    "fault_bytes_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030K \001(\014:\005world:|\n\035defa"
    "ult_nested_enum_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030Q \001(\0162*.protobuf"
    "_unittest.TestAllTypes.NestedEnum:\003BAR:y"
    "\n\036default_foreign_enum_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030R \001(\0162\036.p"
    "rotobuf_unittest.ForeignEnum:\013FOREIGN_BA"
    "R:}\n\035default_import_enum_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030S \001(\0162$"
    ".protobuf_unittest_import.ImportEnum:\nIM"
    "PORT_BAR:U\n\036default_string_piece_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030T \001(\t:\003abcB\002\010\002:M\n\026default_cord_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "U \001(\t:\003123B\002\010\001:D\n\026oneof_uint32_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030o"
    " \001(\r:{\n\036oneof_nested_message_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030p \001"
    "(\0132-.protobuf_unittest.TestAllTypes.Nest"
    "edMessage:D\n\026oneof_string_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030q \001(\t:"
    "C\n\025oneof_bytes_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030r \001(\014:B\n\023my_exten"
    "sion_string\022%.protobuf_unittest.TestFiel"
    "dOrderings\0302 \001(\t:\?\n\020my_extension_int\022%.p"
    "rotobuf_unittest.TestFieldOrderings\030\005 \001("
    "\005:K\n\026packed_int32_extension\022\'.protobuf_u"
    "nittest.TestPackedExtensions\030Z \003(\005B\002\020\001:K"
    "\n\026packed_int64_extension\022\'.protobuf_unit"
    "test.TestPackedExtensions\030[ \003(\003B\002\020\001:L\n\027p"
    "acked_uint32_extension\022\'.protobuf_unitte"
    "st.TestPackedExtensions\030\\ \003(\rB\002\020\001:L\n\027pac"
    "ked_uint64_extension\022\'.protobuf_unittest"
    ".TestPackedExtensions\030] \003(\004B\002\020\001:L\n\027packe"
    "d_sint32_extension\022\'.protobuf_unittest.T"
    "estPackedExtensions\030^ \003(\021B\002\020\001:L\n\027packed_"
    "sint64_extension\022\'.protobuf_unittest.Tes"
    "tPackedExtensions\030_ \003(\022B\002\020\001:M\n\030packed_fi"
    "xed32_extension\022\'.protobuf_unittest.Test"
    "PackedExtensions\030` \003(\007B\002\020\001:M\n\030packed_fix"
    "ed64_extension\022\'.protobuf_unittest.TestP"
    "ackedExtensions\030a \003(\006B\002\020\001:N\n\031packed_sfix"
    "ed32_extension\022\'.protobuf_unittest.TestP"
    "ackedExtensions\030b \003(\017B\002\020\001:N\n\031packed_sfix"
    "ed64_extension\022\'.protobuf_unittest.TestP"
    "ackedExtensions\030c \003(\020B\002\020\001:K\n\026packed_floa"
    "t_extension\022\'.protobuf_unittest.TestPack"
    "edExtensions\030d \003(\002B\002\020\001:L\n\027packed_double_"
    "extension\022\'.protobuf_unittest.TestPacked"
    "Extensions\030e \003(\001B\002\020\001:J\n\025packed_bool_exte"
    "nsion\022\'.protobuf_unittest.TestPackedExte"
    "nsions\030f \003(\010B\002\020\001:j\n\025packed_enum_extensio"
    "n\022\'.protobuf_unittest.TestPackedExtensio"
    "ns\030g \003(\0162\036.protobuf_unittest.ForeignEnum"
    "B\002\020\001:O\n\030unpacked_int32_extension\022).proto"
    "buf_unittest.TestUnpackedExtensions\030Z \003("
    "\005B\002\020\000:O\n\030unpacked_int64_extension\022).prot"
    "obuf_unittest.TestUnpackedExtensions\030[ \003"
    "(\003B\002\020\000:P\n\031unpacked_uint32_extension\022).pr"
    "otobuf_unittest.TestUnpackedExtensions\030\\"
    " \003(\rB\002\020\000:P\n\031unpacked_uint64_extension\022)."
    "protobuf_unittest.TestUnpackedExtensions"
    "\030] \003(\004B\002\020\000:P\n\031unpacked_sint32_extension\022"
    ").protobuf_unittest.TestUnpackedExtensio"
    "ns\030^ \003(\021B\002\020\000:P\n\031unpacked_sint64_extensio"
    "n\022).protobuf_unittest.TestUnpackedExtens"
    "ions\030_ \003(\022B\002\020\000:Q\n\032unpacked_fixed32_exten"
    "sion\022).protobuf_unittest.TestUnpackedExt"
    "ensions\030` \003(\007B\002\020\000:Q\n\032unpacked_fixed64_ex"
    "tension\022).protobuf_unittest.TestUnpacked"
    "Extensions\030a \003(\006B\002\020\000:R\n\033unpacked_sfixed3"
    "2_extension\022).protobuf_unittest.TestUnpa"
    "ckedExtensions\030b \003(\017B\002\020\000:R\n\033unpacked_sfi"
    "xed64_extension\022).protobuf_unittest.Test"
    "UnpackedExtensions\030c \003(\020B\002\020\000:O\n\030unpacked"
    "_float_extension\022).protobuf_unittest.Tes"
    "tUnpackedExtensions\030d \003(\002B\002\020\000:P\n\031unpacke"
    "d_double_extension\022).protobuf_unittest.T"
    "estUnpackedExtensions\030e \003(\001B\002\020\000:N\n\027unpac"
    "ked_bool_extension\022).protobuf_unittest.T"
    "estUnpackedExtensions\030f \003(\010B\002\020\000:n\n\027unpac"
    "ked_enum_extension\022).protobuf_unittest.T"
    "estUnpackedExtensions\030g \003(\0162\036.protobuf_u"
    "nittest.ForeignEnumB\002\020\000B\035B\rUnittestProto"
    "H\001\200\001\001\210\001\001\220\001\001\370\001\001", 22094);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/unittest.proto", &protobuf_RegisterTypes);
  ::protobuf_unittest_import::protobuf_AddDesc_google_2fprotobuf_2funittest_5fimport_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funittest_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto_once_);
void protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto_once_,
                 &protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_2eproto_;
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForeignEnum_descriptor_;
}
bool ForeignEnum_IsValid(int value) {
  switch (value) {
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestEnumWithDupValue_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumWithDupValue_descriptor_;
}
bool TestEnumWithDupValue_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestSparseEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestSparseEnum_descriptor_;
}
bool TestSparseEnum_IsValid(int value) {
  switch (value) {
    case -53452:
    case -15:
    case 0:
    case 2:
    case 123:
    case 62374:
    case 12589234:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_NestedEnum_descriptor_;
}
bool TestAllTypes_NestedEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestAllTypes_NestedEnum TestAllTypes::FOO;
const TestAllTypes_NestedEnum TestAllTypes::BAR;
const TestAllTypes_NestedEnum TestAllTypes::BAZ;
const TestAllTypes_NestedEnum TestAllTypes::NEG;
const TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MIN;
const TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MAX;
const int TestAllTypes::NestedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypes_NestedMessage::kBbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}
TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}

void TestAllTypes_NestedMessage::InitAsDefaultInstance() {
}

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(const TestAllTypes_NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}

void TestAllTypes_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  bb_ = 0;
}

TestAllTypes_NestedMessage::~TestAllTypes_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.NestedMessage)
  SharedDtor();
}

void TestAllTypes_NestedMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestAllTypes_NestedMessage::ArenaDtor(void* object) {
  TestAllTypes_NestedMessage* _this = reinterpret_cast< TestAllTypes_NestedMessage* >(object);
  (void)_this;
}
void TestAllTypes_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestAllTypes_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_NestedMessage_descriptor_;
}

const TestAllTypes_NestedMessage& TestAllTypes_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypes_NestedMessage> TestAllTypes_NestedMessage_default_instance_;

TestAllTypes_NestedMessage* TestAllTypes_NestedMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestAllTypes_NestedMessage>(arena);
}

void TestAllTypes_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.NestedMessage)
  bb_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestAllTypes_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bb = 1;
      case 1: {
        if (tag == 8) {
          set_has_bb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.NestedMessage)
  return false;
#undef DO_
}

void TestAllTypes_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bb(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.NestedMessage)
}

::google::protobuf::uint8* TestAllTypes_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bb(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.NestedMessage)
  return target;
}

size_t TestAllTypes_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.NestedMessage)
  size_t total_size = 0;

  // optional int32 bb = 1;
  if (has_bb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bb());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestAllTypes_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypes_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestAllTypes.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestAllTypes.NestedMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestAllTypes_NestedMessage::MergeFrom(const TestAllTypes_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypes_NestedMessage::UnsafeMergeFrom(const TestAllTypes_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bb()) {
      set_bb(from.bb());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestAllTypes_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_NestedMessage::CopyFrom(const TestAllTypes_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypes_NestedMessage::IsInitialized() const {

  return true;
}

void TestAllTypes_NestedMessage::Swap(TestAllTypes_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypes_NestedMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestAllTypes_NestedMessage::UnsafeArenaSwap(TestAllTypes_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypes_NestedMessage::InternalSwap(TestAllTypes_NestedMessage* other) {
  std::swap(bb_, other->bb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestAllTypes_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_NestedMessage_descriptor_;
  metadata.reflection = TestAllTypes_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypes_OptionalGroup::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}
TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}

void TestAllTypes_OptionalGroup::InitAsDefaultInstance() {
}

TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(const TestAllTypes_OptionalGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}

void TestAllTypes_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

TestAllTypes_OptionalGroup::~TestAllTypes_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.OptionalGroup)
  SharedDtor();
}

void TestAllTypes_OptionalGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestAllTypes_OptionalGroup::ArenaDtor(void* object) {
  TestAllTypes_OptionalGroup* _this = reinterpret_cast< TestAllTypes_OptionalGroup* >(object);
  (void)_this;
}
void TestAllTypes_OptionalGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestAllTypes_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_OptionalGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_OptionalGroup_descriptor_;
}

const TestAllTypes_OptionalGroup& TestAllTypes_OptionalGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypes_OptionalGroup> TestAllTypes_OptionalGroup_default_instance_;

TestAllTypes_OptionalGroup* TestAllTypes_OptionalGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestAllTypes_OptionalGroup>(arena);
}

void TestAllTypes_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestAllTypes_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.OptionalGroup)
  return false;
#undef DO_
}

void TestAllTypes_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.OptionalGroup)
}

::google::protobuf::uint8* TestAllTypes_OptionalGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  // optional int32 a = 17;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.OptionalGroup)
  return target;
}

size_t TestAllTypes_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  size_t total_size = 0;

  // optional int32 a = 17;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_OptionalGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestAllTypes_OptionalGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypes_OptionalGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestAllTypes.OptionalGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestAllTypes.OptionalGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestAllTypes_OptionalGroup::MergeFrom(const TestAllTypes_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypes_OptionalGroup::UnsafeMergeFrom(const TestAllTypes_OptionalGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestAllTypes_OptionalGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_OptionalGroup::CopyFrom(const TestAllTypes_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypes_OptionalGroup::IsInitialized() const {

  return true;
}

void TestAllTypes_OptionalGroup::Swap(TestAllTypes_OptionalGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypes_OptionalGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestAllTypes_OptionalGroup::UnsafeArenaSwap(TestAllTypes_OptionalGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypes_OptionalGroup::InternalSwap(TestAllTypes_OptionalGroup* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestAllTypes_OptionalGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_OptionalGroup_descriptor_;
  metadata.reflection = TestAllTypes_OptionalGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypes_RepeatedGroup::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}
TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

void TestAllTypes_RepeatedGroup::InitAsDefaultInstance() {
}

TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(const TestAllTypes_RepeatedGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

void TestAllTypes_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

TestAllTypes_RepeatedGroup::~TestAllTypes_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
  SharedDtor();
}

void TestAllTypes_RepeatedGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestAllTypes_RepeatedGroup::ArenaDtor(void* object) {
  TestAllTypes_RepeatedGroup* _this = reinterpret_cast< TestAllTypes_RepeatedGroup* >(object);
  (void)_this;
}
void TestAllTypes_RepeatedGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestAllTypes_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_RepeatedGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_RepeatedGroup_descriptor_;
}

const TestAllTypes_RepeatedGroup& TestAllTypes_RepeatedGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypes_RepeatedGroup> TestAllTypes_RepeatedGroup_default_instance_;

TestAllTypes_RepeatedGroup* TestAllTypes_RepeatedGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestAllTypes_RepeatedGroup>(arena);
}

void TestAllTypes_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestAllTypes_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return false;
#undef DO_
}

void TestAllTypes_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

::google::protobuf::uint8* TestAllTypes_RepeatedGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  // optional int32 a = 47;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return target;
}

size_t TestAllTypes_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  size_t total_size = 0;

  // optional int32 a = 47;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_RepeatedGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestAllTypes_RepeatedGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypes_RepeatedGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestAllTypes.RepeatedGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestAllTypes.RepeatedGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestAllTypes_RepeatedGroup::MergeFrom(const TestAllTypes_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypes_RepeatedGroup::UnsafeMergeFrom(const TestAllTypes_RepeatedGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestAllTypes_RepeatedGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_RepeatedGroup::CopyFrom(const TestAllTypes_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypes_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestAllTypes_RepeatedGroup::Swap(TestAllTypes_RepeatedGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypes_RepeatedGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestAllTypes_RepeatedGroup::UnsafeArenaSwap(TestAllTypes_RepeatedGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypes_RepeatedGroup::InternalSwap(TestAllTypes_RepeatedGroup* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestAllTypes_RepeatedGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_RepeatedGroup_descriptor_;
  metadata.reflection = TestAllTypes_RepeatedGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestAllTypes::_slow_mutable_optionalgroup() {
  optionalgroup_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_OptionalGroup >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes_OptionalGroup* TestAllTypes::_slow_release_optionalgroup() {
  if (optionalgroup_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes_OptionalGroup* temp = new ::protobuf_unittest::TestAllTypes_OptionalGroup(*optionalgroup_);
    optionalgroup_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes_OptionalGroup* TestAllTypes::unsafe_arena_release_optionalgroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optionalgroup)
  clear_has_optionalgroup();
  ::protobuf_unittest::TestAllTypes_OptionalGroup* temp = optionalgroup_;
  optionalgroup_ = NULL;
  return temp;
}
void TestAllTypes::_slow_set_allocated_optionalgroup(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes_OptionalGroup** optionalgroup) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optionalgroup) == NULL) {
      message_arena->Own(*optionalgroup);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optionalgroup)) {
      ::protobuf_unittest::TestAllTypes_OptionalGroup* new_optionalgroup = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_OptionalGroup >(
            message_arena);
      new_optionalgroup->CopyFrom(**optionalgroup);
      *optionalgroup = new_optionalgroup;
    }
}
void TestAllTypes::unsafe_arena_set_allocated_optionalgroup(
    ::protobuf_unittest::TestAllTypes_OptionalGroup* optionalgroup) {
  if (GetArenaNoVirtual() == NULL) {
    delete optionalgroup_;
  }
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optionalgroup)
}
void TestAllTypes::_slow_mutable_optional_nested_message() {
  optional_nested_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::_slow_release_optional_nested_message() {
  if (optional_nested_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = new ::protobuf_unittest::TestAllTypes_NestedMessage(*optional_nested_message_);
    optional_nested_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_optional_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_nested_message)
  clear_has_optional_nested_message();
  ::protobuf_unittest::TestAllTypes_NestedMessage* temp = optional_nested_message_;
  optional_nested_message_ = NULL;
  return temp;
}
void TestAllTypes::_slow_set_allocated_optional_nested_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes_NestedMessage** optional_nested_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_nested_message) == NULL) {
      message_arena->Own(*optional_nested_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_nested_message)) {
      ::protobuf_unittest::TestAllTypes_NestedMessage* new_optional_nested_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
            message_arena);
      new_optional_nested_message->CopyFrom(**optional_nested_message);
      *optional_nested_message = new_optional_nested_message;
    }
}
void TestAllTypes::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_unittest::TestAllTypes_NestedMessage* optional_nested_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_nested_message)
}
void TestAllTypes::_slow_mutable_optional_foreign_message() {
  optional_foreign_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::ForeignMessage* TestAllTypes::_slow_release_optional_foreign_message() {
  if (optional_foreign_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::ForeignMessage* temp = new ::protobuf_unittest::ForeignMessage(*optional_foreign_message_);
    optional_foreign_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::ForeignMessage* TestAllTypes::unsafe_arena_release_optional_foreign_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_foreign_message)
  clear_has_optional_foreign_message();
  ::protobuf_unittest::ForeignMessage* temp = optional_foreign_message_;
  optional_foreign_message_ = NULL;
  return temp;
}
void TestAllTypes::_slow_set_allocated_optional_foreign_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::ForeignMessage** optional_foreign_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_foreign_message) == NULL) {
      message_arena->Own(*optional_foreign_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_foreign_message)) {
      ::protobuf_unittest::ForeignMessage* new_optional_foreign_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
            message_arena);
      new_optional_foreign_message->CopyFrom(**optional_foreign_message);
      *optional_foreign_message = new_optional_foreign_message;
    }
}
void TestAllTypes::unsafe_arena_set_allocated_optional_foreign_message(
    ::protobuf_unittest::ForeignMessage* optional_foreign_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_foreign_message_;
  }
  optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    set_has_optional_foreign_message();
  } else {
    clear_has_optional_foreign_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_foreign_message)
}
void TestAllTypes::_slow_mutable_optional_import_message() {
  optional_import_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest_import::ImportMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::_slow_release_optional_import_message() {
  if (optional_import_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest_import::ImportMessage* temp = new ::protobuf_unittest_import::ImportMessage(*optional_import_message_);
    optional_import_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::unsafe_arena_release_optional_import_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_import_message)
  clear_has_optional_import_message();
  ::protobuf_unittest_import::ImportMessage* temp = optional_import_message_;
  optional_import_message_ = NULL;
  return temp;
}
void TestAllTypes::_slow_set_allocated_optional_import_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest_import::ImportMessage** optional_import_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_import_message) == NULL) {
      message_arena->Own(*optional_import_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_import_message)) {
      ::protobuf_unittest_import::ImportMessage* new_optional_import_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest_import::ImportMessage >(
            message_arena);
      new_optional_import_message->CopyFrom(**optional_import_message);
      *optional_import_message = new_optional_import_message;
    }
}
void TestAllTypes::unsafe_arena_set_allocated_optional_import_message(
    ::protobuf_unittest_import::ImportMessage* optional_import_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_import_message_;
  }
  optional_import_message_ = optional_import_message;
  if (optional_import_message) {
    set_has_optional_import_message();
  } else {
    clear_has_optional_import_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_import_message)
}
void TestAllTypes::_slow_mutable_optional_public_import_message() {
  optional_public_import_message_ = ::google::protobuf::Arena::Create< ::protobuf_unittest_import::PublicImportMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest_import::PublicImportMessage* TestAllTypes::_slow_release_optional_public_import_message() {
  if (optional_public_import_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest_import::PublicImportMessage* temp = new ::protobuf_unittest_import::PublicImportMessage(*optional_public_import_message_);
    optional_public_import_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest_import::PublicImportMessage* TestAllTypes::unsafe_arena_release_optional_public_import_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_public_import_message)
  clear_has_optional_public_import_message();
  ::protobuf_unittest_import::PublicImportMessage* temp = optional_public_import_message_;
  optional_public_import_message_ = NULL;
  return temp;
}
void TestAllTypes::unsafe_arena_set_allocated_optional_public_import_message(
    ::protobuf_unittest_import::PublicImportMessage* optional_public_import_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_public_import_message_;
  }
  optional_public_import_message_ = optional_public_import_message;
  if (optional_public_import_message) {
    set_has_optional_public_import_message();
  } else {
    clear_has_optional_public_import_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_public_import_message)
}
void TestAllTypes::_slow_mutable_optional_lazy_message() {
  optional_lazy_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::_slow_release_optional_lazy_message() {
  if (optional_lazy_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = new ::protobuf_unittest::TestAllTypes_NestedMessage(*optional_lazy_message_);
    optional_lazy_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_optional_lazy_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_lazy_message)
  clear_has_optional_lazy_message();
  ::protobuf_unittest::TestAllTypes_NestedMessage* temp = optional_lazy_message_;
  optional_lazy_message_ = NULL;
  return temp;
}
void TestAllTypes::_slow_set_allocated_optional_lazy_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes_NestedMessage** optional_lazy_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_lazy_message) == NULL) {
      message_arena->Own(*optional_lazy_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_lazy_message)) {
      ::protobuf_unittest::TestAllTypes_NestedMessage* new_optional_lazy_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
            message_arena);
      new_optional_lazy_message->CopyFrom(**optional_lazy_message);
      *optional_lazy_message = new_optional_lazy_message;
    }
}
void TestAllTypes::unsafe_arena_set_allocated_optional_lazy_message(
    ::protobuf_unittest::TestAllTypes_NestedMessage* optional_lazy_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_lazy_message_;
  }
  optional_lazy_message_ = optional_lazy_message;
  if (optional_lazy_message) {
    set_has_optional_lazy_message();
  } else {
    clear_has_optional_lazy_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_lazy_message)
}
::std::string* TestAllTypes::_default_default_string_ = NULL;
::std::string* TestAllTypes::_default_default_bytes_ = NULL;
::std::string* TestAllTypes::_default_default_string_piece_ = NULL;
::std::string* TestAllTypes::_default_default_cord_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypes::kOptionalInt32FieldNumber;
const int TestAllTypes::kOptionalInt64FieldNumber;
const int TestAllTypes::kOptionalUint32FieldNumber;
const int TestAllTypes::kOptionalUint64FieldNumber;
const int TestAllTypes::kOptionalSint32FieldNumber;
const int TestAllTypes::kOptionalSint64FieldNumber;
const int TestAllTypes::kOptionalFixed32FieldNumber;
const int TestAllTypes::kOptionalFixed64FieldNumber;
const int TestAllTypes::kOptionalSfixed32FieldNumber;
const int TestAllTypes::kOptionalSfixed64FieldNumber;
const int TestAllTypes::kOptionalFloatFieldNumber;
const int TestAllTypes::kOptionalDoubleFieldNumber;
const int TestAllTypes::kOptionalBoolFieldNumber;
const int TestAllTypes::kOptionalStringFieldNumber;
const int TestAllTypes::kOptionalBytesFieldNumber;
const int TestAllTypes::kOptionalgroupFieldNumber;
const int TestAllTypes::kOptionalNestedMessageFieldNumber;
const int TestAllTypes::kOptionalForeignMessageFieldNumber;
const int TestAllTypes::kOptionalImportMessageFieldNumber;
const int TestAllTypes::kOptionalNestedEnumFieldNumber;
const int TestAllTypes::kOptionalForeignEnumFieldNumber;
const int TestAllTypes::kOptionalImportEnumFieldNumber;
const int TestAllTypes::kOptionalStringPieceFieldNumber;
const int TestAllTypes::kOptionalCordFieldNumber;
const int TestAllTypes::kOptionalPublicImportMessageFieldNumber;
const int TestAllTypes::kOptionalLazyMessageFieldNumber;
const int TestAllTypes::kRepeatedInt32FieldNumber;
const int TestAllTypes::kRepeatedInt64FieldNumber;
const int TestAllTypes::kRepeatedUint32FieldNumber;
const int TestAllTypes::kRepeatedUint64FieldNumber;
const int TestAllTypes::kRepeatedSint32FieldNumber;
const int TestAllTypes::kRepeatedSint64FieldNumber;
const int TestAllTypes::kRepeatedFixed32FieldNumber;
const int TestAllTypes::kRepeatedFixed64FieldNumber;
const int TestAllTypes::kRepeatedSfixed32FieldNumber;
const int TestAllTypes::kRepeatedSfixed64FieldNumber;
const int TestAllTypes::kRepeatedFloatFieldNumber;
const int TestAllTypes::kRepeatedDoubleFieldNumber;
const int TestAllTypes::kRepeatedBoolFieldNumber;
const int TestAllTypes::kRepeatedStringFieldNumber;
const int TestAllTypes::kRepeatedBytesFieldNumber;
const int TestAllTypes::kRepeatedgroupFieldNumber;
const int TestAllTypes::kRepeatedNestedMessageFieldNumber;
const int TestAllTypes::kRepeatedForeignMessageFieldNumber;
const int TestAllTypes::kRepeatedImportMessageFieldNumber;
const int TestAllTypes::kRepeatedNestedEnumFieldNumber;
const int TestAllTypes::kRepeatedForeignEnumFieldNumber;
const int TestAllTypes::kRepeatedImportEnumFieldNumber;
const int TestAllTypes::kRepeatedStringPieceFieldNumber;
const int TestAllTypes::kRepeatedCordFieldNumber;
const int TestAllTypes::kRepeatedLazyMessageFieldNumber;
const int TestAllTypes::kDefaultInt32FieldNumber;
const int TestAllTypes::kDefaultInt64FieldNumber;
const int TestAllTypes::kDefaultUint32FieldNumber;
const int TestAllTypes::kDefaultUint64FieldNumber;
const int TestAllTypes::kDefaultSint32FieldNumber;
const int TestAllTypes::kDefaultSint64FieldNumber;
const int TestAllTypes::kDefaultFixed32FieldNumber;
const int TestAllTypes::kDefaultFixed64FieldNumber;
const int TestAllTypes::kDefaultSfixed32FieldNumber;
const int TestAllTypes::kDefaultSfixed64FieldNumber;
const int TestAllTypes::kDefaultFloatFieldNumber;
const int TestAllTypes::kDefaultDoubleFieldNumber;
const int TestAllTypes::kDefaultBoolFieldNumber;
const int TestAllTypes::kDefaultStringFieldNumber;
const int TestAllTypes::kDefaultBytesFieldNumber;
const int TestAllTypes::kDefaultNestedEnumFieldNumber;
const int TestAllTypes::kDefaultForeignEnumFieldNumber;
const int TestAllTypes::kDefaultImportEnumFieldNumber;
const int TestAllTypes::kDefaultStringPieceFieldNumber;
const int TestAllTypes::kDefaultCordFieldNumber;
const int TestAllTypes::kOneofUint32FieldNumber;
const int TestAllTypes::kOneofNestedMessageFieldNumber;
const int TestAllTypes::kOneofStringFieldNumber;
const int TestAllTypes::kOneofBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypes::TestAllTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes)
}
TestAllTypes::TestAllTypes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_int32_(arena),
  repeated_int64_(arena),
  repeated_uint32_(arena),
  repeated_uint64_(arena),
  repeated_sint32_(arena),
  repeated_sint64_(arena),
  repeated_fixed32_(arena),
  repeated_fixed64_(arena),
  repeated_sfixed32_(arena),
  repeated_sfixed64_(arena),
  repeated_float_(arena),
  repeated_double_(arena),
  repeated_bool_(arena),
  repeated_string_(arena),
  repeated_bytes_(arena),
  repeatedgroup_(arena),
  repeated_nested_message_(arena),
  repeated_foreign_message_(arena),
  repeated_import_message_(arena),
  repeated_nested_enum_(arena),
  repeated_foreign_enum_(arena),
  repeated_import_enum_(arena),
  repeated_string_piece_(arena),
  repeated_cord_(arena),
  repeated_lazy_message_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes)
}

void TestAllTypes::InitAsDefaultInstance() {
  optionalgroup_ = const_cast< ::protobuf_unittest::TestAllTypes_OptionalGroup*>(
      ::protobuf_unittest::TestAllTypes_OptionalGroup::internal_default_instance());
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(
      ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  optional_foreign_message_ = const_cast< ::protobuf_unittest::ForeignMessage*>(
      ::protobuf_unittest::ForeignMessage::internal_default_instance());
  optional_import_message_ = const_cast< ::protobuf_unittest_import::ImportMessage*>(
      ::protobuf_unittest_import::ImportMessage::internal_default_instance());
  optional_public_import_message_ = const_cast< ::protobuf_unittest_import::PublicImportMessage*>(
      ::protobuf_unittest_import::PublicImportMessage::internal_default_instance());
  optional_lazy_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(
      ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  TestAllTypes_default_oneof_instance_->oneof_uint32_ = 0u;
  TestAllTypes_default_oneof_instance_->oneof_nested_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(
      ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
  TestAllTypes_default_oneof_instance_->oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestAllTypes_default_oneof_instance_->oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestAllTypes::TestAllTypes(const TestAllTypes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes)
}

void TestAllTypes::SharedCtor() {
  _cached_size_ = 0;
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_string_.UnsafeSetDefault(_default_default_string_);
  default_bytes_.UnsafeSetDefault(_default_default_bytes_);
  default_string_piece_.UnsafeSetDefault(_default_default_string_piece_);
  default_cord_.UnsafeSetDefault(_default_default_cord_);
  optionalgroup_ = NULL;
  optional_nested_message_ = NULL;
  optional_foreign_message_ = NULL;
  optional_import_message_ = NULL;
  optional_public_import_message_ = NULL;
  optional_lazy_message_ = NULL;
  ::memset(&optional_int64_, 0, reinterpret_cast<char*>(&optional_bool_) -
    reinterpret_cast<char*>(&optional_int64_) + sizeof(optional_bool_));
  default_import_enum_ = 8;
  optional_nested_enum_ = 1;
  optional_foreign_enum_ = 4;
  optional_import_enum_ = 7;
  default_int32_ = 41;
  default_int64_ = GOOGLE_LONGLONG(42);
  default_uint64_ = GOOGLE_ULONGLONG(44);
  default_uint32_ = 43u;
  default_sint32_ = -45;
  default_sint64_ = GOOGLE_LONGLONG(46);
  default_fixed64_ = GOOGLE_ULONGLONG(48);
  default_fixed32_ = 47u;
  default_sfixed32_ = 49;
  default_sfixed64_ = GOOGLE_LONGLONG(-50);
  default_double_ = 52000;
  default_float_ = 51.5f;
  default_bool_ = true;
  default_nested_enum_ = 2;
  default_foreign_enum_ = 5;
  clear_has_oneof_field();
}

TestAllTypes::~TestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes)
  SharedDtor();
}

void TestAllTypes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  optional_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  optional_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  optional_string_piece_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  optional_cord_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  default_string_.Destroy(_default_default_string_, arena);
  default_bytes_.Destroy(_default_default_bytes_, arena);
  default_string_piece_.Destroy(_default_default_string_piece_, arena);
  default_cord_.Destroy(_default_default_cord_, arena);
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (this != &TestAllTypes_default_instance_.get()) {
    delete optionalgroup_;
    delete optional_nested_message_;
    delete optional_foreign_message_;
    delete optional_import_message_;
    delete optional_public_import_message_;
    delete optional_lazy_message_;
  }
}

void TestAllTypes::ArenaDtor(void* object) {
  TestAllTypes* _this = reinterpret_cast< TestAllTypes* >(object);
  (void)_this;
}
void TestAllTypes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestAllTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_descriptor_;
}

const TestAllTypes& TestAllTypes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypes> TestAllTypes_default_instance_;

TestAllTypes* TestAllTypes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestAllTypes>(arena);
}

void TestAllTypes::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestAllTypes)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      oneof_field_.oneof_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kOneofBytes: {
      oneof_field_.oneof_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void TestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestAllTypes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestAllTypes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(optional_int64_, optional_fixed64_);
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(optional_sfixed64_, optional_bool_);
    if (has_optional_string()) {
      optional_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_optional_bytes()) {
      optional_bytes_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestAllTypes_OptionalGroup::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_optional_nested_message()) {
      if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
    }
    if (has_optional_foreign_message()) {
      if (optional_foreign_message_ != NULL) optional_foreign_message_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_optional_import_message()) {
      if (optional_import_message_ != NULL) optional_import_message_->::protobuf_unittest_import::ImportMessage::Clear();
    }
    optional_nested_enum_ = 1;
    optional_foreign_enum_ = 4;
    optional_import_enum_ = 7;
    if (has_optional_string_piece()) {
      optional_string_piece_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_optional_cord()) {
      optional_cord_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  if (_has_bits_[24 / 32] & 50331648u) {
    if (has_optional_public_import_message()) {
      if (optional_public_import_message_ != NULL) optional_public_import_message_->::protobuf_unittest_import::PublicImportMessage::Clear();
    }
    if (has_optional_lazy_message()) {
      if (optional_lazy_message_ != NULL) optional_lazy_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
    }
  }
  if (_has_bits_[48 / 32] & 16252928u) {
    default_int32_ = 41;
    default_int64_ = GOOGLE_LONGLONG(42);
    default_uint32_ = 43u;
    default_uint64_ = GOOGLE_ULONGLONG(44);
    default_sint32_ = -45;
  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    default_sint64_ = GOOGLE_LONGLONG(46);
    default_fixed32_ = 47u;
    default_fixed64_ = GOOGLE_ULONGLONG(48);
    default_sfixed32_ = 49;
    default_sfixed64_ = GOOGLE_LONGLONG(-50);
    default_float_ = 51.5f;
    default_double_ = 52000;
    default_bool_ = true;
  }
  if (_has_bits_[64 / 32] & 127u) {
    if (has_default_string()) {
      default_string_.ClearToDefault(_default_default_string_, GetArenaNoVirtual());
    }
    if (has_default_bytes()) {
      default_bytes_.ClearToDefault(_default_default_bytes_, GetArenaNoVirtual());
    }
    default_nested_enum_ = 2;
    default_foreign_enum_ = 5;
    default_import_enum_ = 8;
    if (has_default_string_piece()) {
      default_string_piece_.ClearToDefault(_default_default_string_piece_, GetArenaNoVirtual());
    }
    if (has_default_cord()) {
      default_cord_.ClearToDefault(_default_default_cord_, GetArenaNoVirtual());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  repeated_int32_.Clear();
  repeated_int64_.Clear();
  repeated_uint32_.Clear();
  repeated_uint64_.Clear();
  repeated_sint32_.Clear();
  repeated_sint64_.Clear();
  repeated_fixed32_.Clear();
  repeated_fixed64_.Clear();
  repeated_sfixed32_.Clear();
  repeated_sfixed64_.Clear();
  repeated_float_.Clear();
  repeated_double_.Clear();
  repeated_bool_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  repeatedgroup_.Clear();
  repeated_nested_message_.Clear();
  repeated_foreign_message_.Clear();
  repeated_import_message_.Clear();
  repeated_nested_enum_.Clear();
  repeated_foreign_enum_.Clear();
  repeated_import_enum_.Clear();
  repeated_string_piece_.Clear();
  repeated_cord_.Clear();
  repeated_lazy_message_.Clear();
  clear_oneof_field();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestAllTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 optional_int32 = 1;
      case 1: {
        if (tag == 8) {
          set_has_optional_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optional_int64;
        break;
      }

      // optional int64 optional_int64 = 2;
      case 2: {
        if (tag == 16) {
         parse_optional_int64:
          set_has_optional_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optional_uint32;
        break;
      }

      // optional uint32 optional_uint32 = 3;
      case 3: {
        if (tag == 24) {
         parse_optional_uint32:
          set_has_optional_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_uint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_optional_uint64;
        break;
      }

      // optional uint64 optional_uint64 = 4;
      case 4: {
        if (tag == 32) {
         parse_optional_uint64:
          set_has_optional_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &optional_uint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_optional_sint32;
        break;
      }

      // optional sint32 optional_sint32 = 5;
      case 5: {
        if (tag == 40) {
         parse_optional_sint32:
          set_has_optional_sint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &optional_sint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_optional_sint64;
        break;
      }

      // optional sint64 optional_sint64 = 6;
      case 6: {
        if (tag == 48) {
         parse_optional_sint64:
          set_has_optional_sint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &optional_sint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_optional_fixed32;
        break;
      }

      // optional fixed32 optional_fixed32 = 7;
      case 7: {
        if (tag == 61) {
         parse_optional_fixed32:
          set_has_optional_fixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &optional_fixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_optional_fixed64;
        break;
      }

      // optional fixed64 optional_fixed64 = 8;
      case 8: {
        if (tag == 65) {
         parse_optional_fixed64:
          set_has_optional_fixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &optional_fixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_optional_sfixed32;
        break;
      }

      // optional sfixed32 optional_sfixed32 = 9;
      case 9: {
        if (tag == 77) {
         parse_optional_sfixed32:
          set_has_optional_sfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &optional_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_optional_sfixed64;
        break;
      }

      // optional sfixed64 optional_sfixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_optional_sfixed64:
          set_has_optional_sfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optional_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_optional_float;
        break;
      }

      // optional float optional_float = 11;
      case 11: {
        if (tag == 93) {
         parse_optional_float:
          set_has_optional_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_optional_double;
        break;
      }

      // optional double optional_double = 12;
      case 12: {
        if (tag == 97) {
         parse_optional_double:
          set_has_optional_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optional_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_optional_bool;
        break;
      }

      // optional bool optional_bool = 13;
      case 13: {
        if (tag == 104) {
         parse_optional_bool:
          set_has_optional_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_bool_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_optional_string;
        break;
      }

      // optional string optional_string = 14;
      case 14: {
        if (tag == 114) {
         parse_optional_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string().data(), this->optional_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.optional_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_optional_bytes;
        break;
      }

      // optional bytes optional_bytes = 15;
      case 15: {
        if (tag == 122) {
         parse_optional_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(131)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 16 { ... };
      case 16: {
        if (tag == 131) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                16, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_optional_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
      case 18: {
        if (tag == 146) {
         parse_optional_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_optional_foreign_message;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
      case 19: {
        if (tag == 154) {
         parse_optional_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_optional_import_message;
        break;
      }

      // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
      case 20: {
        if (tag == 162) {
         parse_optional_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_optional_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
      case 21: {
        if (tag == 168) {
         parse_optional_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            set_optional_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_optional_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
      case 22: {
        if (tag == 176) {
         parse_optional_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_optional_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(22, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_optional_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
      case 23: {
        if (tag == 184) {
         parse_optional_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            set_optional_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(23, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_optional_string_piece;
        break;
      }

      // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
      case 24: {
        if (tag == 194) {
         parse_optional_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string_piece().data(), this->optional_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.optional_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_optional_cord;
        break;
      }

      // optional string optional_cord = 25 [ctype = CORD];
      case 25: {
        if (tag == 202) {
         parse_optional_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_cord().data(), this->optional_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.optional_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_optional_public_import_message;
        break;
      }

      // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
      case 26: {
        if (tag == 210) {
         parse_optional_public_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_public_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_optional_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
      case 27: {
        if (tag == 218) {
         parse_optional_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        break;
      }

      // repeated int32 repeated_int32 = 31;
      case 31: {
        if (tag == 248) {
         parse_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 248, input, this->mutable_repeated_int32())));
        } else if (tag == 250) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        break;
      }

      // repeated int64 repeated_int64 = 32;
      case 32: {
        if (tag == 256) {
         parse_repeated_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 256, input, this->mutable_repeated_int64())));
        } else if (tag == 258) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        break;
      }

      // repeated uint32 repeated_uint32 = 33;
      case 33: {
        if (tag == 264) {
         parse_repeated_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 264, input, this->mutable_repeated_uint32())));
        } else if (tag == 266) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repeated_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        break;
      }

      // repeated uint64 repeated_uint64 = 34;
      case 34: {
        if (tag == 272) {
         parse_repeated_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 272, input, this->mutable_repeated_uint64())));
        } else if (tag == 274) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        break;
      }

      // repeated sint32 repeated_sint32 = 35;
      case 35: {
        if (tag == 280) {
         parse_repeated_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 280, input, this->mutable_repeated_sint32())));
        } else if (tag == 282) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repeated_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        break;
      }

      // repeated sint64 repeated_sint64 = 36;
      case 36: {
        if (tag == 288) {
         parse_repeated_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 288, input, this->mutable_repeated_sint64())));
        } else if (tag == 290) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repeated_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        break;
      }

      // repeated fixed32 repeated_fixed32 = 37;
      case 37: {
        if (tag == 301) {
         parse_repeated_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 301, input, this->mutable_repeated_fixed32())));
        } else if (tag == 298) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        break;
      }

      // repeated fixed64 repeated_fixed64 = 38;
      case 38: {
        if (tag == 305) {
         parse_repeated_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 305, input, this->mutable_repeated_fixed64())));
        } else if (tag == 306) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        break;
      }

      // repeated sfixed32 repeated_sfixed32 = 39;
      case 39: {
        if (tag == 317) {
         parse_repeated_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 317, input, this->mutable_repeated_sfixed32())));
        } else if (tag == 314) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repeated_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        break;
      }

      // repeated sfixed64 repeated_sfixed64 = 40;
      case 40: {
        if (tag == 321) {
         parse_repeated_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 321, input, this->mutable_repeated_sfixed64())));
        } else if (tag == 322) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repeated_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        if (input->ExpectTag(333)) goto parse_repeated_float;
        break;
      }

      // repeated float repeated_float = 41;
      case 41: {
        if (tag == 333) {
         parse_repeated_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 333, input, this->mutable_repeated_float())));
        } else if (tag == 330) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(333)) goto parse_repeated_float;
        if (input->ExpectTag(337)) goto parse_repeated_double;
        break;
      }

      // repeated double repeated_double = 42;
      case 42: {
        if (tag == 337) {
         parse_repeated_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 337, input, this->mutable_repeated_double())));
        } else if (tag == 338) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repeated_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_repeated_double;
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        break;
      }

      // repeated bool repeated_bool = 43;
      case 43: {
        if (tag == 344) {
         parse_repeated_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 344, input, this->mutable_repeated_bool())));
        } else if (tag == 346) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repeated_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        if (input->ExpectTag(354)) goto parse_repeated_string;
        break;
      }

      // repeated string repeated_string = 44;
      case 44: {
        if (tag == 354) {
         parse_repeated_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string(this->repeated_string_size() - 1).data(),
            this->repeated_string(this->repeated_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.repeated_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_repeated_string;
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        break;
      }

      // repeated bytes repeated_bytes = 45;
      case 45: {
        if (tag == 362) {
         parse_repeated_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        if (input->ExpectTag(371)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 46 { ... };
      case 46: {
        if (tag == 371) {
         parse_repeatedgroup:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                46, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(371)) goto parse_loop_repeatedgroup;
        if (input->ExpectTag(386)) goto parse_loop_repeated_nested_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
      case 48: {
        if (tag == 386) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_loop_repeated_nested_message;
        if (input->ExpectTag(394)) goto parse_loop_repeated_foreign_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
      case 49: {
        if (tag == 394) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_loop_repeated_foreign_message;
        if (input->ExpectTag(402)) goto parse_loop_repeated_import_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
      case 50: {
        if (tag == 402) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_loop_repeated_import_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
      case 51: {
        if (tag == 408) {
         parse_repeated_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            add_repeated_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(51, value);
          }
        } else if (tag == 410) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 51,
                 ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeated_nested_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
      case 52: {
        if (tag == 416) {
         parse_repeated_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_repeated_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(52, value);
          }
        } else if (tag == 418) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 52,
                 ::protobuf_unittest::ForeignEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeated_foreign_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        break;
      }

      // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
      case 53: {
        if (tag == 424) {
         parse_repeated_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            add_repeated_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(53, value);
          }
        } else if (tag == 426) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 53,
                 ::protobuf_unittest_import::ImportEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeated_import_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        break;
      }

      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      case 54: {
        if (tag == 434) {
         parse_repeated_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).data(),
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.repeated_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        break;
      }

      // repeated string repeated_cord = 55 [ctype = CORD];
      case 55: {
        if (tag == 442) {
         parse_repeated_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_cord(this->repeated_cord_size() - 1).data(),
            this->repeated_cord(this->repeated_cord_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.repeated_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        if (input->ExpectTag(458)) goto parse_repeated_lazy_message;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
      case 57: {
        if (tag == 458) {
         parse_repeated_lazy_message:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_loop_repeated_lazy_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(488)) goto parse_default_int32;
        break;
      }

      // optional int32 default_int32 = 61 [default = 41];
      case 61: {
        if (tag == 488) {
         parse_default_int32:
          set_has_default_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_default_int64;
        break;
      }

      // optional int64 default_int64 = 62 [default = 42];
      case 62: {
        if (tag == 496) {
         parse_default_int64:
          set_has_default_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &default_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(504)) goto parse_default_uint32;
        break;
      }

      // optional uint32 default_uint32 = 63 [default = 43];
      case 63: {
        if (tag == 504) {
         parse_default_uint32:
          set_has_default_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_uint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(512)) goto parse_default_uint64;
        break;
      }

      // optional uint64 default_uint64 = 64 [default = 44];
      case 64: {
        if (tag == 512) {
         parse_default_uint64:
          set_has_default_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &default_uint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_default_sint32;
        break;
      }

      // optional sint32 default_sint32 = 65 [default = -45];
      case 65: {
        if (tag == 520) {
         parse_default_sint32:
          set_has_default_sint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &default_sint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_default_sint64;
        break;
      }

      // optional sint64 default_sint64 = 66 [default = 46];
      case 66: {
        if (tag == 528) {
         parse_default_sint64:
          set_has_default_sint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &default_sint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(541)) goto parse_default_fixed32;
        break;
      }

      // optional fixed32 default_fixed32 = 67 [default = 47];
      case 67: {
        if (tag == 541) {
         parse_default_fixed32:
          set_has_default_fixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &default_fixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(545)) goto parse_default_fixed64;
        break;
      }

      // optional fixed64 default_fixed64 = 68 [default = 48];
      case 68: {
        if (tag == 545) {
         parse_default_fixed64:
          set_has_default_fixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &default_fixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(557)) goto parse_default_sfixed32;
        break;
      }

      // optional sfixed32 default_sfixed32 = 69 [default = 49];
      case 69: {
        if (tag == 557) {
         parse_default_sfixed32:
          set_has_default_sfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &default_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_default_sfixed64;
        break;
      }

      // optional sfixed64 default_sfixed64 = 70 [default = -50];
      case 70: {
        if (tag == 561) {
         parse_default_sfixed64:
          set_has_default_sfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &default_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(573)) goto parse_default_float;
        break;
      }

      // optional float default_float = 71 [default = 51.5];
      case 71: {
        if (tag == 573) {
         parse_default_float:
          set_has_default_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &default_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(577)) goto parse_default_double;
        break;
      }

      // optional double default_double = 72 [default = 52000];
      case 72: {
        if (tag == 577) {
         parse_default_double:
          set_has_default_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_default_bool;
        break;
      }

      // optional bool default_bool = 73 [default = true];
      case 73: {
        if (tag == 584) {
         parse_default_bool:
          set_has_default_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_bool_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(594)) goto parse_default_string;
        break;
      }

      // optional string default_string = 74 [default = "hello"];
      case 74: {
        if (tag == 594) {
         parse_default_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_string().data(), this->default_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.default_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(602)) goto parse_default_bytes;
        break;
      }

      // optional bytes default_bytes = 75 [default = "world"];
      case 75: {
        if (tag == 602) {
         parse_default_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_default_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(648)) goto parse_default_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
      case 81: {
        if (tag == 648) {
         parse_default_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            set_default_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(81, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(656)) goto parse_default_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
      case 82: {
        if (tag == 656) {
         parse_default_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_default_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(82, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(664)) goto parse_default_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
      case 83: {
        if (tag == 664) {
         parse_default_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            set_default_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(83, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_default_string_piece;
        break;
      }

      // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
      case 84: {
        if (tag == 674) {
         parse_default_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_string_piece().data(), this->default_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.default_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_default_cord;
        break;
      }

      // optional string default_cord = 85 [default = "123", ctype = CORD];
      case 85: {
        if (tag == 682) {
         parse_default_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_cord().data(), this->default_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.default_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(888)) goto parse_oneof_uint32;
        break;
      }

      // optional uint32 oneof_uint32 = 111;
      case 111: {
        if (tag == 888) {
         parse_oneof_uint32:
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_field_.oneof_uint32_)));
          set_has_oneof_uint32();
        } else {
          goto handle_unusual;
        }
        goto after_oneof_bytes;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
      case 112: {
        if (tag == 898) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneof_nested_message()));
        } else {
          goto handle_unusual;
        }
        goto after_oneof_bytes;
        break;
      }

      // optional string oneof_string = 113;
      case 113: {
        if (tag == 906) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oneof_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oneof_string().data(), this->oneof_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestAllTypes.oneof_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(914)) goto parse_oneof_bytes;
        break;
      }

      // optional bytes oneof_bytes = 114;
      case 114: {
        if (tag == 914) {
         parse_oneof_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oneof_bytes()));
        } else {
          goto handle_unusual;
        }
       after_oneof_bytes:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes)
  return false;
#undef DO_
}

void TestAllTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes)
  // optional int32 optional_int32 = 1;
  if (has_optional_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optional_int32(), output);
  }

  // optional int64 optional_int64 = 2;
  if (has_optional_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->optional_int64(), output);
  }

  // optional uint32 optional_uint32 = 3;
  if (has_optional_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optional_uint32(), output);
  }

  // optional uint64 optional_uint64 = 4;
  if (has_optional_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->optional_uint64(), output);
  }

  // optional sint32 optional_sint32 = 5;
  if (has_optional_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->optional_sint32(), output);
  }

  // optional sint64 optional_sint64 = 6;
  if (has_optional_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->optional_sint64(), output);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (has_optional_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->optional_fixed32(), output);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (has_optional_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->optional_fixed64(), output);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (has_optional_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->optional_sfixed32(), output);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (has_optional_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->optional_sfixed64(), output);
  }

  // optional float optional_float = 11;
  if (has_optional_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->optional_float(), output);
  }

  // optional double optional_double = 12;
  if (has_optional_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->optional_double(), output);
  }

  // optional bool optional_bool = 13;
  if (has_optional_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->optional_bool(), output);
  }

  // optional string optional_string = 14;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->optional_string(), output);
  }

  // optional bytes optional_bytes = 15;
  if (has_optional_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->optional_bytes(), output);
  }

  // optional group OptionalGroup = 16 { ... };
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      16, *this->optionalgroup_, output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->optional_nested_message_, output);
  }

  // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
  if (has_optional_foreign_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->optional_foreign_message_, output);
  }

  // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  if (has_optional_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->optional_import_message_, output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (has_optional_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->optional_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (has_optional_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->optional_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  if (has_optional_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->optional_import_enum(), output);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (has_optional_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), this->optional_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->optional_string_piece(), output);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (has_optional_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), this->optional_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->optional_cord(), output);
  }

  // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  if (has_optional_public_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->optional_public_import_message_, output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (has_optional_lazy_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->optional_lazy_message_, output);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      31, this->repeated_int32(i), output);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      32, this->repeated_int64(i), output);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0; i < this->repeated_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      33, this->repeated_uint32(i), output);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      34, this->repeated_uint64(i), output);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0; i < this->repeated_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      35, this->repeated_sint32(i), output);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0; i < this->repeated_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      36, this->repeated_sint64(i), output);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      37, this->repeated_fixed32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      38, this->repeated_fixed64(i), output);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0; i < this->repeated_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      39, this->repeated_sfixed32(i), output);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0; i < this->repeated_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      40, this->repeated_sfixed64(i), output);
  }

  // repeated float repeated_float = 41;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      41, this->repeated_float(i), output);
  }

  // repeated double repeated_double = 42;
  for (int i = 0; i < this->repeated_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      42, this->repeated_double(i), output);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0; i < this->repeated_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      43, this->repeated_bool(i), output);
  }

  // repeated string repeated_string = 44;
  for (int i = 0; i < this->repeated_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), this->repeated_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->repeated_string(i), output);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      45, this->repeated_bytes(i), output);
  }

  // repeated group RepeatedGroup = 46 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      46, this->repeatedgroup(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0, n = this->repeated_nested_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->repeated_nested_message(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  for (unsigned int i = 0, n = this->repeated_foreign_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->repeated_foreign_message(i), output);
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  for (unsigned int i = 0, n = this->repeated_import_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->repeated_import_message(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      51, this->repeated_nested_enum(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      52, this->repeated_foreign_enum(i), output);
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  for (int i = 0; i < this->repeated_import_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      53, this->repeated_import_enum(i), output);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string_piece(i).data(), this->repeated_string_piece(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->repeated_string_piece(i), output);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_cord(i).data(), this->repeated_cord(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_cord");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->repeated_cord(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned int i = 0, n = this->repeated_lazy_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->repeated_lazy_message(i), output);
  }

  // optional int32 default_int32 = 61 [default = 41];
  if (has_default_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->default_int32(), output);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (has_default_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(62, this->default_int64(), output);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (has_default_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(63, this->default_uint32(), output);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (has_default_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(64, this->default_uint64(), output);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (has_default_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(65, this->default_sint32(), output);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (has_default_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(66, this->default_sint64(), output);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (has_default_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(67, this->default_fixed32(), output);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (has_default_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(68, this->default_fixed64(), output);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (has_default_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(69, this->default_sfixed32(), output);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (has_default_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(70, this->default_sfixed64(), output);
  }

  // optional float default_float = 71 [default = 51.5];
  if (has_default_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(71, this->default_float(), output);
  }

  // optional double default_double = 72 [default = 52000];
  if (has_default_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(72, this->default_double(), output);
  }

  // optional bool default_bool = 73 [default = true];
  if (has_default_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->default_bool(), output);
  }

  // optional string default_string = 74 [default = "hello"];
  if (has_default_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string().data(), this->default_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      74, this->default_string(), output);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (has_default_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      75, this->default_bytes(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  if (has_default_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      81, this->default_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  if (has_default_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      82, this->default_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  if (has_default_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      83, this->default_import_enum(), output);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (has_default_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string_piece().data(), this->default_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->default_string_piece(), output);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (has_default_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_cord().data(), this->default_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      85, this->default_cord(), output);
  }

  switch (oneof_field_case()) {
    case kOneofUint32:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->oneof_uint32(), output);
      break;
    case kOneofNestedMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        112, *oneof_field_.oneof_nested_message_, output);
      break;
    case kOneofString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->oneof_string().data(), this->oneof_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestAllTypes.oneof_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        113, this->oneof_string(), output);
      break;
    case kOneofBytes:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        114, this->oneof_bytes(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes)
}

::google::protobuf::uint8* TestAllTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes)
  // optional int32 optional_int32 = 1;
  if (has_optional_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->optional_int32(), target);
  }

  // optional int64 optional_int64 = 2;
  if (has_optional_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->optional_int64(), target);
  }

  // optional uint32 optional_uint32 = 3;
  if (has_optional_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->optional_uint32(), target);
  }

  // optional uint64 optional_uint64 = 4;
  if (has_optional_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->optional_uint64(), target);
  }

  // optional sint32 optional_sint32 = 5;
  if (has_optional_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->optional_sint32(), target);
  }

  // optional sint64 optional_sint64 = 6;
  if (has_optional_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->optional_sint64(), target);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (has_optional_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->optional_fixed32(), target);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (has_optional_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->optional_fixed64(), target);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (has_optional_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(9, this->optional_sfixed32(), target);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (has_optional_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->optional_sfixed64(), target);
  }

  // optional float optional_float = 11;
  if (has_optional_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->optional_float(), target);
  }

  // optional double optional_double = 12;
  if (has_optional_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->optional_double(), target);
  }

  // optional bool optional_bool = 13;
  if (has_optional_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->optional_bool(), target);
  }

  // optional string optional_string = 14;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->optional_string(), target);
  }

  // optional bytes optional_bytes = 15;
  if (has_optional_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->optional_bytes(), target);
  }

  // optional group OptionalGroup = 16 { ... };
  if (has_optionalgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        16, *this->optionalgroup_, false, target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->optional_nested_message_, false, target);
  }

  // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
  if (has_optional_foreign_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->optional_foreign_message_, false, target);
  }

  // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  if (has_optional_import_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->optional_import_message_, false, target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (has_optional_nested_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->optional_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (has_optional_foreign_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->optional_foreign_enum(), target);
  }

  // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  if (has_optional_import_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->optional_import_enum(), target);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (has_optional_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), this->optional_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->optional_string_piece(), target);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (has_optional_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), this->optional_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.optional_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->optional_cord(), target);
  }

  // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  if (has_optional_public_import_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->optional_public_import_message_, false, target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (has_optional_lazy_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->optional_lazy_message_, false, target);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(31, this->repeated_int32(i), target);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(32, this->repeated_int64(i), target);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0; i < this->repeated_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(33, this->repeated_uint32(i), target);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(34, this->repeated_uint64(i), target);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0; i < this->repeated_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(35, this->repeated_sint32(i), target);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0; i < this->repeated_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(36, this->repeated_sint64(i), target);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(37, this->repeated_fixed32(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(38, this->repeated_fixed64(i), target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0; i < this->repeated_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(39, this->repeated_sfixed32(i), target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0; i < this->repeated_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(40, this->repeated_sfixed64(i), target);
  }

  // repeated float repeated_float = 41;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(41, this->repeated_float(i), target);
  }

  // repeated double repeated_double = 42;
  for (int i = 0; i < this->repeated_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(42, this->repeated_double(i), target);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0; i < this->repeated_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(43, this->repeated_bool(i), target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0; i < this->repeated_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), this->repeated_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(44, this->repeated_string(i), target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(45, this->repeated_bytes(i), target);
  }

  // repeated group RepeatedGroup = 46 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        46, this->repeatedgroup(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0, n = this->repeated_nested_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        48, this->repeated_nested_message(i), false, target);
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  for (unsigned int i = 0, n = this->repeated_foreign_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        49, this->repeated_foreign_message(i), false, target);
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  for (unsigned int i = 0, n = this->repeated_import_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, this->repeated_import_message(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      51, this->repeated_nested_enum(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      52, this->repeated_foreign_enum(i), target);
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  for (int i = 0; i < this->repeated_import_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      53, this->repeated_import_enum(i), target);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string_piece(i).data(), this->repeated_string_piece(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_string_piece");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(54, this->repeated_string_piece(i), target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_cord(i).data(), this->repeated_cord(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.repeated_cord");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(55, this->repeated_cord(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned int i = 0, n = this->repeated_lazy_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        57, this->repeated_lazy_message(i), false, target);
  }

  // optional int32 default_int32 = 61 [default = 41];
  if (has_default_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->default_int32(), target);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (has_default_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(62, this->default_int64(), target);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (has_default_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(63, this->default_uint32(), target);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (has_default_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(64, this->default_uint64(), target);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (has_default_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(65, this->default_sint32(), target);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (has_default_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(66, this->default_sint64(), target);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (has_default_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(67, this->default_fixed32(), target);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (has_default_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(68, this->default_fixed64(), target);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (has_default_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(69, this->default_sfixed32(), target);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (has_default_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(70, this->default_sfixed64(), target);
  }

  // optional float default_float = 71 [default = 51.5];
  if (has_default_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(71, this->default_float(), target);
  }

  // optional double default_double = 72 [default = 52000];
  if (has_default_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(72, this->default_double(), target);
  }

  // optional bool default_bool = 73 [default = true];
  if (has_default_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(73, this->default_bool(), target);
  }

  // optional string default_string = 74 [default = "hello"];
  if (has_default_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string().data(), this->default_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        74, this->default_string(), target);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (has_default_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        75, this->default_bytes(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  if (has_default_nested_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      81, this->default_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  if (has_default_foreign_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      82, this->default_foreign_enum(), target);
  }

  // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  if (has_default_import_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      83, this->default_import_enum(), target);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (has_default_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string_piece().data(), this->default_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->default_string_piece(), target);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (has_default_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_cord().data(), this->default_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestAllTypes.default_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        85, this->default_cord(), target);
  }

  switch (oneof_field_case()) {
    case kOneofUint32:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->oneof_uint32(), target);
      break;
    case kOneofNestedMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          112, *oneof_field_.oneof_nested_message_, false, target);
      break;
    case kOneofString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->oneof_string().data(), this->oneof_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestAllTypes.oneof_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          113, this->oneof_string(), target);
      break;
    case kOneofBytes:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          114, this->oneof_bytes(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes)
  return target;
}

size_t TestAllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 optional_int32 = 1;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

    // optional int64 optional_int64 = 2;
    if (has_optional_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->optional_int64());
    }

    // optional uint32 optional_uint32 = 3;
    if (has_optional_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (has_optional_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->optional_uint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (has_optional_sint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->optional_sint32());
    }

    // optional sint64 optional_sint64 = 6;
    if (has_optional_sint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->optional_sint64());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (has_optional_fixed32()) {
      total_size += 1 + 4;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (has_optional_fixed64()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional sfixed32 optional_sfixed32 = 9;
    if (has_optional_sfixed32()) {
      total_size += 1 + 4;
    }

    // optional sfixed64 optional_sfixed64 = 10;
    if (has_optional_sfixed64()) {
      total_size += 1 + 8;
    }

    // optional float optional_float = 11;
    if (has_optional_float()) {
      total_size += 1 + 4;
    }

    // optional double optional_double = 12;
    if (has_optional_double()) {
      total_size += 1 + 8;
    }

    // optional bool optional_bool = 13;
    if (has_optional_bool()) {
      total_size += 1 + 1;
    }

    // optional string optional_string = 14;
    if (has_optional_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (has_optional_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->optional_bytes());
    }

    // optional group OptionalGroup = 16 { ... };
    if (has_optionalgroup()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->optionalgroup_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    if (has_optional_nested_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_nested_message_);
    }

    // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
    if (has_optional_foreign_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_foreign_message_);
    }

    // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    if (has_optional_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    if (has_optional_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    if (has_optional_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
    if (has_optional_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_import_enum());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (has_optional_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (has_optional_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_cord());
    }

  }
  if (_has_bits_[24 / 32] & 50331648u) {
    // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    if (has_optional_public_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_public_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    if (has_optional_lazy_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_lazy_message_);
    }

  }
  if (_has_bits_[51 / 32] & 16252928u) {
    // optional int32 default_int32 = 61 [default = 41];
    if (has_default_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->default_int32());
    }

    // optional int64 default_int64 = 62 [default = 42];
    if (has_default_int64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->default_int64());
    }

    // optional uint32 default_uint32 = 63 [default = 43];
    if (has_default_uint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_uint32());
    }

    // optional uint64 default_uint64 = 64 [default = 44];
    if (has_default_uint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->default_uint64());
    }

    // optional sint32 default_sint32 = 65 [default = -45];
    if (has_default_sint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->default_sint32());
    }

  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    // optional sint64 default_sint64 = 66 [default = 46];
    if (has_default_sint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->default_sint64());
    }

    // optional fixed32 default_fixed32 = 67 [default = 47];
    if (has_default_fixed32()) {
      total_size += 2 + 4;
    }

    // optional fixed64 default_fixed64 = 68 [default = 48];
    if (has_default_fixed64()) {
      total_size += 2 + 8;
    }

    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    if (has_default_sfixed32()) {
      total_size += 2 + 4;
    }

    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    if (has_default_sfixed64()) {
      total_size += 2 + 8;
    }

    // optional float default_float = 71 [default = 51.5];
    if (has_default_float()) {
      total_size += 2 + 4;
    }

    // optional double default_double = 72 [default = 52000];
    if (has_default_double()) {
      total_size += 2 + 8;
    }

    // optional bool default_bool = 73 [default = true];
    if (has_default_bool()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[64 / 32] & 127u) {
    // optional string default_string = 74 [default = "hello"];
    if (has_default_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string());
    }

    // optional bytes default_bytes = 75 [default = "world"];
    if (has_default_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->default_bytes());
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
    if (has_default_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
    if (has_default_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
    if (has_default_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_import_enum());
    }

    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    if (has_default_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string_piece());
    }

    // optional string default_cord = 85 [default = "123", ctype = CORD];
    if (has_default_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_cord());
    }

  }
  // repeated int32 repeated_int32 = 31;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeated_int32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int32_size());
    total_size += data_size;
  }

  // repeated int64 repeated_int64 = 32;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->repeated_int64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int64_size());
    total_size += data_size;
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_uint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->repeated_uint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint32_size());
    total_size += data_size;
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->repeated_uint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint64_size());
    total_size += data_size;
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->repeated_sint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint32_size());
    total_size += data_size;
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->repeated_sint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint64_size());
    total_size += data_size;
  }

  // repeated fixed32 repeated_fixed32 = 37;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 repeated_fixed64 = 38;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sfixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sfixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed64_size());
    total_size += data_size;
  }

  // repeated float repeated_float = 41;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_float_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_float_size());
    total_size += data_size;
  }

  // repeated double repeated_double = 42;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_double_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_double_size());
    total_size += data_size;
  }

  // repeated bool repeated_bool = 43;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_bool_size();
    data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_bool_size());
    total_size += data_size;
  }

  // repeated string repeated_string = 44;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_size());
  for (int i = 0; i < this->repeated_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 45;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_bytes_size());
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  // repeated group RepeatedGroup = 46 { ... };
  {
    unsigned int count = this->repeatedgroup_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->repeatedgroup(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  {
    unsigned int count = this->repeated_nested_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_nested_message(i));
    }
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  {
    unsigned int count = this->repeated_foreign_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_foreign_message(i));
    }
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  {
    unsigned int count = this->repeated_import_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_import_message(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_nested_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_nested_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_foreign_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_foreign_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_import_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_import_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_piece_size());
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string_piece(i));
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_cord_size());
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_cord(i));
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  {
    unsigned int count = this->repeated_lazy_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_lazy_message(i));
    }
  }

  switch (oneof_field_case()) {
    // optional uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oneof_uint32());
      break;
    }
    // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_field_.oneof_nested_message_);
      break;
    }
    // optional string oneof_string = 113;
    case kOneofString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oneof_string());
      break;
    }
    // optional bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestAllTypes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestAllTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestAllTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestAllTypes)
    UnsafeMergeFrom(*source);
  }
}

void TestAllTypes::MergeFrom(const TestAllTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypes::UnsafeMergeFrom(const TestAllTypes& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_int32_.UnsafeMergeFrom(from.repeated_int32_);
  repeated_int64_.UnsafeMergeFrom(from.repeated_int64_);
  repeated_uint32_.UnsafeMergeFrom(from.repeated_uint32_);
  repeated_uint64_.UnsafeMergeFrom(from.repeated_uint64_);
  repeated_sint32_.UnsafeMergeFrom(from.repeated_sint32_);
  repeated_sint64_.UnsafeMergeFrom(from.repeated_sint64_);
  repeated_fixed32_.UnsafeMergeFrom(from.repeated_fixed32_);
  repeated_fixed64_.UnsafeMergeFrom(from.repeated_fixed64_);
  repeated_sfixed32_.UnsafeMergeFrom(from.repeated_sfixed32_);
  repeated_sfixed64_.UnsafeMergeFrom(from.repeated_sfixed64_);
  repeated_float_.UnsafeMergeFrom(from.repeated_float_);
  repeated_double_.UnsafeMergeFrom(from.repeated_double_);
  repeated_bool_.UnsafeMergeFrom(from.repeated_bool_);
  repeated_string_.UnsafeMergeFrom(from.repeated_string_);
  repeated_bytes_.UnsafeMergeFrom(from.repeated_bytes_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  repeated_nested_message_.MergeFrom(from.repeated_nested_message_);
  repeated_foreign_message_.MergeFrom(from.repeated_foreign_message_);
  repeated_import_message_.MergeFrom(from.repeated_import_message_);
  repeated_nested_enum_.UnsafeMergeFrom(from.repeated_nested_enum_);
  repeated_foreign_enum_.UnsafeMergeFrom(from.repeated_foreign_enum_);
  repeated_import_enum_.UnsafeMergeFrom(from.repeated_import_enum_);
  repeated_string_piece_.UnsafeMergeFrom(from.repeated_string_piece_);
  repeated_cord_.UnsafeMergeFrom(from.repeated_cord_);
  repeated_lazy_message_.MergeFrom(from.repeated_lazy_message_);
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_int32()) {
      set_optional_int32(from.optional_int32());
    }
    if (from.has_optional_int64()) {
      set_optional_int64(from.optional_int64());
    }
    if (from.has_optional_uint32()) {
      set_optional_uint32(from.optional_uint32());
    }
    if (from.has_optional_uint64()) {
      set_optional_uint64(from.optional_uint64());
    }
    if (from.has_optional_sint32()) {
      set_optional_sint32(from.optional_sint32());
    }
    if (from.has_optional_sint64()) {
      set_optional_sint64(from.optional_sint64());
    }
    if (from.has_optional_fixed32()) {
      set_optional_fixed32(from.optional_fixed32());
    }
    if (from.has_optional_fixed64()) {
      set_optional_fixed64(from.optional_fixed64());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_optional_sfixed32()) {
      set_optional_sfixed32(from.optional_sfixed32());
    }
    if (from.has_optional_sfixed64()) {
      set_optional_sfixed64(from.optional_sfixed64());
    }
    if (from.has_optional_float()) {
      set_optional_float(from.optional_float());
    }
    if (from.has_optional_double()) {
      set_optional_double(from.optional_double());
    }
    if (from.has_optional_bool()) {
      set_optional_bool(from.optional_bool());
    }
    if (from.has_optional_string()) {
      set_optional_string(from.optional_string());
    }
    if (from.has_optional_bytes()) {
      set_optional_bytes(from.optional_bytes());
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestAllTypes_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.optional_nested_message());
    }
    if (from.has_optional_foreign_message()) {
      mutable_optional_foreign_message()->::protobuf_unittest::ForeignMessage::MergeFrom(from.optional_foreign_message());
    }
    if (from.has_optional_import_message()) {
      mutable_optional_import_message()->::protobuf_unittest_import::ImportMessage::MergeFrom(from.optional_import_message());
    }
    if (from.has_optional_nested_enum()) {
      set_optional_nested_enum(from.optional_nested_enum());
    }
    if (from.has_optional_foreign_enum()) {
      set_optional_foreign_enum(from.optional_foreign_enum());
    }
    if (from.has_optional_import_enum()) {
      set_optional_import_enum(from.optional_import_enum());
    }
    if (from.has_optional_string_piece()) {
      set_optional_string_piece(from.optional_string_piece());
    }
    if (from.has_optional_cord()) {
      set_optional_cord(from.optional_cord());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_optional_public_import_message()) {
      mutable_optional_public_import_message()->::protobuf_unittest_import::PublicImportMessage::MergeFrom(from.optional_public_import_message());
    }
    if (from.has_optional_lazy_message()) {
      mutable_optional_lazy_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.optional_lazy_message());
    }
  }
  if (from._has_bits_[51 / 32] & (0xffu << (51 % 32))) {
    if (from.has_default_int32()) {
      set_default_int32(from.default_int32());
    }
    if (from.has_default_int64()) {
      set_default_int64(from.default_int64());
    }
    if (from.has_default_uint32()) {
      set_default_uint32(from.default_uint32());
    }
    if (from.has_default_uint64()) {
      set_default_uint64(from.default_uint64());
    }
    if (from.has_default_sint32()) {
      set_default_sint32(from.default_sint32());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_default_sint64()) {
      set_default_sint64(from.default_sint64());
    }
    if (from.has_default_fixed32()) {
      set_default_fixed32(from.default_fixed32());
    }
    if (from.has_default_fixed64()) {
      set_default_fixed64(from.default_fixed64());
    }
    if (from.has_default_sfixed32()) {
      set_default_sfixed32(from.default_sfixed32());
    }
    if (from.has_default_sfixed64()) {
      set_default_sfixed64(from.default_sfixed64());
    }
    if (from.has_default_float()) {
      set_default_float(from.default_float());
    }
    if (from.has_default_double()) {
      set_default_double(from.default_double());
    }
    if (from.has_default_bool()) {
      set_default_bool(from.default_bool());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_default_string()) {
      set_default_string(from.default_string());
    }
    if (from.has_default_bytes()) {
      set_default_bytes(from.default_bytes());
    }
    if (from.has_default_nested_enum()) {
      set_default_nested_enum(from.default_nested_enum());
    }
    if (from.has_default_foreign_enum()) {
      set_default_foreign_enum(from.default_foreign_enum());
    }
    if (from.has_default_import_enum()) {
      set_default_import_enum(from.default_import_enum());
    }
    if (from.has_default_string_piece()) {
      set_default_string_piece(from.default_string_piece());
    }
    if (from.has_default_cord()) {
      set_default_cord(from.default_cord());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestAllTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes::CopyFrom(const TestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypes::IsInitialized() const {

  return true;
}

void TestAllTypes::Swap(TestAllTypes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestAllTypes::UnsafeArenaSwap(TestAllTypes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypes::InternalSwap(TestAllTypes* other) {
  std::swap(optional_int32_, other->optional_int32_);
  std::swap(optional_int64_, other->optional_int64_);
  std::swap(optional_uint32_, other->optional_uint32_);
  std::swap(optional_uint64_, other->optional_uint64_);
  std::swap(optional_sint32_, other->optional_sint32_);
  std::swap(optional_sint64_, other->optional_sint64_);
  std::swap(optional_fixed32_, other->optional_fixed32_);
  std::swap(optional_fixed64_, other->optional_fixed64_);
  std::swap(optional_sfixed32_, other->optional_sfixed32_);
  std::swap(optional_sfixed64_, other->optional_sfixed64_);
  std::swap(optional_float_, other->optional_float_);
  std::swap(optional_double_, other->optional_double_);
  std::swap(optional_bool_, other->optional_bool_);
  optional_string_.Swap(&other->optional_string_);
  optional_bytes_.Swap(&other->optional_bytes_);
  std::swap(optionalgroup_, other->optionalgroup_);
  std::swap(optional_nested_message_, other->optional_nested_message_);
  std::swap(optional_foreign_message_, other->optional_foreign_message_);
  std::swap(optional_import_message_, other->optional_import_message_);
  std::swap(optional_nested_enum_, other->optional_nested_enum_);
  std::swap(optional_foreign_enum_, other->optional_foreign_enum_);
  std::swap(optional_import_enum_, other->optional_import_enum_);
  optional_string_piece_.Swap(&other->optional_string_piece_);
  optional_cord_.Swap(&other->optional_cord_);
  std::swap(optional_public_import_message_, other->optional_public_import_message_);
  std::swap(optional_lazy_message_, other->optional_lazy_message_);
  repeated_int32_.UnsafeArenaSwap(&other->repeated_int32_);
  repeated_int64_.UnsafeArenaSwap(&other->repeated_int64_);
  repeated_uint32_.UnsafeArenaSwap(&other->repeated_uint32_);
  repeated_uint64_.UnsafeArenaSwap(&other->repeated_uint64_);
  repeated_sint32_.UnsafeArenaSwap(&other->repeated_sint32_);
  repeated_sint64_.UnsafeArenaSwap(&other->repeated_sint64_);
  repeated_fixed32_.UnsafeArenaSwap(&other->repeated_fixed32_);
  repeated_fixed64_.UnsafeArenaSwap(&other->repeated_fixed64_);
  repeated_sfixed32_.UnsafeArenaSwap(&other->repeated_sfixed32_);
  repeated_sfixed64_.UnsafeArenaSwap(&other->repeated_sfixed64_);
  repeated_float_.UnsafeArenaSwap(&other->repeated_float_);
  repeated_double_.UnsafeArenaSwap(&other->repeated_double_);
  repeated_bool_.UnsafeArenaSwap(&other->repeated_bool_);
  repeated_string_.UnsafeArenaSwap(&other->repeated_string_);
  repeated_bytes_.UnsafeArenaSwap(&other->repeated_bytes_);
  repeatedgroup_.UnsafeArenaSwap(&other->repeatedgroup_);
  repeated_nested_message_.UnsafeArenaSwap(&other->repeated_nested_message_);
  repeated_foreign_message_.UnsafeArenaSwap(&other->repeated_foreign_message_);
  repeated_import_message_.UnsafeArenaSwap(&other->repeated_import_message_);
  repeated_nested_enum_.UnsafeArenaSwap(&other->repeated_nested_enum_);
  repeated_foreign_enum_.UnsafeArenaSwap(&other->repeated_foreign_enum_);
  repeated_import_enum_.UnsafeArenaSwap(&other->repeated_import_enum_);
  repeated_string_piece_.UnsafeArenaSwap(&other->repeated_string_piece_);
  repeated_cord_.UnsafeArenaSwap(&other->repeated_cord_);
  repeated_lazy_message_.UnsafeArenaSwap(&other->repeated_lazy_message_);
  std::swap(default_int32_, other->default_int32_);
  std::swap(default_int64_, other->default_int64_);
  std::swap(default_uint32_, other->default_uint32_);
  std::swap(default_uint64_, other->default_uint64_);
  std::swap(default_sint32_, other->default_sint32_);
  std::swap(default_sint64_, other->default_sint64_);
  std::swap(default_fixed32_, other->default_fixed32_);
  std::swap(default_fixed64_, other->default_fixed64_);
  std::swap(default_sfixed32_, other->default_sfixed32_);
  std::swap(default_sfixed64_, other->default_sfixed64_);
  std::swap(default_float_, other->default_float_);
  std::swap(default_double_, other->default_double_);
  std::swap(default_bool_, other->default_bool_);
  default_string_.Swap(&other->default_string_);
  default_bytes_.Swap(&other->default_bytes_);
  std::swap(default_nested_enum_, other->default_nested_enum_);
  std::swap(default_foreign_enum_, other->default_foreign_enum_);
  std::swap(default_import_enum_, other->default_import_enum_);
  default_string_piece_.Swap(&other->default_string_piece_);
  default_cord_.Swap(&other->default_cord_);
  std::swap(oneof_field_, other->oneof_field_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  std::swap(_has_bits_[2], other->_has_bits_[2]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestAllTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_descriptor_;
  metadata.reflection = TestAllTypes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestAllTypes_NestedMessage

// optional int32 bb = 1;
bool TestAllTypes_NestedMessage::has_bb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypes_NestedMessage::set_has_bb() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypes_NestedMessage::clear_has_bb() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypes_NestedMessage::clear_bb() {
  bb_ = 0;
  clear_has_bb();
}
::google::protobuf::int32 TestAllTypes_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.NestedMessage.bb)
  return bb_;
}
void TestAllTypes_NestedMessage::set_bb(::google::protobuf::int32 value) {
  set_has_bb();
  bb_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.NestedMessage.bb)
}

inline const TestAllTypes_NestedMessage* TestAllTypes_NestedMessage::internal_default_instance() {
  return &TestAllTypes_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypes_OptionalGroup

// optional int32 a = 17;
bool TestAllTypes_OptionalGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypes_OptionalGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypes_OptionalGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypes_OptionalGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestAllTypes_OptionalGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.OptionalGroup.a)
  return a_;
}
void TestAllTypes_OptionalGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.OptionalGroup.a)
}

inline const TestAllTypes_OptionalGroup* TestAllTypes_OptionalGroup::internal_default_instance() {
  return &TestAllTypes_OptionalGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypes_RepeatedGroup

// optional int32 a = 47;
bool TestAllTypes_RepeatedGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypes_RepeatedGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypes_RepeatedGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypes_RepeatedGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestAllTypes_RepeatedGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.RepeatedGroup.a)
  return a_;
}
void TestAllTypes_RepeatedGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.RepeatedGroup.a)
}

inline const TestAllTypes_RepeatedGroup* TestAllTypes_RepeatedGroup::internal_default_instance() {
  return &TestAllTypes_RepeatedGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypes

// optional int32 optional_int32 = 1;
bool TestAllTypes::has_optional_int32() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypes::set_has_optional_int32() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypes::clear_has_optional_int32() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypes::clear_optional_int32() {
  optional_int32_ = 0;
  clear_has_optional_int32();
}
::google::protobuf::int32 TestAllTypes::optional_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_int32)
  return optional_int32_;
}
void TestAllTypes::set_optional_int32(::google::protobuf::int32 value) {
  set_has_optional_int32();
  optional_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_int32)
}

// optional int64 optional_int64 = 2;
bool TestAllTypes::has_optional_int64() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestAllTypes::set_has_optional_int64() {
  _has_bits_[0] |= 0x00000002u;
}
void TestAllTypes::clear_has_optional_int64() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestAllTypes::clear_optional_int64() {
  optional_int64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_int64();
}
::google::protobuf::int64 TestAllTypes::optional_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_int64)
  return optional_int64_;
}
void TestAllTypes::set_optional_int64(::google::protobuf::int64 value) {
  set_has_optional_int64();
  optional_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_int64)
}

// optional uint32 optional_uint32 = 3;
bool TestAllTypes::has_optional_uint32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestAllTypes::set_has_optional_uint32() {
  _has_bits_[0] |= 0x00000004u;
}
void TestAllTypes::clear_has_optional_uint32() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestAllTypes::clear_optional_uint32() {
  optional_uint32_ = 0u;
  clear_has_optional_uint32();
}
::google::protobuf::uint32 TestAllTypes::optional_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_uint32)
  return optional_uint32_;
}
void TestAllTypes::set_optional_uint32(::google::protobuf::uint32 value) {
  set_has_optional_uint32();
  optional_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_uint32)
}

// optional uint64 optional_uint64 = 4;
bool TestAllTypes::has_optional_uint64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestAllTypes::set_has_optional_uint64() {
  _has_bits_[0] |= 0x00000008u;
}
void TestAllTypes::clear_has_optional_uint64() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestAllTypes::clear_optional_uint64() {
  optional_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_optional_uint64();
}
::google::protobuf::uint64 TestAllTypes::optional_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_uint64)
  return optional_uint64_;
}
void TestAllTypes::set_optional_uint64(::google::protobuf::uint64 value) {
  set_has_optional_uint64();
  optional_uint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_uint64)
}

// optional sint32 optional_sint32 = 5;
bool TestAllTypes::has_optional_sint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestAllTypes::set_has_optional_sint32() {
  _has_bits_[0] |= 0x00000010u;
}
void TestAllTypes::clear_has_optional_sint32() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestAllTypes::clear_optional_sint32() {
  optional_sint32_ = 0;
  clear_has_optional_sint32();
}
::google::protobuf::int32 TestAllTypes::optional_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_sint32)
  return optional_sint32_;
}
void TestAllTypes::set_optional_sint32(::google::protobuf::int32 value) {
  set_has_optional_sint32();
  optional_sint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_sint32)
}

// optional sint64 optional_sint64 = 6;
bool TestAllTypes::has_optional_sint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestAllTypes::set_has_optional_sint64() {
  _has_bits_[0] |= 0x00000020u;
}
void TestAllTypes::clear_has_optional_sint64() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestAllTypes::clear_optional_sint64() {
  optional_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_sint64();
}
::google::protobuf::int64 TestAllTypes::optional_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_sint64)
  return optional_sint64_;
}
void TestAllTypes::set_optional_sint64(::google::protobuf::int64 value) {
  set_has_optional_sint64();
  optional_sint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_sint64)
}

// optional fixed32 optional_fixed32 = 7;
bool TestAllTypes::has_optional_fixed32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TestAllTypes::set_has_optional_fixed32() {
  _has_bits_[0] |= 0x00000040u;
}
void TestAllTypes::clear_has_optional_fixed32() {
  _has_bits_[0] &= ~0x00000040u;
}
void TestAllTypes::clear_optional_fixed32() {
  optional_fixed32_ = 0u;
  clear_has_optional_fixed32();
}
::google::protobuf::uint32 TestAllTypes::optional_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_fixed32)
  return optional_fixed32_;
}
void TestAllTypes::set_optional_fixed32(::google::protobuf::uint32 value) {
  set_has_optional_fixed32();
  optional_fixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_fixed32)
}

// optional fixed64 optional_fixed64 = 8;
bool TestAllTypes::has_optional_fixed64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TestAllTypes::set_has_optional_fixed64() {
  _has_bits_[0] |= 0x00000080u;
}
void TestAllTypes::clear_has_optional_fixed64() {
  _has_bits_[0] &= ~0x00000080u;
}
void TestAllTypes::clear_optional_fixed64() {
  optional_fixed64_ = GOOGLE_ULONGLONG(0);
  clear_has_optional_fixed64();
}
::google::protobuf::uint64 TestAllTypes::optional_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_fixed64)
  return optional_fixed64_;
}
void TestAllTypes::set_optional_fixed64(::google::protobuf::uint64 value) {
  set_has_optional_fixed64();
  optional_fixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_fixed64)
}

// optional sfixed32 optional_sfixed32 = 9;
bool TestAllTypes::has_optional_sfixed32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TestAllTypes::set_has_optional_sfixed32() {
  _has_bits_[0] |= 0x00000100u;
}
void TestAllTypes::clear_has_optional_sfixed32() {
  _has_bits_[0] &= ~0x00000100u;
}
void TestAllTypes::clear_optional_sfixed32() {
  optional_sfixed32_ = 0;
  clear_has_optional_sfixed32();
}
::google::protobuf::int32 TestAllTypes::optional_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_sfixed32)
  return optional_sfixed32_;
}
void TestAllTypes::set_optional_sfixed32(::google::protobuf::int32 value) {
  set_has_optional_sfixed32();
  optional_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_sfixed32)
}

// optional sfixed64 optional_sfixed64 = 10;
bool TestAllTypes::has_optional_sfixed64() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TestAllTypes::set_has_optional_sfixed64() {
  _has_bits_[0] |= 0x00000200u;
}
void TestAllTypes::clear_has_optional_sfixed64() {
  _has_bits_[0] &= ~0x00000200u;
}
void TestAllTypes::clear_optional_sfixed64() {
  optional_sfixed64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_sfixed64();
}
::google::protobuf::int64 TestAllTypes::optional_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_sfixed64)
  return optional_sfixed64_;
}
void TestAllTypes::set_optional_sfixed64(::google::protobuf::int64 value) {
  set_has_optional_sfixed64();
  optional_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_sfixed64)
}

// optional float optional_float = 11;
bool TestAllTypes::has_optional_float() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TestAllTypes::set_has_optional_float() {
  _has_bits_[0] |= 0x00000400u;
}
void TestAllTypes::clear_has_optional_float() {
  _has_bits_[0] &= ~0x00000400u;
}
void TestAllTypes::clear_optional_float() {
  optional_float_ = 0;
  clear_has_optional_float();
}
float TestAllTypes::optional_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_float)
  return optional_float_;
}
void TestAllTypes::set_optional_float(float value) {
  set_has_optional_float();
  optional_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_float)
}

// optional double optional_double = 12;
bool TestAllTypes::has_optional_double() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TestAllTypes::set_has_optional_double() {
  _has_bits_[0] |= 0x00000800u;
}
void TestAllTypes::clear_has_optional_double() {
  _has_bits_[0] &= ~0x00000800u;
}
void TestAllTypes::clear_optional_double() {
  optional_double_ = 0;
  clear_has_optional_double();
}
double TestAllTypes::optional_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_double)
  return optional_double_;
}
void TestAllTypes::set_optional_double(double value) {
  set_has_optional_double();
  optional_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_double)
}

// optional bool optional_bool = 13;
bool TestAllTypes::has_optional_bool() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TestAllTypes::set_has_optional_bool() {
  _has_bits_[0] |= 0x00001000u;
}
void TestAllTypes::clear_has_optional_bool() {
  _has_bits_[0] &= ~0x00001000u;
}
void TestAllTypes::clear_optional_bool() {
  optional_bool_ = false;
  clear_has_optional_bool();
}
bool TestAllTypes::optional_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_bool)
  return optional_bool_;
}
void TestAllTypes::set_optional_bool(bool value) {
  set_has_optional_bool();
  optional_bool_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_bool)
}

// optional string optional_string = 14;
bool TestAllTypes::has_optional_string() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TestAllTypes::set_has_optional_string() {
  _has_bits_[0] |= 0x00002000u;
}
void TestAllTypes::clear_has_optional_string() {
  _has_bits_[0] &= ~0x00002000u;
}
void TestAllTypes::clear_optional_string() {
  optional_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_optional_string();
}
const ::std::string& TestAllTypes::optional_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_string)
  return optional_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypes::set_optional_string(const ::std::string& value) {
  set_has_optional_string();
  optional_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_string)
}
void TestAllTypes::set_optional_string(const char* value) {
  set_has_optional_string();
  optional_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.optional_string)
}
void TestAllTypes::set_optional_string(const char* value,
    size_t size) {
  set_has_optional_string();
  optional_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.optional_string)
}
::std::string* TestAllTypes::mutable_optional_string() {
  set_has_optional_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_string)
  return optional_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_optional_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_string)
  clear_has_optional_string();
  return optional_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_optional_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_optional_string();
  return optional_string_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_optional_string(::std::string* optional_string) {
  if (optional_string != NULL) {
    set_has_optional_string();
  } else {
    clear_has_optional_string();
  }
  optional_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_string)
}
void TestAllTypes::unsafe_arena_set_allocated_optional_string(
    ::std::string* optional_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (optional_string != NULL) {
    set_has_optional_string();
  } else {
    clear_has_optional_string();
  }
  optional_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      optional_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_string)
}

// optional bytes optional_bytes = 15;
bool TestAllTypes::has_optional_bytes() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TestAllTypes::set_has_optional_bytes() {
  _has_bits_[0] |= 0x00004000u;
}
void TestAllTypes::clear_has_optional_bytes() {
  _has_bits_[0] &= ~0x00004000u;
}
void TestAllTypes::clear_optional_bytes() {
  optional_bytes_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_optional_bytes();
}
const ::std::string& TestAllTypes::optional_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_bytes)
  return optional_bytes_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypes::set_optional_bytes(const ::std::string& value) {
  set_has_optional_bytes();
  optional_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_bytes)
}
void TestAllTypes::set_optional_bytes(const char* value) {
  set_has_optional_bytes();
  optional_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.optional_bytes)
}
void TestAllTypes::set_optional_bytes(const void* value,
    size_t size) {
  set_has_optional_bytes();
  optional_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.optional_bytes)
}
::std::string* TestAllTypes::mutable_optional_bytes() {
  set_has_optional_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_bytes)
  return optional_bytes_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_optional_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_bytes)
  clear_has_optional_bytes();
  return optional_bytes_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_optional_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_optional_bytes();
  return optional_bytes_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_optional_bytes(::std::string* optional_bytes) {
  if (optional_bytes != NULL) {
    set_has_optional_bytes();
  } else {
    clear_has_optional_bytes();
  }
  optional_bytes_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_bytes,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_bytes)
}
void TestAllTypes::unsafe_arena_set_allocated_optional_bytes(
    ::std::string* optional_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (optional_bytes != NULL) {
    set_has_optional_bytes();
  } else {
    clear_has_optional_bytes();
  }
  optional_bytes_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      optional_bytes, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_bytes)
}

// optional group OptionalGroup = 16 { ... };
bool TestAllTypes::has_optionalgroup() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TestAllTypes::set_has_optionalgroup() {
  _has_bits_[0] |= 0x00008000u;
}
void TestAllTypes::clear_has_optionalgroup() {
  _has_bits_[0] &= ~0x00008000u;
}
void TestAllTypes::clear_optionalgroup() {
  if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestAllTypes_OptionalGroup::Clear();
  clear_has_optionalgroup();
}
const ::protobuf_unittest::TestAllTypes_OptionalGroup& TestAllTypes::optionalgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optionalgroup)
  return optionalgroup_ != NULL ? *optionalgroup_
                         : *::protobuf_unittest::TestAllTypes_OptionalGroup::internal_default_instance();
}
::protobuf_unittest::TestAllTypes_OptionalGroup* TestAllTypes::mutable_optionalgroup() {
  set_has_optionalgroup();
  if (optionalgroup_ == NULL) {
    _slow_mutable_optionalgroup();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optionalgroup)
  return optionalgroup_;
}
::protobuf_unittest::TestAllTypes_OptionalGroup* TestAllTypes::release_optionalgroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optionalgroup)
  clear_has_optionalgroup();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optionalgroup();
  } else {
    ::protobuf_unittest::TestAllTypes_OptionalGroup* temp = optionalgroup_;
    optionalgroup_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optionalgroup(::protobuf_unittest::TestAllTypes_OptionalGroup* optionalgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optionalgroup_;
  }
  if (optionalgroup != NULL) {
    _slow_set_allocated_optionalgroup(message_arena, &optionalgroup);
  }
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optionalgroup)
}

// optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
bool TestAllTypes::has_optional_nested_message() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TestAllTypes::set_has_optional_nested_message() {
  _has_bits_[0] |= 0x00010000u;
}
void TestAllTypes::clear_has_optional_nested_message() {
  _has_bits_[0] &= ~0x00010000u;
}
void TestAllTypes::clear_optional_nested_message() {
  if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
  clear_has_optional_nested_message();
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::optional_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_nested_message)
  return optional_nested_message_ != NULL ? *optional_nested_message_
                         : *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_optional_nested_message() {
  set_has_optional_nested_message();
  if (optional_nested_message_ == NULL) {
    _slow_mutable_optional_nested_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_nested_message)
  return optional_nested_message_;
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_optional_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_nested_message)
  clear_has_optional_nested_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_nested_message();
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = optional_nested_message_;
    optional_nested_message_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optional_nested_message(::protobuf_unittest::TestAllTypes_NestedMessage* optional_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_nested_message_;
  }
  if (optional_nested_message != NULL) {
    _slow_set_allocated_optional_nested_message(message_arena, &optional_nested_message);
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_nested_message)
}

// optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
bool TestAllTypes::has_optional_foreign_message() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void TestAllTypes::set_has_optional_foreign_message() {
  _has_bits_[0] |= 0x00020000u;
}
void TestAllTypes::clear_has_optional_foreign_message() {
  _has_bits_[0] &= ~0x00020000u;
}
void TestAllTypes::clear_optional_foreign_message() {
  if (optional_foreign_message_ != NULL) optional_foreign_message_->::protobuf_unittest::ForeignMessage::Clear();
  clear_has_optional_foreign_message();
}
const ::protobuf_unittest::ForeignMessage& TestAllTypes::optional_foreign_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_foreign_message)
  return optional_foreign_message_ != NULL ? *optional_foreign_message_
                         : *::protobuf_unittest::ForeignMessage::internal_default_instance();
}
::protobuf_unittest::ForeignMessage* TestAllTypes::mutable_optional_foreign_message() {
  set_has_optional_foreign_message();
  if (optional_foreign_message_ == NULL) {
    _slow_mutable_optional_foreign_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_foreign_message)
  return optional_foreign_message_;
}
::protobuf_unittest::ForeignMessage* TestAllTypes::release_optional_foreign_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_foreign_message)
  clear_has_optional_foreign_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_foreign_message();
  } else {
    ::protobuf_unittest::ForeignMessage* temp = optional_foreign_message_;
    optional_foreign_message_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optional_foreign_message(::protobuf_unittest::ForeignMessage* optional_foreign_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_foreign_message_;
  }
  if (optional_foreign_message != NULL) {
    _slow_set_allocated_optional_foreign_message(message_arena, &optional_foreign_message);
  }
  optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    set_has_optional_foreign_message();
  } else {
    clear_has_optional_foreign_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_foreign_message)
}

// optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
bool TestAllTypes::has_optional_import_message() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void TestAllTypes::set_has_optional_import_message() {
  _has_bits_[0] |= 0x00040000u;
}
void TestAllTypes::clear_has_optional_import_message() {
  _has_bits_[0] &= ~0x00040000u;
}
void TestAllTypes::clear_optional_import_message() {
  if (optional_import_message_ != NULL) optional_import_message_->::protobuf_unittest_import::ImportMessage::Clear();
  clear_has_optional_import_message();
}
const ::protobuf_unittest_import::ImportMessage& TestAllTypes::optional_import_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_import_message)
  return optional_import_message_ != NULL ? *optional_import_message_
                         : *::protobuf_unittest_import::ImportMessage::internal_default_instance();
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::mutable_optional_import_message() {
  set_has_optional_import_message();
  if (optional_import_message_ == NULL) {
    _slow_mutable_optional_import_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_import_message)
  return optional_import_message_;
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::release_optional_import_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_import_message)
  clear_has_optional_import_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_import_message();
  } else {
    ::protobuf_unittest_import::ImportMessage* temp = optional_import_message_;
    optional_import_message_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessage* optional_import_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_import_message_;
  }
  if (optional_import_message != NULL) {
    _slow_set_allocated_optional_import_message(message_arena, &optional_import_message);
  }
  optional_import_message_ = optional_import_message;
  if (optional_import_message) {
    set_has_optional_import_message();
  } else {
    clear_has_optional_import_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_import_message)
}

// optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
bool TestAllTypes::has_optional_nested_enum() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void TestAllTypes::set_has_optional_nested_enum() {
  _has_bits_[0] |= 0x00080000u;
}
void TestAllTypes::clear_has_optional_nested_enum() {
  _has_bits_[0] &= ~0x00080000u;
}
void TestAllTypes::clear_optional_nested_enum() {
  optional_nested_enum_ = 1;
  clear_has_optional_nested_enum();
}
::protobuf_unittest::TestAllTypes_NestedEnum TestAllTypes::optional_nested_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(optional_nested_enum_);
}
void TestAllTypes::set_optional_nested_enum(::protobuf_unittest::TestAllTypes_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value));
  set_has_optional_nested_enum();
  optional_nested_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_nested_enum)
}

// optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
bool TestAllTypes::has_optional_foreign_enum() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void TestAllTypes::set_has_optional_foreign_enum() {
  _has_bits_[0] |= 0x00100000u;
}
void TestAllTypes::clear_has_optional_foreign_enum() {
  _has_bits_[0] &= ~0x00100000u;
}
void TestAllTypes::clear_optional_foreign_enum() {
  optional_foreign_enum_ = 4;
  clear_has_optional_foreign_enum();
}
::protobuf_unittest::ForeignEnum TestAllTypes::optional_foreign_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnum >(optional_foreign_enum_);
}
void TestAllTypes::set_optional_foreign_enum(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  set_has_optional_foreign_enum();
  optional_foreign_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_foreign_enum)
}

// optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
bool TestAllTypes::has_optional_import_enum() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void TestAllTypes::set_has_optional_import_enum() {
  _has_bits_[0] |= 0x00200000u;
}
void TestAllTypes::clear_has_optional_import_enum() {
  _has_bits_[0] &= ~0x00200000u;
}
void TestAllTypes::clear_optional_import_enum() {
  optional_import_enum_ = 7;
  clear_has_optional_import_enum();
}
::protobuf_unittest_import::ImportEnum TestAllTypes::optional_import_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnum >(optional_import_enum_);
}
void TestAllTypes::set_optional_import_enum(::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  set_has_optional_import_enum();
  optional_import_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_import_enum)
}

// optional string optional_string_piece = 24 [ctype = STRING_PIECE];
bool TestAllTypes::has_optional_string_piece() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void TestAllTypes::set_has_optional_string_piece() {
  _has_bits_[0] |= 0x00400000u;
}
void TestAllTypes::clear_has_optional_string_piece() {
  _has_bits_[0] &= ~0x00400000u;
}
void TestAllTypes::clear_optional_string_piece() {
  optional_string_piece_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_optional_string_piece();
}
const ::std::string& TestAllTypes::optional_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_string_piece)
  return optional_string_piece_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypes::set_optional_string_piece(const ::std::string& value) {
  set_has_optional_string_piece();
  optional_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_string_piece)
}
void TestAllTypes::set_optional_string_piece(const char* value) {
  set_has_optional_string_piece();
  optional_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.optional_string_piece)
}
void TestAllTypes::set_optional_string_piece(const char* value,
    size_t size) {
  set_has_optional_string_piece();
  optional_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.optional_string_piece)
}
::std::string* TestAllTypes::mutable_optional_string_piece() {
  set_has_optional_string_piece();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_string_piece)
  return optional_string_piece_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_optional_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_string_piece)
  clear_has_optional_string_piece();
  return optional_string_piece_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_optional_string_piece() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_string_piece)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_optional_string_piece();
  return optional_string_piece_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_optional_string_piece(::std::string* optional_string_piece) {
  if (optional_string_piece != NULL) {
    set_has_optional_string_piece();
  } else {
    clear_has_optional_string_piece();
  }
  optional_string_piece_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_string_piece,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_string_piece)
}
void TestAllTypes::unsafe_arena_set_allocated_optional_string_piece(
    ::std::string* optional_string_piece) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (optional_string_piece != NULL) {
    set_has_optional_string_piece();
  } else {
    clear_has_optional_string_piece();
  }
  optional_string_piece_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      optional_string_piece, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_string_piece)
}

// optional string optional_cord = 25 [ctype = CORD];
bool TestAllTypes::has_optional_cord() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void TestAllTypes::set_has_optional_cord() {
  _has_bits_[0] |= 0x00800000u;
}
void TestAllTypes::clear_has_optional_cord() {
  _has_bits_[0] &= ~0x00800000u;
}
void TestAllTypes::clear_optional_cord() {
  optional_cord_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_optional_cord();
}
const ::std::string& TestAllTypes::optional_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_cord)
  return optional_cord_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypes::set_optional_cord(const ::std::string& value) {
  set_has_optional_cord();
  optional_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.optional_cord)
}
void TestAllTypes::set_optional_cord(const char* value) {
  set_has_optional_cord();
  optional_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.optional_cord)
}
void TestAllTypes::set_optional_cord(const char* value,
    size_t size) {
  set_has_optional_cord();
  optional_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.optional_cord)
}
::std::string* TestAllTypes::mutable_optional_cord() {
  set_has_optional_cord();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_cord)
  return optional_cord_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_optional_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_cord)
  clear_has_optional_cord();
  return optional_cord_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_optional_cord() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.optional_cord)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_optional_cord();
  return optional_cord_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_optional_cord(::std::string* optional_cord) {
  if (optional_cord != NULL) {
    set_has_optional_cord();
  } else {
    clear_has_optional_cord();
  }
  optional_cord_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_cord,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_cord)
}
void TestAllTypes::unsafe_arena_set_allocated_optional_cord(
    ::std::string* optional_cord) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (optional_cord != NULL) {
    set_has_optional_cord();
  } else {
    clear_has_optional_cord();
  }
  optional_cord_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      optional_cord, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.optional_cord)
}

// optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
bool TestAllTypes::has_optional_public_import_message() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void TestAllTypes::set_has_optional_public_import_message() {
  _has_bits_[0] |= 0x01000000u;
}
void TestAllTypes::clear_has_optional_public_import_message() {
  _has_bits_[0] &= ~0x01000000u;
}
void TestAllTypes::clear_optional_public_import_message() {
  if (optional_public_import_message_ != NULL) optional_public_import_message_->::protobuf_unittest_import::PublicImportMessage::Clear();
  clear_has_optional_public_import_message();
}
const ::protobuf_unittest_import::PublicImportMessage& TestAllTypes::optional_public_import_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_public_import_message)
  return optional_public_import_message_ != NULL ? *optional_public_import_message_
                         : *::protobuf_unittest_import::PublicImportMessage::internal_default_instance();
}
::protobuf_unittest_import::PublicImportMessage* TestAllTypes::mutable_optional_public_import_message() {
  set_has_optional_public_import_message();
  if (optional_public_import_message_ == NULL) {
    _slow_mutable_optional_public_import_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_public_import_message)
  return optional_public_import_message_;
}
::protobuf_unittest_import::PublicImportMessage* TestAllTypes::release_optional_public_import_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_public_import_message)
  clear_has_optional_public_import_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_public_import_message();
  } else {
    ::protobuf_unittest_import::PublicImportMessage* temp = optional_public_import_message_;
    optional_public_import_message_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessage* optional_public_import_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_public_import_message_;
  }
  if (optional_public_import_message != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(optional_public_import_message);
    }
  }
  optional_public_import_message_ = optional_public_import_message;
  if (optional_public_import_message) {
    set_has_optional_public_import_message();
  } else {
    clear_has_optional_public_import_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_public_import_message)
}

// optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
bool TestAllTypes::has_optional_lazy_message() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void TestAllTypes::set_has_optional_lazy_message() {
  _has_bits_[0] |= 0x02000000u;
}
void TestAllTypes::clear_has_optional_lazy_message() {
  _has_bits_[0] &= ~0x02000000u;
}
void TestAllTypes::clear_optional_lazy_message() {
  if (optional_lazy_message_ != NULL) optional_lazy_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
  clear_has_optional_lazy_message();
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::optional_lazy_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.optional_lazy_message)
  return optional_lazy_message_ != NULL ? *optional_lazy_message_
                         : *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_optional_lazy_message() {
  set_has_optional_lazy_message();
  if (optional_lazy_message_ == NULL) {
    _slow_mutable_optional_lazy_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.optional_lazy_message)
  return optional_lazy_message_;
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_optional_lazy_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.optional_lazy_message)
  clear_has_optional_lazy_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_lazy_message();
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = optional_lazy_message_;
    optional_lazy_message_ = NULL;
    return temp;
  }
}
 void TestAllTypes::set_allocated_optional_lazy_message(::protobuf_unittest::TestAllTypes_NestedMessage* optional_lazy_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_lazy_message_;
  }
  if (optional_lazy_message != NULL) {
    _slow_set_allocated_optional_lazy_message(message_arena, &optional_lazy_message);
  }
  optional_lazy_message_ = optional_lazy_message;
  if (optional_lazy_message) {
    set_has_optional_lazy_message();
  } else {
    clear_has_optional_lazy_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.optional_lazy_message)
}

// repeated int32 repeated_int32 = 31;
int TestAllTypes::repeated_int32_size() const {
  return repeated_int32_.size();
}
void TestAllTypes::clear_repeated_int32() {
  repeated_int32_.Clear();
}
::google::protobuf::int32 TestAllTypes::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_int32)
  return repeated_int32_.Get(index);
}
void TestAllTypes::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_int32)
}
void TestAllTypes::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypes::repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_int32)
  return repeated_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypes::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_int32)
  return &repeated_int32_;
}

// repeated int64 repeated_int64 = 32;
int TestAllTypes::repeated_int64_size() const {
  return repeated_int64_.size();
}
void TestAllTypes::clear_repeated_int64() {
  repeated_int64_.Clear();
}
::google::protobuf::int64 TestAllTypes::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_int64)
  return repeated_int64_.Get(index);
}
void TestAllTypes::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_int64)
}
void TestAllTypes::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypes::repeated_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_int64)
  return repeated_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypes::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_int64)
  return &repeated_int64_;
}

// repeated uint32 repeated_uint32 = 33;
int TestAllTypes::repeated_uint32_size() const {
  return repeated_uint32_.size();
}
void TestAllTypes::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
::google::protobuf::uint32 TestAllTypes::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_uint32)
  return repeated_uint32_.Get(index);
}
void TestAllTypes::set_repeated_uint32(int index, ::google::protobuf::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_uint32)
}
void TestAllTypes::add_repeated_uint32(::google::protobuf::uint32 value) {
  repeated_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_uint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestAllTypes::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_uint32)
  return repeated_uint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestAllTypes::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_uint32)
  return &repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 34;
int TestAllTypes::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
void TestAllTypes::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
::google::protobuf::uint64 TestAllTypes::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_uint64)
  return repeated_uint64_.Get(index);
}
void TestAllTypes::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_uint64)
}
void TestAllTypes::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestAllTypes::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_uint64)
  return repeated_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestAllTypes::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_uint64)
  return &repeated_uint64_;
}

// repeated sint32 repeated_sint32 = 35;
int TestAllTypes::repeated_sint32_size() const {
  return repeated_sint32_.size();
}
void TestAllTypes::clear_repeated_sint32() {
  repeated_sint32_.Clear();
}
::google::protobuf::int32 TestAllTypes::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_sint32)
  return repeated_sint32_.Get(index);
}
void TestAllTypes::set_repeated_sint32(int index, ::google::protobuf::int32 value) {
  repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_sint32)
}
void TestAllTypes::add_repeated_sint32(::google::protobuf::int32 value) {
  repeated_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_sint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypes::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_sint32)
  return repeated_sint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypes::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_sint32)
  return &repeated_sint32_;
}

// repeated sint64 repeated_sint64 = 36;
int TestAllTypes::repeated_sint64_size() const {
  return repeated_sint64_.size();
}
void TestAllTypes::clear_repeated_sint64() {
  repeated_sint64_.Clear();
}
::google::protobuf::int64 TestAllTypes::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_sint64)
  return repeated_sint64_.Get(index);
}
void TestAllTypes::set_repeated_sint64(int index, ::google::protobuf::int64 value) {
  repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_sint64)
}
void TestAllTypes::add_repeated_sint64(::google::protobuf::int64 value) {
  repeated_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_sint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypes::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_sint64)
  return repeated_sint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypes::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_sint64)
  return &repeated_sint64_;
}

// repeated fixed32 repeated_fixed32 = 37;
int TestAllTypes::repeated_fixed32_size() const {
  return repeated_fixed32_.size();
}
void TestAllTypes::clear_repeated_fixed32() {
  repeated_fixed32_.Clear();
}
::google::protobuf::uint32 TestAllTypes::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_fixed32)
  return repeated_fixed32_.Get(index);
}
void TestAllTypes::set_repeated_fixed32(int index, ::google::protobuf::uint32 value) {
  repeated_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_fixed32)
}
void TestAllTypes::add_repeated_fixed32(::google::protobuf::uint32 value) {
  repeated_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestAllTypes::repeated_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_fixed32)
  return repeated_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestAllTypes::mutable_repeated_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_fixed32)
  return &repeated_fixed32_;
}

// repeated fixed64 repeated_fixed64 = 38;
int TestAllTypes::repeated_fixed64_size() const {
  return repeated_fixed64_.size();
}
void TestAllTypes::clear_repeated_fixed64() {
  repeated_fixed64_.Clear();
}
::google::protobuf::uint64 TestAllTypes::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_fixed64)
  return repeated_fixed64_.Get(index);
}
void TestAllTypes::set_repeated_fixed64(int index, ::google::protobuf::uint64 value) {
  repeated_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_fixed64)
}
void TestAllTypes::add_repeated_fixed64(::google::protobuf::uint64 value) {
  repeated_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestAllTypes::repeated_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_fixed64)
  return repeated_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestAllTypes::mutable_repeated_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_fixed64)
  return &repeated_fixed64_;
}

// repeated sfixed32 repeated_sfixed32 = 39;
int TestAllTypes::repeated_sfixed32_size() const {
  return repeated_sfixed32_.size();
}
void TestAllTypes::clear_repeated_sfixed32() {
  repeated_sfixed32_.Clear();
}
::google::protobuf::int32 TestAllTypes::repeated_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_sfixed32)
  return repeated_sfixed32_.Get(index);
}
void TestAllTypes::set_repeated_sfixed32(int index, ::google::protobuf::int32 value) {
  repeated_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_sfixed32)
}
void TestAllTypes::add_repeated_sfixed32(::google::protobuf::int32 value) {
  repeated_sfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_sfixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypes::repeated_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_sfixed32)
  return repeated_sfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypes::mutable_repeated_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_sfixed32)
  return &repeated_sfixed32_;
}

// repeated sfixed64 repeated_sfixed64 = 40;
int TestAllTypes::repeated_sfixed64_size() const {
  return repeated_sfixed64_.size();
}
void TestAllTypes::clear_repeated_sfixed64() {
  repeated_sfixed64_.Clear();
}
::google::protobuf::int64 TestAllTypes::repeated_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_sfixed64)
  return repeated_sfixed64_.Get(index);
}
void TestAllTypes::set_repeated_sfixed64(int index, ::google::protobuf::int64 value) {
  repeated_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_sfixed64)
}
void TestAllTypes::add_repeated_sfixed64(::google::protobuf::int64 value) {
  repeated_sfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_sfixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypes::repeated_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_sfixed64)
  return repeated_sfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypes::mutable_repeated_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_sfixed64)
  return &repeated_sfixed64_;
}

// repeated float repeated_float = 41;
int TestAllTypes::repeated_float_size() const {
  return repeated_float_.size();
}
void TestAllTypes::clear_repeated_float() {
  repeated_float_.Clear();
}
float TestAllTypes::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_float)
  return repeated_float_.Get(index);
}
void TestAllTypes::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_float)
}
void TestAllTypes::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_float)
}
const ::google::protobuf::RepeatedField< float >&
TestAllTypes::repeated_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_float)
  return repeated_float_;
}
::google::protobuf::RepeatedField< float >*
TestAllTypes::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_float)
  return &repeated_float_;
}

// repeated double repeated_double = 42;
int TestAllTypes::repeated_double_size() const {
  return repeated_double_.size();
}
void TestAllTypes::clear_repeated_double() {
  repeated_double_.Clear();
}
double TestAllTypes::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_double)
  return repeated_double_.Get(index);
}
void TestAllTypes::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_double)
}
void TestAllTypes::add_repeated_double(double value) {
  repeated_double_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_double)
}
const ::google::protobuf::RepeatedField< double >&
TestAllTypes::repeated_double() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_double)
  return repeated_double_;
}
::google::protobuf::RepeatedField< double >*
TestAllTypes::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_double)
  return &repeated_double_;
}

// repeated bool repeated_bool = 43;
int TestAllTypes::repeated_bool_size() const {
  return repeated_bool_.size();
}
void TestAllTypes::clear_repeated_bool() {
  repeated_bool_.Clear();
}
bool TestAllTypes::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_bool)
  return repeated_bool_.Get(index);
}
void TestAllTypes::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_bool)
}
void TestAllTypes::add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_bool)
}
const ::google::protobuf::RepeatedField< bool >&
TestAllTypes::repeated_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_bool)
  return repeated_bool_;
}
::google::protobuf::RepeatedField< bool >*
TestAllTypes::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_bool)
  return &repeated_bool_;
}

// repeated string repeated_string = 44;
int TestAllTypes::repeated_string_size() const {
  return repeated_string_.size();
}
void TestAllTypes::clear_repeated_string() {
  repeated_string_.Clear();
}
const ::std::string& TestAllTypes::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_string)
  return repeated_string_.Get(index);
}
::std::string* TestAllTypes::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_string)
  return repeated_string_.Mutable(index);
}
void TestAllTypes::set_repeated_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_string)
  repeated_string_.Mutable(index)->assign(value);
}
void TestAllTypes::set_repeated_string(int index, const char* value) {
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.repeated_string)
}
void TestAllTypes::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.repeated_string)
}
::std::string* TestAllTypes::add_repeated_string() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypes.repeated_string)
  return repeated_string_.Add();
}
void TestAllTypes::add_repeated_string(const ::std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_string)
}
void TestAllTypes::add_repeated_string(const char* value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypes.repeated_string)
}
void TestAllTypes::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypes.repeated_string)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypes::repeated_string() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_string)
  return repeated_string_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypes::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 45;
int TestAllTypes::repeated_bytes_size() const {
  return repeated_bytes_.size();
}
void TestAllTypes::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
const ::std::string& TestAllTypes::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_bytes)
  return repeated_bytes_.Get(index);
}
::std::string* TestAllTypes::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
void TestAllTypes::set_repeated_bytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(value);
}
void TestAllTypes::set_repeated_bytes(int index, const char* value) {
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.repeated_bytes)
}
void TestAllTypes::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.repeated_bytes)
}
::std::string* TestAllTypes::add_repeated_bytes() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypes.repeated_bytes)
  return repeated_bytes_.Add();
}
void TestAllTypes::add_repeated_bytes(const ::std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_bytes)
}
void TestAllTypes::add_repeated_bytes(const char* value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypes.repeated_bytes)
}
void TestAllTypes::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypes.repeated_bytes)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypes::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_bytes)
  return repeated_bytes_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypes::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_bytes)
  return &repeated_bytes_;
}

// repeated group RepeatedGroup = 46 { ... };
int TestAllTypes::repeatedgroup_size() const {
  return repeatedgroup_.size();
}
void TestAllTypes::clear_repeatedgroup() {
  repeatedgroup_.Clear();
}
const ::protobuf_unittest::TestAllTypes_RepeatedGroup& TestAllTypes::repeatedgroup(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeatedgroup)
  return repeatedgroup_.Get(index);
}
::protobuf_unittest::TestAllTypes_RepeatedGroup* TestAllTypes::mutable_repeatedgroup(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeatedgroup)
  return repeatedgroup_.Mutable(index);
}
::protobuf_unittest::TestAllTypes_RepeatedGroup* TestAllTypes::add_repeatedgroup() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeatedgroup)
  return repeatedgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_RepeatedGroup >*
TestAllTypes::mutable_repeatedgroup() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeatedgroup)
  return &repeatedgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_RepeatedGroup >&
TestAllTypes::repeatedgroup() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeatedgroup)
  return repeatedgroup_;
}

// repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
int TestAllTypes::repeated_nested_message_size() const {
  return repeated_nested_message_.size();
}
void TestAllTypes::clear_repeated_nested_message() {
  repeated_nested_message_.Clear();
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::repeated_nested_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_nested_message)
  return repeated_nested_message_.Get(index);
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_repeated_nested_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_nested_message)
  return repeated_nested_message_.Mutable(index);
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::add_repeated_nested_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_nested_message)
  return repeated_nested_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_NestedMessage >*
TestAllTypes::mutable_repeated_nested_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_nested_message)
  return &repeated_nested_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_NestedMessage >&
TestAllTypes::repeated_nested_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_nested_message)
  return repeated_nested_message_;
}

// repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
int TestAllTypes::repeated_foreign_message_size() const {
  return repeated_foreign_message_.size();
}
void TestAllTypes::clear_repeated_foreign_message() {
  repeated_foreign_message_.Clear();
}
const ::protobuf_unittest::ForeignMessage& TestAllTypes::repeated_foreign_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_foreign_message)
  return repeated_foreign_message_.Get(index);
}
::protobuf_unittest::ForeignMessage* TestAllTypes::mutable_repeated_foreign_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_foreign_message)
  return repeated_foreign_message_.Mutable(index);
}
::protobuf_unittest::ForeignMessage* TestAllTypes::add_repeated_foreign_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_foreign_message)
  return repeated_foreign_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >*
TestAllTypes::mutable_repeated_foreign_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_foreign_message)
  return &repeated_foreign_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >&
TestAllTypes::repeated_foreign_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_foreign_message)
  return repeated_foreign_message_;
}

// repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
int TestAllTypes::repeated_import_message_size() const {
  return repeated_import_message_.size();
}
void TestAllTypes::clear_repeated_import_message() {
  repeated_import_message_.Clear();
}
const ::protobuf_unittest_import::ImportMessage& TestAllTypes::repeated_import_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_import_message)
  return repeated_import_message_.Get(index);
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::mutable_repeated_import_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_import_message)
  return repeated_import_message_.Mutable(index);
}
::protobuf_unittest_import::ImportMessage* TestAllTypes::add_repeated_import_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_import_message)
  return repeated_import_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest_import::ImportMessage >*
TestAllTypes::mutable_repeated_import_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_import_message)
  return &repeated_import_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest_import::ImportMessage >&
TestAllTypes::repeated_import_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_import_message)
  return repeated_import_message_;
}

// repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
int TestAllTypes::repeated_nested_enum_size() const {
  return repeated_nested_enum_.size();
}
void TestAllTypes::clear_repeated_nested_enum() {
  repeated_nested_enum_.Clear();
}
::protobuf_unittest::TestAllTypes_NestedEnum TestAllTypes::repeated_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(repeated_nested_enum_.Get(index));
}
void TestAllTypes::set_repeated_nested_enum(int index, ::protobuf_unittest::TestAllTypes_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value));
  repeated_nested_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_nested_enum)
}
void TestAllTypes::add_repeated_nested_enum(::protobuf_unittest::TestAllTypes_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value));
  repeated_nested_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_nested_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypes::repeated_nested_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_nested_enum)
  return repeated_nested_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypes::mutable_repeated_nested_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_nested_enum)
  return &repeated_nested_enum_;
}

// repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
int TestAllTypes::repeated_foreign_enum_size() const {
  return repeated_foreign_enum_.size();
}
void TestAllTypes::clear_repeated_foreign_enum() {
  repeated_foreign_enum_.Clear();
}
::protobuf_unittest::ForeignEnum TestAllTypes::repeated_foreign_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnum >(repeated_foreign_enum_.Get(index));
}
void TestAllTypes::set_repeated_foreign_enum(int index, ::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  repeated_foreign_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_foreign_enum)
}
void TestAllTypes::add_repeated_foreign_enum(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  repeated_foreign_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_foreign_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypes::repeated_foreign_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_foreign_enum)
  return repeated_foreign_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypes::mutable_repeated_foreign_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_foreign_enum)
  return &repeated_foreign_enum_;
}

// repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
int TestAllTypes::repeated_import_enum_size() const {
  return repeated_import_enum_.size();
}
void TestAllTypes::clear_repeated_import_enum() {
  repeated_import_enum_.Clear();
}
::protobuf_unittest_import::ImportEnum TestAllTypes::repeated_import_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnum >(repeated_import_enum_.Get(index));
}
void TestAllTypes::set_repeated_import_enum(int index, ::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  repeated_import_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_import_enum)
}
void TestAllTypes::add_repeated_import_enum(::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  repeated_import_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_import_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypes::repeated_import_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_import_enum)
  return repeated_import_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypes::mutable_repeated_import_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_import_enum)
  return &repeated_import_enum_;
}

// repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
int TestAllTypes::repeated_string_piece_size() const {
  return repeated_string_piece_.size();
}
void TestAllTypes::clear_repeated_string_piece() {
  repeated_string_piece_.Clear();
}
const ::std::string& TestAllTypes::repeated_string_piece(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_string_piece)
  return repeated_string_piece_.Get(index);
}
::std::string* TestAllTypes::mutable_repeated_string_piece(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_string_piece)
  return repeated_string_piece_.Mutable(index);
}
void TestAllTypes::set_repeated_string_piece(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_string_piece)
  repeated_string_piece_.Mutable(index)->assign(value);
}
void TestAllTypes::set_repeated_string_piece(int index, const char* value) {
  repeated_string_piece_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.repeated_string_piece)
}
void TestAllTypes::set_repeated_string_piece(int index, const char* value, size_t size) {
  repeated_string_piece_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.repeated_string_piece)
}
::std::string* TestAllTypes::add_repeated_string_piece() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypes.repeated_string_piece)
  return repeated_string_piece_.Add();
}
void TestAllTypes::add_repeated_string_piece(const ::std::string& value) {
  repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_string_piece)
}
void TestAllTypes::add_repeated_string_piece(const char* value) {
  repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypes.repeated_string_piece)
}
void TestAllTypes::add_repeated_string_piece(const char* value, size_t size) {
  repeated_string_piece_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypes.repeated_string_piece)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypes::repeated_string_piece() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_string_piece)
  return repeated_string_piece_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypes::mutable_repeated_string_piece() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_string_piece)
  return &repeated_string_piece_;
}

// repeated string repeated_cord = 55 [ctype = CORD];
int TestAllTypes::repeated_cord_size() const {
  return repeated_cord_.size();
}
void TestAllTypes::clear_repeated_cord() {
  repeated_cord_.Clear();
}
const ::std::string& TestAllTypes::repeated_cord(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_cord)
  return repeated_cord_.Get(index);
}
::std::string* TestAllTypes::mutable_repeated_cord(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_cord)
  return repeated_cord_.Mutable(index);
}
void TestAllTypes::set_repeated_cord(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.repeated_cord)
  repeated_cord_.Mutable(index)->assign(value);
}
void TestAllTypes::set_repeated_cord(int index, const char* value) {
  repeated_cord_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.repeated_cord)
}
void TestAllTypes::set_repeated_cord(int index, const char* value, size_t size) {
  repeated_cord_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.repeated_cord)
}
::std::string* TestAllTypes::add_repeated_cord() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypes.repeated_cord)
  return repeated_cord_.Add();
}
void TestAllTypes::add_repeated_cord(const ::std::string& value) {
  repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_cord)
}
void TestAllTypes::add_repeated_cord(const char* value) {
  repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypes.repeated_cord)
}
void TestAllTypes::add_repeated_cord(const char* value, size_t size) {
  repeated_cord_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypes.repeated_cord)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypes::repeated_cord() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_cord)
  return repeated_cord_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypes::mutable_repeated_cord() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_cord)
  return &repeated_cord_;
}

// repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
int TestAllTypes::repeated_lazy_message_size() const {
  return repeated_lazy_message_.size();
}
void TestAllTypes::clear_repeated_lazy_message() {
  repeated_lazy_message_.Clear();
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::repeated_lazy_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.repeated_lazy_message)
  return repeated_lazy_message_.Get(index);
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_repeated_lazy_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.repeated_lazy_message)
  return repeated_lazy_message_.Mutable(index);
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::add_repeated_lazy_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypes.repeated_lazy_message)
  return repeated_lazy_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_NestedMessage >*
TestAllTypes::mutable_repeated_lazy_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypes.repeated_lazy_message)
  return &repeated_lazy_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes_NestedMessage >&
TestAllTypes::repeated_lazy_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypes.repeated_lazy_message)
  return repeated_lazy_message_;
}

// optional int32 default_int32 = 61 [default = 41];
bool TestAllTypes::has_default_int32() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
void TestAllTypes::set_has_default_int32() {
  _has_bits_[1] |= 0x00080000u;
}
void TestAllTypes::clear_has_default_int32() {
  _has_bits_[1] &= ~0x00080000u;
}
void TestAllTypes::clear_default_int32() {
  default_int32_ = 41;
  clear_has_default_int32();
}
::google::protobuf::int32 TestAllTypes::default_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_int32)
  return default_int32_;
}
void TestAllTypes::set_default_int32(::google::protobuf::int32 value) {
  set_has_default_int32();
  default_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_int32)
}

// optional int64 default_int64 = 62 [default = 42];
bool TestAllTypes::has_default_int64() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
void TestAllTypes::set_has_default_int64() {
  _has_bits_[1] |= 0x00100000u;
}
void TestAllTypes::clear_has_default_int64() {
  _has_bits_[1] &= ~0x00100000u;
}
void TestAllTypes::clear_default_int64() {
  default_int64_ = GOOGLE_LONGLONG(42);
  clear_has_default_int64();
}
::google::protobuf::int64 TestAllTypes::default_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_int64)
  return default_int64_;
}
void TestAllTypes::set_default_int64(::google::protobuf::int64 value) {
  set_has_default_int64();
  default_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_int64)
}

// optional uint32 default_uint32 = 63 [default = 43];
bool TestAllTypes::has_default_uint32() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
void TestAllTypes::set_has_default_uint32() {
  _has_bits_[1] |= 0x00200000u;
}
void TestAllTypes::clear_has_default_uint32() {
  _has_bits_[1] &= ~0x00200000u;
}
void TestAllTypes::clear_default_uint32() {
  default_uint32_ = 43u;
  clear_has_default_uint32();
}
::google::protobuf::uint32 TestAllTypes::default_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_uint32)
  return default_uint32_;
}
void TestAllTypes::set_default_uint32(::google::protobuf::uint32 value) {
  set_has_default_uint32();
  default_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_uint32)
}

// optional uint64 default_uint64 = 64 [default = 44];
bool TestAllTypes::has_default_uint64() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
void TestAllTypes::set_has_default_uint64() {
  _has_bits_[1] |= 0x00400000u;
}
void TestAllTypes::clear_has_default_uint64() {
  _has_bits_[1] &= ~0x00400000u;
}
void TestAllTypes::clear_default_uint64() {
  default_uint64_ = GOOGLE_ULONGLONG(44);
  clear_has_default_uint64();
}
::google::protobuf::uint64 TestAllTypes::default_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_uint64)
  return default_uint64_;
}
void TestAllTypes::set_default_uint64(::google::protobuf::uint64 value) {
  set_has_default_uint64();
  default_uint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_uint64)
}

// optional sint32 default_sint32 = 65 [default = -45];
bool TestAllTypes::has_default_sint32() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
void TestAllTypes::set_has_default_sint32() {
  _has_bits_[1] |= 0x00800000u;
}
void TestAllTypes::clear_has_default_sint32() {
  _has_bits_[1] &= ~0x00800000u;
}
void TestAllTypes::clear_default_sint32() {
  default_sint32_ = -45;
  clear_has_default_sint32();
}
::google::protobuf::int32 TestAllTypes::default_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_sint32)
  return default_sint32_;
}
void TestAllTypes::set_default_sint32(::google::protobuf::int32 value) {
  set_has_default_sint32();
  default_sint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_sint32)
}

// optional sint64 default_sint64 = 66 [default = 46];
bool TestAllTypes::has_default_sint64() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
void TestAllTypes::set_has_default_sint64() {
  _has_bits_[1] |= 0x01000000u;
}
void TestAllTypes::clear_has_default_sint64() {
  _has_bits_[1] &= ~0x01000000u;
}
void TestAllTypes::clear_default_sint64() {
  default_sint64_ = GOOGLE_LONGLONG(46);
  clear_has_default_sint64();
}
::google::protobuf::int64 TestAllTypes::default_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_sint64)
  return default_sint64_;
}
void TestAllTypes::set_default_sint64(::google::protobuf::int64 value) {
  set_has_default_sint64();
  default_sint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_sint64)
}

// optional fixed32 default_fixed32 = 67 [default = 47];
bool TestAllTypes::has_default_fixed32() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
void TestAllTypes::set_has_default_fixed32() {
  _has_bits_[1] |= 0x02000000u;
}
void TestAllTypes::clear_has_default_fixed32() {
  _has_bits_[1] &= ~0x02000000u;
}
void TestAllTypes::clear_default_fixed32() {
  default_fixed32_ = 47u;
  clear_has_default_fixed32();
}
::google::protobuf::uint32 TestAllTypes::default_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_fixed32)
  return default_fixed32_;
}
void TestAllTypes::set_default_fixed32(::google::protobuf::uint32 value) {
  set_has_default_fixed32();
  default_fixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_fixed32)
}

// optional fixed64 default_fixed64 = 68 [default = 48];
bool TestAllTypes::has_default_fixed64() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
void TestAllTypes::set_has_default_fixed64() {
  _has_bits_[1] |= 0x04000000u;
}
void TestAllTypes::clear_has_default_fixed64() {
  _has_bits_[1] &= ~0x04000000u;
}
void TestAllTypes::clear_default_fixed64() {
  default_fixed64_ = GOOGLE_ULONGLONG(48);
  clear_has_default_fixed64();
}
::google::protobuf::uint64 TestAllTypes::default_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_fixed64)
  return default_fixed64_;
}
void TestAllTypes::set_default_fixed64(::google::protobuf::uint64 value) {
  set_has_default_fixed64();
  default_fixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_fixed64)
}

// optional sfixed32 default_sfixed32 = 69 [default = 49];
bool TestAllTypes::has_default_sfixed32() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
void TestAllTypes::set_has_default_sfixed32() {
  _has_bits_[1] |= 0x08000000u;
}
void TestAllTypes::clear_has_default_sfixed32() {
  _has_bits_[1] &= ~0x08000000u;
}
void TestAllTypes::clear_default_sfixed32() {
  default_sfixed32_ = 49;
  clear_has_default_sfixed32();
}
::google::protobuf::int32 TestAllTypes::default_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_sfixed32)
  return default_sfixed32_;
}
void TestAllTypes::set_default_sfixed32(::google::protobuf::int32 value) {
  set_has_default_sfixed32();
  default_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_sfixed32)
}

// optional sfixed64 default_sfixed64 = 70 [default = -50];
bool TestAllTypes::has_default_sfixed64() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
void TestAllTypes::set_has_default_sfixed64() {
  _has_bits_[1] |= 0x10000000u;
}
void TestAllTypes::clear_has_default_sfixed64() {
  _has_bits_[1] &= ~0x10000000u;
}
void TestAllTypes::clear_default_sfixed64() {
  default_sfixed64_ = GOOGLE_LONGLONG(-50);
  clear_has_default_sfixed64();
}
::google::protobuf::int64 TestAllTypes::default_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_sfixed64)
  return default_sfixed64_;
}
void TestAllTypes::set_default_sfixed64(::google::protobuf::int64 value) {
  set_has_default_sfixed64();
  default_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_sfixed64)
}

// optional float default_float = 71 [default = 51.5];
bool TestAllTypes::has_default_float() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
void TestAllTypes::set_has_default_float() {
  _has_bits_[1] |= 0x20000000u;
}
void TestAllTypes::clear_has_default_float() {
  _has_bits_[1] &= ~0x20000000u;
}
void TestAllTypes::clear_default_float() {
  default_float_ = 51.5f;
  clear_has_default_float();
}
float TestAllTypes::default_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_float)
  return default_float_;
}
void TestAllTypes::set_default_float(float value) {
  set_has_default_float();
  default_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_float)
}

// optional double default_double = 72 [default = 52000];
bool TestAllTypes::has_default_double() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
void TestAllTypes::set_has_default_double() {
  _has_bits_[1] |= 0x40000000u;
}
void TestAllTypes::clear_has_default_double() {
  _has_bits_[1] &= ~0x40000000u;
}
void TestAllTypes::clear_default_double() {
  default_double_ = 52000;
  clear_has_default_double();
}
double TestAllTypes::default_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_double)
  return default_double_;
}
void TestAllTypes::set_default_double(double value) {
  set_has_default_double();
  default_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_double)
}

// optional bool default_bool = 73 [default = true];
bool TestAllTypes::has_default_bool() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
void TestAllTypes::set_has_default_bool() {
  _has_bits_[1] |= 0x80000000u;
}
void TestAllTypes::clear_has_default_bool() {
  _has_bits_[1] &= ~0x80000000u;
}
void TestAllTypes::clear_default_bool() {
  default_bool_ = true;
  clear_has_default_bool();
}
bool TestAllTypes::default_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_bool)
  return default_bool_;
}
void TestAllTypes::set_default_bool(bool value) {
  set_has_default_bool();
  default_bool_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_bool)
}

// optional string default_string = 74 [default = "hello"];
bool TestAllTypes::has_default_string() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
void TestAllTypes::set_has_default_string() {
  _has_bits_[2] |= 0x00000001u;
}
void TestAllTypes::clear_has_default_string() {
  _has_bits_[2] &= ~0x00000001u;
}
void TestAllTypes::clear_default_string() {
  default_string_.ClearToDefault(_default_default_string_, GetArenaNoVirtual());
  clear_has_default_string();
}
const ::std::string& TestAllTypes::default_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_string)
  return default_string_.Get(_default_default_string_);
}
void TestAllTypes::set_default_string(const ::std::string& value) {
  set_has_default_string();
  default_string_.Set(_default_default_string_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_string)
}
void TestAllTypes::set_default_string(const char* value) {
  set_has_default_string();
  default_string_.Set(_default_default_string_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.default_string)
}
void TestAllTypes::set_default_string(const char* value,
    size_t size) {
  set_has_default_string();
  default_string_.Set(_default_default_string_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.default_string)
}
::std::string* TestAllTypes::mutable_default_string() {
  set_has_default_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.default_string)
  return default_string_.Mutable(_default_default_string_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_default_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.default_string)
  clear_has_default_string();
  return default_string_.Release(_default_default_string_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_default_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.default_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_default_string();
  return default_string_.UnsafeArenaRelease(_default_default_string_,
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_default_string(::std::string* default_string) {
  if (default_string != NULL) {
    set_has_default_string();
  } else {
    clear_has_default_string();
  }
  default_string_.SetAllocated(_default_default_string_, default_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.default_string)
}
void TestAllTypes::unsafe_arena_set_allocated_default_string(
    ::std::string* default_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_string != NULL) {
    set_has_default_string();
  } else {
    clear_has_default_string();
  }
  default_string_.UnsafeArenaSetAllocated(_default_default_string_,
      default_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.default_string)
}

// optional bytes default_bytes = 75 [default = "world"];
bool TestAllTypes::has_default_bytes() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
void TestAllTypes::set_has_default_bytes() {
  _has_bits_[2] |= 0x00000002u;
}
void TestAllTypes::clear_has_default_bytes() {
  _has_bits_[2] &= ~0x00000002u;
}
void TestAllTypes::clear_default_bytes() {
  default_bytes_.ClearToDefault(_default_default_bytes_, GetArenaNoVirtual());
  clear_has_default_bytes();
}
const ::std::string& TestAllTypes::default_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_bytes)
  return default_bytes_.Get(_default_default_bytes_);
}
void TestAllTypes::set_default_bytes(const ::std::string& value) {
  set_has_default_bytes();
  default_bytes_.Set(_default_default_bytes_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_bytes)
}
void TestAllTypes::set_default_bytes(const char* value) {
  set_has_default_bytes();
  default_bytes_.Set(_default_default_bytes_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.default_bytes)
}
void TestAllTypes::set_default_bytes(const void* value,
    size_t size) {
  set_has_default_bytes();
  default_bytes_.Set(_default_default_bytes_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.default_bytes)
}
::std::string* TestAllTypes::mutable_default_bytes() {
  set_has_default_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.default_bytes)
  return default_bytes_.Mutable(_default_default_bytes_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_default_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.default_bytes)
  clear_has_default_bytes();
  return default_bytes_.Release(_default_default_bytes_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_default_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.default_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_default_bytes();
  return default_bytes_.UnsafeArenaRelease(_default_default_bytes_,
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_default_bytes(::std::string* default_bytes) {
  if (default_bytes != NULL) {
    set_has_default_bytes();
  } else {
    clear_has_default_bytes();
  }
  default_bytes_.SetAllocated(_default_default_bytes_, default_bytes,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.default_bytes)
}
void TestAllTypes::unsafe_arena_set_allocated_default_bytes(
    ::std::string* default_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_bytes != NULL) {
    set_has_default_bytes();
  } else {
    clear_has_default_bytes();
  }
  default_bytes_.UnsafeArenaSetAllocated(_default_default_bytes_,
      default_bytes, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.default_bytes)
}

// optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
bool TestAllTypes::has_default_nested_enum() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
void TestAllTypes::set_has_default_nested_enum() {
  _has_bits_[2] |= 0x00000004u;
}
void TestAllTypes::clear_has_default_nested_enum() {
  _has_bits_[2] &= ~0x00000004u;
}
void TestAllTypes::clear_default_nested_enum() {
  default_nested_enum_ = 2;
  clear_has_default_nested_enum();
}
::protobuf_unittest::TestAllTypes_NestedEnum TestAllTypes::default_nested_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(default_nested_enum_);
}
void TestAllTypes::set_default_nested_enum(::protobuf_unittest::TestAllTypes_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value));
  set_has_default_nested_enum();
  default_nested_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_nested_enum)
}

// optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
bool TestAllTypes::has_default_foreign_enum() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
void TestAllTypes::set_has_default_foreign_enum() {
  _has_bits_[2] |= 0x00000008u;
}
void TestAllTypes::clear_has_default_foreign_enum() {
  _has_bits_[2] &= ~0x00000008u;
}
void TestAllTypes::clear_default_foreign_enum() {
  default_foreign_enum_ = 5;
  clear_has_default_foreign_enum();
}
::protobuf_unittest::ForeignEnum TestAllTypes::default_foreign_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnum >(default_foreign_enum_);
}
void TestAllTypes::set_default_foreign_enum(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  set_has_default_foreign_enum();
  default_foreign_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_foreign_enum)
}

// optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
bool TestAllTypes::has_default_import_enum() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
void TestAllTypes::set_has_default_import_enum() {
  _has_bits_[2] |= 0x00000010u;
}
void TestAllTypes::clear_has_default_import_enum() {
  _has_bits_[2] &= ~0x00000010u;
}
void TestAllTypes::clear_default_import_enum() {
  default_import_enum_ = 8;
  clear_has_default_import_enum();
}
::protobuf_unittest_import::ImportEnum TestAllTypes::default_import_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnum >(default_import_enum_);
}
void TestAllTypes::set_default_import_enum(::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  set_has_default_import_enum();
  default_import_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_import_enum)
}

// optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
bool TestAllTypes::has_default_string_piece() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
void TestAllTypes::set_has_default_string_piece() {
  _has_bits_[2] |= 0x00000020u;
}
void TestAllTypes::clear_has_default_string_piece() {
  _has_bits_[2] &= ~0x00000020u;
}
void TestAllTypes::clear_default_string_piece() {
  default_string_piece_.ClearToDefault(_default_default_string_piece_, GetArenaNoVirtual());
  clear_has_default_string_piece();
}
const ::std::string& TestAllTypes::default_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_string_piece)
  return default_string_piece_.Get(_default_default_string_piece_);
}
void TestAllTypes::set_default_string_piece(const ::std::string& value) {
  set_has_default_string_piece();
  default_string_piece_.Set(_default_default_string_piece_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_string_piece)
}
void TestAllTypes::set_default_string_piece(const char* value) {
  set_has_default_string_piece();
  default_string_piece_.Set(_default_default_string_piece_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.default_string_piece)
}
void TestAllTypes::set_default_string_piece(const char* value,
    size_t size) {
  set_has_default_string_piece();
  default_string_piece_.Set(_default_default_string_piece_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.default_string_piece)
}
::std::string* TestAllTypes::mutable_default_string_piece() {
  set_has_default_string_piece();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.default_string_piece)
  return default_string_piece_.Mutable(_default_default_string_piece_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_default_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.default_string_piece)
  clear_has_default_string_piece();
  return default_string_piece_.Release(_default_default_string_piece_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_default_string_piece() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.default_string_piece)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_default_string_piece();
  return default_string_piece_.UnsafeArenaRelease(_default_default_string_piece_,
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_default_string_piece(::std::string* default_string_piece) {
  if (default_string_piece != NULL) {
    set_has_default_string_piece();
  } else {
    clear_has_default_string_piece();
  }
  default_string_piece_.SetAllocated(_default_default_string_piece_, default_string_piece,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.default_string_piece)
}
void TestAllTypes::unsafe_arena_set_allocated_default_string_piece(
    ::std::string* default_string_piece) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_string_piece != NULL) {
    set_has_default_string_piece();
  } else {
    clear_has_default_string_piece();
  }
  default_string_piece_.UnsafeArenaSetAllocated(_default_default_string_piece_,
      default_string_piece, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.default_string_piece)
}

// optional string default_cord = 85 [default = "123", ctype = CORD];
bool TestAllTypes::has_default_cord() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
void TestAllTypes::set_has_default_cord() {
  _has_bits_[2] |= 0x00000040u;
}
void TestAllTypes::clear_has_default_cord() {
  _has_bits_[2] &= ~0x00000040u;
}
void TestAllTypes::clear_default_cord() {
  default_cord_.ClearToDefault(_default_default_cord_, GetArenaNoVirtual());
  clear_has_default_cord();
}
const ::std::string& TestAllTypes::default_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.default_cord)
  return default_cord_.Get(_default_default_cord_);
}
void TestAllTypes::set_default_cord(const ::std::string& value) {
  set_has_default_cord();
  default_cord_.Set(_default_default_cord_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.default_cord)
}
void TestAllTypes::set_default_cord(const char* value) {
  set_has_default_cord();
  default_cord_.Set(_default_default_cord_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.default_cord)
}
void TestAllTypes::set_default_cord(const char* value,
    size_t size) {
  set_has_default_cord();
  default_cord_.Set(_default_default_cord_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.default_cord)
}
::std::string* TestAllTypes::mutable_default_cord() {
  set_has_default_cord();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.default_cord)
  return default_cord_.Mutable(_default_default_cord_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::release_default_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.default_cord)
  clear_has_default_cord();
  return default_cord_.Release(_default_default_cord_, GetArenaNoVirtual());
}
::std::string* TestAllTypes::unsafe_arena_release_default_cord() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.default_cord)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_default_cord();
  return default_cord_.UnsafeArenaRelease(_default_default_cord_,
      GetArenaNoVirtual());
}
void TestAllTypes::set_allocated_default_cord(::std::string* default_cord) {
  if (default_cord != NULL) {
    set_has_default_cord();
  } else {
    clear_has_default_cord();
  }
  default_cord_.SetAllocated(_default_default_cord_, default_cord,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.default_cord)
}
void TestAllTypes::unsafe_arena_set_allocated_default_cord(
    ::std::string* default_cord) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_cord != NULL) {
    set_has_default_cord();
  } else {
    clear_has_default_cord();
  }
  default_cord_.UnsafeArenaSetAllocated(_default_default_cord_,
      default_cord, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.default_cord)
}

// optional uint32 oneof_uint32 = 111;
bool TestAllTypes::has_oneof_uint32() const {
  return oneof_field_case() == kOneofUint32;
}
void TestAllTypes::set_has_oneof_uint32() {
  _oneof_case_[0] = kOneofUint32;
}
void TestAllTypes::clear_oneof_uint32() {
  if (has_oneof_uint32()) {
    oneof_field_.oneof_uint32_ = 0u;
    clear_has_oneof_field();
  }
}
::google::protobuf::uint32 TestAllTypes::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.oneof_uint32)
  if (has_oneof_uint32()) {
    return oneof_field_.oneof_uint32_;
  }
  return 0u;
}
void TestAllTypes::set_oneof_uint32(::google::protobuf::uint32 value) {
  if (!has_oneof_uint32()) {
    clear_oneof_field();
    set_has_oneof_uint32();
  }
  oneof_field_.oneof_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.oneof_uint32)
}

// optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
bool TestAllTypes::has_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage;
}
void TestAllTypes::set_has_oneof_nested_message() {
  _oneof_case_[0] = kOneofNestedMessage;
}
void TestAllTypes::clear_oneof_nested_message() {
  if (has_oneof_nested_message()) {
    if (GetArenaNoVirtual() == NULL) {
      delete oneof_field_.oneof_nested_message_;
    }
    clear_has_oneof_field();
  }
}
 const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::oneof_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.oneof_nested_message)
  return has_oneof_nested_message()
      ? *oneof_field_.oneof_nested_message_
      : ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance();
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_oneof_nested_message() {
  if (!has_oneof_nested_message()) {
    clear_oneof_field();
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.oneof_nested_message)
  return oneof_field_.oneof_nested_message_;
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_oneof_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.oneof_nested_message)
  if (has_oneof_nested_message()) {
    clear_has_oneof_field();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestAllTypes_NestedMessage* temp = new ::protobuf_unittest::TestAllTypes_NestedMessage(*oneof_field_.oneof_nested_message_);
      oneof_field_.oneof_nested_message_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestAllTypes_NestedMessage* temp = oneof_field_.oneof_nested_message_;
      oneof_field_.oneof_nested_message_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestAllTypes::set_allocated_oneof_nested_message(::protobuf_unittest::TestAllTypes_NestedMessage* oneof_nested_message) {
  clear_oneof_field();
  if (oneof_nested_message) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(oneof_nested_message) == NULL) {
      GetArenaNoVirtual()->Own(oneof_nested_message);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(oneof_nested_message)) {
      ::protobuf_unittest::TestAllTypes_NestedMessage* new_oneof_nested_message = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
          GetArenaNoVirtual());
      new_oneof_nested_message->CopyFrom(*oneof_nested_message);
      oneof_nested_message = new_oneof_nested_message;
    }
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.oneof_nested_message)
}
 ::protobuf_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_oneof_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.oneof_nested_message)
  if (has_oneof_nested_message()) {
    clear_has_oneof_field();
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = oneof_field_.oneof_nested_message_;
    oneof_field_.oneof_nested_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestAllTypes::unsafe_arena_set_allocated_oneof_nested_message(::protobuf_unittest::TestAllTypes_NestedMessage* oneof_nested_message) {
  clear_oneof_field();
  if (oneof_nested_message) {
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.oneof_nested_message)
}

// optional string oneof_string = 113;
bool TestAllTypes::has_oneof_string() const {
  return oneof_field_case() == kOneofString;
}
void TestAllTypes::set_has_oneof_string() {
  _oneof_case_[0] = kOneofString;
}
void TestAllTypes::clear_oneof_string() {
  if (has_oneof_string()) {
    oneof_field_.oneof_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_oneof_field();
  }
}
const ::std::string& TestAllTypes::oneof_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.oneof_string)
  if (has_oneof_string()) {
    return oneof_field_.oneof_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestAllTypes::set_oneof_string(const ::std::string& value) {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.oneof_string)
}
void TestAllTypes::set_oneof_string(const char* value) {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.oneof_string)
}
void TestAllTypes::set_oneof_string(const char* value,
                             size_t size) {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.oneof_string)
}
::std::string* TestAllTypes::mutable_oneof_string() {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return oneof_field_.oneof_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.oneof_string)
}
::std::string* TestAllTypes::release_oneof_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.oneof_string)
  if (has_oneof_string()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestAllTypes::unsafe_arena_release_oneof_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.oneof_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_oneof_string()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_string_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestAllTypes::set_allocated_oneof_string(::std::string* oneof_string) {
  if (!has_oneof_string()) {
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_string != NULL) {
    set_has_oneof_string();
    oneof_field_.oneof_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_string,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.oneof_string)
}
void TestAllTypes::unsafe_arena_set_allocated_oneof_string(::std::string* oneof_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_oneof_string()) {
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_string) {
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_string, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.oneof_string)
}

// optional bytes oneof_bytes = 114;
bool TestAllTypes::has_oneof_bytes() const {
  return oneof_field_case() == kOneofBytes;
}
void TestAllTypes::set_has_oneof_bytes() {
  _oneof_case_[0] = kOneofBytes;
}
void TestAllTypes::clear_oneof_bytes() {
  if (has_oneof_bytes()) {
    oneof_field_.oneof_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_oneof_field();
  }
}
const ::std::string& TestAllTypes::oneof_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypes.oneof_bytes)
  if (has_oneof_bytes()) {
    return oneof_field_.oneof_bytes_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestAllTypes::set_oneof_bytes(const ::std::string& value) {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypes.oneof_bytes)
}
void TestAllTypes::set_oneof_bytes(const char* value) {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypes.oneof_bytes)
}
void TestAllTypes::set_oneof_bytes(const void* value,
                             size_t size) {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypes.oneof_bytes)
}
::std::string* TestAllTypes::mutable_oneof_bytes() {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return oneof_field_.oneof_bytes_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypes.oneof_bytes)
}
::std::string* TestAllTypes::release_oneof_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypes.oneof_bytes)
  if (has_oneof_bytes()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_bytes_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestAllTypes::unsafe_arena_release_oneof_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestAllTypes.oneof_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_oneof_bytes()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_bytes_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestAllTypes::set_allocated_oneof_bytes(::std::string* oneof_bytes) {
  if (!has_oneof_bytes()) {
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_bytes != NULL) {
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_bytes,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.oneof_bytes)
}
void TestAllTypes::unsafe_arena_set_allocated_oneof_bytes(::std::string* oneof_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_oneof_bytes()) {
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_bytes) {
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_bytes, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestAllTypes.oneof_bytes)
}

bool TestAllTypes::has_oneof_field() const {
  return oneof_field_case() != ONEOF_FIELD_NOT_SET;
}
void TestAllTypes::clear_has_oneof_field() {
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}
TestAllTypes::OneofFieldCase TestAllTypes::oneof_field_case() const {
  return TestAllTypes::OneofFieldCase(_oneof_case_[0]);
}
inline const TestAllTypes* TestAllTypes::internal_default_instance() {
  return &TestAllTypes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void NestedTestAllTypes::_slow_mutable_child() {
  child_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::NestedTestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::_slow_release_child() {
  if (child_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::NestedTestAllTypes* temp = new ::protobuf_unittest::NestedTestAllTypes(*child_);
    child_ = NULL;
    return temp;
  }
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::unsafe_arena_release_child() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.NestedTestAllTypes.child)
  clear_has_child();
  ::protobuf_unittest::NestedTestAllTypes* temp = child_;
  child_ = NULL;
  return temp;
}
void NestedTestAllTypes::_slow_set_allocated_child(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::NestedTestAllTypes** child) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*child) == NULL) {
      message_arena->Own(*child);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*child)) {
      ::protobuf_unittest::NestedTestAllTypes* new_child = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::NestedTestAllTypes >(
            message_arena);
      new_child->CopyFrom(**child);
      *child = new_child;
    }
}
void NestedTestAllTypes::unsafe_arena_set_allocated_child(
    ::protobuf_unittest::NestedTestAllTypes* child) {
  if (GetArenaNoVirtual() == NULL) {
    delete child_;
  }
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestAllTypes.child)
}
void NestedTestAllTypes::_slow_mutable_payload() {
  payload_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* NestedTestAllTypes::_slow_release_payload() {
  if (payload_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*payload_);
    payload_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* NestedTestAllTypes::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.NestedTestAllTypes.payload)
  clear_has_payload();
  ::protobuf_unittest::TestAllTypes* temp = payload_;
  payload_ = NULL;
  return temp;
}
void NestedTestAllTypes::_slow_set_allocated_payload(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** payload) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*payload) == NULL) {
      message_arena->Own(*payload);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*payload)) {
      ::protobuf_unittest::TestAllTypes* new_payload = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_payload->CopyFrom(**payload);
      *payload = new_payload;
    }
}
void NestedTestAllTypes::unsafe_arena_set_allocated_payload(
    ::protobuf_unittest::TestAllTypes* payload) {
  if (GetArenaNoVirtual() == NULL) {
    delete payload_;
  }
  payload_ = payload;
  if (payload) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestAllTypes.payload)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NestedTestAllTypes::kChildFieldNumber;
const int NestedTestAllTypes::kPayloadFieldNumber;
const int NestedTestAllTypes::kRepeatedChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NestedTestAllTypes::NestedTestAllTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.NestedTestAllTypes)
}
NestedTestAllTypes::NestedTestAllTypes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_child_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.NestedTestAllTypes)
}

void NestedTestAllTypes::InitAsDefaultInstance() {
  child_ = const_cast< ::protobuf_unittest::NestedTestAllTypes*>(
      ::protobuf_unittest::NestedTestAllTypes::internal_default_instance());
  payload_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

NestedTestAllTypes::NestedTestAllTypes(const NestedTestAllTypes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.NestedTestAllTypes)
}

void NestedTestAllTypes::SharedCtor() {
  _cached_size_ = 0;
  child_ = NULL;
  payload_ = NULL;
}

NestedTestAllTypes::~NestedTestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.NestedTestAllTypes)
  SharedDtor();
}

void NestedTestAllTypes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &NestedTestAllTypes_default_instance_.get()) {
    delete child_;
    delete payload_;
  }
}

void NestedTestAllTypes::ArenaDtor(void* object) {
  NestedTestAllTypes* _this = reinterpret_cast< NestedTestAllTypes* >(object);
  (void)_this;
}
void NestedTestAllTypes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void NestedTestAllTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NestedTestAllTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NestedTestAllTypes_descriptor_;
}

const NestedTestAllTypes& NestedTestAllTypes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NestedTestAllTypes> NestedTestAllTypes_default_instance_;

NestedTestAllTypes* NestedTestAllTypes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<NestedTestAllTypes>(arena);
}

void NestedTestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.NestedTestAllTypes)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_child()) {
      if (child_ != NULL) child_->::protobuf_unittest::NestedTestAllTypes::Clear();
    }
    if (has_payload()) {
      if (payload_ != NULL) payload_->::protobuf_unittest::TestAllTypes::Clear();
    }
  }
  repeated_child_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NestedTestAllTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.NestedTestAllTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.NestedTestAllTypes child = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_payload;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes payload = 2;
      case 2: {
        if (tag == 18) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repeated_child;
        break;
      }

      // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
      case 3: {
        if (tag == 26) {
         parse_repeated_child:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_child:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_repeated_child;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.NestedTestAllTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.NestedTestAllTypes)
  return false;
#undef DO_
}

void NestedTestAllTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.NestedTestAllTypes)
  // optional .protobuf_unittest.NestedTestAllTypes child = 1;
  if (has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->child_, output);
  }

  // optional .protobuf_unittest.TestAllTypes payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->payload_, output);
  }

  // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
  for (unsigned int i = 0, n = this->repeated_child_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->repeated_child(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.NestedTestAllTypes)
}

::google::protobuf::uint8* NestedTestAllTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.NestedTestAllTypes)
  // optional .protobuf_unittest.NestedTestAllTypes child = 1;
  if (has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->child_, false, target);
  }

  // optional .protobuf_unittest.TestAllTypes payload = 2;
  if (has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->payload_, false, target);
  }

  // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
  for (unsigned int i = 0, n = this->repeated_child_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->repeated_child(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.NestedTestAllTypes)
  return target;
}

size_t NestedTestAllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.NestedTestAllTypes)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .protobuf_unittest.NestedTestAllTypes child = 1;
    if (has_child()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->child_);
    }

    // optional .protobuf_unittest.TestAllTypes payload = 2;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->payload_);
    }

  }
  // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
  {
    unsigned int count = this->repeated_child_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_child(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NestedTestAllTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.NestedTestAllTypes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NestedTestAllTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NestedTestAllTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.NestedTestAllTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.NestedTestAllTypes)
    UnsafeMergeFrom(*source);
  }
}

void NestedTestAllTypes::MergeFrom(const NestedTestAllTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.NestedTestAllTypes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NestedTestAllTypes::UnsafeMergeFrom(const NestedTestAllTypes& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_child_.MergeFrom(from.repeated_child_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_child()) {
      mutable_child()->::protobuf_unittest::NestedTestAllTypes::MergeFrom(from.child());
    }
    if (from.has_payload()) {
      mutable_payload()->::protobuf_unittest::TestAllTypes::MergeFrom(from.payload());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void NestedTestAllTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.NestedTestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedTestAllTypes::CopyFrom(const NestedTestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.NestedTestAllTypes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NestedTestAllTypes::IsInitialized() const {

  return true;
}

void NestedTestAllTypes::Swap(NestedTestAllTypes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    NestedTestAllTypes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void NestedTestAllTypes::UnsafeArenaSwap(NestedTestAllTypes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void NestedTestAllTypes::InternalSwap(NestedTestAllTypes* other) {
  std::swap(child_, other->child_);
  std::swap(payload_, other->payload_);
  repeated_child_.UnsafeArenaSwap(&other->repeated_child_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NestedTestAllTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NestedTestAllTypes_descriptor_;
  metadata.reflection = NestedTestAllTypes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NestedTestAllTypes

// optional .protobuf_unittest.NestedTestAllTypes child = 1;
bool NestedTestAllTypes::has_child() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NestedTestAllTypes::set_has_child() {
  _has_bits_[0] |= 0x00000001u;
}
void NestedTestAllTypes::clear_has_child() {
  _has_bits_[0] &= ~0x00000001u;
}
void NestedTestAllTypes::clear_child() {
  if (child_ != NULL) child_->::protobuf_unittest::NestedTestAllTypes::Clear();
  clear_has_child();
}
const ::protobuf_unittest::NestedTestAllTypes& NestedTestAllTypes::child() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestAllTypes.child)
  return child_ != NULL ? *child_
                         : *::protobuf_unittest::NestedTestAllTypes::internal_default_instance();
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::mutable_child() {
  set_has_child();
  if (child_ == NULL) {
    _slow_mutable_child();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestAllTypes.child)
  return child_;
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::release_child() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestAllTypes.child)
  clear_has_child();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_child();
  } else {
    ::protobuf_unittest::NestedTestAllTypes* temp = child_;
    child_ = NULL;
    return temp;
  }
}
 void NestedTestAllTypes::set_allocated_child(::protobuf_unittest::NestedTestAllTypes* child) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete child_;
  }
  if (child != NULL) {
    _slow_set_allocated_child(message_arena, &child);
  }
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestAllTypes.child)
}

// optional .protobuf_unittest.TestAllTypes payload = 2;
bool NestedTestAllTypes::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NestedTestAllTypes::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
void NestedTestAllTypes::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
void NestedTestAllTypes::clear_payload() {
  if (payload_ != NULL) payload_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_payload();
}
const ::protobuf_unittest::TestAllTypes& NestedTestAllTypes::payload() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestAllTypes.payload)
  return payload_ != NULL ? *payload_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* NestedTestAllTypes::mutable_payload() {
  set_has_payload();
  if (payload_ == NULL) {
    _slow_mutable_payload();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestAllTypes.payload)
  return payload_;
}
::protobuf_unittest::TestAllTypes* NestedTestAllTypes::release_payload() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestAllTypes.payload)
  clear_has_payload();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_payload();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = payload_;
    payload_ = NULL;
    return temp;
  }
}
 void NestedTestAllTypes::set_allocated_payload(::protobuf_unittest::TestAllTypes* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete payload_;
  }
  if (payload != NULL) {
    _slow_set_allocated_payload(message_arena, &payload);
  }
  payload_ = payload;
  if (payload) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestAllTypes.payload)
}

// repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
int NestedTestAllTypes::repeated_child_size() const {
  return repeated_child_.size();
}
void NestedTestAllTypes::clear_repeated_child() {
  repeated_child_.Clear();
}
const ::protobuf_unittest::NestedTestAllTypes& NestedTestAllTypes::repeated_child(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestAllTypes.repeated_child)
  return repeated_child_.Get(index);
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::mutable_repeated_child(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestAllTypes.repeated_child)
  return repeated_child_.Mutable(index);
}
::protobuf_unittest::NestedTestAllTypes* NestedTestAllTypes::add_repeated_child() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.NestedTestAllTypes.repeated_child)
  return repeated_child_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::NestedTestAllTypes >*
NestedTestAllTypes::mutable_repeated_child() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.NestedTestAllTypes.repeated_child)
  return &repeated_child_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::NestedTestAllTypes >&
NestedTestAllTypes::repeated_child() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.NestedTestAllTypes.repeated_child)
  return repeated_child_;
}

inline const NestedTestAllTypes* NestedTestAllTypes::internal_default_instance() {
  return &NestedTestAllTypes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDeprecatedFields::kDeprecatedInt32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDeprecatedFields::TestDeprecatedFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDeprecatedFields)
}
TestDeprecatedFields::TestDeprecatedFields(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDeprecatedFields)
}

void TestDeprecatedFields::InitAsDefaultInstance() {
}

TestDeprecatedFields::TestDeprecatedFields(const TestDeprecatedFields& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedFields)
}

void TestDeprecatedFields::SharedCtor() {
  _cached_size_ = 0;
  deprecated_int32_ = 0;
}

TestDeprecatedFields::~TestDeprecatedFields() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDeprecatedFields)
  SharedDtor();
}

void TestDeprecatedFields::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestDeprecatedFields::ArenaDtor(void* object) {
  TestDeprecatedFields* _this = reinterpret_cast< TestDeprecatedFields* >(object);
  (void)_this;
}
void TestDeprecatedFields::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDeprecatedFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDeprecatedFields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDeprecatedFields_descriptor_;
}

const TestDeprecatedFields& TestDeprecatedFields::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDeprecatedFields> TestDeprecatedFields_default_instance_;

TestDeprecatedFields* TestDeprecatedFields::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDeprecatedFields>(arena);
}

void TestDeprecatedFields::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDeprecatedFields)
  deprecated_int32_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDeprecatedFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDeprecatedFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 deprecated_int32 = 1 [deprecated = true];
      case 1: {
        if (tag == 8) {
          set_has_deprecated_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deprecated_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDeprecatedFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDeprecatedFields)
  return false;
#undef DO_
}

void TestDeprecatedFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDeprecatedFields)
  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (has_deprecated_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deprecated_int32(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDeprecatedFields)
}

::google::protobuf::uint8* TestDeprecatedFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDeprecatedFields)
  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (has_deprecated_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deprecated_int32(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDeprecatedFields)
  return target;
}

size_t TestDeprecatedFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDeprecatedFields)
  size_t total_size = 0;

  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (has_deprecated_int32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deprecated_int32());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDeprecatedFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDeprecatedFields)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDeprecatedFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDeprecatedFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDeprecatedFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDeprecatedFields)
    UnsafeMergeFrom(*source);
  }
}

void TestDeprecatedFields::MergeFrom(const TestDeprecatedFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDeprecatedFields)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDeprecatedFields::UnsafeMergeFrom(const TestDeprecatedFields& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deprecated_int32()) {
      set_deprecated_int32(from.deprecated_int32());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDeprecatedFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDeprecatedFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDeprecatedFields::CopyFrom(const TestDeprecatedFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDeprecatedFields)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDeprecatedFields::IsInitialized() const {

  return true;
}

void TestDeprecatedFields::Swap(TestDeprecatedFields* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDeprecatedFields temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDeprecatedFields::UnsafeArenaSwap(TestDeprecatedFields* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDeprecatedFields::InternalSwap(TestDeprecatedFields* other) {
  std::swap(deprecated_int32_, other->deprecated_int32_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDeprecatedFields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDeprecatedFields_descriptor_;
  metadata.reflection = TestDeprecatedFields_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestDeprecatedFields

// optional int32 deprecated_int32 = 1 [deprecated = true];
bool TestDeprecatedFields::has_deprecated_int32() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDeprecatedFields::set_has_deprecated_int32() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDeprecatedFields::clear_has_deprecated_int32() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDeprecatedFields::clear_deprecated_int32() {
  deprecated_int32_ = 0;
  clear_has_deprecated_int32();
}
::google::protobuf::int32 TestDeprecatedFields::deprecated_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDeprecatedFields.deprecated_int32)
  return deprecated_int32_;
}
void TestDeprecatedFields::set_deprecated_int32(::google::protobuf::int32 value) {
  set_has_deprecated_int32();
  deprecated_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDeprecatedFields.deprecated_int32)
}

inline const TestDeprecatedFields* TestDeprecatedFields::internal_default_instance() {
  return &TestDeprecatedFields_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForeignMessage::kCFieldNumber;
const int ForeignMessage::kDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForeignMessage::ForeignMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.ForeignMessage)
}
ForeignMessage::ForeignMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.ForeignMessage)
}

void ForeignMessage::InitAsDefaultInstance() {
}

ForeignMessage::ForeignMessage(const ForeignMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ForeignMessage)
}

void ForeignMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&c_, 0, reinterpret_cast<char*>(&d_) -
    reinterpret_cast<char*>(&c_) + sizeof(d_));
}

ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessage)
  SharedDtor();
}

void ForeignMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void ForeignMessage::ArenaDtor(void* object) {
  ForeignMessage* _this = reinterpret_cast< ForeignMessage* >(object);
  (void)_this;
}
void ForeignMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ForeignMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForeignMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForeignMessage_descriptor_;
}

const ForeignMessage& ForeignMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ForeignMessage> ForeignMessage_default_instance_;

ForeignMessage* ForeignMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ForeignMessage>(arena);
}

void ForeignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ForeignMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ForeignMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ForeignMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(c_, d_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ForeignMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.ForeignMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 c = 1;
      case 1: {
        if (tag == 8) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_d;
        break;
      }

      // optional int32 d = 2;
      case 2: {
        if (tag == 16) {
         parse_d:
          set_has_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.ForeignMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.ForeignMessage)
  return false;
#undef DO_
}

void ForeignMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.ForeignMessage)
  // optional int32 c = 1;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  // optional int32 d = 2;
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->d(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.ForeignMessage)
}

::google::protobuf::uint8* ForeignMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ForeignMessage)
  // optional int32 c = 1;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  // optional int32 d = 2;
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->d(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ForeignMessage)
  return target;
}

size_t ForeignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ForeignMessage)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 c = 1;
    if (has_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c());
    }

    // optional int32 d = 2;
    if (has_d()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->d());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForeignMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.ForeignMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ForeignMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForeignMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.ForeignMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.ForeignMessage)
    UnsafeMergeFrom(*source);
  }
}

void ForeignMessage::MergeFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ForeignMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ForeignMessage::UnsafeMergeFrom(const ForeignMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
    if (from.has_d()) {
      set_d(from.d());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ForeignMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ForeignMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ForeignMessage::IsInitialized() const {

  return true;
}

void ForeignMessage::Swap(ForeignMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ForeignMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ForeignMessage::UnsafeArenaSwap(ForeignMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ForeignMessage::InternalSwap(ForeignMessage* other) {
  std::swap(c_, other->c_);
  std::swap(d_, other->d_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForeignMessage_descriptor_;
  metadata.reflection = ForeignMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForeignMessage

// optional int32 c = 1;
bool ForeignMessage::has_c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ForeignMessage::set_has_c() {
  _has_bits_[0] |= 0x00000001u;
}
void ForeignMessage::clear_has_c() {
  _has_bits_[0] &= ~0x00000001u;
}
void ForeignMessage::clear_c() {
  c_ = 0;
  clear_has_c();
}
::google::protobuf::int32 ForeignMessage::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ForeignMessage.c)
  return c_;
}
void ForeignMessage::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.ForeignMessage.c)
}

// optional int32 d = 2;
bool ForeignMessage::has_d() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ForeignMessage::set_has_d() {
  _has_bits_[0] |= 0x00000002u;
}
void ForeignMessage::clear_has_d() {
  _has_bits_[0] &= ~0x00000002u;
}
void ForeignMessage::clear_d() {
  d_ = 0;
  clear_has_d();
}
::google::protobuf::int32 ForeignMessage::d() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ForeignMessage.d)
  return d_;
}
void ForeignMessage::set_d(::google::protobuf::int32 value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.ForeignMessage.d)
}

inline const ForeignMessage* ForeignMessage::internal_default_instance() {
  return &ForeignMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestReservedFields::TestReservedFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestReservedFields)
}
TestReservedFields::TestReservedFields(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestReservedFields)
}

void TestReservedFields::InitAsDefaultInstance() {
}

TestReservedFields::TestReservedFields(const TestReservedFields& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestReservedFields)
}

void TestReservedFields::SharedCtor() {
  _cached_size_ = 0;
}

TestReservedFields::~TestReservedFields() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestReservedFields)
  SharedDtor();
}

void TestReservedFields::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestReservedFields::ArenaDtor(void* object) {
  TestReservedFields* _this = reinterpret_cast< TestReservedFields* >(object);
  (void)_this;
}
void TestReservedFields::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestReservedFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestReservedFields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestReservedFields_descriptor_;
}

const TestReservedFields& TestReservedFields::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestReservedFields> TestReservedFields_default_instance_;

TestReservedFields* TestReservedFields::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestReservedFields>(arena);
}

void TestReservedFields::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestReservedFields)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestReservedFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestReservedFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestReservedFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestReservedFields)
  return false;
#undef DO_
}

void TestReservedFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestReservedFields)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestReservedFields)
}

::google::protobuf::uint8* TestReservedFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestReservedFields)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestReservedFields)
  return target;
}

size_t TestReservedFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestReservedFields)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestReservedFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestReservedFields)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestReservedFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestReservedFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestReservedFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestReservedFields)
    UnsafeMergeFrom(*source);
  }
}

void TestReservedFields::MergeFrom(const TestReservedFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestReservedFields)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestReservedFields::UnsafeMergeFrom(const TestReservedFields& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestReservedFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestReservedFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReservedFields::CopyFrom(const TestReservedFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestReservedFields)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestReservedFields::IsInitialized() const {

  return true;
}

void TestReservedFields::Swap(TestReservedFields* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestReservedFields temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestReservedFields::UnsafeArenaSwap(TestReservedFields* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestReservedFields::InternalSwap(TestReservedFields* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestReservedFields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestReservedFields_descriptor_;
  metadata.reflection = TestReservedFields_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestReservedFields

inline const TestReservedFields* TestReservedFields::internal_default_instance() {
  return &TestReservedFields_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllExtensions::TestAllExtensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllExtensions)
}
TestAllExtensions::TestAllExtensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllExtensions)
}

void TestAllExtensions::InitAsDefaultInstance() {
}

TestAllExtensions::TestAllExtensions(const TestAllExtensions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllExtensions)
}

void TestAllExtensions::SharedCtor() {
  _cached_size_ = 0;
}

TestAllExtensions::~TestAllExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllExtensions)
  SharedDtor();
}

void TestAllExtensions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestAllExtensions::ArenaDtor(void* object) {
  TestAllExtensions* _this = reinterpret_cast< TestAllExtensions* >(object);
  (void)_this;
}
void TestAllExtensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestAllExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllExtensions_descriptor_;
}

const TestAllExtensions& TestAllExtensions::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllExtensions> TestAllExtensions_default_instance_;

TestAllExtensions* TestAllExtensions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestAllExtensions>(arena);
}

void TestAllExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllExtensions)
  _extensions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestAllExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllExtensions)
  return false;
#undef DO_
}

void TestAllExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllExtensions)
}

::google::protobuf::uint8* TestAllExtensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      1, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllExtensions)
  return target;
}

size_t TestAllExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllExtensions)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllExtensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestAllExtensions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestAllExtensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllExtensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestAllExtensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestAllExtensions)
    UnsafeMergeFrom(*source);
  }
}

void TestAllExtensions::MergeFrom(const TestAllExtensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllExtensions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllExtensions::UnsafeMergeFrom(const TestAllExtensions& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestAllExtensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestAllExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllExtensions::CopyFrom(const TestAllExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllExtensions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestAllExtensions::Swap(TestAllExtensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllExtensions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestAllExtensions::UnsafeArenaSwap(TestAllExtensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllExtensions::InternalSwap(TestAllExtensions* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestAllExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllExtensions_descriptor_;
  metadata.reflection = TestAllExtensions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestAllExtensions

inline const TestAllExtensions* TestAllExtensions::internal_default_instance() {
  return &TestAllExtensions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionalGroup_extension::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionalGroup_extension::OptionalGroup_extension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OptionalGroup_extension)
}
OptionalGroup_extension::OptionalGroup_extension(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OptionalGroup_extension)
}

void OptionalGroup_extension::InitAsDefaultInstance() {
}

OptionalGroup_extension::OptionalGroup_extension(const OptionalGroup_extension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OptionalGroup_extension)
}

void OptionalGroup_extension::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

OptionalGroup_extension::~OptionalGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OptionalGroup_extension)
  SharedDtor();
}

void OptionalGroup_extension::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void OptionalGroup_extension::ArenaDtor(void* object) {
  OptionalGroup_extension* _this = reinterpret_cast< OptionalGroup_extension* >(object);
  (void)_this;
}
void OptionalGroup_extension::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OptionalGroup_extension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionalGroup_extension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OptionalGroup_extension_descriptor_;
}

const OptionalGroup_extension& OptionalGroup_extension::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OptionalGroup_extension> OptionalGroup_extension_default_instance_;

OptionalGroup_extension* OptionalGroup_extension::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<OptionalGroup_extension>(arena);
}

void OptionalGroup_extension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OptionalGroup_extension)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OptionalGroup_extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OptionalGroup_extension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OptionalGroup_extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OptionalGroup_extension)
  return false;
#undef DO_
}

void OptionalGroup_extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OptionalGroup_extension)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OptionalGroup_extension)
}

::google::protobuf::uint8* OptionalGroup_extension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OptionalGroup_extension)
  // optional int32 a = 17;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OptionalGroup_extension)
  return target;
}

size_t OptionalGroup_extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OptionalGroup_extension)
  size_t total_size = 0;

  // optional int32 a = 17;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionalGroup_extension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.OptionalGroup_extension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OptionalGroup_extension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionalGroup_extension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.OptionalGroup_extension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.OptionalGroup_extension)
    UnsafeMergeFrom(*source);
  }
}

void OptionalGroup_extension::MergeFrom(const OptionalGroup_extension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OptionalGroup_extension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OptionalGroup_extension::UnsafeMergeFrom(const OptionalGroup_extension& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OptionalGroup_extension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.OptionalGroup_extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionalGroup_extension::CopyFrom(const OptionalGroup_extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OptionalGroup_extension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OptionalGroup_extension::IsInitialized() const {

  return true;
}

void OptionalGroup_extension::Swap(OptionalGroup_extension* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OptionalGroup_extension temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void OptionalGroup_extension::UnsafeArenaSwap(OptionalGroup_extension* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OptionalGroup_extension::InternalSwap(OptionalGroup_extension* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionalGroup_extension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OptionalGroup_extension_descriptor_;
  metadata.reflection = OptionalGroup_extension_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptionalGroup_extension

// optional int32 a = 17;
bool OptionalGroup_extension::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OptionalGroup_extension::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void OptionalGroup_extension::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void OptionalGroup_extension::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 OptionalGroup_extension::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.OptionalGroup_extension.a)
  return a_;
}
void OptionalGroup_extension::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.OptionalGroup_extension.a)
}

inline const OptionalGroup_extension* OptionalGroup_extension::internal_default_instance() {
  return &OptionalGroup_extension_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedGroup_extension::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedGroup_extension::RepeatedGroup_extension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RepeatedGroup_extension)
}
RepeatedGroup_extension::RepeatedGroup_extension(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RepeatedGroup_extension)
}

void RepeatedGroup_extension::InitAsDefaultInstance() {
}

RepeatedGroup_extension::RepeatedGroup_extension(const RepeatedGroup_extension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RepeatedGroup_extension)
}

void RepeatedGroup_extension::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

RepeatedGroup_extension::~RepeatedGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedGroup_extension)
  SharedDtor();
}

void RepeatedGroup_extension::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void RepeatedGroup_extension::ArenaDtor(void* object) {
  RepeatedGroup_extension* _this = reinterpret_cast< RepeatedGroup_extension* >(object);
  (void)_this;
}
void RepeatedGroup_extension::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RepeatedGroup_extension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepeatedGroup_extension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepeatedGroup_extension_descriptor_;
}

const RepeatedGroup_extension& RepeatedGroup_extension::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RepeatedGroup_extension> RepeatedGroup_extension_default_instance_;

RepeatedGroup_extension* RepeatedGroup_extension::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RepeatedGroup_extension>(arena);
}

void RepeatedGroup_extension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RepeatedGroup_extension)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RepeatedGroup_extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.RepeatedGroup_extension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.RepeatedGroup_extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.RepeatedGroup_extension)
  return false;
#undef DO_
}

void RepeatedGroup_extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.RepeatedGroup_extension)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.RepeatedGroup_extension)
}

::google::protobuf::uint8* RepeatedGroup_extension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RepeatedGroup_extension)
  // optional int32 a = 47;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RepeatedGroup_extension)
  return target;
}

size_t RepeatedGroup_extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RepeatedGroup_extension)
  size_t total_size = 0;

  // optional int32 a = 47;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepeatedGroup_extension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.RepeatedGroup_extension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RepeatedGroup_extension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatedGroup_extension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.RepeatedGroup_extension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.RepeatedGroup_extension)
    UnsafeMergeFrom(*source);
  }
}

void RepeatedGroup_extension::MergeFrom(const RepeatedGroup_extension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RepeatedGroup_extension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RepeatedGroup_extension::UnsafeMergeFrom(const RepeatedGroup_extension& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RepeatedGroup_extension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.RepeatedGroup_extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedGroup_extension::CopyFrom(const RepeatedGroup_extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RepeatedGroup_extension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RepeatedGroup_extension::IsInitialized() const {

  return true;
}

void RepeatedGroup_extension::Swap(RepeatedGroup_extension* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RepeatedGroup_extension temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void RepeatedGroup_extension::UnsafeArenaSwap(RepeatedGroup_extension* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RepeatedGroup_extension::InternalSwap(RepeatedGroup_extension* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepeatedGroup_extension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepeatedGroup_extension_descriptor_;
  metadata.reflection = RepeatedGroup_extension_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepeatedGroup_extension

// optional int32 a = 47;
bool RepeatedGroup_extension::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RepeatedGroup_extension::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void RepeatedGroup_extension::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void RepeatedGroup_extension::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 RepeatedGroup_extension::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RepeatedGroup_extension.a)
  return a_;
}
void RepeatedGroup_extension::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.RepeatedGroup_extension.a)
}

inline const RepeatedGroup_extension* RepeatedGroup_extension::internal_default_instance() {
  return &RepeatedGroup_extension_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

const ::std::string TestNestedExtension_test_default("test");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedExtension::kTestFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  TestNestedExtension::test(kTestFieldNumber, TestNestedExtension_test_default);
const ::std::string TestNestedExtension_nested_string_extension_default("");
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedExtension::kNestedStringExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  TestNestedExtension::nested_string_extension(kNestedStringExtensionFieldNumber, TestNestedExtension_nested_string_extension_default);
TestNestedExtension::TestNestedExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedExtension)
}
TestNestedExtension::TestNestedExtension(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedExtension)
}

void TestNestedExtension::InitAsDefaultInstance() {
}

TestNestedExtension::TestNestedExtension(const TestNestedExtension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedExtension)
}

void TestNestedExtension::SharedCtor() {
  _cached_size_ = 0;
}

TestNestedExtension::~TestNestedExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedExtension)
  SharedDtor();
}

void TestNestedExtension::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestNestedExtension::ArenaDtor(void* object) {
  TestNestedExtension* _this = reinterpret_cast< TestNestedExtension* >(object);
  (void)_this;
}
void TestNestedExtension::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestNestedExtension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedExtension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedExtension_descriptor_;
}

const TestNestedExtension& TestNestedExtension::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestNestedExtension> TestNestedExtension_default_instance_;

TestNestedExtension* TestNestedExtension::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestNestedExtension>(arena);
}

void TestNestedExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedExtension)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestNestedExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedExtension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedExtension)
  return false;
#undef DO_
}

void TestNestedExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedExtension)
}

::google::protobuf::uint8* TestNestedExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedExtension)
  return target;
}

size_t TestNestedExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedExtension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestNestedExtension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestNestedExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestNestedExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestNestedExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestNestedExtension)
    UnsafeMergeFrom(*source);
  }
}

void TestNestedExtension::MergeFrom(const TestNestedExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedExtension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestNestedExtension::UnsafeMergeFrom(const TestNestedExtension& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestNestedExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestNestedExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedExtension::CopyFrom(const TestNestedExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedExtension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestNestedExtension::IsInitialized() const {

  return true;
}

void TestNestedExtension::Swap(TestNestedExtension* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestNestedExtension temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestNestedExtension::UnsafeArenaSwap(TestNestedExtension* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestNestedExtension::InternalSwap(TestNestedExtension* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestNestedExtension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedExtension_descriptor_;
  metadata.reflection = TestNestedExtension_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestNestedExtension

inline const TestNestedExtension* TestNestedExtension::internal_default_instance() {
  return &TestNestedExtension_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequired::kAFieldNumber;
const int TestRequired::kDummy2FieldNumber;
const int TestRequired::kBFieldNumber;
const int TestRequired::kDummy4FieldNumber;
const int TestRequired::kDummy5FieldNumber;
const int TestRequired::kDummy6FieldNumber;
const int TestRequired::kDummy7FieldNumber;
const int TestRequired::kDummy8FieldNumber;
const int TestRequired::kDummy9FieldNumber;
const int TestRequired::kDummy10FieldNumber;
const int TestRequired::kDummy11FieldNumber;
const int TestRequired::kDummy12FieldNumber;
const int TestRequired::kDummy13FieldNumber;
const int TestRequired::kDummy14FieldNumber;
const int TestRequired::kDummy15FieldNumber;
const int TestRequired::kDummy16FieldNumber;
const int TestRequired::kDummy17FieldNumber;
const int TestRequired::kDummy18FieldNumber;
const int TestRequired::kDummy19FieldNumber;
const int TestRequired::kDummy20FieldNumber;
const int TestRequired::kDummy21FieldNumber;
const int TestRequired::kDummy22FieldNumber;
const int TestRequired::kDummy23FieldNumber;
const int TestRequired::kDummy24FieldNumber;
const int TestRequired::kDummy25FieldNumber;
const int TestRequired::kDummy26FieldNumber;
const int TestRequired::kDummy27FieldNumber;
const int TestRequired::kDummy28FieldNumber;
const int TestRequired::kDummy29FieldNumber;
const int TestRequired::kDummy30FieldNumber;
const int TestRequired::kDummy31FieldNumber;
const int TestRequired::kDummy32FieldNumber;
const int TestRequired::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequired::kSingleFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false >
  TestRequired::single(kSingleFieldNumber, *::protobuf_unittest::TestRequired::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequired::kMultiFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false >
  TestRequired::multi(kMultiFieldNumber, *::protobuf_unittest::TestRequired::internal_default_instance());
TestRequired::TestRequired()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequired)
}
TestRequired::TestRequired(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequired)
}

void TestRequired::InitAsDefaultInstance() {
}

TestRequired::TestRequired(const TestRequired& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequired)
}

void TestRequired::SharedCtor() {
  ::memset(&a_, 0, reinterpret_cast<char*>(&c_) -
    reinterpret_cast<char*>(&a_) + sizeof(c_));
  _cached_size_ = 0;
}

TestRequired::~TestRequired() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequired)
  SharedDtor();
}

void TestRequired::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestRequired::ArenaDtor(void* object) {
  TestRequired* _this = reinterpret_cast< TestRequired* >(object);
  (void)_this;
}
void TestRequired::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRequired::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequired::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequired_descriptor_;
}

const TestRequired& TestRequired::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRequired> TestRequired_default_instance_;

TestRequired* TestRequired::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRequired>(arena);
}

void TestRequired::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequired)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestRequired, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestRequired*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, dummy8_);
  ZR_(dummy9_, dummy16_);
  ZR_(dummy17_, dummy24_);
  ZR_(dummy25_, dummy32_);
  c_ = 0;

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRequired::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequired)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 a = 1;
      case 1: {
        if (tag == 8) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dummy2;
        break;
      }

      // optional int32 dummy2 = 2;
      case 2: {
        if (tag == 16) {
         parse_dummy2:
          set_has_dummy2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_b;
        break;
      }

      // required int32 b = 3;
      case 3: {
        if (tag == 24) {
         parse_b:
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dummy4;
        break;
      }

      // optional int32 dummy4 = 4;
      case 4: {
        if (tag == 32) {
         parse_dummy4:
          set_has_dummy4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy4_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dummy5;
        break;
      }

      // optional int32 dummy5 = 5;
      case 5: {
        if (tag == 40) {
         parse_dummy5:
          set_has_dummy5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy5_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_dummy6;
        break;
      }

      // optional int32 dummy6 = 6;
      case 6: {
        if (tag == 48) {
         parse_dummy6:
          set_has_dummy6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy6_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dummy7;
        break;
      }

      // optional int32 dummy7 = 7;
      case 7: {
        if (tag == 56) {
         parse_dummy7:
          set_has_dummy7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy7_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dummy8;
        break;
      }

      // optional int32 dummy8 = 8;
      case 8: {
        if (tag == 64) {
         parse_dummy8:
          set_has_dummy8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy8_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_dummy9;
        break;
      }

      // optional int32 dummy9 = 9;
      case 9: {
        if (tag == 72) {
         parse_dummy9:
          set_has_dummy9();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy9_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_dummy10;
        break;
      }

      // optional int32 dummy10 = 10;
      case 10: {
        if (tag == 80) {
         parse_dummy10:
          set_has_dummy10();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_dummy11;
        break;
      }

      // optional int32 dummy11 = 11;
      case 11: {
        if (tag == 88) {
         parse_dummy11:
          set_has_dummy11();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy11_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_dummy12;
        break;
      }

      // optional int32 dummy12 = 12;
      case 12: {
        if (tag == 96) {
         parse_dummy12:
          set_has_dummy12();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy12_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_dummy13;
        break;
      }

      // optional int32 dummy13 = 13;
      case 13: {
        if (tag == 104) {
         parse_dummy13:
          set_has_dummy13();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy13_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_dummy14;
        break;
      }

      // optional int32 dummy14 = 14;
      case 14: {
        if (tag == 112) {
         parse_dummy14:
          set_has_dummy14();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy14_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_dummy15;
        break;
      }

      // optional int32 dummy15 = 15;
      case 15: {
        if (tag == 120) {
         parse_dummy15:
          set_has_dummy15();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy15_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_dummy16;
        break;
      }

      // optional int32 dummy16 = 16;
      case 16: {
        if (tag == 128) {
         parse_dummy16:
          set_has_dummy16();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy16_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_dummy17;
        break;
      }

      // optional int32 dummy17 = 17;
      case 17: {
        if (tag == 136) {
         parse_dummy17:
          set_has_dummy17();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy17_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_dummy18;
        break;
      }

      // optional int32 dummy18 = 18;
      case 18: {
        if (tag == 144) {
         parse_dummy18:
          set_has_dummy18();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy18_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_dummy19;
        break;
      }

      // optional int32 dummy19 = 19;
      case 19: {
        if (tag == 152) {
         parse_dummy19:
          set_has_dummy19();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy19_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_dummy20;
        break;
      }

      // optional int32 dummy20 = 20;
      case 20: {
        if (tag == 160) {
         parse_dummy20:
          set_has_dummy20();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy20_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_dummy21;
        break;
      }

      // optional int32 dummy21 = 21;
      case 21: {
        if (tag == 168) {
         parse_dummy21:
          set_has_dummy21();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy21_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_dummy22;
        break;
      }

      // optional int32 dummy22 = 22;
      case 22: {
        if (tag == 176) {
         parse_dummy22:
          set_has_dummy22();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy22_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_dummy23;
        break;
      }

      // optional int32 dummy23 = 23;
      case 23: {
        if (tag == 184) {
         parse_dummy23:
          set_has_dummy23();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy23_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_dummy24;
        break;
      }

      // optional int32 dummy24 = 24;
      case 24: {
        if (tag == 192) {
         parse_dummy24:
          set_has_dummy24();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy24_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_dummy25;
        break;
      }

      // optional int32 dummy25 = 25;
      case 25: {
        if (tag == 200) {
         parse_dummy25:
          set_has_dummy25();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy25_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_dummy26;
        break;
      }

      // optional int32 dummy26 = 26;
      case 26: {
        if (tag == 208) {
         parse_dummy26:
          set_has_dummy26();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy26_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_dummy27;
        break;
      }

      // optional int32 dummy27 = 27;
      case 27: {
        if (tag == 216) {
         parse_dummy27:
          set_has_dummy27();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy27_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_dummy28;
        break;
      }

      // optional int32 dummy28 = 28;
      case 28: {
        if (tag == 224) {
         parse_dummy28:
          set_has_dummy28();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy28_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_dummy29;
        break;
      }

      // optional int32 dummy29 = 29;
      case 29: {
        if (tag == 232) {
         parse_dummy29:
          set_has_dummy29();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy29_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_dummy30;
        break;
      }

      // optional int32 dummy30 = 30;
      case 30: {
        if (tag == 240) {
         parse_dummy30:
          set_has_dummy30();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy30_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_dummy31;
        break;
      }

      // optional int32 dummy31 = 31;
      case 31: {
        if (tag == 248) {
         parse_dummy31:
          set_has_dummy31();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy31_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_dummy32;
        break;
      }

      // optional int32 dummy32 = 32;
      case 32: {
        if (tag == 256) {
         parse_dummy32:
          set_has_dummy32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_c;
        break;
      }

      // required int32 c = 33;
      case 33: {
        if (tag == 264) {
         parse_c:
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequired)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequired)
  return false;
#undef DO_
}

void TestRequired::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequired)
  // required int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 dummy2 = 2;
  if (has_dummy2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dummy2(), output);
  }

  // required int32 b = 3;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->b(), output);
  }

  // optional int32 dummy4 = 4;
  if (has_dummy4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dummy4(), output);
  }

  // optional int32 dummy5 = 5;
  if (has_dummy5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dummy5(), output);
  }

  // optional int32 dummy6 = 6;
  if (has_dummy6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dummy6(), output);
  }

  // optional int32 dummy7 = 7;
  if (has_dummy7()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dummy7(), output);
  }

  // optional int32 dummy8 = 8;
  if (has_dummy8()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dummy8(), output);
  }

  // optional int32 dummy9 = 9;
  if (has_dummy9()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dummy9(), output);
  }

  // optional int32 dummy10 = 10;
  if (has_dummy10()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->dummy10(), output);
  }

  // optional int32 dummy11 = 11;
  if (has_dummy11()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->dummy11(), output);
  }

  // optional int32 dummy12 = 12;
  if (has_dummy12()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->dummy12(), output);
  }

  // optional int32 dummy13 = 13;
  if (has_dummy13()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dummy13(), output);
  }

  // optional int32 dummy14 = 14;
  if (has_dummy14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->dummy14(), output);
  }

  // optional int32 dummy15 = 15;
  if (has_dummy15()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->dummy15(), output);
  }

  // optional int32 dummy16 = 16;
  if (has_dummy16()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->dummy16(), output);
  }

  // optional int32 dummy17 = 17;
  if (has_dummy17()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->dummy17(), output);
  }

  // optional int32 dummy18 = 18;
  if (has_dummy18()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->dummy18(), output);
  }

  // optional int32 dummy19 = 19;
  if (has_dummy19()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->dummy19(), output);
  }

  // optional int32 dummy20 = 20;
  if (has_dummy20()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->dummy20(), output);
  }

  // optional int32 dummy21 = 21;
  if (has_dummy21()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->dummy21(), output);
  }

  // optional int32 dummy22 = 22;
  if (has_dummy22()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->dummy22(), output);
  }

  // optional int32 dummy23 = 23;
  if (has_dummy23()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->dummy23(), output);
  }

  // optional int32 dummy24 = 24;
  if (has_dummy24()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->dummy24(), output);
  }

  // optional int32 dummy25 = 25;
  if (has_dummy25()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->dummy25(), output);
  }

  // optional int32 dummy26 = 26;
  if (has_dummy26()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->dummy26(), output);
  }

  // optional int32 dummy27 = 27;
  if (has_dummy27()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dummy27(), output);
  }

  // optional int32 dummy28 = 28;
  if (has_dummy28()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->dummy28(), output);
  }

  // optional int32 dummy29 = 29;
  if (has_dummy29()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->dummy29(), output);
  }

  // optional int32 dummy30 = 30;
  if (has_dummy30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->dummy30(), output);
  }

  // optional int32 dummy31 = 31;
  if (has_dummy31()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->dummy31(), output);
  }

  // optional int32 dummy32 = 32;
  if (has_dummy32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->dummy32(), output);
  }

  // required int32 c = 33;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequired)
}

::google::protobuf::uint8* TestRequired::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequired)
  // required int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 dummy2 = 2;
  if (has_dummy2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dummy2(), target);
  }

  // required int32 b = 3;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->b(), target);
  }

  // optional int32 dummy4 = 4;
  if (has_dummy4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dummy4(), target);
  }

  // optional int32 dummy5 = 5;
  if (has_dummy5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dummy5(), target);
  }

  // optional int32 dummy6 = 6;
  if (has_dummy6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dummy6(), target);
  }

  // optional int32 dummy7 = 7;
  if (has_dummy7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dummy7(), target);
  }

  // optional int32 dummy8 = 8;
  if (has_dummy8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->dummy8(), target);
  }

  // optional int32 dummy9 = 9;
  if (has_dummy9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dummy9(), target);
  }

  // optional int32 dummy10 = 10;
  if (has_dummy10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->dummy10(), target);
  }

  // optional int32 dummy11 = 11;
  if (has_dummy11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->dummy11(), target);
  }

  // optional int32 dummy12 = 12;
  if (has_dummy12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->dummy12(), target);
  }

  // optional int32 dummy13 = 13;
  if (has_dummy13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dummy13(), target);
  }

  // optional int32 dummy14 = 14;
  if (has_dummy14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->dummy14(), target);
  }

  // optional int32 dummy15 = 15;
  if (has_dummy15()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->dummy15(), target);
  }

  // optional int32 dummy16 = 16;
  if (has_dummy16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->dummy16(), target);
  }

  // optional int32 dummy17 = 17;
  if (has_dummy17()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->dummy17(), target);
  }

  // optional int32 dummy18 = 18;
  if (has_dummy18()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->dummy18(), target);
  }

  // optional int32 dummy19 = 19;
  if (has_dummy19()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->dummy19(), target);
  }

  // optional int32 dummy20 = 20;
  if (has_dummy20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->dummy20(), target);
  }

  // optional int32 dummy21 = 21;
  if (has_dummy21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->dummy21(), target);
  }

  // optional int32 dummy22 = 22;
  if (has_dummy22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->dummy22(), target);
  }

  // optional int32 dummy23 = 23;
  if (has_dummy23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->dummy23(), target);
  }

  // optional int32 dummy24 = 24;
  if (has_dummy24()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->dummy24(), target);
  }

  // optional int32 dummy25 = 25;
  if (has_dummy25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->dummy25(), target);
  }

  // optional int32 dummy26 = 26;
  if (has_dummy26()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->dummy26(), target);
  }

  // optional int32 dummy27 = 27;
  if (has_dummy27()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dummy27(), target);
  }

  // optional int32 dummy28 = 28;
  if (has_dummy28()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->dummy28(), target);
  }

  // optional int32 dummy29 = 29;
  if (has_dummy29()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->dummy29(), target);
  }

  // optional int32 dummy30 = 30;
  if (has_dummy30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->dummy30(), target);
  }

  // optional int32 dummy31 = 31;
  if (has_dummy31()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->dummy31(), target);
  }

  // optional int32 dummy32 = 32;
  if (has_dummy32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->dummy32(), target);
  }

  // required int32 c = 33;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequired)
  return target;
}

size_t TestRequired::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protobuf_unittest.TestRequired)
  size_t total_size = 0;

  if (has_a()) {
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_b()) {
    // required int32 b = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  if (has_c()) {
    // required int32 c = 33;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  return total_size;
}
size_t TestRequired::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequired)
  size_t total_size = 0;

  if ((((_has_bits_[0] & 0x00000005) ^ 0x00000005)
         | ((_has_bits_[1] & 0x00000001) ^ 0x00000001)) == 0) {  // All required fields are present.
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required int32 b = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());

    // required int32 c = 33;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 250u) {
    // optional int32 dummy2 = 2;
    if (has_dummy2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy2());
    }

    // optional int32 dummy4 = 4;
    if (has_dummy4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy4());
    }

    // optional int32 dummy5 = 5;
    if (has_dummy5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy5());
    }

    // optional int32 dummy6 = 6;
    if (has_dummy6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy6());
    }

    // optional int32 dummy7 = 7;
    if (has_dummy7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy7());
    }

    // optional int32 dummy8 = 8;
    if (has_dummy8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy8());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 dummy9 = 9;
    if (has_dummy9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy9());
    }

    // optional int32 dummy10 = 10;
    if (has_dummy10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy10());
    }

    // optional int32 dummy11 = 11;
    if (has_dummy11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy11());
    }

    // optional int32 dummy12 = 12;
    if (has_dummy12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy12());
    }

    // optional int32 dummy13 = 13;
    if (has_dummy13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy13());
    }

    // optional int32 dummy14 = 14;
    if (has_dummy14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy14());
    }

    // optional int32 dummy15 = 15;
    if (has_dummy15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy15());
    }

    // optional int32 dummy16 = 16;
    if (has_dummy16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy16());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 dummy17 = 17;
    if (has_dummy17()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy17());
    }

    // optional int32 dummy18 = 18;
    if (has_dummy18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy18());
    }

    // optional int32 dummy19 = 19;
    if (has_dummy19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy19());
    }

    // optional int32 dummy20 = 20;
    if (has_dummy20()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy20());
    }

    // optional int32 dummy21 = 21;
    if (has_dummy21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy21());
    }

    // optional int32 dummy22 = 22;
    if (has_dummy22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy22());
    }

    // optional int32 dummy23 = 23;
    if (has_dummy23()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy23());
    }

    // optional int32 dummy24 = 24;
    if (has_dummy24()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy24());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 dummy25 = 25;
    if (has_dummy25()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy25());
    }

    // optional int32 dummy26 = 26;
    if (has_dummy26()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy26());
    }

    // optional int32 dummy27 = 27;
    if (has_dummy27()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy27());
    }

    // optional int32 dummy28 = 28;
    if (has_dummy28()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy28());
    }

    // optional int32 dummy29 = 29;
    if (has_dummy29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy29());
    }

    // optional int32 dummy30 = 30;
    if (has_dummy30()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy30());
    }

    // optional int32 dummy31 = 31;
    if (has_dummy31()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy31());
    }

    // optional int32 dummy32 = 32;
    if (has_dummy32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy32());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequired::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRequired)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRequired* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRequired>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRequired)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRequired)
    UnsafeMergeFrom(*source);
  }
}

void TestRequired::MergeFrom(const TestRequired& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequired)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRequired::UnsafeMergeFrom(const TestRequired& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_dummy2()) {
      set_dummy2(from.dummy2());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_dummy4()) {
      set_dummy4(from.dummy4());
    }
    if (from.has_dummy5()) {
      set_dummy5(from.dummy5());
    }
    if (from.has_dummy6()) {
      set_dummy6(from.dummy6());
    }
    if (from.has_dummy7()) {
      set_dummy7(from.dummy7());
    }
    if (from.has_dummy8()) {
      set_dummy8(from.dummy8());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dummy9()) {
      set_dummy9(from.dummy9());
    }
    if (from.has_dummy10()) {
      set_dummy10(from.dummy10());
    }
    if (from.has_dummy11()) {
      set_dummy11(from.dummy11());
    }
    if (from.has_dummy12()) {
      set_dummy12(from.dummy12());
    }
    if (from.has_dummy13()) {
      set_dummy13(from.dummy13());
    }
    if (from.has_dummy14()) {
      set_dummy14(from.dummy14());
    }
    if (from.has_dummy15()) {
      set_dummy15(from.dummy15());
    }
    if (from.has_dummy16()) {
      set_dummy16(from.dummy16());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dummy17()) {
      set_dummy17(from.dummy17());
    }
    if (from.has_dummy18()) {
      set_dummy18(from.dummy18());
    }
    if (from.has_dummy19()) {
      set_dummy19(from.dummy19());
    }
    if (from.has_dummy20()) {
      set_dummy20(from.dummy20());
    }
    if (from.has_dummy21()) {
      set_dummy21(from.dummy21());
    }
    if (from.has_dummy22()) {
      set_dummy22(from.dummy22());
    }
    if (from.has_dummy23()) {
      set_dummy23(from.dummy23());
    }
    if (from.has_dummy24()) {
      set_dummy24(from.dummy24());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_dummy25()) {
      set_dummy25(from.dummy25());
    }
    if (from.has_dummy26()) {
      set_dummy26(from.dummy26());
    }
    if (from.has_dummy27()) {
      set_dummy27(from.dummy27());
    }
    if (from.has_dummy28()) {
      set_dummy28(from.dummy28());
    }
    if (from.has_dummy29()) {
      set_dummy29(from.dummy29());
    }
    if (from.has_dummy30()) {
      set_dummy30(from.dummy30());
    }
    if (from.has_dummy31()) {
      set_dummy31(from.dummy31());
    }
    if (from.has_dummy32()) {
      set_dummy32(from.dummy32());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRequired::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRequired)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequired::CopyFrom(const TestRequired& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequired)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRequired::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if ((_has_bits_[1] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestRequired::Swap(TestRequired* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRequired temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRequired::UnsafeArenaSwap(TestRequired* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRequired::InternalSwap(TestRequired* other) {
  std::swap(a_, other->a_);
  std::swap(dummy2_, other->dummy2_);
  std::swap(b_, other->b_);
  std::swap(dummy4_, other->dummy4_);
  std::swap(dummy5_, other->dummy5_);
  std::swap(dummy6_, other->dummy6_);
  std::swap(dummy7_, other->dummy7_);
  std::swap(dummy8_, other->dummy8_);
  std::swap(dummy9_, other->dummy9_);
  std::swap(dummy10_, other->dummy10_);
  std::swap(dummy11_, other->dummy11_);
  std::swap(dummy12_, other->dummy12_);
  std::swap(dummy13_, other->dummy13_);
  std::swap(dummy14_, other->dummy14_);
  std::swap(dummy15_, other->dummy15_);
  std::swap(dummy16_, other->dummy16_);
  std::swap(dummy17_, other->dummy17_);
  std::swap(dummy18_, other->dummy18_);
  std::swap(dummy19_, other->dummy19_);
  std::swap(dummy20_, other->dummy20_);
  std::swap(dummy21_, other->dummy21_);
  std::swap(dummy22_, other->dummy22_);
  std::swap(dummy23_, other->dummy23_);
  std::swap(dummy24_, other->dummy24_);
  std::swap(dummy25_, other->dummy25_);
  std::swap(dummy26_, other->dummy26_);
  std::swap(dummy27_, other->dummy27_);
  std::swap(dummy28_, other->dummy28_);
  std::swap(dummy29_, other->dummy29_);
  std::swap(dummy30_, other->dummy30_);
  std::swap(dummy31_, other->dummy31_);
  std::swap(dummy32_, other->dummy32_);
  std::swap(c_, other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRequired::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequired_descriptor_;
  metadata.reflection = TestRequired_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestRequired

// required int32 a = 1;
bool TestRequired::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestRequired::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestRequired::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestRequired::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestRequired::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.a)
  return a_;
}
void TestRequired::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.a)
}

// optional int32 dummy2 = 2;
bool TestRequired::has_dummy2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestRequired::set_has_dummy2() {
  _has_bits_[0] |= 0x00000002u;
}
void TestRequired::clear_has_dummy2() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestRequired::clear_dummy2() {
  dummy2_ = 0;
  clear_has_dummy2();
}
::google::protobuf::int32 TestRequired::dummy2() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy2)
  return dummy2_;
}
void TestRequired::set_dummy2(::google::protobuf::int32 value) {
  set_has_dummy2();
  dummy2_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy2)
}

// required int32 b = 3;
bool TestRequired::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestRequired::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
void TestRequired::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestRequired::clear_b() {
  b_ = 0;
  clear_has_b();
}
::google::protobuf::int32 TestRequired::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.b)
  return b_;
}
void TestRequired::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.b)
}

// optional int32 dummy4 = 4;
bool TestRequired::has_dummy4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestRequired::set_has_dummy4() {
  _has_bits_[0] |= 0x00000008u;
}
void TestRequired::clear_has_dummy4() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestRequired::clear_dummy4() {
  dummy4_ = 0;
  clear_has_dummy4();
}
::google::protobuf::int32 TestRequired::dummy4() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy4)
  return dummy4_;
}
void TestRequired::set_dummy4(::google::protobuf::int32 value) {
  set_has_dummy4();
  dummy4_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy4)
}

// optional int32 dummy5 = 5;
bool TestRequired::has_dummy5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestRequired::set_has_dummy5() {
  _has_bits_[0] |= 0x00000010u;
}
void TestRequired::clear_has_dummy5() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestRequired::clear_dummy5() {
  dummy5_ = 0;
  clear_has_dummy5();
}
::google::protobuf::int32 TestRequired::dummy5() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy5)
  return dummy5_;
}
void TestRequired::set_dummy5(::google::protobuf::int32 value) {
  set_has_dummy5();
  dummy5_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy5)
}

// optional int32 dummy6 = 6;
bool TestRequired::has_dummy6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestRequired::set_has_dummy6() {
  _has_bits_[0] |= 0x00000020u;
}
void TestRequired::clear_has_dummy6() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestRequired::clear_dummy6() {
  dummy6_ = 0;
  clear_has_dummy6();
}
::google::protobuf::int32 TestRequired::dummy6() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy6)
  return dummy6_;
}
void TestRequired::set_dummy6(::google::protobuf::int32 value) {
  set_has_dummy6();
  dummy6_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy6)
}

// optional int32 dummy7 = 7;
bool TestRequired::has_dummy7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TestRequired::set_has_dummy7() {
  _has_bits_[0] |= 0x00000040u;
}
void TestRequired::clear_has_dummy7() {
  _has_bits_[0] &= ~0x00000040u;
}
void TestRequired::clear_dummy7() {
  dummy7_ = 0;
  clear_has_dummy7();
}
::google::protobuf::int32 TestRequired::dummy7() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy7)
  return dummy7_;
}
void TestRequired::set_dummy7(::google::protobuf::int32 value) {
  set_has_dummy7();
  dummy7_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy7)
}

// optional int32 dummy8 = 8;
bool TestRequired::has_dummy8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TestRequired::set_has_dummy8() {
  _has_bits_[0] |= 0x00000080u;
}
void TestRequired::clear_has_dummy8() {
  _has_bits_[0] &= ~0x00000080u;
}
void TestRequired::clear_dummy8() {
  dummy8_ = 0;
  clear_has_dummy8();
}
::google::protobuf::int32 TestRequired::dummy8() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy8)
  return dummy8_;
}
void TestRequired::set_dummy8(::google::protobuf::int32 value) {
  set_has_dummy8();
  dummy8_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy8)
}

// optional int32 dummy9 = 9;
bool TestRequired::has_dummy9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TestRequired::set_has_dummy9() {
  _has_bits_[0] |= 0x00000100u;
}
void TestRequired::clear_has_dummy9() {
  _has_bits_[0] &= ~0x00000100u;
}
void TestRequired::clear_dummy9() {
  dummy9_ = 0;
  clear_has_dummy9();
}
::google::protobuf::int32 TestRequired::dummy9() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy9)
  return dummy9_;
}
void TestRequired::set_dummy9(::google::protobuf::int32 value) {
  set_has_dummy9();
  dummy9_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy9)
}

// optional int32 dummy10 = 10;
bool TestRequired::has_dummy10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TestRequired::set_has_dummy10() {
  _has_bits_[0] |= 0x00000200u;
}
void TestRequired::clear_has_dummy10() {
  _has_bits_[0] &= ~0x00000200u;
}
void TestRequired::clear_dummy10() {
  dummy10_ = 0;
  clear_has_dummy10();
}
::google::protobuf::int32 TestRequired::dummy10() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy10)
  return dummy10_;
}
void TestRequired::set_dummy10(::google::protobuf::int32 value) {
  set_has_dummy10();
  dummy10_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy10)
}

// optional int32 dummy11 = 11;
bool TestRequired::has_dummy11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TestRequired::set_has_dummy11() {
  _has_bits_[0] |= 0x00000400u;
}
void TestRequired::clear_has_dummy11() {
  _has_bits_[0] &= ~0x00000400u;
}
void TestRequired::clear_dummy11() {
  dummy11_ = 0;
  clear_has_dummy11();
}
::google::protobuf::int32 TestRequired::dummy11() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy11)
  return dummy11_;
}
void TestRequired::set_dummy11(::google::protobuf::int32 value) {
  set_has_dummy11();
  dummy11_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy11)
}

// optional int32 dummy12 = 12;
bool TestRequired::has_dummy12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TestRequired::set_has_dummy12() {
  _has_bits_[0] |= 0x00000800u;
}
void TestRequired::clear_has_dummy12() {
  _has_bits_[0] &= ~0x00000800u;
}
void TestRequired::clear_dummy12() {
  dummy12_ = 0;
  clear_has_dummy12();
}
::google::protobuf::int32 TestRequired::dummy12() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy12)
  return dummy12_;
}
void TestRequired::set_dummy12(::google::protobuf::int32 value) {
  set_has_dummy12();
  dummy12_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy12)
}

// optional int32 dummy13 = 13;
bool TestRequired::has_dummy13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TestRequired::set_has_dummy13() {
  _has_bits_[0] |= 0x00001000u;
}
void TestRequired::clear_has_dummy13() {
  _has_bits_[0] &= ~0x00001000u;
}
void TestRequired::clear_dummy13() {
  dummy13_ = 0;
  clear_has_dummy13();
}
::google::protobuf::int32 TestRequired::dummy13() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy13)
  return dummy13_;
}
void TestRequired::set_dummy13(::google::protobuf::int32 value) {
  set_has_dummy13();
  dummy13_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy13)
}

// optional int32 dummy14 = 14;
bool TestRequired::has_dummy14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TestRequired::set_has_dummy14() {
  _has_bits_[0] |= 0x00002000u;
}
void TestRequired::clear_has_dummy14() {
  _has_bits_[0] &= ~0x00002000u;
}
void TestRequired::clear_dummy14() {
  dummy14_ = 0;
  clear_has_dummy14();
}
::google::protobuf::int32 TestRequired::dummy14() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy14)
  return dummy14_;
}
void TestRequired::set_dummy14(::google::protobuf::int32 value) {
  set_has_dummy14();
  dummy14_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy14)
}

// optional int32 dummy15 = 15;
bool TestRequired::has_dummy15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TestRequired::set_has_dummy15() {
  _has_bits_[0] |= 0x00004000u;
}
void TestRequired::clear_has_dummy15() {
  _has_bits_[0] &= ~0x00004000u;
}
void TestRequired::clear_dummy15() {
  dummy15_ = 0;
  clear_has_dummy15();
}
::google::protobuf::int32 TestRequired::dummy15() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy15)
  return dummy15_;
}
void TestRequired::set_dummy15(::google::protobuf::int32 value) {
  set_has_dummy15();
  dummy15_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy15)
}

// optional int32 dummy16 = 16;
bool TestRequired::has_dummy16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TestRequired::set_has_dummy16() {
  _has_bits_[0] |= 0x00008000u;
}
void TestRequired::clear_has_dummy16() {
  _has_bits_[0] &= ~0x00008000u;
}
void TestRequired::clear_dummy16() {
  dummy16_ = 0;
  clear_has_dummy16();
}
::google::protobuf::int32 TestRequired::dummy16() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy16)
  return dummy16_;
}
void TestRequired::set_dummy16(::google::protobuf::int32 value) {
  set_has_dummy16();
  dummy16_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy16)
}

// optional int32 dummy17 = 17;
bool TestRequired::has_dummy17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TestRequired::set_has_dummy17() {
  _has_bits_[0] |= 0x00010000u;
}
void TestRequired::clear_has_dummy17() {
  _has_bits_[0] &= ~0x00010000u;
}
void TestRequired::clear_dummy17() {
  dummy17_ = 0;
  clear_has_dummy17();
}
::google::protobuf::int32 TestRequired::dummy17() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy17)
  return dummy17_;
}
void TestRequired::set_dummy17(::google::protobuf::int32 value) {
  set_has_dummy17();
  dummy17_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy17)
}

// optional int32 dummy18 = 18;
bool TestRequired::has_dummy18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void TestRequired::set_has_dummy18() {
  _has_bits_[0] |= 0x00020000u;
}
void TestRequired::clear_has_dummy18() {
  _has_bits_[0] &= ~0x00020000u;
}
void TestRequired::clear_dummy18() {
  dummy18_ = 0;
  clear_has_dummy18();
}
::google::protobuf::int32 TestRequired::dummy18() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy18)
  return dummy18_;
}
void TestRequired::set_dummy18(::google::protobuf::int32 value) {
  set_has_dummy18();
  dummy18_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy18)
}

// optional int32 dummy19 = 19;
bool TestRequired::has_dummy19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void TestRequired::set_has_dummy19() {
  _has_bits_[0] |= 0x00040000u;
}
void TestRequired::clear_has_dummy19() {
  _has_bits_[0] &= ~0x00040000u;
}
void TestRequired::clear_dummy19() {
  dummy19_ = 0;
  clear_has_dummy19();
}
::google::protobuf::int32 TestRequired::dummy19() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy19)
  return dummy19_;
}
void TestRequired::set_dummy19(::google::protobuf::int32 value) {
  set_has_dummy19();
  dummy19_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy19)
}

// optional int32 dummy20 = 20;
bool TestRequired::has_dummy20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void TestRequired::set_has_dummy20() {
  _has_bits_[0] |= 0x00080000u;
}
void TestRequired::clear_has_dummy20() {
  _has_bits_[0] &= ~0x00080000u;
}
void TestRequired::clear_dummy20() {
  dummy20_ = 0;
  clear_has_dummy20();
}
::google::protobuf::int32 TestRequired::dummy20() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy20)
  return dummy20_;
}
void TestRequired::set_dummy20(::google::protobuf::int32 value) {
  set_has_dummy20();
  dummy20_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy20)
}

// optional int32 dummy21 = 21;
bool TestRequired::has_dummy21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void TestRequired::set_has_dummy21() {
  _has_bits_[0] |= 0x00100000u;
}
void TestRequired::clear_has_dummy21() {
  _has_bits_[0] &= ~0x00100000u;
}
void TestRequired::clear_dummy21() {
  dummy21_ = 0;
  clear_has_dummy21();
}
::google::protobuf::int32 TestRequired::dummy21() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy21)
  return dummy21_;
}
void TestRequired::set_dummy21(::google::protobuf::int32 value) {
  set_has_dummy21();
  dummy21_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy21)
}

// optional int32 dummy22 = 22;
bool TestRequired::has_dummy22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void TestRequired::set_has_dummy22() {
  _has_bits_[0] |= 0x00200000u;
}
void TestRequired::clear_has_dummy22() {
  _has_bits_[0] &= ~0x00200000u;
}
void TestRequired::clear_dummy22() {
  dummy22_ = 0;
  clear_has_dummy22();
}
::google::protobuf::int32 TestRequired::dummy22() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy22)
  return dummy22_;
}
void TestRequired::set_dummy22(::google::protobuf::int32 value) {
  set_has_dummy22();
  dummy22_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy22)
}

// optional int32 dummy23 = 23;
bool TestRequired::has_dummy23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void TestRequired::set_has_dummy23() {
  _has_bits_[0] |= 0x00400000u;
}
void TestRequired::clear_has_dummy23() {
  _has_bits_[0] &= ~0x00400000u;
}
void TestRequired::clear_dummy23() {
  dummy23_ = 0;
  clear_has_dummy23();
}
::google::protobuf::int32 TestRequired::dummy23() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy23)
  return dummy23_;
}
void TestRequired::set_dummy23(::google::protobuf::int32 value) {
  set_has_dummy23();
  dummy23_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy23)
}

// optional int32 dummy24 = 24;
bool TestRequired::has_dummy24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void TestRequired::set_has_dummy24() {
  _has_bits_[0] |= 0x00800000u;
}
void TestRequired::clear_has_dummy24() {
  _has_bits_[0] &= ~0x00800000u;
}
void TestRequired::clear_dummy24() {
  dummy24_ = 0;
  clear_has_dummy24();
}
::google::protobuf::int32 TestRequired::dummy24() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy24)
  return dummy24_;
}
void TestRequired::set_dummy24(::google::protobuf::int32 value) {
  set_has_dummy24();
  dummy24_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy24)
}

// optional int32 dummy25 = 25;
bool TestRequired::has_dummy25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void TestRequired::set_has_dummy25() {
  _has_bits_[0] |= 0x01000000u;
}
void TestRequired::clear_has_dummy25() {
  _has_bits_[0] &= ~0x01000000u;
}
void TestRequired::clear_dummy25() {
  dummy25_ = 0;
  clear_has_dummy25();
}
::google::protobuf::int32 TestRequired::dummy25() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy25)
  return dummy25_;
}
void TestRequired::set_dummy25(::google::protobuf::int32 value) {
  set_has_dummy25();
  dummy25_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy25)
}

// optional int32 dummy26 = 26;
bool TestRequired::has_dummy26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void TestRequired::set_has_dummy26() {
  _has_bits_[0] |= 0x02000000u;
}
void TestRequired::clear_has_dummy26() {
  _has_bits_[0] &= ~0x02000000u;
}
void TestRequired::clear_dummy26() {
  dummy26_ = 0;
  clear_has_dummy26();
}
::google::protobuf::int32 TestRequired::dummy26() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy26)
  return dummy26_;
}
void TestRequired::set_dummy26(::google::protobuf::int32 value) {
  set_has_dummy26();
  dummy26_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy26)
}

// optional int32 dummy27 = 27;
bool TestRequired::has_dummy27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void TestRequired::set_has_dummy27() {
  _has_bits_[0] |= 0x04000000u;
}
void TestRequired::clear_has_dummy27() {
  _has_bits_[0] &= ~0x04000000u;
}
void TestRequired::clear_dummy27() {
  dummy27_ = 0;
  clear_has_dummy27();
}
::google::protobuf::int32 TestRequired::dummy27() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy27)
  return dummy27_;
}
void TestRequired::set_dummy27(::google::protobuf::int32 value) {
  set_has_dummy27();
  dummy27_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy27)
}

// optional int32 dummy28 = 28;
bool TestRequired::has_dummy28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void TestRequired::set_has_dummy28() {
  _has_bits_[0] |= 0x08000000u;
}
void TestRequired::clear_has_dummy28() {
  _has_bits_[0] &= ~0x08000000u;
}
void TestRequired::clear_dummy28() {
  dummy28_ = 0;
  clear_has_dummy28();
}
::google::protobuf::int32 TestRequired::dummy28() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy28)
  return dummy28_;
}
void TestRequired::set_dummy28(::google::protobuf::int32 value) {
  set_has_dummy28();
  dummy28_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy28)
}

// optional int32 dummy29 = 29;
bool TestRequired::has_dummy29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void TestRequired::set_has_dummy29() {
  _has_bits_[0] |= 0x10000000u;
}
void TestRequired::clear_has_dummy29() {
  _has_bits_[0] &= ~0x10000000u;
}
void TestRequired::clear_dummy29() {
  dummy29_ = 0;
  clear_has_dummy29();
}
::google::protobuf::int32 TestRequired::dummy29() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy29)
  return dummy29_;
}
void TestRequired::set_dummy29(::google::protobuf::int32 value) {
  set_has_dummy29();
  dummy29_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy29)
}

// optional int32 dummy30 = 30;
bool TestRequired::has_dummy30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void TestRequired::set_has_dummy30() {
  _has_bits_[0] |= 0x20000000u;
}
void TestRequired::clear_has_dummy30() {
  _has_bits_[0] &= ~0x20000000u;
}
void TestRequired::clear_dummy30() {
  dummy30_ = 0;
  clear_has_dummy30();
}
::google::protobuf::int32 TestRequired::dummy30() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy30)
  return dummy30_;
}
void TestRequired::set_dummy30(::google::protobuf::int32 value) {
  set_has_dummy30();
  dummy30_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy30)
}

// optional int32 dummy31 = 31;
bool TestRequired::has_dummy31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void TestRequired::set_has_dummy31() {
  _has_bits_[0] |= 0x40000000u;
}
void TestRequired::clear_has_dummy31() {
  _has_bits_[0] &= ~0x40000000u;
}
void TestRequired::clear_dummy31() {
  dummy31_ = 0;
  clear_has_dummy31();
}
::google::protobuf::int32 TestRequired::dummy31() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy31)
  return dummy31_;
}
void TestRequired::set_dummy31(::google::protobuf::int32 value) {
  set_has_dummy31();
  dummy31_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy31)
}

// optional int32 dummy32 = 32;
bool TestRequired::has_dummy32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void TestRequired::set_has_dummy32() {
  _has_bits_[0] |= 0x80000000u;
}
void TestRequired::clear_has_dummy32() {
  _has_bits_[0] &= ~0x80000000u;
}
void TestRequired::clear_dummy32() {
  dummy32_ = 0;
  clear_has_dummy32();
}
::google::protobuf::int32 TestRequired::dummy32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.dummy32)
  return dummy32_;
}
void TestRequired::set_dummy32(::google::protobuf::int32 value) {
  set_has_dummy32();
  dummy32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.dummy32)
}

// required int32 c = 33;
bool TestRequired::has_c() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void TestRequired::set_has_c() {
  _has_bits_[1] |= 0x00000001u;
}
void TestRequired::clear_has_c() {
  _has_bits_[1] &= ~0x00000001u;
}
void TestRequired::clear_c() {
  c_ = 0;
  clear_has_c();
}
::google::protobuf::int32 TestRequired::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequired.c)
  return c_;
}
void TestRequired::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequired.c)
}

inline const TestRequired* TestRequired::internal_default_instance() {
  return &TestRequired_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestRequiredForeign::_slow_mutable_optional_message() {
  optional_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRequired >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestRequired* TestRequiredForeign::_slow_release_optional_message() {
  if (optional_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestRequired* temp = new ::protobuf_unittest::TestRequired(*optional_message_);
    optional_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestRequired* TestRequiredForeign::unsafe_arena_release_optional_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestRequiredForeign.optional_message)
  clear_has_optional_message();
  ::protobuf_unittest::TestRequired* temp = optional_message_;
  optional_message_ = NULL;
  return temp;
}
void TestRequiredForeign::_slow_set_allocated_optional_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestRequired** optional_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_message) == NULL) {
      message_arena->Own(*optional_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_message)) {
      ::protobuf_unittest::TestRequired* new_optional_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRequired >(
            message_arena);
      new_optional_message->CopyFrom(**optional_message);
      *optional_message = new_optional_message;
    }
}
void TestRequiredForeign::unsafe_arena_set_allocated_optional_message(
    ::protobuf_unittest::TestRequired* optional_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_message_;
  }
  optional_message_ = optional_message;
  if (optional_message) {
    set_has_optional_message();
  } else {
    clear_has_optional_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestRequiredForeign.optional_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequiredForeign::kOptionalMessageFieldNumber;
const int TestRequiredForeign::kRepeatedMessageFieldNumber;
const int TestRequiredForeign::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRequiredForeign::TestRequiredForeign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredForeign)
}
TestRequiredForeign::TestRequiredForeign(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_message_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredForeign)
}

void TestRequiredForeign::InitAsDefaultInstance() {
  optional_message_ = const_cast< ::protobuf_unittest::TestRequired*>(
      ::protobuf_unittest::TestRequired::internal_default_instance());
}

TestRequiredForeign::TestRequiredForeign(const TestRequiredForeign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredForeign)
}

void TestRequiredForeign::SharedCtor() {
  _cached_size_ = 0;
  optional_message_ = NULL;
  dummy_ = 0;
}

TestRequiredForeign::~TestRequiredForeign() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredForeign)
  SharedDtor();
}

void TestRequiredForeign::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestRequiredForeign_default_instance_.get()) {
    delete optional_message_;
  }
}

void TestRequiredForeign::ArenaDtor(void* object) {
  TestRequiredForeign* _this = reinterpret_cast< TestRequiredForeign* >(object);
  (void)_this;
}
void TestRequiredForeign::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRequiredForeign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredForeign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredForeign_descriptor_;
}

const TestRequiredForeign& TestRequiredForeign::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRequiredForeign> TestRequiredForeign_default_instance_;

TestRequiredForeign* TestRequiredForeign::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRequiredForeign>(arena);
}

void TestRequiredForeign::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredForeign)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_optional_message()) {
      if (optional_message_ != NULL) optional_message_->::protobuf_unittest::TestRequired::Clear();
    }
    dummy_ = 0;
  }
  repeated_message_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRequiredForeign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredForeign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestRequired optional_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repeated_message;
        break;
      }

      // repeated .protobuf_unittest.TestRequired repeated_message = 2;
      case 2: {
        if (tag == 18) {
         parse_repeated_message:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_repeated_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_dummy;
        break;
      }

      // optional int32 dummy = 3;
      case 3: {
        if (tag == 24) {
         parse_dummy:
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredForeign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredForeign)
  return false;
#undef DO_
}

void TestRequiredForeign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredForeign)
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (has_optional_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->optional_message_, output);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (unsigned int i = 0, n = this->repeated_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->repeated_message(i), output);
  }

  // optional int32 dummy = 3;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredForeign)
}

::google::protobuf::uint8* TestRequiredForeign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredForeign)
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (has_optional_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->optional_message_, false, target);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (unsigned int i = 0, n = this->repeated_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->repeated_message(i), false, target);
  }

  // optional int32 dummy = 3;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredForeign)
  return target;
}

size_t TestRequiredForeign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredForeign)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 5u) {
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    if (has_optional_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_message_);
    }

    // optional int32 dummy = 3;
    if (has_dummy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy());
    }

  }
  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  {
    unsigned int count = this->repeated_message_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_message(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredForeign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRequiredForeign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRequiredForeign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRequiredForeign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRequiredForeign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRequiredForeign)
    UnsafeMergeFrom(*source);
  }
}

void TestRequiredForeign::MergeFrom(const TestRequiredForeign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredForeign)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRequiredForeign::UnsafeMergeFrom(const TestRequiredForeign& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_message_.MergeFrom(from.repeated_message_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_message()) {
      mutable_optional_message()->::protobuf_unittest::TestRequired::MergeFrom(from.optional_message());
    }
    if (from.has_dummy()) {
      set_dummy(from.dummy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRequiredForeign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRequiredForeign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredForeign::CopyFrom(const TestRequiredForeign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredForeign)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRequiredForeign::IsInitialized() const {

  if (has_optional_message()) {
    if (!this->optional_message_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->repeated_message())) return false;
  return true;
}

void TestRequiredForeign::Swap(TestRequiredForeign* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRequiredForeign temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRequiredForeign::UnsafeArenaSwap(TestRequiredForeign* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRequiredForeign::InternalSwap(TestRequiredForeign* other) {
  std::swap(optional_message_, other->optional_message_);
  repeated_message_.UnsafeArenaSwap(&other->repeated_message_);
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRequiredForeign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredForeign_descriptor_;
  metadata.reflection = TestRequiredForeign_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestRequiredForeign

// optional .protobuf_unittest.TestRequired optional_message = 1;
bool TestRequiredForeign::has_optional_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestRequiredForeign::set_has_optional_message() {
  _has_bits_[0] |= 0x00000001u;
}
void TestRequiredForeign::clear_has_optional_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestRequiredForeign::clear_optional_message() {
  if (optional_message_ != NULL) optional_message_->::protobuf_unittest::TestRequired::Clear();
  clear_has_optional_message();
}
const ::protobuf_unittest::TestRequired& TestRequiredForeign::optional_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredForeign.optional_message)
  return optional_message_ != NULL ? *optional_message_
                         : *::protobuf_unittest::TestRequired::internal_default_instance();
}
::protobuf_unittest::TestRequired* TestRequiredForeign::mutable_optional_message() {
  set_has_optional_message();
  if (optional_message_ == NULL) {
    _slow_mutable_optional_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRequiredForeign.optional_message)
  return optional_message_;
}
::protobuf_unittest::TestRequired* TestRequiredForeign::release_optional_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestRequiredForeign.optional_message)
  clear_has_optional_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_message();
  } else {
    ::protobuf_unittest::TestRequired* temp = optional_message_;
    optional_message_ = NULL;
    return temp;
  }
}
 void TestRequiredForeign::set_allocated_optional_message(::protobuf_unittest::TestRequired* optional_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_message_;
  }
  if (optional_message != NULL) {
    _slow_set_allocated_optional_message(message_arena, &optional_message);
  }
  optional_message_ = optional_message;
  if (optional_message) {
    set_has_optional_message();
  } else {
    clear_has_optional_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRequiredForeign.optional_message)
}

// repeated .protobuf_unittest.TestRequired repeated_message = 2;
int TestRequiredForeign::repeated_message_size() const {
  return repeated_message_.size();
}
void TestRequiredForeign::clear_repeated_message() {
  repeated_message_.Clear();
}
const ::protobuf_unittest::TestRequired& TestRequiredForeign::repeated_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredForeign.repeated_message)
  return repeated_message_.Get(index);
}
::protobuf_unittest::TestRequired* TestRequiredForeign::mutable_repeated_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRequiredForeign.repeated_message)
  return repeated_message_.Mutable(index);
}
::protobuf_unittest::TestRequired* TestRequiredForeign::add_repeated_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRequiredForeign.repeated_message)
  return repeated_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestRequired >*
TestRequiredForeign::mutable_repeated_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRequiredForeign.repeated_message)
  return &repeated_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestRequired >&
TestRequiredForeign::repeated_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRequiredForeign.repeated_message)
  return repeated_message_;
}

// optional int32 dummy = 3;
bool TestRequiredForeign::has_dummy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestRequiredForeign::set_has_dummy() {
  _has_bits_[0] |= 0x00000004u;
}
void TestRequiredForeign::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestRequiredForeign::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 TestRequiredForeign::dummy() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredForeign.dummy)
  return dummy_;
}
void TestRequiredForeign::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredForeign.dummy)
}

inline const TestRequiredForeign* TestRequiredForeign::internal_default_instance() {
  return &TestRequiredForeign_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestForeignNested::_slow_mutable_foreign_nested() {
  foreign_nested_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestForeignNested::_slow_release_foreign_nested() {
  if (foreign_nested_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = new ::protobuf_unittest::TestAllTypes_NestedMessage(*foreign_nested_);
    foreign_nested_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestForeignNested::unsafe_arena_release_foreign_nested() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestForeignNested.foreign_nested)
  clear_has_foreign_nested();
  ::protobuf_unittest::TestAllTypes_NestedMessage* temp = foreign_nested_;
  foreign_nested_ = NULL;
  return temp;
}
void TestForeignNested::_slow_set_allocated_foreign_nested(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes_NestedMessage** foreign_nested) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*foreign_nested) == NULL) {
      message_arena->Own(*foreign_nested);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*foreign_nested)) {
      ::protobuf_unittest::TestAllTypes_NestedMessage* new_foreign_nested = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes_NestedMessage >(
            message_arena);
      new_foreign_nested->CopyFrom(**foreign_nested);
      *foreign_nested = new_foreign_nested;
    }
}
void TestForeignNested::unsafe_arena_set_allocated_foreign_nested(
    ::protobuf_unittest::TestAllTypes_NestedMessage* foreign_nested) {
  if (GetArenaNoVirtual() == NULL) {
    delete foreign_nested_;
  }
  foreign_nested_ = foreign_nested;
  if (foreign_nested) {
    set_has_foreign_nested();
  } else {
    clear_has_foreign_nested();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestForeignNested.foreign_nested)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestForeignNested::kForeignNestedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestForeignNested::TestForeignNested()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestForeignNested)
}
TestForeignNested::TestForeignNested(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestForeignNested)
}

void TestForeignNested::InitAsDefaultInstance() {
  foreign_nested_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(
      ::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
}

TestForeignNested::TestForeignNested(const TestForeignNested& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestForeignNested)
}

void TestForeignNested::SharedCtor() {
  _cached_size_ = 0;
  foreign_nested_ = NULL;
}

TestForeignNested::~TestForeignNested() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestForeignNested)
  SharedDtor();
}

void TestForeignNested::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestForeignNested_default_instance_.get()) {
    delete foreign_nested_;
  }
}

void TestForeignNested::ArenaDtor(void* object) {
  TestForeignNested* _this = reinterpret_cast< TestForeignNested* >(object);
  (void)_this;
}
void TestForeignNested::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestForeignNested::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestForeignNested::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestForeignNested_descriptor_;
}

const TestForeignNested& TestForeignNested::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestForeignNested> TestForeignNested_default_instance_;

TestForeignNested* TestForeignNested::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestForeignNested>(arena);
}

void TestForeignNested::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestForeignNested)
  if (has_foreign_nested()) {
    if (foreign_nested_ != NULL) foreign_nested_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestForeignNested::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestForeignNested)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foreign_nested()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestForeignNested)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestForeignNested)
  return false;
#undef DO_
}

void TestForeignNested::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestForeignNested)
  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (has_foreign_nested()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->foreign_nested_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestForeignNested)
}

::google::protobuf::uint8* TestForeignNested::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestForeignNested)
  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (has_foreign_nested()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->foreign_nested_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestForeignNested)
  return target;
}

size_t TestForeignNested::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestForeignNested)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (has_foreign_nested()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->foreign_nested_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestForeignNested::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestForeignNested)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestForeignNested* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestForeignNested>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestForeignNested)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestForeignNested)
    UnsafeMergeFrom(*source);
  }
}

void TestForeignNested::MergeFrom(const TestForeignNested& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestForeignNested)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestForeignNested::UnsafeMergeFrom(const TestForeignNested& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foreign_nested()) {
      mutable_foreign_nested()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.foreign_nested());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestForeignNested::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestForeignNested)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestForeignNested::CopyFrom(const TestForeignNested& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestForeignNested)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestForeignNested::IsInitialized() const {

  return true;
}

void TestForeignNested::Swap(TestForeignNested* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestForeignNested temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestForeignNested::UnsafeArenaSwap(TestForeignNested* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestForeignNested::InternalSwap(TestForeignNested* other) {
  std::swap(foreign_nested_, other->foreign_nested_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestForeignNested::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestForeignNested_descriptor_;
  metadata.reflection = TestForeignNested_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestForeignNested

// optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
bool TestForeignNested::has_foreign_nested() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestForeignNested::set_has_foreign_nested() {
  _has_bits_[0] |= 0x00000001u;
}
void TestForeignNested::clear_has_foreign_nested() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestForeignNested::clear_foreign_nested() {
  if (foreign_nested_ != NULL) foreign_nested_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
  clear_has_foreign_nested();
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestForeignNested::foreign_nested() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestForeignNested.foreign_nested)
  return foreign_nested_ != NULL ? *foreign_nested_
                         : *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestForeignNested::mutable_foreign_nested() {
  set_has_foreign_nested();
  if (foreign_nested_ == NULL) {
    _slow_mutable_foreign_nested();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestForeignNested.foreign_nested)
  return foreign_nested_;
}
::protobuf_unittest::TestAllTypes_NestedMessage* TestForeignNested::release_foreign_nested() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestForeignNested.foreign_nested)
  clear_has_foreign_nested();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_foreign_nested();
  } else {
    ::protobuf_unittest::TestAllTypes_NestedMessage* temp = foreign_nested_;
    foreign_nested_ = NULL;
    return temp;
  }
}
 void TestForeignNested::set_allocated_foreign_nested(::protobuf_unittest::TestAllTypes_NestedMessage* foreign_nested) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete foreign_nested_;
  }
  if (foreign_nested != NULL) {
    _slow_set_allocated_foreign_nested(message_arena, &foreign_nested);
  }
  foreign_nested_ = foreign_nested;
  if (foreign_nested) {
    set_has_foreign_nested();
  } else {
    clear_has_foreign_nested();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestForeignNested.foreign_nested)
}

inline const TestForeignNested* TestForeignNested::internal_default_instance() {
  return &TestForeignNested_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEmptyMessage::TestEmptyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessage)
}
TestEmptyMessage::TestEmptyMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessage)
}

void TestEmptyMessage::InitAsDefaultInstance() {
}

TestEmptyMessage::TestEmptyMessage(const TestEmptyMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessage)
}

void TestEmptyMessage::SharedCtor() {
  _cached_size_ = 0;
}

TestEmptyMessage::~TestEmptyMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessage)
  SharedDtor();
}

void TestEmptyMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestEmptyMessage::ArenaDtor(void* object) {
  TestEmptyMessage* _this = reinterpret_cast< TestEmptyMessage* >(object);
  (void)_this;
}
void TestEmptyMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestEmptyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEmptyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEmptyMessage_descriptor_;
}

const TestEmptyMessage& TestEmptyMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestEmptyMessage> TestEmptyMessage_default_instance_;

TestEmptyMessage* TestEmptyMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestEmptyMessage>(arena);
}

void TestEmptyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessage)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestEmptyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessage)
  return false;
#undef DO_
}

void TestEmptyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessage)
}

::google::protobuf::uint8* TestEmptyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessage)
  return target;
}

size_t TestEmptyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestEmptyMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestEmptyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestEmptyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestEmptyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestEmptyMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestEmptyMessage::MergeFrom(const TestEmptyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestEmptyMessage::UnsafeMergeFrom(const TestEmptyMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestEmptyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestEmptyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmptyMessage::CopyFrom(const TestEmptyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestEmptyMessage::IsInitialized() const {

  return true;
}

void TestEmptyMessage::Swap(TestEmptyMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestEmptyMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestEmptyMessage::UnsafeArenaSwap(TestEmptyMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestEmptyMessage::InternalSwap(TestEmptyMessage* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestEmptyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEmptyMessage_descriptor_;
  metadata.reflection = TestEmptyMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEmptyMessage

inline const TestEmptyMessage* TestEmptyMessage::internal_default_instance() {
  return &TestEmptyMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}
TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}

void TestEmptyMessageWithExtensions::InitAsDefaultInstance() {
}

TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(const TestEmptyMessageWithExtensions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}

void TestEmptyMessageWithExtensions::SharedCtor() {
  _cached_size_ = 0;
}

TestEmptyMessageWithExtensions::~TestEmptyMessageWithExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageWithExtensions)
  SharedDtor();
}

void TestEmptyMessageWithExtensions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestEmptyMessageWithExtensions::ArenaDtor(void* object) {
  TestEmptyMessageWithExtensions* _this = reinterpret_cast< TestEmptyMessageWithExtensions* >(object);
  (void)_this;
}
void TestEmptyMessageWithExtensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestEmptyMessageWithExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEmptyMessageWithExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEmptyMessageWithExtensions_descriptor_;
}

const TestEmptyMessageWithExtensions& TestEmptyMessageWithExtensions::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestEmptyMessageWithExtensions> TestEmptyMessageWithExtensions_default_instance_;

TestEmptyMessageWithExtensions* TestEmptyMessageWithExtensions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestEmptyMessageWithExtensions>(arena);
}

void TestEmptyMessageWithExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  _extensions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestEmptyMessageWithExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessageWithExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessageWithExtensions)
  return false;
#undef DO_
}

void TestEmptyMessageWithExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessageWithExtensions)
}

::google::protobuf::uint8* TestEmptyMessageWithExtensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      1, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessageWithExtensions)
  return target;
}

size_t TestEmptyMessageWithExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessageWithExtensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestEmptyMessageWithExtensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestEmptyMessageWithExtensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestEmptyMessageWithExtensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestEmptyMessageWithExtensions)
    UnsafeMergeFrom(*source);
  }
}

void TestEmptyMessageWithExtensions::MergeFrom(const TestEmptyMessageWithExtensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestEmptyMessageWithExtensions::UnsafeMergeFrom(const TestEmptyMessageWithExtensions& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestEmptyMessageWithExtensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmptyMessageWithExtensions::CopyFrom(const TestEmptyMessageWithExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestEmptyMessageWithExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestEmptyMessageWithExtensions::Swap(TestEmptyMessageWithExtensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestEmptyMessageWithExtensions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestEmptyMessageWithExtensions::UnsafeArenaSwap(TestEmptyMessageWithExtensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestEmptyMessageWithExtensions::InternalSwap(TestEmptyMessageWithExtensions* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestEmptyMessageWithExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEmptyMessageWithExtensions_descriptor_;
  metadata.reflection = TestEmptyMessageWithExtensions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEmptyMessageWithExtensions

inline const TestEmptyMessageWithExtensions* TestEmptyMessageWithExtensions::internal_default_instance() {
  return &TestEmptyMessageWithExtensions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMultipleExtensionRanges::TestMultipleExtensionRanges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMultipleExtensionRanges)
}
TestMultipleExtensionRanges::TestMultipleExtensionRanges(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMultipleExtensionRanges)
}

void TestMultipleExtensionRanges::InitAsDefaultInstance() {
}

TestMultipleExtensionRanges::TestMultipleExtensionRanges(const TestMultipleExtensionRanges& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMultipleExtensionRanges)
}

void TestMultipleExtensionRanges::SharedCtor() {
  _cached_size_ = 0;
}

TestMultipleExtensionRanges::~TestMultipleExtensionRanges() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMultipleExtensionRanges)
  SharedDtor();
}

void TestMultipleExtensionRanges::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestMultipleExtensionRanges::ArenaDtor(void* object) {
  TestMultipleExtensionRanges* _this = reinterpret_cast< TestMultipleExtensionRanges* >(object);
  (void)_this;
}
void TestMultipleExtensionRanges::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestMultipleExtensionRanges::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMultipleExtensionRanges::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMultipleExtensionRanges_descriptor_;
}

const TestMultipleExtensionRanges& TestMultipleExtensionRanges::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestMultipleExtensionRanges> TestMultipleExtensionRanges_default_instance_;

TestMultipleExtensionRanges* TestMultipleExtensionRanges::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestMultipleExtensionRanges>(arena);
}

void TestMultipleExtensionRanges::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMultipleExtensionRanges)
  _extensions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestMultipleExtensionRanges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMultipleExtensionRanges)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((336u <= tag && tag < 344u) ||
        (33144u <= tag && tag < 33952u) ||
        (524288u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMultipleExtensionRanges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMultipleExtensionRanges)
  return false;
#undef DO_
}

void TestMultipleExtensionRanges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMultipleExtensionRanges)
  // Extension range [42, 43)
  _extensions_.SerializeWithCachedSizes(
      42, 43, output);

  // Extension range [4143, 4244)
  _extensions_.SerializeWithCachedSizes(
      4143, 4244, output);

  // Extension range [65536, 536870912)
  _extensions_.SerializeWithCachedSizes(
      65536, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMultipleExtensionRanges)
}

::google::protobuf::uint8* TestMultipleExtensionRanges::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMultipleExtensionRanges)
  // Extension range [42, 43)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      42, 43, false, target);

  // Extension range [4143, 4244)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      4143, 4244, false, target);

  // Extension range [65536, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      65536, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMultipleExtensionRanges)
  return target;
}

size_t TestMultipleExtensionRanges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMultipleExtensionRanges)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMultipleExtensionRanges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestMultipleExtensionRanges* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMultipleExtensionRanges>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMultipleExtensionRanges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMultipleExtensionRanges)
    UnsafeMergeFrom(*source);
  }
}

void TestMultipleExtensionRanges::MergeFrom(const TestMultipleExtensionRanges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestMultipleExtensionRanges::UnsafeMergeFrom(const TestMultipleExtensionRanges& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestMultipleExtensionRanges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMultipleExtensionRanges::CopyFrom(const TestMultipleExtensionRanges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestMultipleExtensionRanges::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestMultipleExtensionRanges::Swap(TestMultipleExtensionRanges* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestMultipleExtensionRanges temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestMultipleExtensionRanges::UnsafeArenaSwap(TestMultipleExtensionRanges* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestMultipleExtensionRanges::InternalSwap(TestMultipleExtensionRanges* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestMultipleExtensionRanges::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMultipleExtensionRanges_descriptor_;
  metadata.reflection = TestMultipleExtensionRanges_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMultipleExtensionRanges

inline const TestMultipleExtensionRanges* TestMultipleExtensionRanges::internal_default_instance() {
  return &TestMultipleExtensionRanges_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestReallyLargeTagNumber::kAFieldNumber;
const int TestReallyLargeTagNumber::kBbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestReallyLargeTagNumber::TestReallyLargeTagNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestReallyLargeTagNumber)
}
TestReallyLargeTagNumber::TestReallyLargeTagNumber(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestReallyLargeTagNumber)
}

void TestReallyLargeTagNumber::InitAsDefaultInstance() {
}

TestReallyLargeTagNumber::TestReallyLargeTagNumber(const TestReallyLargeTagNumber& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestReallyLargeTagNumber)
}

void TestReallyLargeTagNumber::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&a_, 0, reinterpret_cast<char*>(&bb_) -
    reinterpret_cast<char*>(&a_) + sizeof(bb_));
}

TestReallyLargeTagNumber::~TestReallyLargeTagNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestReallyLargeTagNumber)
  SharedDtor();
}

void TestReallyLargeTagNumber::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestReallyLargeTagNumber::ArenaDtor(void* object) {
  TestReallyLargeTagNumber* _this = reinterpret_cast< TestReallyLargeTagNumber* >(object);
  (void)_this;
}
void TestReallyLargeTagNumber::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestReallyLargeTagNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestReallyLargeTagNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestReallyLargeTagNumber_descriptor_;
}

const TestReallyLargeTagNumber& TestReallyLargeTagNumber::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestReallyLargeTagNumber> TestReallyLargeTagNumber_default_instance_;

TestReallyLargeTagNumber* TestReallyLargeTagNumber::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestReallyLargeTagNumber>(arena);
}

void TestReallyLargeTagNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestReallyLargeTagNumber)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestReallyLargeTagNumber, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestReallyLargeTagNumber*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, bb_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestReallyLargeTagNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestReallyLargeTagNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2147483640);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2147483640)) goto parse_bb;
        break;
      }

      // optional int32 bb = 268435455;
      case 268435455: {
        if (tag == 2147483640) {
         parse_bb:
          set_has_bb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestReallyLargeTagNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestReallyLargeTagNumber)
  return false;
#undef DO_
}

void TestReallyLargeTagNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestReallyLargeTagNumber)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 bb = 268435455;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(268435455, this->bb(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestReallyLargeTagNumber)
}

::google::protobuf::uint8* TestReallyLargeTagNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestReallyLargeTagNumber)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 bb = 268435455;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(268435455, this->bb(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestReallyLargeTagNumber)
  return target;
}

size_t TestReallyLargeTagNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestReallyLargeTagNumber)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 bb = 268435455;
    if (has_bb()) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bb());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestReallyLargeTagNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestReallyLargeTagNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestReallyLargeTagNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestReallyLargeTagNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestReallyLargeTagNumber)
    UnsafeMergeFrom(*source);
  }
}

void TestReallyLargeTagNumber::MergeFrom(const TestReallyLargeTagNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestReallyLargeTagNumber::UnsafeMergeFrom(const TestReallyLargeTagNumber& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_bb()) {
      set_bb(from.bb());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestReallyLargeTagNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReallyLargeTagNumber::CopyFrom(const TestReallyLargeTagNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestReallyLargeTagNumber::IsInitialized() const {

  return true;
}

void TestReallyLargeTagNumber::Swap(TestReallyLargeTagNumber* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestReallyLargeTagNumber temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestReallyLargeTagNumber::UnsafeArenaSwap(TestReallyLargeTagNumber* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestReallyLargeTagNumber::InternalSwap(TestReallyLargeTagNumber* other) {
  std::swap(a_, other->a_);
  std::swap(bb_, other->bb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestReallyLargeTagNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestReallyLargeTagNumber_descriptor_;
  metadata.reflection = TestReallyLargeTagNumber_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestReallyLargeTagNumber

// optional int32 a = 1;
bool TestReallyLargeTagNumber::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestReallyLargeTagNumber::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestReallyLargeTagNumber::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestReallyLargeTagNumber::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestReallyLargeTagNumber::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestReallyLargeTagNumber.a)
  return a_;
}
void TestReallyLargeTagNumber::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestReallyLargeTagNumber.a)
}

// optional int32 bb = 268435455;
bool TestReallyLargeTagNumber::has_bb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestReallyLargeTagNumber::set_has_bb() {
  _has_bits_[0] |= 0x00000002u;
}
void TestReallyLargeTagNumber::clear_has_bb() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestReallyLargeTagNumber::clear_bb() {
  bb_ = 0;
  clear_has_bb();
}
::google::protobuf::int32 TestReallyLargeTagNumber::bb() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestReallyLargeTagNumber.bb)
  return bb_;
}
void TestReallyLargeTagNumber::set_bb(::google::protobuf::int32 value) {
  set_has_bb();
  bb_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestReallyLargeTagNumber.bb)
}

inline const TestReallyLargeTagNumber* TestReallyLargeTagNumber::internal_default_instance() {
  return &TestReallyLargeTagNumber_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestRecursiveMessage::_slow_mutable_a() {
  a_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRecursiveMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestRecursiveMessage* TestRecursiveMessage::_slow_release_a() {
  if (a_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestRecursiveMessage* temp = new ::protobuf_unittest::TestRecursiveMessage(*a_);
    a_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestRecursiveMessage* TestRecursiveMessage::unsafe_arena_release_a() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestRecursiveMessage.a)
  clear_has_a();
  ::protobuf_unittest::TestRecursiveMessage* temp = a_;
  a_ = NULL;
  return temp;
}
void TestRecursiveMessage::_slow_set_allocated_a(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestRecursiveMessage** a) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*a) == NULL) {
      message_arena->Own(*a);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*a)) {
      ::protobuf_unittest::TestRecursiveMessage* new_a = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRecursiveMessage >(
            message_arena);
      new_a->CopyFrom(**a);
      *a = new_a;
    }
}
void TestRecursiveMessage::unsafe_arena_set_allocated_a(
    ::protobuf_unittest::TestRecursiveMessage* a) {
  if (GetArenaNoVirtual() == NULL) {
    delete a_;
  }
  a_ = a;
  if (a) {
    set_has_a();
  } else {
    clear_has_a();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestRecursiveMessage.a)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRecursiveMessage::kAFieldNumber;
const int TestRecursiveMessage::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRecursiveMessage::TestRecursiveMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRecursiveMessage)
}
TestRecursiveMessage::TestRecursiveMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRecursiveMessage)
}

void TestRecursiveMessage::InitAsDefaultInstance() {
  a_ = const_cast< ::protobuf_unittest::TestRecursiveMessage*>(
      ::protobuf_unittest::TestRecursiveMessage::internal_default_instance());
}

TestRecursiveMessage::TestRecursiveMessage(const TestRecursiveMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRecursiveMessage)
}

void TestRecursiveMessage::SharedCtor() {
  _cached_size_ = 0;
  a_ = NULL;
  i_ = 0;
}

TestRecursiveMessage::~TestRecursiveMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRecursiveMessage)
  SharedDtor();
}

void TestRecursiveMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestRecursiveMessage_default_instance_.get()) {
    delete a_;
  }
}

void TestRecursiveMessage::ArenaDtor(void* object) {
  TestRecursiveMessage* _this = reinterpret_cast< TestRecursiveMessage* >(object);
  (void)_this;
}
void TestRecursiveMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRecursiveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRecursiveMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRecursiveMessage_descriptor_;
}

const TestRecursiveMessage& TestRecursiveMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRecursiveMessage> TestRecursiveMessage_default_instance_;

TestRecursiveMessage* TestRecursiveMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRecursiveMessage>(arena);
}

void TestRecursiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRecursiveMessage)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_a()) {
      if (a_ != NULL) a_->::protobuf_unittest::TestRecursiveMessage::Clear();
    }
    i_ = 0;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRecursiveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRecursiveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestRecursiveMessage a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_i;
        break;
      }

      // optional int32 i = 2;
      case 2: {
        if (tag == 16) {
         parse_i:
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRecursiveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRecursiveMessage)
  return false;
#undef DO_
}

void TestRecursiveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRecursiveMessage)
  // optional .protobuf_unittest.TestRecursiveMessage a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->a_, output);
  }

  // optional int32 i = 2;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->i(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRecursiveMessage)
}

::google::protobuf::uint8* TestRecursiveMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRecursiveMessage)
  // optional .protobuf_unittest.TestRecursiveMessage a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->a_, false, target);
  }

  // optional int32 i = 2;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->i(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRecursiveMessage)
  return target;
}

size_t TestRecursiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRecursiveMessage)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .protobuf_unittest.TestRecursiveMessage a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a_);
    }

    // optional int32 i = 2;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRecursiveMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRecursiveMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRecursiveMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRecursiveMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRecursiveMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRecursiveMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestRecursiveMessage::MergeFrom(const TestRecursiveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRecursiveMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRecursiveMessage::UnsafeMergeFrom(const TestRecursiveMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      mutable_a()->::protobuf_unittest::TestRecursiveMessage::MergeFrom(from.a());
    }
    if (from.has_i()) {
      set_i(from.i());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRecursiveMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRecursiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRecursiveMessage::CopyFrom(const TestRecursiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRecursiveMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRecursiveMessage::IsInitialized() const {

  return true;
}

void TestRecursiveMessage::Swap(TestRecursiveMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRecursiveMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRecursiveMessage::UnsafeArenaSwap(TestRecursiveMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRecursiveMessage::InternalSwap(TestRecursiveMessage* other) {
  std::swap(a_, other->a_);
  std::swap(i_, other->i_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRecursiveMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRecursiveMessage_descriptor_;
  metadata.reflection = TestRecursiveMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestRecursiveMessage

// optional .protobuf_unittest.TestRecursiveMessage a = 1;
bool TestRecursiveMessage::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestRecursiveMessage::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestRecursiveMessage::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestRecursiveMessage::clear_a() {
  if (a_ != NULL) a_->::protobuf_unittest::TestRecursiveMessage::Clear();
  clear_has_a();
}
const ::protobuf_unittest::TestRecursiveMessage& TestRecursiveMessage::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRecursiveMessage.a)
  return a_ != NULL ? *a_
                         : *::protobuf_unittest::TestRecursiveMessage::internal_default_instance();
}
::protobuf_unittest::TestRecursiveMessage* TestRecursiveMessage::mutable_a() {
  set_has_a();
  if (a_ == NULL) {
    _slow_mutable_a();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRecursiveMessage.a)
  return a_;
}
::protobuf_unittest::TestRecursiveMessage* TestRecursiveMessage::release_a() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestRecursiveMessage.a)
  clear_has_a();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_a();
  } else {
    ::protobuf_unittest::TestRecursiveMessage* temp = a_;
    a_ = NULL;
    return temp;
  }
}
 void TestRecursiveMessage::set_allocated_a(::protobuf_unittest::TestRecursiveMessage* a) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete a_;
  }
  if (a != NULL) {
    _slow_set_allocated_a(message_arena, &a);
  }
  a_ = a;
  if (a) {
    set_has_a();
  } else {
    clear_has_a();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRecursiveMessage.a)
}

// optional int32 i = 2;
bool TestRecursiveMessage::has_i() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestRecursiveMessage::set_has_i() {
  _has_bits_[0] |= 0x00000002u;
}
void TestRecursiveMessage::clear_has_i() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestRecursiveMessage::clear_i() {
  i_ = 0;
  clear_has_i();
}
::google::protobuf::int32 TestRecursiveMessage::i() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRecursiveMessage.i)
  return i_;
}
void TestRecursiveMessage::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRecursiveMessage.i)
}

inline const TestRecursiveMessage* TestRecursiveMessage::internal_default_instance() {
  return &TestRecursiveMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestMutualRecursionA::_slow_mutable_bb() {
  bb_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestMutualRecursionB >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestMutualRecursionB* TestMutualRecursionA::_slow_release_bb() {
  if (bb_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestMutualRecursionB* temp = new ::protobuf_unittest::TestMutualRecursionB(*bb_);
    bb_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestMutualRecursionB* TestMutualRecursionA::unsafe_arena_release_bb() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestMutualRecursionA.bb)
  clear_has_bb();
  ::protobuf_unittest::TestMutualRecursionB* temp = bb_;
  bb_ = NULL;
  return temp;
}
void TestMutualRecursionA::_slow_set_allocated_bb(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestMutualRecursionB** bb) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bb) == NULL) {
      message_arena->Own(*bb);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bb)) {
      ::protobuf_unittest::TestMutualRecursionB* new_bb = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestMutualRecursionB >(
            message_arena);
      new_bb->CopyFrom(**bb);
      *bb = new_bb;
    }
}
void TestMutualRecursionA::unsafe_arena_set_allocated_bb(
    ::protobuf_unittest::TestMutualRecursionB* bb) {
  if (GetArenaNoVirtual() == NULL) {
    delete bb_;
  }
  bb_ = bb;
  if (bb) {
    set_has_bb();
  } else {
    clear_has_bb();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMutualRecursionA.bb)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMutualRecursionA::kBbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMutualRecursionA::TestMutualRecursionA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMutualRecursionA)
}
TestMutualRecursionA::TestMutualRecursionA(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionA)
}

void TestMutualRecursionA::InitAsDefaultInstance() {
  bb_ = const_cast< ::protobuf_unittest::TestMutualRecursionB*>(
      ::protobuf_unittest::TestMutualRecursionB::internal_default_instance());
}

TestMutualRecursionA::TestMutualRecursionA(const TestMutualRecursionA& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA)
}

void TestMutualRecursionA::SharedCtor() {
  _cached_size_ = 0;
  bb_ = NULL;
}

TestMutualRecursionA::~TestMutualRecursionA() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA)
  SharedDtor();
}

void TestMutualRecursionA::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestMutualRecursionA_default_instance_.get()) {
    delete bb_;
  }
}

void TestMutualRecursionA::ArenaDtor(void* object) {
  TestMutualRecursionA* _this = reinterpret_cast< TestMutualRecursionA* >(object);
  (void)_this;
}
void TestMutualRecursionA::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestMutualRecursionA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMutualRecursionA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMutualRecursionA_descriptor_;
}

const TestMutualRecursionA& TestMutualRecursionA::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestMutualRecursionA> TestMutualRecursionA_default_instance_;

TestMutualRecursionA* TestMutualRecursionA::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestMutualRecursionA>(arena);
}

void TestMutualRecursionA::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionA)
  if (has_bb()) {
    if (bb_ != NULL) bb_->::protobuf_unittest::TestMutualRecursionB::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestMutualRecursionA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMutualRecursionA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMutualRecursionA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMutualRecursionA)
  return false;
#undef DO_
}

void TestMutualRecursionA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMutualRecursionA)
  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bb_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMutualRecursionA)
}

::google::protobuf::uint8* TestMutualRecursionA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA)
  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bb_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA)
  return target;
}

size_t TestMutualRecursionA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionA)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (has_bb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bb_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMutualRecursionA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMutualRecursionA)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestMutualRecursionA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMutualRecursionA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMutualRecursionA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMutualRecursionA)
    UnsafeMergeFrom(*source);
  }
}

void TestMutualRecursionA::MergeFrom(const TestMutualRecursionA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionA)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestMutualRecursionA::UnsafeMergeFrom(const TestMutualRecursionA& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bb()) {
      mutable_bb()->::protobuf_unittest::TestMutualRecursionB::MergeFrom(from.bb());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestMutualRecursionA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMutualRecursionA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMutualRecursionA::CopyFrom(const TestMutualRecursionA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionA)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestMutualRecursionA::IsInitialized() const {

  return true;
}

void TestMutualRecursionA::Swap(TestMutualRecursionA* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestMutualRecursionA temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestMutualRecursionA::UnsafeArenaSwap(TestMutualRecursionA* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestMutualRecursionA::InternalSwap(TestMutualRecursionA* other) {
  std::swap(bb_, other->bb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMutualRecursionA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMutualRecursionA_descriptor_;
  metadata.reflection = TestMutualRecursionA_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMutualRecursionA

// optional .protobuf_unittest.TestMutualRecursionB bb = 1;
bool TestMutualRecursionA::has_bb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestMutualRecursionA::set_has_bb() {
  _has_bits_[0] |= 0x00000001u;
}
void TestMutualRecursionA::clear_has_bb() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestMutualRecursionA::clear_bb() {
  if (bb_ != NULL) bb_->::protobuf_unittest::TestMutualRecursionB::Clear();
  clear_has_bb();
}
const ::protobuf_unittest::TestMutualRecursionB& TestMutualRecursionA::bb() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMutualRecursionA.bb)
  return bb_ != NULL ? *bb_
                         : *::protobuf_unittest::TestMutualRecursionB::internal_default_instance();
}
::protobuf_unittest::TestMutualRecursionB* TestMutualRecursionA::mutable_bb() {
  set_has_bb();
  if (bb_ == NULL) {
    _slow_mutable_bb();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMutualRecursionA.bb)
  return bb_;
}
::protobuf_unittest::TestMutualRecursionB* TestMutualRecursionA::release_bb() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMutualRecursionA.bb)
  clear_has_bb();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bb();
  } else {
    ::protobuf_unittest::TestMutualRecursionB* temp = bb_;
    bb_ = NULL;
    return temp;
  }
}
 void TestMutualRecursionA::set_allocated_bb(::protobuf_unittest::TestMutualRecursionB* bb) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bb_;
  }
  if (bb != NULL) {
    _slow_set_allocated_bb(message_arena, &bb);
  }
  bb_ = bb;
  if (bb) {
    set_has_bb();
  } else {
    clear_has_bb();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMutualRecursionA.bb)
}

inline const TestMutualRecursionA* TestMutualRecursionA::internal_default_instance() {
  return &TestMutualRecursionA_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestMutualRecursionB::_slow_mutable_a() {
  a_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestMutualRecursionA >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestMutualRecursionA* TestMutualRecursionB::_slow_release_a() {
  if (a_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestMutualRecursionA* temp = new ::protobuf_unittest::TestMutualRecursionA(*a_);
    a_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestMutualRecursionA* TestMutualRecursionB::unsafe_arena_release_a() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestMutualRecursionB.a)
  clear_has_a();
  ::protobuf_unittest::TestMutualRecursionA* temp = a_;
  a_ = NULL;
  return temp;
}
void TestMutualRecursionB::_slow_set_allocated_a(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestMutualRecursionA** a) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*a) == NULL) {
      message_arena->Own(*a);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*a)) {
      ::protobuf_unittest::TestMutualRecursionA* new_a = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestMutualRecursionA >(
            message_arena);
      new_a->CopyFrom(**a);
      *a = new_a;
    }
}
void TestMutualRecursionB::unsafe_arena_set_allocated_a(
    ::protobuf_unittest::TestMutualRecursionA* a) {
  if (GetArenaNoVirtual() == NULL) {
    delete a_;
  }
  a_ = a;
  if (a) {
    set_has_a();
  } else {
    clear_has_a();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMutualRecursionB.a)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMutualRecursionB::kAFieldNumber;
const int TestMutualRecursionB::kOptionalInt32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMutualRecursionB::TestMutualRecursionB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMutualRecursionB)
}
TestMutualRecursionB::TestMutualRecursionB(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionB)
}

void TestMutualRecursionB::InitAsDefaultInstance() {
  a_ = const_cast< ::protobuf_unittest::TestMutualRecursionA*>(
      ::protobuf_unittest::TestMutualRecursionA::internal_default_instance());
}

TestMutualRecursionB::TestMutualRecursionB(const TestMutualRecursionB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionB)
}

void TestMutualRecursionB::SharedCtor() {
  _cached_size_ = 0;
  a_ = NULL;
  optional_int32_ = 0;
}

TestMutualRecursionB::~TestMutualRecursionB() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionB)
  SharedDtor();
}

void TestMutualRecursionB::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestMutualRecursionB_default_instance_.get()) {
    delete a_;
  }
}

void TestMutualRecursionB::ArenaDtor(void* object) {
  TestMutualRecursionB* _this = reinterpret_cast< TestMutualRecursionB* >(object);
  (void)_this;
}
void TestMutualRecursionB::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestMutualRecursionB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMutualRecursionB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMutualRecursionB_descriptor_;
}

const TestMutualRecursionB& TestMutualRecursionB::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestMutualRecursionB> TestMutualRecursionB_default_instance_;

TestMutualRecursionB* TestMutualRecursionB::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestMutualRecursionB>(arena);
}

void TestMutualRecursionB::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionB)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_a()) {
      if (a_ != NULL) a_->::protobuf_unittest::TestMutualRecursionA::Clear();
    }
    optional_int32_ = 0;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestMutualRecursionB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMutualRecursionB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMutualRecursionA a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optional_int32;
        break;
      }

      // optional int32 optional_int32 = 2;
      case 2: {
        if (tag == 16) {
         parse_optional_int32:
          set_has_optional_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMutualRecursionB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMutualRecursionB)
  return false;
#undef DO_
}

void TestMutualRecursionB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMutualRecursionB)
  // optional .protobuf_unittest.TestMutualRecursionA a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->a_, output);
  }

  // optional int32 optional_int32 = 2;
  if (has_optional_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->optional_int32(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMutualRecursionB)
}

::google::protobuf::uint8* TestMutualRecursionB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionB)
  // optional .protobuf_unittest.TestMutualRecursionA a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->a_, false, target);
  }

  // optional int32 optional_int32 = 2;
  if (has_optional_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->optional_int32(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionB)
  return target;
}

size_t TestMutualRecursionB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionB)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .protobuf_unittest.TestMutualRecursionA a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a_);
    }

    // optional int32 optional_int32 = 2;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMutualRecursionB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMutualRecursionB)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestMutualRecursionB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMutualRecursionB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMutualRecursionB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMutualRecursionB)
    UnsafeMergeFrom(*source);
  }
}

void TestMutualRecursionB::MergeFrom(const TestMutualRecursionB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionB)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestMutualRecursionB::UnsafeMergeFrom(const TestMutualRecursionB& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      mutable_a()->::protobuf_unittest::TestMutualRecursionA::MergeFrom(from.a());
    }
    if (from.has_optional_int32()) {
      set_optional_int32(from.optional_int32());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestMutualRecursionB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMutualRecursionB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMutualRecursionB::CopyFrom(const TestMutualRecursionB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionB)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestMutualRecursionB::IsInitialized() const {

  return true;
}

void TestMutualRecursionB::Swap(TestMutualRecursionB* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestMutualRecursionB temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestMutualRecursionB::UnsafeArenaSwap(TestMutualRecursionB* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestMutualRecursionB::InternalSwap(TestMutualRecursionB* other) {
  std::swap(a_, other->a_);
  std::swap(optional_int32_, other->optional_int32_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMutualRecursionB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMutualRecursionB_descriptor_;
  metadata.reflection = TestMutualRecursionB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMutualRecursionB

// optional .protobuf_unittest.TestMutualRecursionA a = 1;
bool TestMutualRecursionB::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestMutualRecursionB::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestMutualRecursionB::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestMutualRecursionB::clear_a() {
  if (a_ != NULL) a_->::protobuf_unittest::TestMutualRecursionA::Clear();
  clear_has_a();
}
const ::protobuf_unittest::TestMutualRecursionA& TestMutualRecursionB::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMutualRecursionB.a)
  return a_ != NULL ? *a_
                         : *::protobuf_unittest::TestMutualRecursionA::internal_default_instance();
}
::protobuf_unittest::TestMutualRecursionA* TestMutualRecursionB::mutable_a() {
  set_has_a();
  if (a_ == NULL) {
    _slow_mutable_a();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMutualRecursionB.a)
  return a_;
}
::protobuf_unittest::TestMutualRecursionA* TestMutualRecursionB::release_a() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMutualRecursionB.a)
  clear_has_a();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_a();
  } else {
    ::protobuf_unittest::TestMutualRecursionA* temp = a_;
    a_ = NULL;
    return temp;
  }
}
 void TestMutualRecursionB::set_allocated_a(::protobuf_unittest::TestMutualRecursionA* a) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete a_;
  }
  if (a != NULL) {
    _slow_set_allocated_a(message_arena, &a);
  }
  a_ = a;
  if (a) {
    set_has_a();
  } else {
    clear_has_a();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMutualRecursionB.a)
}

// optional int32 optional_int32 = 2;
bool TestMutualRecursionB::has_optional_int32() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestMutualRecursionB::set_has_optional_int32() {
  _has_bits_[0] |= 0x00000002u;
}
void TestMutualRecursionB::clear_has_optional_int32() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestMutualRecursionB::clear_optional_int32() {
  optional_int32_ = 0;
  clear_has_optional_int32();
}
::google::protobuf::int32 TestMutualRecursionB::optional_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMutualRecursionB.optional_int32)
  return optional_int32_;
}
void TestMutualRecursionB::set_optional_int32(::google::protobuf::int32 value) {
  set_has_optional_int32();
  optional_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMutualRecursionB.optional_int32)
}

inline const TestMutualRecursionB* TestMutualRecursionB::internal_default_instance() {
  return &TestMutualRecursionB_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDupFieldNumber_Foo::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDupFieldNumber_Foo::TestDupFieldNumber_Foo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}
TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}

void TestDupFieldNumber_Foo::InitAsDefaultInstance() {
}

TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(const TestDupFieldNumber_Foo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}

void TestDupFieldNumber_Foo::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

TestDupFieldNumber_Foo::~TestDupFieldNumber_Foo() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Foo)
  SharedDtor();
}

void TestDupFieldNumber_Foo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestDupFieldNumber_Foo::ArenaDtor(void* object) {
  TestDupFieldNumber_Foo* _this = reinterpret_cast< TestDupFieldNumber_Foo* >(object);
  (void)_this;
}
void TestDupFieldNumber_Foo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDupFieldNumber_Foo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber_Foo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_Foo_descriptor_;
}

const TestDupFieldNumber_Foo& TestDupFieldNumber_Foo::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDupFieldNumber_Foo> TestDupFieldNumber_Foo_default_instance_;

TestDupFieldNumber_Foo* TestDupFieldNumber_Foo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDupFieldNumber_Foo>(arena);
}

void TestDupFieldNumber_Foo::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber.Foo)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDupFieldNumber_Foo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber.Foo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber.Foo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber.Foo)
  return false;
#undef DO_
}

void TestDupFieldNumber_Foo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber.Foo)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber.Foo)
}

::google::protobuf::uint8* TestDupFieldNumber_Foo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Foo)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Foo)
  return target;
}

size_t TestDupFieldNumber_Foo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber.Foo)
  size_t total_size = 0;

  // optional int32 a = 1;
  if (has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber_Foo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDupFieldNumber_Foo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDupFieldNumber_Foo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDupFieldNumber.Foo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDupFieldNumber.Foo)
    UnsafeMergeFrom(*source);
  }
}

void TestDupFieldNumber_Foo::MergeFrom(const TestDupFieldNumber_Foo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDupFieldNumber_Foo::UnsafeMergeFrom(const TestDupFieldNumber_Foo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDupFieldNumber_Foo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber_Foo::CopyFrom(const TestDupFieldNumber_Foo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDupFieldNumber_Foo::IsInitialized() const {

  return true;
}

void TestDupFieldNumber_Foo::Swap(TestDupFieldNumber_Foo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDupFieldNumber_Foo temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDupFieldNumber_Foo::UnsafeArenaSwap(TestDupFieldNumber_Foo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDupFieldNumber_Foo::InternalSwap(TestDupFieldNumber_Foo* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDupFieldNumber_Foo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_Foo_descriptor_;
  metadata.reflection = TestDupFieldNumber_Foo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDupFieldNumber_Bar::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDupFieldNumber_Bar::TestDupFieldNumber_Bar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}
TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}

void TestDupFieldNumber_Bar::InitAsDefaultInstance() {
}

TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(const TestDupFieldNumber_Bar& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}

void TestDupFieldNumber_Bar::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
}

TestDupFieldNumber_Bar::~TestDupFieldNumber_Bar() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Bar)
  SharedDtor();
}

void TestDupFieldNumber_Bar::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestDupFieldNumber_Bar::ArenaDtor(void* object) {
  TestDupFieldNumber_Bar* _this = reinterpret_cast< TestDupFieldNumber_Bar* >(object);
  (void)_this;
}
void TestDupFieldNumber_Bar::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDupFieldNumber_Bar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber_Bar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_Bar_descriptor_;
}

const TestDupFieldNumber_Bar& TestDupFieldNumber_Bar::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDupFieldNumber_Bar> TestDupFieldNumber_Bar_default_instance_;

TestDupFieldNumber_Bar* TestDupFieldNumber_Bar::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDupFieldNumber_Bar>(arena);
}

void TestDupFieldNumber_Bar::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber.Bar)
  a_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDupFieldNumber_Bar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber.Bar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber.Bar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber.Bar)
  return false;
#undef DO_
}

void TestDupFieldNumber_Bar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber.Bar)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber.Bar)
}

::google::protobuf::uint8* TestDupFieldNumber_Bar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Bar)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Bar)
  return target;
}

size_t TestDupFieldNumber_Bar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber.Bar)
  size_t total_size = 0;

  // optional int32 a = 1;
  if (has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber_Bar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDupFieldNumber_Bar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDupFieldNumber_Bar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDupFieldNumber.Bar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDupFieldNumber.Bar)
    UnsafeMergeFrom(*source);
  }
}

void TestDupFieldNumber_Bar::MergeFrom(const TestDupFieldNumber_Bar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDupFieldNumber_Bar::UnsafeMergeFrom(const TestDupFieldNumber_Bar& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDupFieldNumber_Bar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber_Bar::CopyFrom(const TestDupFieldNumber_Bar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDupFieldNumber_Bar::IsInitialized() const {

  return true;
}

void TestDupFieldNumber_Bar::Swap(TestDupFieldNumber_Bar* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDupFieldNumber_Bar temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDupFieldNumber_Bar::UnsafeArenaSwap(TestDupFieldNumber_Bar* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDupFieldNumber_Bar::InternalSwap(TestDupFieldNumber_Bar* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDupFieldNumber_Bar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_Bar_descriptor_;
  metadata.reflection = TestDupFieldNumber_Bar_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestDupFieldNumber::_slow_mutable_foo() {
  foo_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDupFieldNumber_Foo >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::_slow_release_foo() {
  if (foo_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestDupFieldNumber_Foo* temp = new ::protobuf_unittest::TestDupFieldNumber_Foo(*foo_);
    foo_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::unsafe_arena_release_foo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestDupFieldNumber.foo)
  clear_has_foo();
  ::protobuf_unittest::TestDupFieldNumber_Foo* temp = foo_;
  foo_ = NULL;
  return temp;
}
void TestDupFieldNumber::_slow_set_allocated_foo(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestDupFieldNumber_Foo** foo) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*foo) == NULL) {
      message_arena->Own(*foo);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*foo)) {
      ::protobuf_unittest::TestDupFieldNumber_Foo* new_foo = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDupFieldNumber_Foo >(
            message_arena);
      new_foo->CopyFrom(**foo);
      *foo = new_foo;
    }
}
void TestDupFieldNumber::unsafe_arena_set_allocated_foo(
    ::protobuf_unittest::TestDupFieldNumber_Foo* foo) {
  if (GetArenaNoVirtual() == NULL) {
    delete foo_;
  }
  foo_ = foo;
  if (foo) {
    set_has_foo();
  } else {
    clear_has_foo();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDupFieldNumber.foo)
}
void TestDupFieldNumber::_slow_mutable_bar() {
  bar_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDupFieldNumber_Bar >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::_slow_release_bar() {
  if (bar_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestDupFieldNumber_Bar* temp = new ::protobuf_unittest::TestDupFieldNumber_Bar(*bar_);
    bar_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::unsafe_arena_release_bar() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestDupFieldNumber.bar)
  clear_has_bar();
  ::protobuf_unittest::TestDupFieldNumber_Bar* temp = bar_;
  bar_ = NULL;
  return temp;
}
void TestDupFieldNumber::_slow_set_allocated_bar(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestDupFieldNumber_Bar** bar) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bar) == NULL) {
      message_arena->Own(*bar);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bar)) {
      ::protobuf_unittest::TestDupFieldNumber_Bar* new_bar = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDupFieldNumber_Bar >(
            message_arena);
      new_bar->CopyFrom(**bar);
      *bar = new_bar;
    }
}
void TestDupFieldNumber::unsafe_arena_set_allocated_bar(
    ::protobuf_unittest::TestDupFieldNumber_Bar* bar) {
  if (GetArenaNoVirtual() == NULL) {
    delete bar_;
  }
  bar_ = bar;
  if (bar) {
    set_has_bar();
  } else {
    clear_has_bar();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDupFieldNumber.bar)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDupFieldNumber::kAFieldNumber;
const int TestDupFieldNumber::kFooFieldNumber;
const int TestDupFieldNumber::kBarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDupFieldNumber::TestDupFieldNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber)
}
TestDupFieldNumber::TestDupFieldNumber(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber)
}

void TestDupFieldNumber::InitAsDefaultInstance() {
  foo_ = const_cast< ::protobuf_unittest::TestDupFieldNumber_Foo*>(
      ::protobuf_unittest::TestDupFieldNumber_Foo::internal_default_instance());
  bar_ = const_cast< ::protobuf_unittest::TestDupFieldNumber_Bar*>(
      ::protobuf_unittest::TestDupFieldNumber_Bar::internal_default_instance());
}

TestDupFieldNumber::TestDupFieldNumber(const TestDupFieldNumber& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber)
}

void TestDupFieldNumber::SharedCtor() {
  _cached_size_ = 0;
  foo_ = NULL;
  bar_ = NULL;
  a_ = 0;
}

TestDupFieldNumber::~TestDupFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber)
  SharedDtor();
}

void TestDupFieldNumber::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestDupFieldNumber_default_instance_.get()) {
    delete foo_;
    delete bar_;
  }
}

void TestDupFieldNumber::ArenaDtor(void* object) {
  TestDupFieldNumber* _this = reinterpret_cast< TestDupFieldNumber* >(object);
  (void)_this;
}
void TestDupFieldNumber::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDupFieldNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_descriptor_;
}

const TestDupFieldNumber& TestDupFieldNumber::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDupFieldNumber> TestDupFieldNumber_default_instance_;

TestDupFieldNumber* TestDupFieldNumber::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDupFieldNumber>(arena);
}

void TestDupFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber)
  if (_has_bits_[0 / 32] & 7u) {
    a_ = 0;
    if (has_foo()) {
      if (foo_ != NULL) foo_->::protobuf_unittest::TestDupFieldNumber_Foo::Clear();
    }
    if (has_bar()) {
      if (bar_ != NULL) bar_->::protobuf_unittest::TestDupFieldNumber_Bar::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDupFieldNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(19)) goto parse_foo;
        break;
      }

      // optional group Foo = 2 { ... };
      case 2: {
        if (tag == 19) {
         parse_foo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                2, input, mutable_foo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(27)) goto parse_bar;
        break;
      }

      // optional group Bar = 3 { ... };
      case 3: {
        if (tag == 27) {
         parse_bar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                3, input, mutable_bar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber)
  return false;
#undef DO_
}

void TestDupFieldNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional group Foo = 2 { ... };
  if (has_foo()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      2, *this->foo_, output);
  }

  // optional group Bar = 3 { ... };
  if (has_bar()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      3, *this->bar_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber)
}

::google::protobuf::uint8* TestDupFieldNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional group Foo = 2 { ... };
  if (has_foo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        2, *this->foo_, false, target);
  }

  // optional group Bar = 3 { ... };
  if (has_bar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        3, *this->bar_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber)
  return target;
}

size_t TestDupFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional group Foo = 2 { ... };
    if (has_foo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->foo_);
    }

    // optional group Bar = 3 { ... };
    if (has_bar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->bar_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDupFieldNumber)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDupFieldNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDupFieldNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDupFieldNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDupFieldNumber)
    UnsafeMergeFrom(*source);
  }
}

void TestDupFieldNumber::MergeFrom(const TestDupFieldNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDupFieldNumber::UnsafeMergeFrom(const TestDupFieldNumber& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_foo()) {
      mutable_foo()->::protobuf_unittest::TestDupFieldNumber_Foo::MergeFrom(from.foo());
    }
    if (from.has_bar()) {
      mutable_bar()->::protobuf_unittest::TestDupFieldNumber_Bar::MergeFrom(from.bar());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDupFieldNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDupFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber::CopyFrom(const TestDupFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDupFieldNumber::IsInitialized() const {

  return true;
}

void TestDupFieldNumber::Swap(TestDupFieldNumber* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDupFieldNumber temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDupFieldNumber::UnsafeArenaSwap(TestDupFieldNumber* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDupFieldNumber::InternalSwap(TestDupFieldNumber* other) {
  std::swap(a_, other->a_);
  std::swap(foo_, other->foo_);
  std::swap(bar_, other->bar_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDupFieldNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_descriptor_;
  metadata.reflection = TestDupFieldNumber_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestDupFieldNumber_Foo

// optional int32 a = 1;
bool TestDupFieldNumber_Foo::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDupFieldNumber_Foo::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDupFieldNumber_Foo::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDupFieldNumber_Foo::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestDupFieldNumber_Foo::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDupFieldNumber.Foo.a)
  return a_;
}
void TestDupFieldNumber_Foo::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDupFieldNumber.Foo.a)
}

inline const TestDupFieldNumber_Foo* TestDupFieldNumber_Foo::internal_default_instance() {
  return &TestDupFieldNumber_Foo_default_instance_.get();
}
// -------------------------------------------------------------------

// TestDupFieldNumber_Bar

// optional int32 a = 1;
bool TestDupFieldNumber_Bar::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDupFieldNumber_Bar::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDupFieldNumber_Bar::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDupFieldNumber_Bar::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestDupFieldNumber_Bar::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDupFieldNumber.Bar.a)
  return a_;
}
void TestDupFieldNumber_Bar::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDupFieldNumber.Bar.a)
}

inline const TestDupFieldNumber_Bar* TestDupFieldNumber_Bar::internal_default_instance() {
  return &TestDupFieldNumber_Bar_default_instance_.get();
}
// -------------------------------------------------------------------

// TestDupFieldNumber

// optional int32 a = 1;
bool TestDupFieldNumber::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDupFieldNumber::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDupFieldNumber::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDupFieldNumber::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestDupFieldNumber::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDupFieldNumber.a)
  return a_;
}
void TestDupFieldNumber::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDupFieldNumber.a)
}

// optional group Foo = 2 { ... };
bool TestDupFieldNumber::has_foo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestDupFieldNumber::set_has_foo() {
  _has_bits_[0] |= 0x00000002u;
}
void TestDupFieldNumber::clear_has_foo() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestDupFieldNumber::clear_foo() {
  if (foo_ != NULL) foo_->::protobuf_unittest::TestDupFieldNumber_Foo::Clear();
  clear_has_foo();
}
const ::protobuf_unittest::TestDupFieldNumber_Foo& TestDupFieldNumber::foo() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDupFieldNumber.foo)
  return foo_ != NULL ? *foo_
                         : *::protobuf_unittest::TestDupFieldNumber_Foo::internal_default_instance();
}
::protobuf_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::mutable_foo() {
  set_has_foo();
  if (foo_ == NULL) {
    _slow_mutable_foo();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDupFieldNumber.foo)
  return foo_;
}
::protobuf_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::release_foo() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDupFieldNumber.foo)
  clear_has_foo();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_foo();
  } else {
    ::protobuf_unittest::TestDupFieldNumber_Foo* temp = foo_;
    foo_ = NULL;
    return temp;
  }
}
 void TestDupFieldNumber::set_allocated_foo(::protobuf_unittest::TestDupFieldNumber_Foo* foo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete foo_;
  }
  if (foo != NULL) {
    _slow_set_allocated_foo(message_arena, &foo);
  }
  foo_ = foo;
  if (foo) {
    set_has_foo();
  } else {
    clear_has_foo();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDupFieldNumber.foo)
}

// optional group Bar = 3 { ... };
bool TestDupFieldNumber::has_bar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestDupFieldNumber::set_has_bar() {
  _has_bits_[0] |= 0x00000004u;
}
void TestDupFieldNumber::clear_has_bar() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestDupFieldNumber::clear_bar() {
  if (bar_ != NULL) bar_->::protobuf_unittest::TestDupFieldNumber_Bar::Clear();
  clear_has_bar();
}
const ::protobuf_unittest::TestDupFieldNumber_Bar& TestDupFieldNumber::bar() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDupFieldNumber.bar)
  return bar_ != NULL ? *bar_
                         : *::protobuf_unittest::TestDupFieldNumber_Bar::internal_default_instance();
}
::protobuf_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::mutable_bar() {
  set_has_bar();
  if (bar_ == NULL) {
    _slow_mutable_bar();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDupFieldNumber.bar)
  return bar_;
}
::protobuf_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::release_bar() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDupFieldNumber.bar)
  clear_has_bar();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bar();
  } else {
    ::protobuf_unittest::TestDupFieldNumber_Bar* temp = bar_;
    bar_ = NULL;
    return temp;
  }
}
 void TestDupFieldNumber::set_allocated_bar(::protobuf_unittest::TestDupFieldNumber_Bar* bar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bar_;
  }
  if (bar != NULL) {
    _slow_set_allocated_bar(message_arena, &bar);
  }
  bar_ = bar;
  if (bar) {
    set_has_bar();
  } else {
    clear_has_bar();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDupFieldNumber.bar)
}

inline const TestDupFieldNumber* TestDupFieldNumber::internal_default_instance() {
  return &TestDupFieldNumber_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestEagerMessage::_slow_mutable_sub_message() {
  sub_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestEagerMessage::_slow_release_sub_message() {
  if (sub_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*sub_message_);
    sub_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestEagerMessage::unsafe_arena_release_sub_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestEagerMessage.sub_message)
  clear_has_sub_message();
  ::protobuf_unittest::TestAllTypes* temp = sub_message_;
  sub_message_ = NULL;
  return temp;
}
void TestEagerMessage::_slow_set_allocated_sub_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** sub_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*sub_message) == NULL) {
      message_arena->Own(*sub_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*sub_message)) {
      ::protobuf_unittest::TestAllTypes* new_sub_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_sub_message->CopyFrom(**sub_message);
      *sub_message = new_sub_message;
    }
}
void TestEagerMessage::unsafe_arena_set_allocated_sub_message(
    ::protobuf_unittest::TestAllTypes* sub_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete sub_message_;
  }
  sub_message_ = sub_message;
  if (sub_message) {
    set_has_sub_message();
  } else {
    clear_has_sub_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestEagerMessage.sub_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestEagerMessage::kSubMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEagerMessage::TestEagerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEagerMessage)
}
TestEagerMessage::TestEagerMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEagerMessage)
}

void TestEagerMessage::InitAsDefaultInstance() {
  sub_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestEagerMessage::TestEagerMessage(const TestEagerMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEagerMessage)
}

void TestEagerMessage::SharedCtor() {
  _cached_size_ = 0;
  sub_message_ = NULL;
}

TestEagerMessage::~TestEagerMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEagerMessage)
  SharedDtor();
}

void TestEagerMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestEagerMessage_default_instance_.get()) {
    delete sub_message_;
  }
}

void TestEagerMessage::ArenaDtor(void* object) {
  TestEagerMessage* _this = reinterpret_cast< TestEagerMessage* >(object);
  (void)_this;
}
void TestEagerMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestEagerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEagerMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEagerMessage_descriptor_;
}

const TestEagerMessage& TestEagerMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestEagerMessage> TestEagerMessage_default_instance_;

TestEagerMessage* TestEagerMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestEagerMessage>(arena);
}

void TestEagerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEagerMessage)
  if (has_sub_message()) {
    if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestEagerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEagerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEagerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEagerMessage)
  return false;
#undef DO_
}

void TestEagerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEagerMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (has_sub_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sub_message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEagerMessage)
}

::google::protobuf::uint8* TestEagerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEagerMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (has_sub_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->sub_message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEagerMessage)
  return target;
}

size_t TestEagerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEagerMessage)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (has_sub_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sub_message_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEagerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestEagerMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestEagerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestEagerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestEagerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestEagerMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestEagerMessage::MergeFrom(const TestEagerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEagerMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestEagerMessage::UnsafeMergeFrom(const TestEagerMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_message()) {
      mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.sub_message());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestEagerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestEagerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEagerMessage::CopyFrom(const TestEagerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEagerMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestEagerMessage::IsInitialized() const {

  return true;
}

void TestEagerMessage::Swap(TestEagerMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestEagerMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestEagerMessage::UnsafeArenaSwap(TestEagerMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestEagerMessage::InternalSwap(TestEagerMessage* other) {
  std::swap(sub_message_, other->sub_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestEagerMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEagerMessage_descriptor_;
  metadata.reflection = TestEagerMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEagerMessage

// optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
bool TestEagerMessage::has_sub_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestEagerMessage::set_has_sub_message() {
  _has_bits_[0] |= 0x00000001u;
}
void TestEagerMessage::clear_has_sub_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestEagerMessage::clear_sub_message() {
  if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_sub_message();
}
const ::protobuf_unittest::TestAllTypes& TestEagerMessage::sub_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestEagerMessage.sub_message)
  return sub_message_ != NULL ? *sub_message_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestEagerMessage::mutable_sub_message() {
  set_has_sub_message();
  if (sub_message_ == NULL) {
    _slow_mutable_sub_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestEagerMessage.sub_message)
  return sub_message_;
}
::protobuf_unittest::TestAllTypes* TestEagerMessage::release_sub_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestEagerMessage.sub_message)
  clear_has_sub_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_sub_message();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = sub_message_;
    sub_message_ = NULL;
    return temp;
  }
}
 void TestEagerMessage::set_allocated_sub_message(::protobuf_unittest::TestAllTypes* sub_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sub_message_;
  }
  if (sub_message != NULL) {
    _slow_set_allocated_sub_message(message_arena, &sub_message);
  }
  sub_message_ = sub_message;
  if (sub_message) {
    set_has_sub_message();
  } else {
    clear_has_sub_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestEagerMessage.sub_message)
}

inline const TestEagerMessage* TestEagerMessage::internal_default_instance() {
  return &TestEagerMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestLazyMessage::_slow_mutable_sub_message() {
  sub_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestLazyMessage::_slow_release_sub_message() {
  if (sub_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*sub_message_);
    sub_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestLazyMessage::unsafe_arena_release_sub_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestLazyMessage.sub_message)
  clear_has_sub_message();
  ::protobuf_unittest::TestAllTypes* temp = sub_message_;
  sub_message_ = NULL;
  return temp;
}
void TestLazyMessage::_slow_set_allocated_sub_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** sub_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*sub_message) == NULL) {
      message_arena->Own(*sub_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*sub_message)) {
      ::protobuf_unittest::TestAllTypes* new_sub_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_sub_message->CopyFrom(**sub_message);
      *sub_message = new_sub_message;
    }
}
void TestLazyMessage::unsafe_arena_set_allocated_sub_message(
    ::protobuf_unittest::TestAllTypes* sub_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete sub_message_;
  }
  sub_message_ = sub_message;
  if (sub_message) {
    set_has_sub_message();
  } else {
    clear_has_sub_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestLazyMessage.sub_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestLazyMessage::kSubMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestLazyMessage::TestLazyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestLazyMessage)
}
TestLazyMessage::TestLazyMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestLazyMessage)
}

void TestLazyMessage::InitAsDefaultInstance() {
  sub_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestLazyMessage::TestLazyMessage(const TestLazyMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestLazyMessage)
}

void TestLazyMessage::SharedCtor() {
  _cached_size_ = 0;
  sub_message_ = NULL;
}

TestLazyMessage::~TestLazyMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestLazyMessage)
  SharedDtor();
}

void TestLazyMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestLazyMessage_default_instance_.get()) {
    delete sub_message_;
  }
}

void TestLazyMessage::ArenaDtor(void* object) {
  TestLazyMessage* _this = reinterpret_cast< TestLazyMessage* >(object);
  (void)_this;
}
void TestLazyMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestLazyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestLazyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestLazyMessage_descriptor_;
}

const TestLazyMessage& TestLazyMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestLazyMessage> TestLazyMessage_default_instance_;

TestLazyMessage* TestLazyMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestLazyMessage>(arena);
}

void TestLazyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestLazyMessage)
  if (has_sub_message()) {
    if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestLazyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestLazyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestLazyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestLazyMessage)
  return false;
#undef DO_
}

void TestLazyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestLazyMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (has_sub_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sub_message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestLazyMessage)
}

::google::protobuf::uint8* TestLazyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestLazyMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (has_sub_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->sub_message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestLazyMessage)
  return target;
}

size_t TestLazyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestLazyMessage)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (has_sub_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sub_message_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestLazyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestLazyMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestLazyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestLazyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestLazyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestLazyMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestLazyMessage::MergeFrom(const TestLazyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestLazyMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestLazyMessage::UnsafeMergeFrom(const TestLazyMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_message()) {
      mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.sub_message());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestLazyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestLazyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestLazyMessage::CopyFrom(const TestLazyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestLazyMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestLazyMessage::IsInitialized() const {

  return true;
}

void TestLazyMessage::Swap(TestLazyMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestLazyMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestLazyMessage::UnsafeArenaSwap(TestLazyMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestLazyMessage::InternalSwap(TestLazyMessage* other) {
  std::swap(sub_message_, other->sub_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestLazyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestLazyMessage_descriptor_;
  metadata.reflection = TestLazyMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestLazyMessage

// optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
bool TestLazyMessage::has_sub_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestLazyMessage::set_has_sub_message() {
  _has_bits_[0] |= 0x00000001u;
}
void TestLazyMessage::clear_has_sub_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestLazyMessage::clear_sub_message() {
  if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_sub_message();
}
const ::protobuf_unittest::TestAllTypes& TestLazyMessage::sub_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestLazyMessage.sub_message)
  return sub_message_ != NULL ? *sub_message_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestLazyMessage::mutable_sub_message() {
  set_has_sub_message();
  if (sub_message_ == NULL) {
    _slow_mutable_sub_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestLazyMessage.sub_message)
  return sub_message_;
}
::protobuf_unittest::TestAllTypes* TestLazyMessage::release_sub_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestLazyMessage.sub_message)
  clear_has_sub_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_sub_message();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = sub_message_;
    sub_message_ = NULL;
    return temp;
  }
}
 void TestLazyMessage::set_allocated_sub_message(::protobuf_unittest::TestAllTypes* sub_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sub_message_;
  }
  if (sub_message != NULL) {
    _slow_set_allocated_sub_message(message_arena, &sub_message);
  }
  sub_message_ = sub_message;
  if (sub_message) {
    set_has_sub_message();
  } else {
    clear_has_sub_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestLazyMessage.sub_message)
}

inline const TestLazyMessage* TestLazyMessage::internal_default_instance() {
  return &TestLazyMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedMessageHasBits_NestedMessage::kNestedmessageRepeatedInt32FieldNumber;
const int TestNestedMessageHasBits_NestedMessage::kNestedmessageRepeatedForeignmessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}
TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  nestedmessage_repeated_int32_(arena),
  nestedmessage_repeated_foreignmessage_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

void TestNestedMessageHasBits_NestedMessage::InitAsDefaultInstance() {
}

TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(const TestNestedMessageHasBits_NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

void TestNestedMessageHasBits_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
}

TestNestedMessageHasBits_NestedMessage::~TestNestedMessageHasBits_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  SharedDtor();
}

void TestNestedMessageHasBits_NestedMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestNestedMessageHasBits_NestedMessage::ArenaDtor(void* object) {
  TestNestedMessageHasBits_NestedMessage* _this = reinterpret_cast< TestNestedMessageHasBits_NestedMessage* >(object);
  (void)_this;
}
void TestNestedMessageHasBits_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestNestedMessageHasBits_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedMessageHasBits_NestedMessage_descriptor_;
}

const TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestNestedMessageHasBits_NestedMessage> TestNestedMessageHasBits_NestedMessage_default_instance_;

TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits_NestedMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestNestedMessageHasBits_NestedMessage>(arena);
}

void TestNestedMessageHasBits_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  nestedmessage_repeated_int32_.Clear();
  nestedmessage_repeated_foreignmessage_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestNestedMessageHasBits_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 nestedmessage_repeated_int32 = 1;
      case 1: {
        if (tag == 8) {
         parse_nestedmessage_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_nestedmessage_repeated_int32())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nestedmessage_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_nestedmessage_repeated_int32;
        if (input->ExpectTag(18)) goto parse_nestedmessage_repeated_foreignmessage;
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
      case 2: {
        if (tag == 18) {
         parse_nestedmessage_repeated_foreignmessage:
          DO_(input->IncrementRecursionDepth());
         parse_loop_nestedmessage_repeated_foreignmessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nestedmessage_repeated_foreignmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_nestedmessage_repeated_foreignmessage;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return false;
#undef DO_
}

void TestNestedMessageHasBits_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  // repeated int32 nestedmessage_repeated_int32 = 1;
  for (int i = 0; i < this->nestedmessage_repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->nestedmessage_repeated_int32(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  for (unsigned int i = 0, n = this->nestedmessage_repeated_foreignmessage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nestedmessage_repeated_foreignmessage(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

::google::protobuf::uint8* TestNestedMessageHasBits_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  // repeated int32 nestedmessage_repeated_int32 = 1;
  for (int i = 0; i < this->nestedmessage_repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->nestedmessage_repeated_int32(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  for (unsigned int i = 0, n = this->nestedmessage_repeated_foreignmessage_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->nestedmessage_repeated_foreignmessage(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return target;
}

size_t TestNestedMessageHasBits_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  size_t total_size = 0;

  // repeated int32 nestedmessage_repeated_int32 = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->nestedmessage_repeated_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->nestedmessage_repeated_int32(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->nestedmessage_repeated_int32_size());
    total_size += data_size;
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  {
    unsigned int count = this->nestedmessage_repeated_foreignmessage_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nestedmessage_repeated_foreignmessage(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessageHasBits_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestNestedMessageHasBits_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestNestedMessageHasBits_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestNestedMessageHasBits_NestedMessage::MergeFrom(const TestNestedMessageHasBits_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestNestedMessageHasBits_NestedMessage::UnsafeMergeFrom(const TestNestedMessageHasBits_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  nestedmessage_repeated_int32_.UnsafeMergeFrom(from.nestedmessage_repeated_int32_);
  nestedmessage_repeated_foreignmessage_.MergeFrom(from.nestedmessage_repeated_foreignmessage_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestNestedMessageHasBits_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessageHasBits_NestedMessage::CopyFrom(const TestNestedMessageHasBits_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestNestedMessageHasBits_NestedMessage::IsInitialized() const {

  return true;
}

void TestNestedMessageHasBits_NestedMessage::Swap(TestNestedMessageHasBits_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestNestedMessageHasBits_NestedMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestNestedMessageHasBits_NestedMessage::UnsafeArenaSwap(TestNestedMessageHasBits_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestNestedMessageHasBits_NestedMessage::InternalSwap(TestNestedMessageHasBits_NestedMessage* other) {
  nestedmessage_repeated_int32_.UnsafeArenaSwap(&other->nestedmessage_repeated_int32_);
  nestedmessage_repeated_foreignmessage_.UnsafeArenaSwap(&other->nestedmessage_repeated_foreignmessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestNestedMessageHasBits_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedMessageHasBits_NestedMessage_descriptor_;
  metadata.reflection = TestNestedMessageHasBits_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestNestedMessageHasBits::_slow_mutable_optional_nested_message() {
  optional_nested_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::_slow_release_optional_nested_message() {
  if (optional_nested_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* temp = new ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage(*optional_nested_message_);
    optional_nested_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::unsafe_arena_release_optional_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
  clear_has_optional_nested_message();
  ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* temp = optional_nested_message_;
  optional_nested_message_ = NULL;
  return temp;
}
void TestNestedMessageHasBits::_slow_set_allocated_optional_nested_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage** optional_nested_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_nested_message) == NULL) {
      message_arena->Own(*optional_nested_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_nested_message)) {
      ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* new_optional_nested_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage >(
            message_arena);
      new_optional_nested_message->CopyFrom(**optional_nested_message);
      *optional_nested_message = new_optional_nested_message;
    }
}
void TestNestedMessageHasBits::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* optional_nested_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedMessageHasBits::kOptionalNestedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestNestedMessageHasBits::TestNestedMessageHasBits()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedMessageHasBits)
}
TestNestedMessageHasBits::TestNestedMessageHasBits(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedMessageHasBits)
}

void TestNestedMessageHasBits::InitAsDefaultInstance() {
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage*>(
      ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::internal_default_instance());
}

TestNestedMessageHasBits::TestNestedMessageHasBits(const TestNestedMessageHasBits& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits)
}

void TestNestedMessageHasBits::SharedCtor() {
  _cached_size_ = 0;
  optional_nested_message_ = NULL;
}

TestNestedMessageHasBits::~TestNestedMessageHasBits() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits)
  SharedDtor();
}

void TestNestedMessageHasBits::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestNestedMessageHasBits_default_instance_.get()) {
    delete optional_nested_message_;
  }
}

void TestNestedMessageHasBits::ArenaDtor(void* object) {
  TestNestedMessageHasBits* _this = reinterpret_cast< TestNestedMessageHasBits* >(object);
  (void)_this;
}
void TestNestedMessageHasBits::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestNestedMessageHasBits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessageHasBits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedMessageHasBits_descriptor_;
}

const TestNestedMessageHasBits& TestNestedMessageHasBits::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestNestedMessageHasBits> TestNestedMessageHasBits_default_instance_;

TestNestedMessageHasBits* TestNestedMessageHasBits::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestNestedMessageHasBits>(arena);
}

void TestNestedMessageHasBits::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedMessageHasBits)
  if (has_optional_nested_message()) {
    if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestNestedMessageHasBits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedMessageHasBits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedMessageHasBits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedMessageHasBits)
  return false;
#undef DO_
}

void TestNestedMessageHasBits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedMessageHasBits)
  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->optional_nested_message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedMessageHasBits)
}

::google::protobuf::uint8* TestNestedMessageHasBits::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits)
  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->optional_nested_message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits)
  return target;
}

size_t TestNestedMessageHasBits::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedMessageHasBits)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (has_optional_nested_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optional_nested_message_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessageHasBits::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestNestedMessageHasBits)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestNestedMessageHasBits* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestNestedMessageHasBits>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestNestedMessageHasBits)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestNestedMessageHasBits)
    UnsafeMergeFrom(*source);
  }
}

void TestNestedMessageHasBits::MergeFrom(const TestNestedMessageHasBits& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedMessageHasBits)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestNestedMessageHasBits::UnsafeMergeFrom(const TestNestedMessageHasBits& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::MergeFrom(from.optional_nested_message());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestNestedMessageHasBits::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestNestedMessageHasBits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessageHasBits::CopyFrom(const TestNestedMessageHasBits& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedMessageHasBits)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestNestedMessageHasBits::IsInitialized() const {

  return true;
}

void TestNestedMessageHasBits::Swap(TestNestedMessageHasBits* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestNestedMessageHasBits temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestNestedMessageHasBits::UnsafeArenaSwap(TestNestedMessageHasBits* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestNestedMessageHasBits::InternalSwap(TestNestedMessageHasBits* other) {
  std::swap(optional_nested_message_, other->optional_nested_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestNestedMessageHasBits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedMessageHasBits_descriptor_;
  metadata.reflection = TestNestedMessageHasBits_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestNestedMessageHasBits_NestedMessage

// repeated int32 nestedmessage_repeated_int32 = 1;
int TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32_size() const {
  return nestedmessage_repeated_int32_.size();
}
void TestNestedMessageHasBits_NestedMessage::clear_nestedmessage_repeated_int32() {
  nestedmessage_repeated_int32_.Clear();
}
::google::protobuf::int32 TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  return nestedmessage_repeated_int32_.Get(index);
}
void TestNestedMessageHasBits_NestedMessage::set_nestedmessage_repeated_int32(int index, ::google::protobuf::int32 value) {
  nestedmessage_repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
}
void TestNestedMessageHasBits_NestedMessage::add_nestedmessage_repeated_int32(::google::protobuf::int32 value) {
  nestedmessage_repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  return nestedmessage_repeated_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  return &nestedmessage_repeated_int32_;
}

// repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
int TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage_size() const {
  return nestedmessage_repeated_foreignmessage_.size();
}
void TestNestedMessageHasBits_NestedMessage::clear_nestedmessage_repeated_foreignmessage() {
  nestedmessage_repeated_foreignmessage_.Clear();
}
const ::protobuf_unittest::ForeignMessage& TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return nestedmessage_repeated_foreignmessage_.Get(index);
}
::protobuf_unittest::ForeignMessage* TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_foreignmessage(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return nestedmessage_repeated_foreignmessage_.Mutable(index);
}
::protobuf_unittest::ForeignMessage* TestNestedMessageHasBits_NestedMessage::add_nestedmessage_repeated_foreignmessage() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return nestedmessage_repeated_foreignmessage_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >*
TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_foreignmessage() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return &nestedmessage_repeated_foreignmessage_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >&
TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return nestedmessage_repeated_foreignmessage_;
}

inline const TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits_NestedMessage::internal_default_instance() {
  return &TestNestedMessageHasBits_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestNestedMessageHasBits

// optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
bool TestNestedMessageHasBits::has_optional_nested_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestNestedMessageHasBits::set_has_optional_nested_message() {
  _has_bits_[0] |= 0x00000001u;
}
void TestNestedMessageHasBits::clear_has_optional_nested_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestNestedMessageHasBits::clear_optional_nested_message() {
  if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::Clear();
  clear_has_optional_nested_message();
}
const ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits::optional_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
  return optional_nested_message_ != NULL ? *optional_nested_message_
                         : *::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::mutable_optional_nested_message() {
  set_has_optional_nested_message();
  if (optional_nested_message_ == NULL) {
    _slow_mutable_optional_nested_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
  return optional_nested_message_;
}
::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::release_optional_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
  clear_has_optional_nested_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_nested_message();
  } else {
    ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* temp = optional_nested_message_;
    optional_nested_message_ = NULL;
    return temp;
  }
}
 void TestNestedMessageHasBits::set_allocated_optional_nested_message(::protobuf_unittest::TestNestedMessageHasBits_NestedMessage* optional_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_nested_message_;
  }
  if (optional_nested_message != NULL) {
    _slow_set_allocated_optional_nested_message(message_arena, &optional_nested_message);
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestNestedMessageHasBits.optional_nested_message)
}

inline const TestNestedMessageHasBits* TestNestedMessageHasBits::internal_default_instance() {
  return &TestNestedMessageHasBits_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestCamelCaseFieldNames::_slow_mutable_messagefield() {
  messagefield_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::_slow_release_messagefield() {
  if (messagefield_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::ForeignMessage* temp = new ::protobuf_unittest::ForeignMessage(*messagefield_);
    messagefield_ = NULL;
    return temp;
  }
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::unsafe_arena_release_messagefield() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
  clear_has_messagefield();
  ::protobuf_unittest::ForeignMessage* temp = messagefield_;
  messagefield_ = NULL;
  return temp;
}
void TestCamelCaseFieldNames::_slow_set_allocated_messagefield(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::ForeignMessage** messagefield) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*messagefield) == NULL) {
      message_arena->Own(*messagefield);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*messagefield)) {
      ::protobuf_unittest::ForeignMessage* new_messagefield = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
            message_arena);
      new_messagefield->CopyFrom(**messagefield);
      *messagefield = new_messagefield;
    }
}
void TestCamelCaseFieldNames::unsafe_arena_set_allocated_messagefield(
    ::protobuf_unittest::ForeignMessage* messagefield) {
  if (GetArenaNoVirtual() == NULL) {
    delete messagefield_;
  }
  messagefield_ = messagefield;
  if (messagefield) {
    set_has_messagefield();
  } else {
    clear_has_messagefield();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCamelCaseFieldNames::kPrimitiveFieldFieldNumber;
const int TestCamelCaseFieldNames::kStringFieldFieldNumber;
const int TestCamelCaseFieldNames::kEnumFieldFieldNumber;
const int TestCamelCaseFieldNames::kMessageFieldFieldNumber;
const int TestCamelCaseFieldNames::kStringPieceFieldFieldNumber;
const int TestCamelCaseFieldNames::kCordFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedPrimitiveFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedStringFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedEnumFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedMessageFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedStringPieceFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedCordFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCamelCaseFieldNames::TestCamelCaseFieldNames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestCamelCaseFieldNames)
}
TestCamelCaseFieldNames::TestCamelCaseFieldNames(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeatedprimitivefield_(arena),
  repeatedstringfield_(arena),
  repeatedenumfield_(arena),
  repeatedmessagefield_(arena),
  repeatedstringpiecefield_(arena),
  repeatedcordfield_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestCamelCaseFieldNames)
}

void TestCamelCaseFieldNames::InitAsDefaultInstance() {
  messagefield_ = const_cast< ::protobuf_unittest::ForeignMessage*>(
      ::protobuf_unittest::ForeignMessage::internal_default_instance());
}

TestCamelCaseFieldNames::TestCamelCaseFieldNames(const TestCamelCaseFieldNames& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCamelCaseFieldNames)
}

void TestCamelCaseFieldNames::SharedCtor() {
  _cached_size_ = 0;
  stringfield_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringpiecefield_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cordfield_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagefield_ = NULL;
  primitivefield_ = 0;
  enumfield_ = 4;
}

TestCamelCaseFieldNames::~TestCamelCaseFieldNames() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCamelCaseFieldNames)
  SharedDtor();
}

void TestCamelCaseFieldNames::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  stringfield_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  stringpiecefield_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  cordfield_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &TestCamelCaseFieldNames_default_instance_.get()) {
    delete messagefield_;
  }
}

void TestCamelCaseFieldNames::ArenaDtor(void* object) {
  TestCamelCaseFieldNames* _this = reinterpret_cast< TestCamelCaseFieldNames* >(object);
  (void)_this;
}
void TestCamelCaseFieldNames::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestCamelCaseFieldNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestCamelCaseFieldNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestCamelCaseFieldNames_descriptor_;
}

const TestCamelCaseFieldNames& TestCamelCaseFieldNames::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestCamelCaseFieldNames> TestCamelCaseFieldNames_default_instance_;

TestCamelCaseFieldNames* TestCamelCaseFieldNames::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestCamelCaseFieldNames>(arena);
}

void TestCamelCaseFieldNames::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (_has_bits_[0 / 32] & 63u) {
    primitivefield_ = 0;
    if (has_stringfield()) {
      stringfield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    enumfield_ = 4;
    if (has_messagefield()) {
      if (messagefield_ != NULL) messagefield_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_stringpiecefield()) {
      stringpiecefield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_cordfield()) {
      cordfield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  repeatedprimitivefield_.Clear();
  repeatedstringfield_.Clear();
  repeatedenumfield_.Clear();
  repeatedmessagefield_.Clear();
  repeatedstringpiecefield_.Clear();
  repeatedcordfield_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestCamelCaseFieldNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestCamelCaseFieldNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PrimitiveField = 1;
      case 1: {
        if (tag == 8) {
          set_has_primitivefield();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primitivefield_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StringField;
        break;
      }

      // optional string StringField = 2;
      case 2: {
        if (tag == 18) {
         parse_StringField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringfield().data(), this->stringfield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.StringField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EnumField;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum EnumField = 3;
      case 3: {
        if (tag == 24) {
         parse_EnumField:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_enumfield(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_MessageField;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage MessageField = 4;
      case 4: {
        if (tag == 34) {
         parse_MessageField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messagefield()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_StringPieceField;
        break;
      }

      // optional string StringPieceField = 5 [ctype = STRING_PIECE];
      case 5: {
        if (tag == 42) {
         parse_StringPieceField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringpiecefield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringpiecefield().data(), this->stringpiecefield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.StringPieceField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_CordField;
        break;
      }

      // optional string CordField = 6 [ctype = CORD];
      case 6: {
        if (tag == 50) {
         parse_CordField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cordfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cordfield().data(), this->cordfield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.CordField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RepeatedPrimitiveField;
        break;
      }

      // repeated int32 RepeatedPrimitiveField = 7;
      case 7: {
        if (tag == 56) {
         parse_RepeatedPrimitiveField:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_repeatedprimitivefield())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeatedprimitivefield())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RepeatedPrimitiveField;
        if (input->ExpectTag(66)) goto parse_RepeatedStringField;
        break;
      }

      // repeated string RepeatedStringField = 8;
      case 8: {
        if (tag == 66) {
         parse_RepeatedStringField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedstringfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedstringfield(this->repeatedstringfield_size() - 1).data(),
            this->repeatedstringfield(this->repeatedstringfield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_RepeatedStringField;
        if (input->ExpectTag(72)) goto parse_RepeatedEnumField;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
      case 9: {
        if (tag == 72) {
         parse_RepeatedEnumField:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_repeatedenumfield(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 9,
                 ::protobuf_unittest::ForeignEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeatedenumfield())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_RepeatedEnumField;
        if (input->ExpectTag(82)) goto parse_RepeatedMessageField;
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
      case 10: {
        if (tag == 82) {
         parse_RepeatedMessageField:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RepeatedMessageField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeatedmessagefield()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_RepeatedMessageField;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(90)) goto parse_RepeatedStringPieceField;
        break;
      }

      // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
      case 11: {
        if (tag == 90) {
         parse_RepeatedStringPieceField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedstringpiecefield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedstringpiecefield(this->repeatedstringpiecefield_size() - 1).data(),
            this->repeatedstringpiecefield(this->repeatedstringpiecefield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_RepeatedStringPieceField;
        if (input->ExpectTag(98)) goto parse_RepeatedCordField;
        break;
      }

      // repeated string RepeatedCordField = 12 [ctype = CORD];
      case 12: {
        if (tag == 98) {
         parse_RepeatedCordField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedcordfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedcordfield(this->repeatedcordfield_size() - 1).data(),
            this->repeatedcordfield(this->repeatedcordfield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_RepeatedCordField;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestCamelCaseFieldNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestCamelCaseFieldNames)
  return false;
#undef DO_
}

void TestCamelCaseFieldNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestCamelCaseFieldNames)
  // optional int32 PrimitiveField = 1;
  if (has_primitivefield()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->primitivefield(), output);
  }

  // optional string StringField = 2;
  if (has_stringfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringfield().data(), this->stringfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.StringField");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stringfield(), output);
  }

  // optional .protobuf_unittest.ForeignEnum EnumField = 3;
  if (has_enumfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->enumfield(), output);
  }

  // optional .protobuf_unittest.ForeignMessage MessageField = 4;
  if (has_messagefield()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->messagefield_, output);
  }

  // optional string StringPieceField = 5 [ctype = STRING_PIECE];
  if (has_stringpiecefield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringpiecefield().data(), this->stringpiecefield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.StringPieceField");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stringpiecefield(), output);
  }

  // optional string CordField = 6 [ctype = CORD];
  if (has_cordfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cordfield().data(), this->cordfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.CordField");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cordfield(), output);
  }

  // repeated int32 RepeatedPrimitiveField = 7;
  for (int i = 0; i < this->repeatedprimitivefield_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->repeatedprimitivefield(i), output);
  }

  // repeated string RepeatedStringField = 8;
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringfield(i).data(), this->repeatedstringfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->repeatedstringfield(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  for (int i = 0; i < this->repeatedenumfield_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->repeatedenumfield(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  for (unsigned int i = 0, n = this->repeatedmessagefield_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->repeatedmessagefield(i), output);
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringpiecefield(i).data(), this->repeatedstringpiecefield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->repeatedstringpiecefield(i), output);
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedcordfield(i).data(), this->repeatedcordfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->repeatedcordfield(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestCamelCaseFieldNames)
}

::google::protobuf::uint8* TestCamelCaseFieldNames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCamelCaseFieldNames)
  // optional int32 PrimitiveField = 1;
  if (has_primitivefield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->primitivefield(), target);
  }

  // optional string StringField = 2;
  if (has_stringfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringfield().data(), this->stringfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.StringField");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stringfield(), target);
  }

  // optional .protobuf_unittest.ForeignEnum EnumField = 3;
  if (has_enumfield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->enumfield(), target);
  }

  // optional .protobuf_unittest.ForeignMessage MessageField = 4;
  if (has_messagefield()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->messagefield_, false, target);
  }

  // optional string StringPieceField = 5 [ctype = STRING_PIECE];
  if (has_stringpiecefield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringpiecefield().data(), this->stringpiecefield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.StringPieceField");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stringpiecefield(), target);
  }

  // optional string CordField = 6 [ctype = CORD];
  if (has_cordfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cordfield().data(), this->cordfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.CordField");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cordfield(), target);
  }

  // repeated int32 RepeatedPrimitiveField = 7;
  for (int i = 0; i < this->repeatedprimitivefield_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->repeatedprimitivefield(i), target);
  }

  // repeated string RepeatedStringField = 8;
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringfield(i).data(), this->repeatedstringfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->repeatedstringfield(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  for (int i = 0; i < this->repeatedenumfield_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->repeatedenumfield(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  for (unsigned int i = 0, n = this->repeatedmessagefield_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->repeatedmessagefield(i), false, target);
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringpiecefield(i).data(), this->repeatedstringpiecefield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->repeatedstringpiecefield(i), target);
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedcordfield(i).data(), this->repeatedcordfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->repeatedcordfield(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCamelCaseFieldNames)
  return target;
}

size_t TestCamelCaseFieldNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestCamelCaseFieldNames)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 PrimitiveField = 1;
    if (has_primitivefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->primitivefield());
    }

    // optional string StringField = 2;
    if (has_stringfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringfield());
    }

    // optional .protobuf_unittest.ForeignEnum EnumField = 3;
    if (has_enumfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enumfield());
    }

    // optional .protobuf_unittest.ForeignMessage MessageField = 4;
    if (has_messagefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->messagefield_);
    }

    // optional string StringPieceField = 5 [ctype = STRING_PIECE];
    if (has_stringpiecefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringpiecefield());
    }

    // optional string CordField = 6 [ctype = CORD];
    if (has_cordfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cordfield());
    }

  }
  // repeated int32 RepeatedPrimitiveField = 7;
  {
    size_t data_size = 0;
    unsigned int count = this->repeatedprimitivefield_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeatedprimitivefield(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repeatedprimitivefield_size());
    total_size += data_size;
  }

  // repeated string RepeatedStringField = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repeatedstringfield_size());
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedstringfield(i));
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  {
    size_t data_size = 0;
    unsigned int count = this->repeatedenumfield_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeatedenumfield(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  {
    unsigned int count = this->repeatedmessagefield_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeatedmessagefield(i));
    }
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repeatedstringpiecefield_size());
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedstringpiecefield(i));
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repeatedcordfield_size());
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedcordfield(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestCamelCaseFieldNames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestCamelCaseFieldNames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestCamelCaseFieldNames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestCamelCaseFieldNames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestCamelCaseFieldNames)
    UnsafeMergeFrom(*source);
  }
}

void TestCamelCaseFieldNames::MergeFrom(const TestCamelCaseFieldNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestCamelCaseFieldNames::UnsafeMergeFrom(const TestCamelCaseFieldNames& from) {
  GOOGLE_DCHECK(&from != this);
  repeatedprimitivefield_.UnsafeMergeFrom(from.repeatedprimitivefield_);
  repeatedstringfield_.UnsafeMergeFrom(from.repeatedstringfield_);
  repeatedenumfield_.UnsafeMergeFrom(from.repeatedenumfield_);
  repeatedmessagefield_.MergeFrom(from.repeatedmessagefield_);
  repeatedstringpiecefield_.UnsafeMergeFrom(from.repeatedstringpiecefield_);
  repeatedcordfield_.UnsafeMergeFrom(from.repeatedcordfield_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_primitivefield()) {
      set_primitivefield(from.primitivefield());
    }
    if (from.has_stringfield()) {
      set_stringfield(from.stringfield());
    }
    if (from.has_enumfield()) {
      set_enumfield(from.enumfield());
    }
    if (from.has_messagefield()) {
      mutable_messagefield()->::protobuf_unittest::ForeignMessage::MergeFrom(from.messagefield());
    }
    if (from.has_stringpiecefield()) {
      set_stringpiecefield(from.stringpiecefield());
    }
    if (from.has_cordfield()) {
      set_cordfield(from.cordfield());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestCamelCaseFieldNames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCamelCaseFieldNames::CopyFrom(const TestCamelCaseFieldNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestCamelCaseFieldNames::IsInitialized() const {

  return true;
}

void TestCamelCaseFieldNames::Swap(TestCamelCaseFieldNames* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestCamelCaseFieldNames temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestCamelCaseFieldNames::UnsafeArenaSwap(TestCamelCaseFieldNames* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestCamelCaseFieldNames::InternalSwap(TestCamelCaseFieldNames* other) {
  std::swap(primitivefield_, other->primitivefield_);
  stringfield_.Swap(&other->stringfield_);
  std::swap(enumfield_, other->enumfield_);
  std::swap(messagefield_, other->messagefield_);
  stringpiecefield_.Swap(&other->stringpiecefield_);
  cordfield_.Swap(&other->cordfield_);
  repeatedprimitivefield_.UnsafeArenaSwap(&other->repeatedprimitivefield_);
  repeatedstringfield_.UnsafeArenaSwap(&other->repeatedstringfield_);
  repeatedenumfield_.UnsafeArenaSwap(&other->repeatedenumfield_);
  repeatedmessagefield_.UnsafeArenaSwap(&other->repeatedmessagefield_);
  repeatedstringpiecefield_.UnsafeArenaSwap(&other->repeatedstringpiecefield_);
  repeatedcordfield_.UnsafeArenaSwap(&other->repeatedcordfield_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestCamelCaseFieldNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestCamelCaseFieldNames_descriptor_;
  metadata.reflection = TestCamelCaseFieldNames_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestCamelCaseFieldNames

// optional int32 PrimitiveField = 1;
bool TestCamelCaseFieldNames::has_primitivefield() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestCamelCaseFieldNames::set_has_primitivefield() {
  _has_bits_[0] |= 0x00000001u;
}
void TestCamelCaseFieldNames::clear_has_primitivefield() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestCamelCaseFieldNames::clear_primitivefield() {
  primitivefield_ = 0;
  clear_has_primitivefield();
}
::google::protobuf::int32 TestCamelCaseFieldNames::primitivefield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.PrimitiveField)
  return primitivefield_;
}
void TestCamelCaseFieldNames::set_primitivefield(::google::protobuf::int32 value) {
  set_has_primitivefield();
  primitivefield_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.PrimitiveField)
}

// optional string StringField = 2;
bool TestCamelCaseFieldNames::has_stringfield() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestCamelCaseFieldNames::set_has_stringfield() {
  _has_bits_[0] |= 0x00000002u;
}
void TestCamelCaseFieldNames::clear_has_stringfield() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestCamelCaseFieldNames::clear_stringfield() {
  stringfield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_stringfield();
}
const ::std::string& TestCamelCaseFieldNames::stringfield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.StringField)
  return stringfield_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestCamelCaseFieldNames::set_stringfield(const ::std::string& value) {
  set_has_stringfield();
  stringfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.StringField)
}
void TestCamelCaseFieldNames::set_stringfield(const char* value) {
  set_has_stringfield();
  stringfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.StringField)
}
void TestCamelCaseFieldNames::set_stringfield(const char* value,
    size_t size) {
  set_has_stringfield();
  stringfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.StringField)
}
::std::string* TestCamelCaseFieldNames::mutable_stringfield() {
  set_has_stringfield();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.StringField)
  return stringfield_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::release_stringfield() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCamelCaseFieldNames.StringField)
  clear_has_stringfield();
  return stringfield_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::unsafe_arena_release_stringfield() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestCamelCaseFieldNames.StringField)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_stringfield();
  return stringfield_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestCamelCaseFieldNames::set_allocated_stringfield(::std::string* stringfield) {
  if (stringfield != NULL) {
    set_has_stringfield();
  } else {
    clear_has_stringfield();
  }
  stringfield_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringfield,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.StringField)
}
void TestCamelCaseFieldNames::unsafe_arena_set_allocated_stringfield(
    ::std::string* stringfield) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (stringfield != NULL) {
    set_has_stringfield();
  } else {
    clear_has_stringfield();
  }
  stringfield_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      stringfield, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.StringField)
}

// optional .protobuf_unittest.ForeignEnum EnumField = 3;
bool TestCamelCaseFieldNames::has_enumfield() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestCamelCaseFieldNames::set_has_enumfield() {
  _has_bits_[0] |= 0x00000004u;
}
void TestCamelCaseFieldNames::clear_has_enumfield() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestCamelCaseFieldNames::clear_enumfield() {
  enumfield_ = 4;
  clear_has_enumfield();
}
::protobuf_unittest::ForeignEnum TestCamelCaseFieldNames::enumfield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.EnumField)
  return static_cast< ::protobuf_unittest::ForeignEnum >(enumfield_);
}
void TestCamelCaseFieldNames::set_enumfield(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  set_has_enumfield();
  enumfield_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.EnumField)
}

// optional .protobuf_unittest.ForeignMessage MessageField = 4;
bool TestCamelCaseFieldNames::has_messagefield() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestCamelCaseFieldNames::set_has_messagefield() {
  _has_bits_[0] |= 0x00000008u;
}
void TestCamelCaseFieldNames::clear_has_messagefield() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestCamelCaseFieldNames::clear_messagefield() {
  if (messagefield_ != NULL) messagefield_->::protobuf_unittest::ForeignMessage::Clear();
  clear_has_messagefield();
}
const ::protobuf_unittest::ForeignMessage& TestCamelCaseFieldNames::messagefield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
  return messagefield_ != NULL ? *messagefield_
                         : *::protobuf_unittest::ForeignMessage::internal_default_instance();
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::mutable_messagefield() {
  set_has_messagefield();
  if (messagefield_ == NULL) {
    _slow_mutable_messagefield();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
  return messagefield_;
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::release_messagefield() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
  clear_has_messagefield();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_messagefield();
  } else {
    ::protobuf_unittest::ForeignMessage* temp = messagefield_;
    messagefield_ = NULL;
    return temp;
  }
}
 void TestCamelCaseFieldNames::set_allocated_messagefield(::protobuf_unittest::ForeignMessage* messagefield) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete messagefield_;
  }
  if (messagefield != NULL) {
    _slow_set_allocated_messagefield(message_arena, &messagefield);
  }
  messagefield_ = messagefield;
  if (messagefield) {
    set_has_messagefield();
  } else {
    clear_has_messagefield();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.MessageField)
}

// optional string StringPieceField = 5 [ctype = STRING_PIECE];
bool TestCamelCaseFieldNames::has_stringpiecefield() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestCamelCaseFieldNames::set_has_stringpiecefield() {
  _has_bits_[0] |= 0x00000010u;
}
void TestCamelCaseFieldNames::clear_has_stringpiecefield() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestCamelCaseFieldNames::clear_stringpiecefield() {
  stringpiecefield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_stringpiecefield();
}
const ::std::string& TestCamelCaseFieldNames::stringpiecefield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
  return stringpiecefield_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestCamelCaseFieldNames::set_stringpiecefield(const ::std::string& value) {
  set_has_stringpiecefield();
  stringpiecefield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
}
void TestCamelCaseFieldNames::set_stringpiecefield(const char* value) {
  set_has_stringpiecefield();
  stringpiecefield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
}
void TestCamelCaseFieldNames::set_stringpiecefield(const char* value,
    size_t size) {
  set_has_stringpiecefield();
  stringpiecefield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
}
::std::string* TestCamelCaseFieldNames::mutable_stringpiecefield() {
  set_has_stringpiecefield();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
  return stringpiecefield_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::release_stringpiecefield() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
  clear_has_stringpiecefield();
  return stringpiecefield_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::unsafe_arena_release_stringpiecefield() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_stringpiecefield();
  return stringpiecefield_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestCamelCaseFieldNames::set_allocated_stringpiecefield(::std::string* stringpiecefield) {
  if (stringpiecefield != NULL) {
    set_has_stringpiecefield();
  } else {
    clear_has_stringpiecefield();
  }
  stringpiecefield_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringpiecefield,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
}
void TestCamelCaseFieldNames::unsafe_arena_set_allocated_stringpiecefield(
    ::std::string* stringpiecefield) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (stringpiecefield != NULL) {
    set_has_stringpiecefield();
  } else {
    clear_has_stringpiecefield();
  }
  stringpiecefield_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      stringpiecefield, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.StringPieceField)
}

// optional string CordField = 6 [ctype = CORD];
bool TestCamelCaseFieldNames::has_cordfield() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestCamelCaseFieldNames::set_has_cordfield() {
  _has_bits_[0] |= 0x00000020u;
}
void TestCamelCaseFieldNames::clear_has_cordfield() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestCamelCaseFieldNames::clear_cordfield() {
  cordfield_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_cordfield();
}
const ::std::string& TestCamelCaseFieldNames::cordfield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.CordField)
  return cordfield_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestCamelCaseFieldNames::set_cordfield(const ::std::string& value) {
  set_has_cordfield();
  cordfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.CordField)
}
void TestCamelCaseFieldNames::set_cordfield(const char* value) {
  set_has_cordfield();
  cordfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.CordField)
}
void TestCamelCaseFieldNames::set_cordfield(const char* value,
    size_t size) {
  set_has_cordfield();
  cordfield_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.CordField)
}
::std::string* TestCamelCaseFieldNames::mutable_cordfield() {
  set_has_cordfield();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.CordField)
  return cordfield_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::release_cordfield() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCamelCaseFieldNames.CordField)
  clear_has_cordfield();
  return cordfield_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestCamelCaseFieldNames::unsafe_arena_release_cordfield() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestCamelCaseFieldNames.CordField)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cordfield();
  return cordfield_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestCamelCaseFieldNames::set_allocated_cordfield(::std::string* cordfield) {
  if (cordfield != NULL) {
    set_has_cordfield();
  } else {
    clear_has_cordfield();
  }
  cordfield_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cordfield,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.CordField)
}
void TestCamelCaseFieldNames::unsafe_arena_set_allocated_cordfield(
    ::std::string* cordfield) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cordfield != NULL) {
    set_has_cordfield();
  } else {
    clear_has_cordfield();
  }
  cordfield_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      cordfield, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestCamelCaseFieldNames.CordField)
}

// repeated int32 RepeatedPrimitiveField = 7;
int TestCamelCaseFieldNames::repeatedprimitivefield_size() const {
  return repeatedprimitivefield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedprimitivefield() {
  repeatedprimitivefield_.Clear();
}
::google::protobuf::int32 TestCamelCaseFieldNames::repeatedprimitivefield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  return repeatedprimitivefield_.Get(index);
}
void TestCamelCaseFieldNames::set_repeatedprimitivefield(int index, ::google::protobuf::int32 value) {
  repeatedprimitivefield_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
}
void TestCamelCaseFieldNames::add_repeatedprimitivefield(::google::protobuf::int32 value) {
  repeatedprimitivefield_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestCamelCaseFieldNames::repeatedprimitivefield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  return repeatedprimitivefield_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestCamelCaseFieldNames::mutable_repeatedprimitivefield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  return &repeatedprimitivefield_;
}

// repeated string RepeatedStringField = 8;
int TestCamelCaseFieldNames::repeatedstringfield_size() const {
  return repeatedstringfield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedstringfield() {
  repeatedstringfield_.Clear();
}
const ::std::string& TestCamelCaseFieldNames::repeatedstringfield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return repeatedstringfield_.Get(index);
}
::std::string* TestCamelCaseFieldNames::mutable_repeatedstringfield(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return repeatedstringfield_.Mutable(index);
}
void TestCamelCaseFieldNames::set_repeatedstringfield(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  repeatedstringfield_.Mutable(index)->assign(value);
}
void TestCamelCaseFieldNames::set_repeatedstringfield(int index, const char* value) {
  repeatedstringfield_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
void TestCamelCaseFieldNames::set_repeatedstringfield(int index, const char* value, size_t size) {
  repeatedstringfield_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
::std::string* TestCamelCaseFieldNames::add_repeatedstringfield() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return repeatedstringfield_.Add();
}
void TestCamelCaseFieldNames::add_repeatedstringfield(const ::std::string& value) {
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
void TestCamelCaseFieldNames::add_repeatedstringfield(const char* value) {
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
void TestCamelCaseFieldNames::add_repeatedstringfield(const char* value, size_t size) {
  repeatedstringfield_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestCamelCaseFieldNames::repeatedstringfield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return repeatedstringfield_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestCamelCaseFieldNames::mutable_repeatedstringfield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return &repeatedstringfield_;
}

// repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
int TestCamelCaseFieldNames::repeatedenumfield_size() const {
  return repeatedenumfield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedenumfield() {
  repeatedenumfield_.Clear();
}
::protobuf_unittest::ForeignEnum TestCamelCaseFieldNames::repeatedenumfield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  return static_cast< ::protobuf_unittest::ForeignEnum >(repeatedenumfield_.Get(index));
}
void TestCamelCaseFieldNames::set_repeatedenumfield(int index, ::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  repeatedenumfield_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
}
void TestCamelCaseFieldNames::add_repeatedenumfield(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  repeatedenumfield_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
}
const ::google::protobuf::RepeatedField<int>&
TestCamelCaseFieldNames::repeatedenumfield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  return repeatedenumfield_;
}
::google::protobuf::RepeatedField<int>*
TestCamelCaseFieldNames::mutable_repeatedenumfield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  return &repeatedenumfield_;
}

// repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
int TestCamelCaseFieldNames::repeatedmessagefield_size() const {
  return repeatedmessagefield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedmessagefield() {
  repeatedmessagefield_.Clear();
}
const ::protobuf_unittest::ForeignMessage& TestCamelCaseFieldNames::repeatedmessagefield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return repeatedmessagefield_.Get(index);
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::mutable_repeatedmessagefield(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return repeatedmessagefield_.Mutable(index);
}
::protobuf_unittest::ForeignMessage* TestCamelCaseFieldNames::add_repeatedmessagefield() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return repeatedmessagefield_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >*
TestCamelCaseFieldNames::mutable_repeatedmessagefield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return &repeatedmessagefield_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessage >&
TestCamelCaseFieldNames::repeatedmessagefield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return repeatedmessagefield_;
}

// repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
int TestCamelCaseFieldNames::repeatedstringpiecefield_size() const {
  return repeatedstringpiecefield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedstringpiecefield() {
  repeatedstringpiecefield_.Clear();
}
const ::std::string& TestCamelCaseFieldNames::repeatedstringpiecefield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return repeatedstringpiecefield_.Get(index);
}
::std::string* TestCamelCaseFieldNames::mutable_repeatedstringpiecefield(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return repeatedstringpiecefield_.Mutable(index);
}
void TestCamelCaseFieldNames::set_repeatedstringpiecefield(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  repeatedstringpiecefield_.Mutable(index)->assign(value);
}
void TestCamelCaseFieldNames::set_repeatedstringpiecefield(int index, const char* value) {
  repeatedstringpiecefield_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
void TestCamelCaseFieldNames::set_repeatedstringpiecefield(int index, const char* value, size_t size) {
  repeatedstringpiecefield_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
::std::string* TestCamelCaseFieldNames::add_repeatedstringpiecefield() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return repeatedstringpiecefield_.Add();
}
void TestCamelCaseFieldNames::add_repeatedstringpiecefield(const ::std::string& value) {
  repeatedstringpiecefield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
void TestCamelCaseFieldNames::add_repeatedstringpiecefield(const char* value) {
  repeatedstringpiecefield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
void TestCamelCaseFieldNames::add_repeatedstringpiecefield(const char* value, size_t size) {
  repeatedstringpiecefield_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestCamelCaseFieldNames::repeatedstringpiecefield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return repeatedstringpiecefield_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestCamelCaseFieldNames::mutable_repeatedstringpiecefield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return &repeatedstringpiecefield_;
}

// repeated string RepeatedCordField = 12 [ctype = CORD];
int TestCamelCaseFieldNames::repeatedcordfield_size() const {
  return repeatedcordfield_.size();
}
void TestCamelCaseFieldNames::clear_repeatedcordfield() {
  repeatedcordfield_.Clear();
}
const ::std::string& TestCamelCaseFieldNames::repeatedcordfield(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return repeatedcordfield_.Get(index);
}
::std::string* TestCamelCaseFieldNames::mutable_repeatedcordfield(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return repeatedcordfield_.Mutable(index);
}
void TestCamelCaseFieldNames::set_repeatedcordfield(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  repeatedcordfield_.Mutable(index)->assign(value);
}
void TestCamelCaseFieldNames::set_repeatedcordfield(int index, const char* value) {
  repeatedcordfield_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
void TestCamelCaseFieldNames::set_repeatedcordfield(int index, const char* value, size_t size) {
  repeatedcordfield_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
::std::string* TestCamelCaseFieldNames::add_repeatedcordfield() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return repeatedcordfield_.Add();
}
void TestCamelCaseFieldNames::add_repeatedcordfield(const ::std::string& value) {
  repeatedcordfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
void TestCamelCaseFieldNames::add_repeatedcordfield(const char* value) {
  repeatedcordfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
void TestCamelCaseFieldNames::add_repeatedcordfield(const char* value, size_t size) {
  repeatedcordfield_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestCamelCaseFieldNames::repeatedcordfield() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return repeatedcordfield_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestCamelCaseFieldNames::mutable_repeatedcordfield() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return &repeatedcordfield_;
}

inline const TestCamelCaseFieldNames* TestCamelCaseFieldNames::internal_default_instance() {
  return &TestCamelCaseFieldNames_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestFieldOrderings_NestedMessage::kOoFieldNumber;
const int TestFieldOrderings_NestedMessage::kBbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
}
TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
}

void TestFieldOrderings_NestedMessage::InitAsDefaultInstance() {
}

TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage(const TestFieldOrderings_NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
}

void TestFieldOrderings_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&oo_, 0, reinterpret_cast<char*>(&bb_) -
    reinterpret_cast<char*>(&oo_) + sizeof(bb_));
}

TestFieldOrderings_NestedMessage::~TestFieldOrderings_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
  SharedDtor();
}

void TestFieldOrderings_NestedMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestFieldOrderings_NestedMessage::ArenaDtor(void* object) {
  TestFieldOrderings_NestedMessage* _this = reinterpret_cast< TestFieldOrderings_NestedMessage* >(object);
  (void)_this;
}
void TestFieldOrderings_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestFieldOrderings_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldOrderings_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldOrderings_NestedMessage_descriptor_;
}

const TestFieldOrderings_NestedMessage& TestFieldOrderings_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestFieldOrderings_NestedMessage> TestFieldOrderings_NestedMessage_default_instance_;

TestFieldOrderings_NestedMessage* TestFieldOrderings_NestedMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestFieldOrderings_NestedMessage>(arena);
}

void TestFieldOrderings_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestFieldOrderings_NestedMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestFieldOrderings_NestedMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(oo_, bb_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestFieldOrderings_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bb = 1;
      case 1: {
        if (tag == 8) {
          set_has_bb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_oo;
        break;
      }

      // optional int64 oo = 2;
      case 2: {
        if (tag == 16) {
         parse_oo:
          set_has_oo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestFieldOrderings.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestFieldOrderings.NestedMessage)
  return false;
#undef DO_
}

void TestFieldOrderings_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bb(), output);
  }

  // optional int64 oo = 2;
  if (has_oo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->oo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestFieldOrderings.NestedMessage)
}

::google::protobuf::uint8* TestFieldOrderings_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bb(), target);
  }

  // optional int64 oo = 2;
  if (has_oo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->oo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestFieldOrderings.NestedMessage)
  return target;
}

size_t TestFieldOrderings_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 oo = 2;
    if (has_oo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->oo());
    }

    // optional int32 bb = 1;
    if (has_bb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bb());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldOrderings_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestFieldOrderings_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestFieldOrderings_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestFieldOrderings.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestFieldOrderings.NestedMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestFieldOrderings_NestedMessage::MergeFrom(const TestFieldOrderings_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestFieldOrderings_NestedMessage::UnsafeMergeFrom(const TestFieldOrderings_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oo()) {
      set_oo(from.oo());
    }
    if (from.has_bb()) {
      set_bb(from.bb());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestFieldOrderings_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldOrderings_NestedMessage::CopyFrom(const TestFieldOrderings_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestFieldOrderings_NestedMessage::IsInitialized() const {

  return true;
}

void TestFieldOrderings_NestedMessage::Swap(TestFieldOrderings_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestFieldOrderings_NestedMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestFieldOrderings_NestedMessage::UnsafeArenaSwap(TestFieldOrderings_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestFieldOrderings_NestedMessage::InternalSwap(TestFieldOrderings_NestedMessage* other) {
  std::swap(oo_, other->oo_);
  std::swap(bb_, other->bb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestFieldOrderings_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldOrderings_NestedMessage_descriptor_;
  metadata.reflection = TestFieldOrderings_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestFieldOrderings::_slow_mutable_optional_nested_message() {
  optional_nested_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestFieldOrderings_NestedMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::_slow_release_optional_nested_message() {
  if (optional_nested_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestFieldOrderings_NestedMessage* temp = new ::protobuf_unittest::TestFieldOrderings_NestedMessage(*optional_nested_message_);
    optional_nested_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::unsafe_arena_release_optional_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestFieldOrderings.optional_nested_message)
  clear_has_optional_nested_message();
  ::protobuf_unittest::TestFieldOrderings_NestedMessage* temp = optional_nested_message_;
  optional_nested_message_ = NULL;
  return temp;
}
void TestFieldOrderings::_slow_set_allocated_optional_nested_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestFieldOrderings_NestedMessage** optional_nested_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_nested_message) == NULL) {
      message_arena->Own(*optional_nested_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_nested_message)) {
      ::protobuf_unittest::TestFieldOrderings_NestedMessage* new_optional_nested_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestFieldOrderings_NestedMessage >(
            message_arena);
      new_optional_nested_message->CopyFrom(**optional_nested_message);
      *optional_nested_message = new_optional_nested_message;
    }
}
void TestFieldOrderings::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_unittest::TestFieldOrderings_NestedMessage* optional_nested_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestFieldOrderings.optional_nested_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestFieldOrderings::kMyStringFieldNumber;
const int TestFieldOrderings::kMyIntFieldNumber;
const int TestFieldOrderings::kMyFloatFieldNumber;
const int TestFieldOrderings::kOptionalNestedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestFieldOrderings::TestFieldOrderings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestFieldOrderings)
}
TestFieldOrderings::TestFieldOrderings(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestFieldOrderings)
}

void TestFieldOrderings::InitAsDefaultInstance() {
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestFieldOrderings_NestedMessage*>(
      ::protobuf_unittest::TestFieldOrderings_NestedMessage::internal_default_instance());
}

TestFieldOrderings::TestFieldOrderings(const TestFieldOrderings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestFieldOrderings)
}

void TestFieldOrderings::SharedCtor() {
  _cached_size_ = 0;
  my_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_nested_message_ = NULL;
  ::memset(&my_int_, 0, reinterpret_cast<char*>(&my_float_) -
    reinterpret_cast<char*>(&my_int_) + sizeof(my_float_));
}

TestFieldOrderings::~TestFieldOrderings() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestFieldOrderings)
  SharedDtor();
}

void TestFieldOrderings::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  my_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &TestFieldOrderings_default_instance_.get()) {
    delete optional_nested_message_;
  }
}

void TestFieldOrderings::ArenaDtor(void* object) {
  TestFieldOrderings* _this = reinterpret_cast< TestFieldOrderings* >(object);
  (void)_this;
}
void TestFieldOrderings::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestFieldOrderings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldOrderings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldOrderings_descriptor_;
}

const TestFieldOrderings& TestFieldOrderings::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestFieldOrderings> TestFieldOrderings_default_instance_;

TestFieldOrderings* TestFieldOrderings::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestFieldOrderings>(arena);
}

void TestFieldOrderings::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestFieldOrderings)
  _extensions_.Clear();
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestFieldOrderings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestFieldOrderings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(my_int_, my_float_);
    if (has_my_string()) {
      my_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_optional_nested_message()) {
      if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestFieldOrderings_NestedMessage::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestFieldOrderings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestFieldOrderings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 my_int = 1;
      case 1: {
        if (tag == 8) {
          set_has_my_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &my_int_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_my_string;
        break;
      }

      // optional string my_string = 11;
      case 11: {
        if (tag == 90) {
         parse_my_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->my_string().data(), this->my_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestFieldOrderings.my_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(813)) goto parse_my_float;
        break;
      }

      // optional float my_float = 101;
      case 101: {
        if (tag == 813) {
         parse_my_float:
          set_has_my_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1602)) goto parse_optional_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
      case 200: {
        if (tag == 1602) {
         parse_optional_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((16u <= tag && tag < 88u) ||
            (96u <= tag && tag < 808u)) {
          DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestFieldOrderings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestFieldOrderings)
  return false;
#undef DO_
}

void TestFieldOrderings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestFieldOrderings)
  // optional int64 my_int = 1;
  if (has_my_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->my_int(), output);
  }

  // Extension range [2, 11)
  _extensions_.SerializeWithCachedSizes(
      2, 11, output);

  // optional string my_string = 11;
  if (has_my_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestFieldOrderings.my_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->my_string(), output);
  }

  // Extension range [12, 101)
  _extensions_.SerializeWithCachedSizes(
      12, 101, output);

  // optional float my_float = 101;
  if (has_my_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(101, this->my_float(), output);
  }

  // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->optional_nested_message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestFieldOrderings)
}

::google::protobuf::uint8* TestFieldOrderings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestFieldOrderings)
  // optional int64 my_int = 1;
  if (has_my_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->my_int(), target);
  }

  // Extension range [2, 11)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      2, 11, false, target);

  // optional string my_string = 11;
  if (has_my_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestFieldOrderings.my_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->my_string(), target);
  }

  // Extension range [12, 101)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      12, 101, false, target);

  // optional float my_float = 101;
  if (has_my_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(101, this->my_float(), target);
  }

  // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
  if (has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->optional_nested_message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestFieldOrderings)
  return target;
}

size_t TestFieldOrderings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestFieldOrderings)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string my_string = 11;
    if (has_my_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->my_string());
    }

    // optional int64 my_int = 1;
    if (has_my_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->my_int());
    }

    // optional float my_float = 101;
    if (has_my_float()) {
      total_size += 2 + 4;
    }

    // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
    if (has_optional_nested_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_nested_message_);
    }

  }
  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldOrderings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestFieldOrderings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestFieldOrderings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestFieldOrderings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestFieldOrderings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestFieldOrderings)
    UnsafeMergeFrom(*source);
  }
}

void TestFieldOrderings::MergeFrom(const TestFieldOrderings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestFieldOrderings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestFieldOrderings::UnsafeMergeFrom(const TestFieldOrderings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_my_string()) {
      set_my_string(from.my_string());
    }
    if (from.has_my_int()) {
      set_my_int(from.my_int());
    }
    if (from.has_my_float()) {
      set_my_float(from.my_float());
    }
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestFieldOrderings_NestedMessage::MergeFrom(from.optional_nested_message());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestFieldOrderings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestFieldOrderings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldOrderings::CopyFrom(const TestFieldOrderings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestFieldOrderings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestFieldOrderings::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestFieldOrderings::Swap(TestFieldOrderings* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestFieldOrderings temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestFieldOrderings::UnsafeArenaSwap(TestFieldOrderings* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestFieldOrderings::InternalSwap(TestFieldOrderings* other) {
  my_string_.Swap(&other->my_string_);
  std::swap(my_int_, other->my_int_);
  std::swap(my_float_, other->my_float_);
  std::swap(optional_nested_message_, other->optional_nested_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestFieldOrderings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldOrderings_descriptor_;
  metadata.reflection = TestFieldOrderings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestFieldOrderings_NestedMessage

// optional int64 oo = 2;
bool TestFieldOrderings_NestedMessage::has_oo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestFieldOrderings_NestedMessage::set_has_oo() {
  _has_bits_[0] |= 0x00000001u;
}
void TestFieldOrderings_NestedMessage::clear_has_oo() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestFieldOrderings_NestedMessage::clear_oo() {
  oo_ = GOOGLE_LONGLONG(0);
  clear_has_oo();
}
::google::protobuf::int64 TestFieldOrderings_NestedMessage::oo() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.NestedMessage.oo)
  return oo_;
}
void TestFieldOrderings_NestedMessage::set_oo(::google::protobuf::int64 value) {
  set_has_oo();
  oo_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFieldOrderings.NestedMessage.oo)
}

// optional int32 bb = 1;
bool TestFieldOrderings_NestedMessage::has_bb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestFieldOrderings_NestedMessage::set_has_bb() {
  _has_bits_[0] |= 0x00000002u;
}
void TestFieldOrderings_NestedMessage::clear_has_bb() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestFieldOrderings_NestedMessage::clear_bb() {
  bb_ = 0;
  clear_has_bb();
}
::google::protobuf::int32 TestFieldOrderings_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.NestedMessage.bb)
  return bb_;
}
void TestFieldOrderings_NestedMessage::set_bb(::google::protobuf::int32 value) {
  set_has_bb();
  bb_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFieldOrderings.NestedMessage.bb)
}

inline const TestFieldOrderings_NestedMessage* TestFieldOrderings_NestedMessage::internal_default_instance() {
  return &TestFieldOrderings_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestFieldOrderings

// optional string my_string = 11;
bool TestFieldOrderings::has_my_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestFieldOrderings::set_has_my_string() {
  _has_bits_[0] |= 0x00000001u;
}
void TestFieldOrderings::clear_has_my_string() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestFieldOrderings::clear_my_string() {
  my_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_my_string();
}
const ::std::string& TestFieldOrderings::my_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.my_string)
  return my_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestFieldOrderings::set_my_string(const ::std::string& value) {
  set_has_my_string();
  my_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFieldOrderings.my_string)
}
void TestFieldOrderings::set_my_string(const char* value) {
  set_has_my_string();
  my_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestFieldOrderings.my_string)
}
void TestFieldOrderings::set_my_string(const char* value,
    size_t size) {
  set_has_my_string();
  my_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestFieldOrderings.my_string)
}
::std::string* TestFieldOrderings::mutable_my_string() {
  set_has_my_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestFieldOrderings.my_string)
  return my_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestFieldOrderings::release_my_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestFieldOrderings.my_string)
  clear_has_my_string();
  return my_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestFieldOrderings::unsafe_arena_release_my_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestFieldOrderings.my_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_my_string();
  return my_string_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestFieldOrderings::set_allocated_my_string(::std::string* my_string) {
  if (my_string != NULL) {
    set_has_my_string();
  } else {
    clear_has_my_string();
  }
  my_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), my_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestFieldOrderings.my_string)
}
void TestFieldOrderings::unsafe_arena_set_allocated_my_string(
    ::std::string* my_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (my_string != NULL) {
    set_has_my_string();
  } else {
    clear_has_my_string();
  }
  my_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      my_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestFieldOrderings.my_string)
}

// optional int64 my_int = 1;
bool TestFieldOrderings::has_my_int() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestFieldOrderings::set_has_my_int() {
  _has_bits_[0] |= 0x00000002u;
}
void TestFieldOrderings::clear_has_my_int() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestFieldOrderings::clear_my_int() {
  my_int_ = GOOGLE_LONGLONG(0);
  clear_has_my_int();
}
::google::protobuf::int64 TestFieldOrderings::my_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.my_int)
  return my_int_;
}
void TestFieldOrderings::set_my_int(::google::protobuf::int64 value) {
  set_has_my_int();
  my_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFieldOrderings.my_int)
}

// optional float my_float = 101;
bool TestFieldOrderings::has_my_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestFieldOrderings::set_has_my_float() {
  _has_bits_[0] |= 0x00000004u;
}
void TestFieldOrderings::clear_has_my_float() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestFieldOrderings::clear_my_float() {
  my_float_ = 0;
  clear_has_my_float();
}
float TestFieldOrderings::my_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.my_float)
  return my_float_;
}
void TestFieldOrderings::set_my_float(float value) {
  set_has_my_float();
  my_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFieldOrderings.my_float)
}

// optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
bool TestFieldOrderings::has_optional_nested_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestFieldOrderings::set_has_optional_nested_message() {
  _has_bits_[0] |= 0x00000008u;
}
void TestFieldOrderings::clear_has_optional_nested_message() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestFieldOrderings::clear_optional_nested_message() {
  if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestFieldOrderings_NestedMessage::Clear();
  clear_has_optional_nested_message();
}
const ::protobuf_unittest::TestFieldOrderings_NestedMessage& TestFieldOrderings::optional_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFieldOrderings.optional_nested_message)
  return optional_nested_message_ != NULL ? *optional_nested_message_
                         : *::protobuf_unittest::TestFieldOrderings_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::mutable_optional_nested_message() {
  set_has_optional_nested_message();
  if (optional_nested_message_ == NULL) {
    _slow_mutable_optional_nested_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestFieldOrderings.optional_nested_message)
  return optional_nested_message_;
}
::protobuf_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::release_optional_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestFieldOrderings.optional_nested_message)
  clear_has_optional_nested_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_nested_message();
  } else {
    ::protobuf_unittest::TestFieldOrderings_NestedMessage* temp = optional_nested_message_;
    optional_nested_message_ = NULL;
    return temp;
  }
}
 void TestFieldOrderings::set_allocated_optional_nested_message(::protobuf_unittest::TestFieldOrderings_NestedMessage* optional_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_nested_message_;
  }
  if (optional_nested_message != NULL) {
    _slow_set_allocated_optional_nested_message(message_arena, &optional_nested_message);
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestFieldOrderings.optional_nested_message)
}

inline const TestFieldOrderings* TestFieldOrderings::internal_default_instance() {
  return &TestFieldOrderings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::std::string* TestExtremeDefaultValues::_default_escaped_bytes_ = NULL;
::std::string* TestExtremeDefaultValues::_default_utf8_string_ = NULL;
::std::string* TestExtremeDefaultValues::_default_cpp_trigraph_ = NULL;
::std::string* TestExtremeDefaultValues::_default_string_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_bytes_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_string_piece_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_cord_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_replacement_string_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestExtremeDefaultValues::kEscapedBytesFieldNumber;
const int TestExtremeDefaultValues::kLargeUint32FieldNumber;
const int TestExtremeDefaultValues::kLargeUint64FieldNumber;
const int TestExtremeDefaultValues::kSmallInt32FieldNumber;
const int TestExtremeDefaultValues::kSmallInt64FieldNumber;
const int TestExtremeDefaultValues::kReallySmallInt32FieldNumber;
const int TestExtremeDefaultValues::kReallySmallInt64FieldNumber;
const int TestExtremeDefaultValues::kUtf8StringFieldNumber;
const int TestExtremeDefaultValues::kZeroFloatFieldNumber;
const int TestExtremeDefaultValues::kOneFloatFieldNumber;
const int TestExtremeDefaultValues::kSmallFloatFieldNumber;
const int TestExtremeDefaultValues::kNegativeOneFloatFieldNumber;
const int TestExtremeDefaultValues::kNegativeFloatFieldNumber;
const int TestExtremeDefaultValues::kLargeFloatFieldNumber;
const int TestExtremeDefaultValues::kSmallNegativeFloatFieldNumber;
const int TestExtremeDefaultValues::kInfDoubleFieldNumber;
const int TestExtremeDefaultValues::kNegInfDoubleFieldNumber;
const int TestExtremeDefaultValues::kNanDoubleFieldNumber;
const int TestExtremeDefaultValues::kInfFloatFieldNumber;
const int TestExtremeDefaultValues::kNegInfFloatFieldNumber;
const int TestExtremeDefaultValues::kNanFloatFieldNumber;
const int TestExtremeDefaultValues::kCppTrigraphFieldNumber;
const int TestExtremeDefaultValues::kStringWithZeroFieldNumber;
const int TestExtremeDefaultValues::kBytesWithZeroFieldNumber;
const int TestExtremeDefaultValues::kStringPieceWithZeroFieldNumber;
const int TestExtremeDefaultValues::kCordWithZeroFieldNumber;
const int TestExtremeDefaultValues::kReplacementStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestExtremeDefaultValues::TestExtremeDefaultValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestExtremeDefaultValues)
}
TestExtremeDefaultValues::TestExtremeDefaultValues(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtremeDefaultValues)
}

void TestExtremeDefaultValues::InitAsDefaultInstance() {
}

TestExtremeDefaultValues::TestExtremeDefaultValues(const TestExtremeDefaultValues& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtremeDefaultValues)
}

void TestExtremeDefaultValues::SharedCtor() {
  _cached_size_ = 0;
  escaped_bytes_.UnsafeSetDefault(_default_escaped_bytes_);
  utf8_string_.UnsafeSetDefault(_default_utf8_string_);
  cpp_trigraph_.UnsafeSetDefault(_default_cpp_trigraph_);
  string_with_zero_.UnsafeSetDefault(_default_string_with_zero_);
  bytes_with_zero_.UnsafeSetDefault(_default_bytes_with_zero_);
  string_piece_with_zero_.UnsafeSetDefault(_default_string_piece_with_zero_);
  cord_with_zero_.UnsafeSetDefault(_default_cord_with_zero_);
  replacement_string_.UnsafeSetDefault(_default_replacement_string_);
  zero_float_ = 0;
  large_uint64_ = GOOGLE_ULONGLONG(18446744073709551615);
  large_uint32_ = 4294967295u;
  small_int32_ = -2147483647;
  small_int64_ = GOOGLE_LONGLONG(-9223372036854775807);
  really_small_int64_ = GOOGLE_LONGLONG(~0x7fffffffffffffff);
  really_small_int32_ = (~0x7fffffff);
  one_float_ = 1;
  small_float_ = 1.5f;
  negative_one_float_ = -1;
  negative_float_ = -1.5f;
  large_float_ = 2e+08f;
  inf_double_ = ::google::protobuf::internal::Infinity();
  neg_inf_double_ = -::google::protobuf::internal::Infinity();
  small_negative_float_ = -8e-28f;
  inf_float_ = static_cast<float>(::google::protobuf::internal::Infinity());
  nan_double_ = ::google::protobuf::internal::NaN();
  neg_inf_float_ = static_cast<float>(-::google::protobuf::internal::Infinity());
  nan_float_ = static_cast<float>(::google::protobuf::internal::NaN());
}

TestExtremeDefaultValues::~TestExtremeDefaultValues() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtremeDefaultValues)
  SharedDtor();
}

void TestExtremeDefaultValues::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  escaped_bytes_.Destroy(_default_escaped_bytes_, arena);
  utf8_string_.Destroy(_default_utf8_string_, arena);
  cpp_trigraph_.Destroy(_default_cpp_trigraph_, arena);
  string_with_zero_.Destroy(_default_string_with_zero_, arena);
  bytes_with_zero_.Destroy(_default_bytes_with_zero_, arena);
  string_piece_with_zero_.Destroy(_default_string_piece_with_zero_, arena);
  cord_with_zero_.Destroy(_default_cord_with_zero_, arena);
  replacement_string_.Destroy(_default_replacement_string_, arena);
}

void TestExtremeDefaultValues::ArenaDtor(void* object) {
  TestExtremeDefaultValues* _this = reinterpret_cast< TestExtremeDefaultValues* >(object);
  (void)_this;
}
void TestExtremeDefaultValues::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestExtremeDefaultValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestExtremeDefaultValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestExtremeDefaultValues_descriptor_;
}

const TestExtremeDefaultValues& TestExtremeDefaultValues::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestExtremeDefaultValues> TestExtremeDefaultValues_default_instance_;

TestExtremeDefaultValues* TestExtremeDefaultValues::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestExtremeDefaultValues>(arena);
}

void TestExtremeDefaultValues::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtremeDefaultValues)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_escaped_bytes()) {
      escaped_bytes_.ClearToDefault(_default_escaped_bytes_, GetArenaNoVirtual());
    }
    large_uint32_ = 4294967295u;
    large_uint64_ = GOOGLE_ULONGLONG(18446744073709551615);
    small_int32_ = -2147483647;
    small_int64_ = GOOGLE_LONGLONG(-9223372036854775807);
    really_small_int32_ = (~0x7fffffff);
    really_small_int64_ = GOOGLE_LONGLONG(~0x7fffffffffffffff);
    if (has_utf8_string()) {
      utf8_string_.ClearToDefault(_default_utf8_string_, GetArenaNoVirtual());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    zero_float_ = 0;
    one_float_ = 1;
    small_float_ = 1.5f;
    negative_one_float_ = -1;
    negative_float_ = -1.5f;
    large_float_ = 2e+08f;
    small_negative_float_ = -8e-28f;
    inf_double_ = ::google::protobuf::internal::Infinity();
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    neg_inf_double_ = -::google::protobuf::internal::Infinity();
    nan_double_ = ::google::protobuf::internal::NaN();
    inf_float_ = static_cast<float>(::google::protobuf::internal::Infinity());
    neg_inf_float_ = static_cast<float>(-::google::protobuf::internal::Infinity());
    nan_float_ = static_cast<float>(::google::protobuf::internal::NaN());
    if (has_cpp_trigraph()) {
      cpp_trigraph_.ClearToDefault(_default_cpp_trigraph_, GetArenaNoVirtual());
    }
    if (has_string_with_zero()) {
      string_with_zero_.ClearToDefault(_default_string_with_zero_, GetArenaNoVirtual());
    }
    if (has_bytes_with_zero()) {
      bytes_with_zero_.ClearToDefault(_default_bytes_with_zero_, GetArenaNoVirtual());
    }
  }
  if (_has_bits_[24 / 32] & 117440512u) {
    if (has_string_piece_with_zero()) {
      string_piece_with_zero_.ClearToDefault(_default_string_piece_with_zero_, GetArenaNoVirtual());
    }
    if (has_cord_with_zero()) {
      cord_with_zero_.ClearToDefault(_default_cord_with_zero_, GetArenaNoVirtual());
    }
    if (has_replacement_string()) {
      replacement_string_.ClearToDefault(_default_replacement_string_, GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestExtremeDefaultValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestExtremeDefaultValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_escaped_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_large_uint32;
        break;
      }

      // optional uint32 large_uint32 = 2 [default = 4294967295];
      case 2: {
        if (tag == 16) {
         parse_large_uint32:
          set_has_large_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &large_uint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_large_uint64;
        break;
      }

      // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
      case 3: {
        if (tag == 24) {
         parse_large_uint64:
          set_has_large_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &large_uint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_small_int32;
        break;
      }

      // optional int32 small_int32 = 4 [default = -2147483647];
      case 4: {
        if (tag == 32) {
         parse_small_int32:
          set_has_small_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &small_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_small_int64;
        break;
      }

      // optional int64 small_int64 = 5 [default = -9223372036854775807];
      case 5: {
        if (tag == 40) {
         parse_small_int64:
          set_has_small_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &small_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_utf8_string;
        break;
      }

      // optional string utf8_string = 6 [default = "\341\210\264"];
      case 6: {
        if (tag == 50) {
         parse_utf8_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_utf8_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->utf8_string().data(), this->utf8_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.utf8_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_zero_float;
        break;
      }

      // optional float zero_float = 7 [default = 0];
      case 7: {
        if (tag == 61) {
         parse_zero_float:
          set_has_zero_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zero_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_one_float;
        break;
      }

      // optional float one_float = 8 [default = 1];
      case 8: {
        if (tag == 69) {
         parse_one_float:
          set_has_one_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &one_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_small_float;
        break;
      }

      // optional float small_float = 9 [default = 1.5];
      case 9: {
        if (tag == 77) {
         parse_small_float:
          set_has_small_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &small_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_negative_one_float;
        break;
      }

      // optional float negative_one_float = 10 [default = -1];
      case 10: {
        if (tag == 85) {
         parse_negative_one_float:
          set_has_negative_one_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &negative_one_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_negative_float;
        break;
      }

      // optional float negative_float = 11 [default = -1.5];
      case 11: {
        if (tag == 93) {
         parse_negative_float:
          set_has_negative_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &negative_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_large_float;
        break;
      }

      // optional float large_float = 12 [default = 2e+08];
      case 12: {
        if (tag == 101) {
         parse_large_float:
          set_has_large_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &large_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_small_negative_float;
        break;
      }

      // optional float small_negative_float = 13 [default = -8e-28];
      case 13: {
        if (tag == 109) {
         parse_small_negative_float:
          set_has_small_negative_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &small_negative_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_inf_double;
        break;
      }

      // optional double inf_double = 14 [default = inf];
      case 14: {
        if (tag == 113) {
         parse_inf_double:
          set_has_inf_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &inf_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_neg_inf_double;
        break;
      }

      // optional double neg_inf_double = 15 [default = -inf];
      case 15: {
        if (tag == 121) {
         parse_neg_inf_double:
          set_has_neg_inf_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &neg_inf_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_nan_double;
        break;
      }

      // optional double nan_double = 16 [default = nan];
      case 16: {
        if (tag == 129) {
         parse_nan_double:
          set_has_nan_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nan_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(141)) goto parse_inf_float;
        break;
      }

      // optional float inf_float = 17 [default = inf];
      case 17: {
        if (tag == 141) {
         parse_inf_float:
          set_has_inf_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inf_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_neg_inf_float;
        break;
      }

      // optional float neg_inf_float = 18 [default = -inf];
      case 18: {
        if (tag == 149) {
         parse_neg_inf_float:
          set_has_neg_inf_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &neg_inf_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_nan_float;
        break;
      }

      // optional float nan_float = 19 [default = nan];
      case 19: {
        if (tag == 157) {
         parse_nan_float:
          set_has_nan_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nan_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_cpp_trigraph;
        break;
      }

      // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
      case 20: {
        if (tag == 162) {
         parse_cpp_trigraph:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpp_trigraph()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cpp_trigraph().data(), this->cpp_trigraph().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_really_small_int32;
        break;
      }

      // optional int32 really_small_int32 = 21 [default = -2147483648];
      case 21: {
        if (tag == 168) {
         parse_really_small_int32:
          set_has_really_small_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &really_small_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_really_small_int64;
        break;
      }

      // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
      case 22: {
        if (tag == 176) {
         parse_really_small_int64:
          set_has_really_small_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &really_small_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_string_with_zero;
        break;
      }

      // optional string string_with_zero = 23 [default = "hel\000lo"];
      case 23: {
        if (tag == 186) {
         parse_string_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_with_zero().data(), this->string_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.string_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_bytes_with_zero;
        break;
      }

      // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
      case 24: {
        if (tag == 194) {
         parse_bytes_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_with_zero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_string_piece_with_zero;
        break;
      }

      // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
      case 25: {
        if (tag == 202) {
         parse_string_piece_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_piece_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_cord_with_zero;
        break;
      }

      // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
      case 26: {
        if (tag == 210) {
         parse_cord_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cord_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cord_with_zero().data(), this->cord_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.cord_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_replacement_string;
        break;
      }

      // optional string replacement_string = 27 [default = "${unknown}"];
      case 27: {
        if (tag == 218) {
         parse_replacement_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replacement_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replacement_string().data(), this->replacement_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestExtremeDefaultValues.replacement_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestExtremeDefaultValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestExtremeDefaultValues)
  return false;
#undef DO_
}

void TestExtremeDefaultValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestExtremeDefaultValues)
  // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  if (has_escaped_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->escaped_bytes(), output);
  }

  // optional uint32 large_uint32 = 2 [default = 4294967295];
  if (has_large_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->large_uint32(), output);
  }

  // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
  if (has_large_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->large_uint64(), output);
  }

  // optional int32 small_int32 = 4 [default = -2147483647];
  if (has_small_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->small_int32(), output);
  }

  // optional int64 small_int64 = 5 [default = -9223372036854775807];
  if (has_small_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->small_int64(), output);
  }

  // optional string utf8_string = 6 [default = "\341\210\264"];
  if (has_utf8_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->utf8_string().data(), this->utf8_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.utf8_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->utf8_string(), output);
  }

  // optional float zero_float = 7 [default = 0];
  if (has_zero_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->zero_float(), output);
  }

  // optional float one_float = 8 [default = 1];
  if (has_one_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->one_float(), output);
  }

  // optional float small_float = 9 [default = 1.5];
  if (has_small_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->small_float(), output);
  }

  // optional float negative_one_float = 10 [default = -1];
  if (has_negative_one_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->negative_one_float(), output);
  }

  // optional float negative_float = 11 [default = -1.5];
  if (has_negative_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->negative_float(), output);
  }

  // optional float large_float = 12 [default = 2e+08];
  if (has_large_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->large_float(), output);
  }

  // optional float small_negative_float = 13 [default = -8e-28];
  if (has_small_negative_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->small_negative_float(), output);
  }

  // optional double inf_double = 14 [default = inf];
  if (has_inf_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->inf_double(), output);
  }

  // optional double neg_inf_double = 15 [default = -inf];
  if (has_neg_inf_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->neg_inf_double(), output);
  }

  // optional double nan_double = 16 [default = nan];
  if (has_nan_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->nan_double(), output);
  }

  // optional float inf_float = 17 [default = inf];
  if (has_inf_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->inf_float(), output);
  }

  // optional float neg_inf_float = 18 [default = -inf];
  if (has_neg_inf_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->neg_inf_float(), output);
  }

  // optional float nan_float = 19 [default = nan];
  if (has_nan_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->nan_float(), output);
  }

  // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  if (has_cpp_trigraph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpp_trigraph().data(), this->cpp_trigraph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->cpp_trigraph(), output);
  }

  // optional int32 really_small_int32 = 21 [default = -2147483648];
  if (has_really_small_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->really_small_int32(), output);
  }

  // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
  if (has_really_small_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->really_small_int64(), output);
  }

  // optional string string_with_zero = 23 [default = "hel\000lo"];
  if (has_string_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_with_zero().data(), this->string_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.string_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->string_with_zero(), output);
  }

  // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
  if (has_bytes_with_zero()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->bytes_with_zero(), output);
  }

  // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  if (has_string_piece_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->string_piece_with_zero(), output);
  }

  // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  if (has_cord_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cord_with_zero().data(), this->cord_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.cord_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->cord_with_zero(), output);
  }

  // optional string replacement_string = 27 [default = "${unknown}"];
  if (has_replacement_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement_string().data(), this->replacement_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.replacement_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->replacement_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestExtremeDefaultValues)
}

::google::protobuf::uint8* TestExtremeDefaultValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtremeDefaultValues)
  // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  if (has_escaped_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->escaped_bytes(), target);
  }

  // optional uint32 large_uint32 = 2 [default = 4294967295];
  if (has_large_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->large_uint32(), target);
  }

  // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
  if (has_large_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->large_uint64(), target);
  }

  // optional int32 small_int32 = 4 [default = -2147483647];
  if (has_small_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->small_int32(), target);
  }

  // optional int64 small_int64 = 5 [default = -9223372036854775807];
  if (has_small_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->small_int64(), target);
  }

  // optional string utf8_string = 6 [default = "\341\210\264"];
  if (has_utf8_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->utf8_string().data(), this->utf8_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.utf8_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->utf8_string(), target);
  }

  // optional float zero_float = 7 [default = 0];
  if (has_zero_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->zero_float(), target);
  }

  // optional float one_float = 8 [default = 1];
  if (has_one_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->one_float(), target);
  }

  // optional float small_float = 9 [default = 1.5];
  if (has_small_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->small_float(), target);
  }

  // optional float negative_one_float = 10 [default = -1];
  if (has_negative_one_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->negative_one_float(), target);
  }

  // optional float negative_float = 11 [default = -1.5];
  if (has_negative_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->negative_float(), target);
  }

  // optional float large_float = 12 [default = 2e+08];
  if (has_large_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->large_float(), target);
  }

  // optional float small_negative_float = 13 [default = -8e-28];
  if (has_small_negative_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->small_negative_float(), target);
  }

  // optional double inf_double = 14 [default = inf];
  if (has_inf_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->inf_double(), target);
  }

  // optional double neg_inf_double = 15 [default = -inf];
  if (has_neg_inf_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->neg_inf_double(), target);
  }

  // optional double nan_double = 16 [default = nan];
  if (has_nan_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->nan_double(), target);
  }

  // optional float inf_float = 17 [default = inf];
  if (has_inf_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->inf_float(), target);
  }

  // optional float neg_inf_float = 18 [default = -inf];
  if (has_neg_inf_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->neg_inf_float(), target);
  }

  // optional float nan_float = 19 [default = nan];
  if (has_nan_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->nan_float(), target);
  }

  // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  if (has_cpp_trigraph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpp_trigraph().data(), this->cpp_trigraph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->cpp_trigraph(), target);
  }

  // optional int32 really_small_int32 = 21 [default = -2147483648];
  if (has_really_small_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->really_small_int32(), target);
  }

  // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
  if (has_really_small_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->really_small_int64(), target);
  }

  // optional string string_with_zero = 23 [default = "hel\000lo"];
  if (has_string_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_with_zero().data(), this->string_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.string_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->string_with_zero(), target);
  }

  // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
  if (has_bytes_with_zero()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->bytes_with_zero(), target);
  }

  // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  if (has_string_piece_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->string_piece_with_zero(), target);
  }

  // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  if (has_cord_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cord_with_zero().data(), this->cord_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.cord_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->cord_with_zero(), target);
  }

  // optional string replacement_string = 27 [default = "${unknown}"];
  if (has_replacement_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement_string().data(), this->replacement_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestExtremeDefaultValues.replacement_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->replacement_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtremeDefaultValues)
  return target;
}

size_t TestExtremeDefaultValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtremeDefaultValues)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
    if (has_escaped_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->escaped_bytes());
    }

    // optional uint32 large_uint32 = 2 [default = 4294967295];
    if (has_large_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->large_uint32());
    }

    // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
    if (has_large_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->large_uint64());
    }

    // optional int32 small_int32 = 4 [default = -2147483647];
    if (has_small_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->small_int32());
    }

    // optional int64 small_int64 = 5 [default = -9223372036854775807];
    if (has_small_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->small_int64());
    }

    // optional int32 really_small_int32 = 21 [default = -2147483648];
    if (has_really_small_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->really_small_int32());
    }

    // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
    if (has_really_small_int64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->really_small_int64());
    }

    // optional string utf8_string = 6 [default = "\341\210\264"];
    if (has_utf8_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->utf8_string());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float zero_float = 7 [default = 0];
    if (has_zero_float()) {
      total_size += 1 + 4;
    }

    // optional float one_float = 8 [default = 1];
    if (has_one_float()) {
      total_size += 1 + 4;
    }

    // optional float small_float = 9 [default = 1.5];
    if (has_small_float()) {
      total_size += 1 + 4;
    }

    // optional float negative_one_float = 10 [default = -1];
    if (has_negative_one_float()) {
      total_size += 1 + 4;
    }

    // optional float negative_float = 11 [default = -1.5];
    if (has_negative_float()) {
      total_size += 1 + 4;
    }

    // optional float large_float = 12 [default = 2e+08];
    if (has_large_float()) {
      total_size += 1 + 4;
    }

    // optional float small_negative_float = 13 [default = -8e-28];
    if (has_small_negative_float()) {
      total_size += 1 + 4;
    }

    // optional double inf_double = 14 [default = inf];
    if (has_inf_double()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional double neg_inf_double = 15 [default = -inf];
    if (has_neg_inf_double()) {
      total_size += 1 + 8;
    }

    // optional double nan_double = 16 [default = nan];
    if (has_nan_double()) {
      total_size += 2 + 8;
    }

    // optional float inf_float = 17 [default = inf];
    if (has_inf_float()) {
      total_size += 2 + 4;
    }

    // optional float neg_inf_float = 18 [default = -inf];
    if (has_neg_inf_float()) {
      total_size += 2 + 4;
    }

    // optional float nan_float = 19 [default = nan];
    if (has_nan_float()) {
      total_size += 2 + 4;
    }

    // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
    if (has_cpp_trigraph()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cpp_trigraph());
    }

    // optional string string_with_zero = 23 [default = "hel\000lo"];
    if (has_string_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_with_zero());
    }

    // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
    if (has_bytes_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_with_zero());
    }

  }
  if (_has_bits_[24 / 32] & 117440512u) {
    // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
    if (has_string_piece_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_piece_with_zero());
    }

    // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
    if (has_cord_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cord_with_zero());
    }

    // optional string replacement_string = 27 [default = "${unknown}"];
    if (has_replacement_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->replacement_string());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestExtremeDefaultValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestExtremeDefaultValues)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestExtremeDefaultValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestExtremeDefaultValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestExtremeDefaultValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestExtremeDefaultValues)
    UnsafeMergeFrom(*source);
  }
}

void TestExtremeDefaultValues::MergeFrom(const TestExtremeDefaultValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtremeDefaultValues)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestExtremeDefaultValues::UnsafeMergeFrom(const TestExtremeDefaultValues& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escaped_bytes()) {
      set_escaped_bytes(from.escaped_bytes());
    }
    if (from.has_large_uint32()) {
      set_large_uint32(from.large_uint32());
    }
    if (from.has_large_uint64()) {
      set_large_uint64(from.large_uint64());
    }
    if (from.has_small_int32()) {
      set_small_int32(from.small_int32());
    }
    if (from.has_small_int64()) {
      set_small_int64(from.small_int64());
    }
    if (from.has_really_small_int32()) {
      set_really_small_int32(from.really_small_int32());
    }
    if (from.has_really_small_int64()) {
      set_really_small_int64(from.really_small_int64());
    }
    if (from.has_utf8_string()) {
      set_utf8_string(from.utf8_string());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_zero_float()) {
      set_zero_float(from.zero_float());
    }
    if (from.has_one_float()) {
      set_one_float(from.one_float());
    }
    if (from.has_small_float()) {
      set_small_float(from.small_float());
    }
    if (from.has_negative_one_float()) {
      set_negative_one_float(from.negative_one_float());
    }
    if (from.has_negative_float()) {
      set_negative_float(from.negative_float());
    }
    if (from.has_large_float()) {
      set_large_float(from.large_float());
    }
    if (from.has_small_negative_float()) {
      set_small_negative_float(from.small_negative_float());
    }
    if (from.has_inf_double()) {
      set_inf_double(from.inf_double());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_neg_inf_double()) {
      set_neg_inf_double(from.neg_inf_double());
    }
    if (from.has_nan_double()) {
      set_nan_double(from.nan_double());
    }
    if (from.has_inf_float()) {
      set_inf_float(from.inf_float());
    }
    if (from.has_neg_inf_float()) {
      set_neg_inf_float(from.neg_inf_float());
    }
    if (from.has_nan_float()) {
      set_nan_float(from.nan_float());
    }
    if (from.has_cpp_trigraph()) {
      set_cpp_trigraph(from.cpp_trigraph());
    }
    if (from.has_string_with_zero()) {
      set_string_with_zero(from.string_with_zero());
    }
    if (from.has_bytes_with_zero()) {
      set_bytes_with_zero(from.bytes_with_zero());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_string_piece_with_zero()) {
      set_string_piece_with_zero(from.string_piece_with_zero());
    }
    if (from.has_cord_with_zero()) {
      set_cord_with_zero(from.cord_with_zero());
    }
    if (from.has_replacement_string()) {
      set_replacement_string(from.replacement_string());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestExtremeDefaultValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestExtremeDefaultValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestExtremeDefaultValues::CopyFrom(const TestExtremeDefaultValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtremeDefaultValues)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestExtremeDefaultValues::IsInitialized() const {

  return true;
}

void TestExtremeDefaultValues::Swap(TestExtremeDefaultValues* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestExtremeDefaultValues temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestExtremeDefaultValues::UnsafeArenaSwap(TestExtremeDefaultValues* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestExtremeDefaultValues::InternalSwap(TestExtremeDefaultValues* other) {
  escaped_bytes_.Swap(&other->escaped_bytes_);
  std::swap(large_uint32_, other->large_uint32_);
  std::swap(large_uint64_, other->large_uint64_);
  std::swap(small_int32_, other->small_int32_);
  std::swap(small_int64_, other->small_int64_);
  std::swap(really_small_int32_, other->really_small_int32_);
  std::swap(really_small_int64_, other->really_small_int64_);
  utf8_string_.Swap(&other->utf8_string_);
  std::swap(zero_float_, other->zero_float_);
  std::swap(one_float_, other->one_float_);
  std::swap(small_float_, other->small_float_);
  std::swap(negative_one_float_, other->negative_one_float_);
  std::swap(negative_float_, other->negative_float_);
  std::swap(large_float_, other->large_float_);
  std::swap(small_negative_float_, other->small_negative_float_);
  std::swap(inf_double_, other->inf_double_);
  std::swap(neg_inf_double_, other->neg_inf_double_);
  std::swap(nan_double_, other->nan_double_);
  std::swap(inf_float_, other->inf_float_);
  std::swap(neg_inf_float_, other->neg_inf_float_);
  std::swap(nan_float_, other->nan_float_);
  cpp_trigraph_.Swap(&other->cpp_trigraph_);
  string_with_zero_.Swap(&other->string_with_zero_);
  bytes_with_zero_.Swap(&other->bytes_with_zero_);
  string_piece_with_zero_.Swap(&other->string_piece_with_zero_);
  cord_with_zero_.Swap(&other->cord_with_zero_);
  replacement_string_.Swap(&other->replacement_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestExtremeDefaultValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestExtremeDefaultValues_descriptor_;
  metadata.reflection = TestExtremeDefaultValues_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestExtremeDefaultValues

// optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
bool TestExtremeDefaultValues::has_escaped_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestExtremeDefaultValues::set_has_escaped_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
void TestExtremeDefaultValues::clear_has_escaped_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestExtremeDefaultValues::clear_escaped_bytes() {
  escaped_bytes_.ClearToDefault(_default_escaped_bytes_, GetArenaNoVirtual());
  clear_has_escaped_bytes();
}
const ::std::string& TestExtremeDefaultValues::escaped_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
  return escaped_bytes_.Get(_default_escaped_bytes_);
}
void TestExtremeDefaultValues::set_escaped_bytes(const ::std::string& value) {
  set_has_escaped_bytes();
  escaped_bytes_.Set(_default_escaped_bytes_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
}
void TestExtremeDefaultValues::set_escaped_bytes(const char* value) {
  set_has_escaped_bytes();
  escaped_bytes_.Set(_default_escaped_bytes_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
}
void TestExtremeDefaultValues::set_escaped_bytes(const void* value,
    size_t size) {
  set_has_escaped_bytes();
  escaped_bytes_.Set(_default_escaped_bytes_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
}
::std::string* TestExtremeDefaultValues::mutable_escaped_bytes() {
  set_has_escaped_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
  return escaped_bytes_.Mutable(_default_escaped_bytes_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_escaped_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
  clear_has_escaped_bytes();
  return escaped_bytes_.Release(_default_escaped_bytes_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_escaped_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_escaped_bytes();
  return escaped_bytes_.UnsafeArenaRelease(_default_escaped_bytes_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_escaped_bytes(::std::string* escaped_bytes) {
  if (escaped_bytes != NULL) {
    set_has_escaped_bytes();
  } else {
    clear_has_escaped_bytes();
  }
  escaped_bytes_.SetAllocated(_default_escaped_bytes_, escaped_bytes,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_escaped_bytes(
    ::std::string* escaped_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (escaped_bytes != NULL) {
    set_has_escaped_bytes();
  } else {
    clear_has_escaped_bytes();
  }
  escaped_bytes_.UnsafeArenaSetAllocated(_default_escaped_bytes_,
      escaped_bytes, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.escaped_bytes)
}

// optional uint32 large_uint32 = 2 [default = 4294967295];
bool TestExtremeDefaultValues::has_large_uint32() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestExtremeDefaultValues::set_has_large_uint32() {
  _has_bits_[0] |= 0x00000002u;
}
void TestExtremeDefaultValues::clear_has_large_uint32() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestExtremeDefaultValues::clear_large_uint32() {
  large_uint32_ = 4294967295u;
  clear_has_large_uint32();
}
::google::protobuf::uint32 TestExtremeDefaultValues::large_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.large_uint32)
  return large_uint32_;
}
void TestExtremeDefaultValues::set_large_uint32(::google::protobuf::uint32 value) {
  set_has_large_uint32();
  large_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.large_uint32)
}

// optional uint64 large_uint64 = 3 [default = 18446744073709551615];
bool TestExtremeDefaultValues::has_large_uint64() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestExtremeDefaultValues::set_has_large_uint64() {
  _has_bits_[0] |= 0x00000004u;
}
void TestExtremeDefaultValues::clear_has_large_uint64() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestExtremeDefaultValues::clear_large_uint64() {
  large_uint64_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_large_uint64();
}
::google::protobuf::uint64 TestExtremeDefaultValues::large_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.large_uint64)
  return large_uint64_;
}
void TestExtremeDefaultValues::set_large_uint64(::google::protobuf::uint64 value) {
  set_has_large_uint64();
  large_uint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.large_uint64)
}

// optional int32 small_int32 = 4 [default = -2147483647];
bool TestExtremeDefaultValues::has_small_int32() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestExtremeDefaultValues::set_has_small_int32() {
  _has_bits_[0] |= 0x00000008u;
}
void TestExtremeDefaultValues::clear_has_small_int32() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestExtremeDefaultValues::clear_small_int32() {
  small_int32_ = -2147483647;
  clear_has_small_int32();
}
::google::protobuf::int32 TestExtremeDefaultValues::small_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.small_int32)
  return small_int32_;
}
void TestExtremeDefaultValues::set_small_int32(::google::protobuf::int32 value) {
  set_has_small_int32();
  small_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.small_int32)
}

// optional int64 small_int64 = 5 [default = -9223372036854775807];
bool TestExtremeDefaultValues::has_small_int64() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestExtremeDefaultValues::set_has_small_int64() {
  _has_bits_[0] |= 0x00000010u;
}
void TestExtremeDefaultValues::clear_has_small_int64() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestExtremeDefaultValues::clear_small_int64() {
  small_int64_ = GOOGLE_LONGLONG(-9223372036854775807);
  clear_has_small_int64();
}
::google::protobuf::int64 TestExtremeDefaultValues::small_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.small_int64)
  return small_int64_;
}
void TestExtremeDefaultValues::set_small_int64(::google::protobuf::int64 value) {
  set_has_small_int64();
  small_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.small_int64)
}

// optional int32 really_small_int32 = 21 [default = -2147483648];
bool TestExtremeDefaultValues::has_really_small_int32() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestExtremeDefaultValues::set_has_really_small_int32() {
  _has_bits_[0] |= 0x00000020u;
}
void TestExtremeDefaultValues::clear_has_really_small_int32() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestExtremeDefaultValues::clear_really_small_int32() {
  really_small_int32_ = (~0x7fffffff);
  clear_has_really_small_int32();
}
::google::protobuf::int32 TestExtremeDefaultValues::really_small_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.really_small_int32)
  return really_small_int32_;
}
void TestExtremeDefaultValues::set_really_small_int32(::google::protobuf::int32 value) {
  set_has_really_small_int32();
  really_small_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.really_small_int32)
}

// optional int64 really_small_int64 = 22 [default = -9223372036854775808];
bool TestExtremeDefaultValues::has_really_small_int64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TestExtremeDefaultValues::set_has_really_small_int64() {
  _has_bits_[0] |= 0x00000040u;
}
void TestExtremeDefaultValues::clear_has_really_small_int64() {
  _has_bits_[0] &= ~0x00000040u;
}
void TestExtremeDefaultValues::clear_really_small_int64() {
  really_small_int64_ = GOOGLE_LONGLONG(~0x7fffffffffffffff);
  clear_has_really_small_int64();
}
::google::protobuf::int64 TestExtremeDefaultValues::really_small_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.really_small_int64)
  return really_small_int64_;
}
void TestExtremeDefaultValues::set_really_small_int64(::google::protobuf::int64 value) {
  set_has_really_small_int64();
  really_small_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.really_small_int64)
}

// optional string utf8_string = 6 [default = "\341\210\264"];
bool TestExtremeDefaultValues::has_utf8_string() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TestExtremeDefaultValues::set_has_utf8_string() {
  _has_bits_[0] |= 0x00000080u;
}
void TestExtremeDefaultValues::clear_has_utf8_string() {
  _has_bits_[0] &= ~0x00000080u;
}
void TestExtremeDefaultValues::clear_utf8_string() {
  utf8_string_.ClearToDefault(_default_utf8_string_, GetArenaNoVirtual());
  clear_has_utf8_string();
}
const ::std::string& TestExtremeDefaultValues::utf8_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
  return utf8_string_.Get(_default_utf8_string_);
}
void TestExtremeDefaultValues::set_utf8_string(const ::std::string& value) {
  set_has_utf8_string();
  utf8_string_.Set(_default_utf8_string_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
}
void TestExtremeDefaultValues::set_utf8_string(const char* value) {
  set_has_utf8_string();
  utf8_string_.Set(_default_utf8_string_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
}
void TestExtremeDefaultValues::set_utf8_string(const char* value,
    size_t size) {
  set_has_utf8_string();
  utf8_string_.Set(_default_utf8_string_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
}
::std::string* TestExtremeDefaultValues::mutable_utf8_string() {
  set_has_utf8_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
  return utf8_string_.Mutable(_default_utf8_string_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_utf8_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
  clear_has_utf8_string();
  return utf8_string_.Release(_default_utf8_string_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_utf8_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_utf8_string();
  return utf8_string_.UnsafeArenaRelease(_default_utf8_string_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_utf8_string(::std::string* utf8_string) {
  if (utf8_string != NULL) {
    set_has_utf8_string();
  } else {
    clear_has_utf8_string();
  }
  utf8_string_.SetAllocated(_default_utf8_string_, utf8_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_utf8_string(
    ::std::string* utf8_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (utf8_string != NULL) {
    set_has_utf8_string();
  } else {
    clear_has_utf8_string();
  }
  utf8_string_.UnsafeArenaSetAllocated(_default_utf8_string_,
      utf8_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.utf8_string)
}

// optional float zero_float = 7 [default = 0];
bool TestExtremeDefaultValues::has_zero_float() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TestExtremeDefaultValues::set_has_zero_float() {
  _has_bits_[0] |= 0x00000100u;
}
void TestExtremeDefaultValues::clear_has_zero_float() {
  _has_bits_[0] &= ~0x00000100u;
}
void TestExtremeDefaultValues::clear_zero_float() {
  zero_float_ = 0;
  clear_has_zero_float();
}
float TestExtremeDefaultValues::zero_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.zero_float)
  return zero_float_;
}
void TestExtremeDefaultValues::set_zero_float(float value) {
  set_has_zero_float();
  zero_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.zero_float)
}

// optional float one_float = 8 [default = 1];
bool TestExtremeDefaultValues::has_one_float() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TestExtremeDefaultValues::set_has_one_float() {
  _has_bits_[0] |= 0x00000200u;
}
void TestExtremeDefaultValues::clear_has_one_float() {
  _has_bits_[0] &= ~0x00000200u;
}
void TestExtremeDefaultValues::clear_one_float() {
  one_float_ = 1;
  clear_has_one_float();
}
float TestExtremeDefaultValues::one_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.one_float)
  return one_float_;
}
void TestExtremeDefaultValues::set_one_float(float value) {
  set_has_one_float();
  one_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.one_float)
}

// optional float small_float = 9 [default = 1.5];
bool TestExtremeDefaultValues::has_small_float() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TestExtremeDefaultValues::set_has_small_float() {
  _has_bits_[0] |= 0x00000400u;
}
void TestExtremeDefaultValues::clear_has_small_float() {
  _has_bits_[0] &= ~0x00000400u;
}
void TestExtremeDefaultValues::clear_small_float() {
  small_float_ = 1.5f;
  clear_has_small_float();
}
float TestExtremeDefaultValues::small_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.small_float)
  return small_float_;
}
void TestExtremeDefaultValues::set_small_float(float value) {
  set_has_small_float();
  small_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.small_float)
}

// optional float negative_one_float = 10 [default = -1];
bool TestExtremeDefaultValues::has_negative_one_float() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TestExtremeDefaultValues::set_has_negative_one_float() {
  _has_bits_[0] |= 0x00000800u;
}
void TestExtremeDefaultValues::clear_has_negative_one_float() {
  _has_bits_[0] &= ~0x00000800u;
}
void TestExtremeDefaultValues::clear_negative_one_float() {
  negative_one_float_ = -1;
  clear_has_negative_one_float();
}
float TestExtremeDefaultValues::negative_one_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.negative_one_float)
  return negative_one_float_;
}
void TestExtremeDefaultValues::set_negative_one_float(float value) {
  set_has_negative_one_float();
  negative_one_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.negative_one_float)
}

// optional float negative_float = 11 [default = -1.5];
bool TestExtremeDefaultValues::has_negative_float() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TestExtremeDefaultValues::set_has_negative_float() {
  _has_bits_[0] |= 0x00001000u;
}
void TestExtremeDefaultValues::clear_has_negative_float() {
  _has_bits_[0] &= ~0x00001000u;
}
void TestExtremeDefaultValues::clear_negative_float() {
  negative_float_ = -1.5f;
  clear_has_negative_float();
}
float TestExtremeDefaultValues::negative_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.negative_float)
  return negative_float_;
}
void TestExtremeDefaultValues::set_negative_float(float value) {
  set_has_negative_float();
  negative_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.negative_float)
}

// optional float large_float = 12 [default = 2e+08];
bool TestExtremeDefaultValues::has_large_float() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TestExtremeDefaultValues::set_has_large_float() {
  _has_bits_[0] |= 0x00002000u;
}
void TestExtremeDefaultValues::clear_has_large_float() {
  _has_bits_[0] &= ~0x00002000u;
}
void TestExtremeDefaultValues::clear_large_float() {
  large_float_ = 2e+08f;
  clear_has_large_float();
}
float TestExtremeDefaultValues::large_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.large_float)
  return large_float_;
}
void TestExtremeDefaultValues::set_large_float(float value) {
  set_has_large_float();
  large_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.large_float)
}

// optional float small_negative_float = 13 [default = -8e-28];
bool TestExtremeDefaultValues::has_small_negative_float() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TestExtremeDefaultValues::set_has_small_negative_float() {
  _has_bits_[0] |= 0x00004000u;
}
void TestExtremeDefaultValues::clear_has_small_negative_float() {
  _has_bits_[0] &= ~0x00004000u;
}
void TestExtremeDefaultValues::clear_small_negative_float() {
  small_negative_float_ = -8e-28f;
  clear_has_small_negative_float();
}
float TestExtremeDefaultValues::small_negative_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.small_negative_float)
  return small_negative_float_;
}
void TestExtremeDefaultValues::set_small_negative_float(float value) {
  set_has_small_negative_float();
  small_negative_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.small_negative_float)
}

// optional double inf_double = 14 [default = inf];
bool TestExtremeDefaultValues::has_inf_double() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TestExtremeDefaultValues::set_has_inf_double() {
  _has_bits_[0] |= 0x00008000u;
}
void TestExtremeDefaultValues::clear_has_inf_double() {
  _has_bits_[0] &= ~0x00008000u;
}
void TestExtremeDefaultValues::clear_inf_double() {
  inf_double_ = ::google::protobuf::internal::Infinity();
  clear_has_inf_double();
}
double TestExtremeDefaultValues::inf_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.inf_double)
  return inf_double_;
}
void TestExtremeDefaultValues::set_inf_double(double value) {
  set_has_inf_double();
  inf_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.inf_double)
}

// optional double neg_inf_double = 15 [default = -inf];
bool TestExtremeDefaultValues::has_neg_inf_double() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TestExtremeDefaultValues::set_has_neg_inf_double() {
  _has_bits_[0] |= 0x00010000u;
}
void TestExtremeDefaultValues::clear_has_neg_inf_double() {
  _has_bits_[0] &= ~0x00010000u;
}
void TestExtremeDefaultValues::clear_neg_inf_double() {
  neg_inf_double_ = -::google::protobuf::internal::Infinity();
  clear_has_neg_inf_double();
}
double TestExtremeDefaultValues::neg_inf_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.neg_inf_double)
  return neg_inf_double_;
}
void TestExtremeDefaultValues::set_neg_inf_double(double value) {
  set_has_neg_inf_double();
  neg_inf_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.neg_inf_double)
}

// optional double nan_double = 16 [default = nan];
bool TestExtremeDefaultValues::has_nan_double() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void TestExtremeDefaultValues::set_has_nan_double() {
  _has_bits_[0] |= 0x00020000u;
}
void TestExtremeDefaultValues::clear_has_nan_double() {
  _has_bits_[0] &= ~0x00020000u;
}
void TestExtremeDefaultValues::clear_nan_double() {
  nan_double_ = ::google::protobuf::internal::NaN();
  clear_has_nan_double();
}
double TestExtremeDefaultValues::nan_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.nan_double)
  return nan_double_;
}
void TestExtremeDefaultValues::set_nan_double(double value) {
  set_has_nan_double();
  nan_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.nan_double)
}

// optional float inf_float = 17 [default = inf];
bool TestExtremeDefaultValues::has_inf_float() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void TestExtremeDefaultValues::set_has_inf_float() {
  _has_bits_[0] |= 0x00040000u;
}
void TestExtremeDefaultValues::clear_has_inf_float() {
  _has_bits_[0] &= ~0x00040000u;
}
void TestExtremeDefaultValues::clear_inf_float() {
  inf_float_ = static_cast<float>(::google::protobuf::internal::Infinity());
  clear_has_inf_float();
}
float TestExtremeDefaultValues::inf_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.inf_float)
  return inf_float_;
}
void TestExtremeDefaultValues::set_inf_float(float value) {
  set_has_inf_float();
  inf_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.inf_float)
}

// optional float neg_inf_float = 18 [default = -inf];
bool TestExtremeDefaultValues::has_neg_inf_float() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void TestExtremeDefaultValues::set_has_neg_inf_float() {
  _has_bits_[0] |= 0x00080000u;
}
void TestExtremeDefaultValues::clear_has_neg_inf_float() {
  _has_bits_[0] &= ~0x00080000u;
}
void TestExtremeDefaultValues::clear_neg_inf_float() {
  neg_inf_float_ = static_cast<float>(-::google::protobuf::internal::Infinity());
  clear_has_neg_inf_float();
}
float TestExtremeDefaultValues::neg_inf_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.neg_inf_float)
  return neg_inf_float_;
}
void TestExtremeDefaultValues::set_neg_inf_float(float value) {
  set_has_neg_inf_float();
  neg_inf_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.neg_inf_float)
}

// optional float nan_float = 19 [default = nan];
bool TestExtremeDefaultValues::has_nan_float() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void TestExtremeDefaultValues::set_has_nan_float() {
  _has_bits_[0] |= 0x00100000u;
}
void TestExtremeDefaultValues::clear_has_nan_float() {
  _has_bits_[0] &= ~0x00100000u;
}
void TestExtremeDefaultValues::clear_nan_float() {
  nan_float_ = static_cast<float>(::google::protobuf::internal::NaN());
  clear_has_nan_float();
}
float TestExtremeDefaultValues::nan_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.nan_float)
  return nan_float_;
}
void TestExtremeDefaultValues::set_nan_float(float value) {
  set_has_nan_float();
  nan_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.nan_float)
}

// optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
bool TestExtremeDefaultValues::has_cpp_trigraph() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void TestExtremeDefaultValues::set_has_cpp_trigraph() {
  _has_bits_[0] |= 0x00200000u;
}
void TestExtremeDefaultValues::clear_has_cpp_trigraph() {
  _has_bits_[0] &= ~0x00200000u;
}
void TestExtremeDefaultValues::clear_cpp_trigraph() {
  cpp_trigraph_.ClearToDefault(_default_cpp_trigraph_, GetArenaNoVirtual());
  clear_has_cpp_trigraph();
}
const ::std::string& TestExtremeDefaultValues::cpp_trigraph() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
  return cpp_trigraph_.Get(_default_cpp_trigraph_);
}
void TestExtremeDefaultValues::set_cpp_trigraph(const ::std::string& value) {
  set_has_cpp_trigraph();
  cpp_trigraph_.Set(_default_cpp_trigraph_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
}
void TestExtremeDefaultValues::set_cpp_trigraph(const char* value) {
  set_has_cpp_trigraph();
  cpp_trigraph_.Set(_default_cpp_trigraph_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
}
void TestExtremeDefaultValues::set_cpp_trigraph(const char* value,
    size_t size) {
  set_has_cpp_trigraph();
  cpp_trigraph_.Set(_default_cpp_trigraph_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
}
::std::string* TestExtremeDefaultValues::mutable_cpp_trigraph() {
  set_has_cpp_trigraph();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
  return cpp_trigraph_.Mutable(_default_cpp_trigraph_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_cpp_trigraph() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
  clear_has_cpp_trigraph();
  return cpp_trigraph_.Release(_default_cpp_trigraph_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_cpp_trigraph() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cpp_trigraph();
  return cpp_trigraph_.UnsafeArenaRelease(_default_cpp_trigraph_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_cpp_trigraph(::std::string* cpp_trigraph) {
  if (cpp_trigraph != NULL) {
    set_has_cpp_trigraph();
  } else {
    clear_has_cpp_trigraph();
  }
  cpp_trigraph_.SetAllocated(_default_cpp_trigraph_, cpp_trigraph,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_cpp_trigraph(
    ::std::string* cpp_trigraph) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cpp_trigraph != NULL) {
    set_has_cpp_trigraph();
  } else {
    clear_has_cpp_trigraph();
  }
  cpp_trigraph_.UnsafeArenaSetAllocated(_default_cpp_trigraph_,
      cpp_trigraph, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph)
}

// optional string string_with_zero = 23 [default = "hel\000lo"];
bool TestExtremeDefaultValues::has_string_with_zero() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void TestExtremeDefaultValues::set_has_string_with_zero() {
  _has_bits_[0] |= 0x00400000u;
}
void TestExtremeDefaultValues::clear_has_string_with_zero() {
  _has_bits_[0] &= ~0x00400000u;
}
void TestExtremeDefaultValues::clear_string_with_zero() {
  string_with_zero_.ClearToDefault(_default_string_with_zero_, GetArenaNoVirtual());
  clear_has_string_with_zero();
}
const ::std::string& TestExtremeDefaultValues::string_with_zero() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
  return string_with_zero_.Get(_default_string_with_zero_);
}
void TestExtremeDefaultValues::set_string_with_zero(const ::std::string& value) {
  set_has_string_with_zero();
  string_with_zero_.Set(_default_string_with_zero_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
}
void TestExtremeDefaultValues::set_string_with_zero(const char* value) {
  set_has_string_with_zero();
  string_with_zero_.Set(_default_string_with_zero_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
}
void TestExtremeDefaultValues::set_string_with_zero(const char* value,
    size_t size) {
  set_has_string_with_zero();
  string_with_zero_.Set(_default_string_with_zero_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
}
::std::string* TestExtremeDefaultValues::mutable_string_with_zero() {
  set_has_string_with_zero();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
  return string_with_zero_.Mutable(_default_string_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_string_with_zero() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
  clear_has_string_with_zero();
  return string_with_zero_.Release(_default_string_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_string_with_zero() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_string_with_zero();
  return string_with_zero_.UnsafeArenaRelease(_default_string_with_zero_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_string_with_zero(::std::string* string_with_zero) {
  if (string_with_zero != NULL) {
    set_has_string_with_zero();
  } else {
    clear_has_string_with_zero();
  }
  string_with_zero_.SetAllocated(_default_string_with_zero_, string_with_zero,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_string_with_zero(
    ::std::string* string_with_zero) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (string_with_zero != NULL) {
    set_has_string_with_zero();
  } else {
    clear_has_string_with_zero();
  }
  string_with_zero_.UnsafeArenaSetAllocated(_default_string_with_zero_,
      string_with_zero, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.string_with_zero)
}

// optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
bool TestExtremeDefaultValues::has_bytes_with_zero() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void TestExtremeDefaultValues::set_has_bytes_with_zero() {
  _has_bits_[0] |= 0x00800000u;
}
void TestExtremeDefaultValues::clear_has_bytes_with_zero() {
  _has_bits_[0] &= ~0x00800000u;
}
void TestExtremeDefaultValues::clear_bytes_with_zero() {
  bytes_with_zero_.ClearToDefault(_default_bytes_with_zero_, GetArenaNoVirtual());
  clear_has_bytes_with_zero();
}
const ::std::string& TestExtremeDefaultValues::bytes_with_zero() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
  return bytes_with_zero_.Get(_default_bytes_with_zero_);
}
void TestExtremeDefaultValues::set_bytes_with_zero(const ::std::string& value) {
  set_has_bytes_with_zero();
  bytes_with_zero_.Set(_default_bytes_with_zero_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
}
void TestExtremeDefaultValues::set_bytes_with_zero(const char* value) {
  set_has_bytes_with_zero();
  bytes_with_zero_.Set(_default_bytes_with_zero_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
}
void TestExtremeDefaultValues::set_bytes_with_zero(const void* value,
    size_t size) {
  set_has_bytes_with_zero();
  bytes_with_zero_.Set(_default_bytes_with_zero_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
}
::std::string* TestExtremeDefaultValues::mutable_bytes_with_zero() {
  set_has_bytes_with_zero();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
  return bytes_with_zero_.Mutable(_default_bytes_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_bytes_with_zero() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
  clear_has_bytes_with_zero();
  return bytes_with_zero_.Release(_default_bytes_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_bytes_with_zero() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_bytes_with_zero();
  return bytes_with_zero_.UnsafeArenaRelease(_default_bytes_with_zero_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_bytes_with_zero(::std::string* bytes_with_zero) {
  if (bytes_with_zero != NULL) {
    set_has_bytes_with_zero();
  } else {
    clear_has_bytes_with_zero();
  }
  bytes_with_zero_.SetAllocated(_default_bytes_with_zero_, bytes_with_zero,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_bytes_with_zero(
    ::std::string* bytes_with_zero) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bytes_with_zero != NULL) {
    set_has_bytes_with_zero();
  } else {
    clear_has_bytes_with_zero();
  }
  bytes_with_zero_.UnsafeArenaSetAllocated(_default_bytes_with_zero_,
      bytes_with_zero, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.bytes_with_zero)
}

// optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
bool TestExtremeDefaultValues::has_string_piece_with_zero() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void TestExtremeDefaultValues::set_has_string_piece_with_zero() {
  _has_bits_[0] |= 0x01000000u;
}
void TestExtremeDefaultValues::clear_has_string_piece_with_zero() {
  _has_bits_[0] &= ~0x01000000u;
}
void TestExtremeDefaultValues::clear_string_piece_with_zero() {
  string_piece_with_zero_.ClearToDefault(_default_string_piece_with_zero_, GetArenaNoVirtual());
  clear_has_string_piece_with_zero();
}
const ::std::string& TestExtremeDefaultValues::string_piece_with_zero() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  return string_piece_with_zero_.Get(_default_string_piece_with_zero_);
}
void TestExtremeDefaultValues::set_string_piece_with_zero(const ::std::string& value) {
  set_has_string_piece_with_zero();
  string_piece_with_zero_.Set(_default_string_piece_with_zero_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}
void TestExtremeDefaultValues::set_string_piece_with_zero(const char* value) {
  set_has_string_piece_with_zero();
  string_piece_with_zero_.Set(_default_string_piece_with_zero_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}
void TestExtremeDefaultValues::set_string_piece_with_zero(const char* value,
    size_t size) {
  set_has_string_piece_with_zero();
  string_piece_with_zero_.Set(_default_string_piece_with_zero_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}
::std::string* TestExtremeDefaultValues::mutable_string_piece_with_zero() {
  set_has_string_piece_with_zero();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  return string_piece_with_zero_.Mutable(_default_string_piece_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_string_piece_with_zero() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  clear_has_string_piece_with_zero();
  return string_piece_with_zero_.Release(_default_string_piece_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_string_piece_with_zero() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_string_piece_with_zero();
  return string_piece_with_zero_.UnsafeArenaRelease(_default_string_piece_with_zero_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_string_piece_with_zero(::std::string* string_piece_with_zero) {
  if (string_piece_with_zero != NULL) {
    set_has_string_piece_with_zero();
  } else {
    clear_has_string_piece_with_zero();
  }
  string_piece_with_zero_.SetAllocated(_default_string_piece_with_zero_, string_piece_with_zero,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_string_piece_with_zero(
    ::std::string* string_piece_with_zero) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (string_piece_with_zero != NULL) {
    set_has_string_piece_with_zero();
  } else {
    clear_has_string_piece_with_zero();
  }
  string_piece_with_zero_.UnsafeArenaSetAllocated(_default_string_piece_with_zero_,
      string_piece_with_zero, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}

// optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
bool TestExtremeDefaultValues::has_cord_with_zero() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void TestExtremeDefaultValues::set_has_cord_with_zero() {
  _has_bits_[0] |= 0x02000000u;
}
void TestExtremeDefaultValues::clear_has_cord_with_zero() {
  _has_bits_[0] &= ~0x02000000u;
}
void TestExtremeDefaultValues::clear_cord_with_zero() {
  cord_with_zero_.ClearToDefault(_default_cord_with_zero_, GetArenaNoVirtual());
  clear_has_cord_with_zero();
}
const ::std::string& TestExtremeDefaultValues::cord_with_zero() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
  return cord_with_zero_.Get(_default_cord_with_zero_);
}
void TestExtremeDefaultValues::set_cord_with_zero(const ::std::string& value) {
  set_has_cord_with_zero();
  cord_with_zero_.Set(_default_cord_with_zero_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
}
void TestExtremeDefaultValues::set_cord_with_zero(const char* value) {
  set_has_cord_with_zero();
  cord_with_zero_.Set(_default_cord_with_zero_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
}
void TestExtremeDefaultValues::set_cord_with_zero(const char* value,
    size_t size) {
  set_has_cord_with_zero();
  cord_with_zero_.Set(_default_cord_with_zero_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
}
::std::string* TestExtremeDefaultValues::mutable_cord_with_zero() {
  set_has_cord_with_zero();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
  return cord_with_zero_.Mutable(_default_cord_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_cord_with_zero() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
  clear_has_cord_with_zero();
  return cord_with_zero_.Release(_default_cord_with_zero_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_cord_with_zero() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cord_with_zero();
  return cord_with_zero_.UnsafeArenaRelease(_default_cord_with_zero_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_cord_with_zero(::std::string* cord_with_zero) {
  if (cord_with_zero != NULL) {
    set_has_cord_with_zero();
  } else {
    clear_has_cord_with_zero();
  }
  cord_with_zero_.SetAllocated(_default_cord_with_zero_, cord_with_zero,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_cord_with_zero(
    ::std::string* cord_with_zero) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cord_with_zero != NULL) {
    set_has_cord_with_zero();
  } else {
    clear_has_cord_with_zero();
  }
  cord_with_zero_.UnsafeArenaSetAllocated(_default_cord_with_zero_,
      cord_with_zero, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.cord_with_zero)
}

// optional string replacement_string = 27 [default = "${unknown}"];
bool TestExtremeDefaultValues::has_replacement_string() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void TestExtremeDefaultValues::set_has_replacement_string() {
  _has_bits_[0] |= 0x04000000u;
}
void TestExtremeDefaultValues::clear_has_replacement_string() {
  _has_bits_[0] &= ~0x04000000u;
}
void TestExtremeDefaultValues::clear_replacement_string() {
  replacement_string_.ClearToDefault(_default_replacement_string_, GetArenaNoVirtual());
  clear_has_replacement_string();
}
const ::std::string& TestExtremeDefaultValues::replacement_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
  return replacement_string_.Get(_default_replacement_string_);
}
void TestExtremeDefaultValues::set_replacement_string(const ::std::string& value) {
  set_has_replacement_string();
  replacement_string_.Set(_default_replacement_string_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
}
void TestExtremeDefaultValues::set_replacement_string(const char* value) {
  set_has_replacement_string();
  replacement_string_.Set(_default_replacement_string_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
}
void TestExtremeDefaultValues::set_replacement_string(const char* value,
    size_t size) {
  set_has_replacement_string();
  replacement_string_.Set(_default_replacement_string_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
}
::std::string* TestExtremeDefaultValues::mutable_replacement_string() {
  set_has_replacement_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
  return replacement_string_.Mutable(_default_replacement_string_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::release_replacement_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
  clear_has_replacement_string();
  return replacement_string_.Release(_default_replacement_string_, GetArenaNoVirtual());
}
::std::string* TestExtremeDefaultValues::unsafe_arena_release_replacement_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_replacement_string();
  return replacement_string_.UnsafeArenaRelease(_default_replacement_string_,
      GetArenaNoVirtual());
}
void TestExtremeDefaultValues::set_allocated_replacement_string(::std::string* replacement_string) {
  if (replacement_string != NULL) {
    set_has_replacement_string();
  } else {
    clear_has_replacement_string();
  }
  replacement_string_.SetAllocated(_default_replacement_string_, replacement_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
}
void TestExtremeDefaultValues::unsafe_arena_set_allocated_replacement_string(
    ::std::string* replacement_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (replacement_string != NULL) {
    set_has_replacement_string();
  } else {
    clear_has_replacement_string();
  }
  replacement_string_.UnsafeArenaSetAllocated(_default_replacement_string_,
      replacement_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestExtremeDefaultValues.replacement_string)
}

inline const TestExtremeDefaultValues* TestExtremeDefaultValues::internal_default_instance() {
  return &TestExtremeDefaultValues_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SparseEnumMessage::kSparseEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SparseEnumMessage::SparseEnumMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.SparseEnumMessage)
}
SparseEnumMessage::SparseEnumMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.SparseEnumMessage)
}

void SparseEnumMessage::InitAsDefaultInstance() {
}

SparseEnumMessage::SparseEnumMessage(const SparseEnumMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.SparseEnumMessage)
}

void SparseEnumMessage::SharedCtor() {
  _cached_size_ = 0;
  sparse_enum_ = 123;
}

SparseEnumMessage::~SparseEnumMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.SparseEnumMessage)
  SharedDtor();
}

void SparseEnumMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void SparseEnumMessage::ArenaDtor(void* object) {
  SparseEnumMessage* _this = reinterpret_cast< SparseEnumMessage* >(object);
  (void)_this;
}
void SparseEnumMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SparseEnumMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SparseEnumMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SparseEnumMessage_descriptor_;
}

const SparseEnumMessage& SparseEnumMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SparseEnumMessage> SparseEnumMessage_default_instance_;

SparseEnumMessage* SparseEnumMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SparseEnumMessage>(arena);
}

void SparseEnumMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.SparseEnumMessage)
  sparse_enum_ = 123;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SparseEnumMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.SparseEnumMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestSparseEnum_IsValid(value)) {
            set_sparse_enum(static_cast< ::protobuf_unittest::TestSparseEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.SparseEnumMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.SparseEnumMessage)
  return false;
#undef DO_
}

void SparseEnumMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.SparseEnumMessage)
  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (has_sparse_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sparse_enum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.SparseEnumMessage)
}

::google::protobuf::uint8* SparseEnumMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.SparseEnumMessage)
  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (has_sparse_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sparse_enum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.SparseEnumMessage)
  return target;
}

size_t SparseEnumMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.SparseEnumMessage)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (has_sparse_enum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sparse_enum());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SparseEnumMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.SparseEnumMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SparseEnumMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SparseEnumMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.SparseEnumMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.SparseEnumMessage)
    UnsafeMergeFrom(*source);
  }
}

void SparseEnumMessage::MergeFrom(const SparseEnumMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.SparseEnumMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SparseEnumMessage::UnsafeMergeFrom(const SparseEnumMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sparse_enum()) {
      set_sparse_enum(from.sparse_enum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SparseEnumMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.SparseEnumMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseEnumMessage::CopyFrom(const SparseEnumMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.SparseEnumMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SparseEnumMessage::IsInitialized() const {

  return true;
}

void SparseEnumMessage::Swap(SparseEnumMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SparseEnumMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SparseEnumMessage::UnsafeArenaSwap(SparseEnumMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SparseEnumMessage::InternalSwap(SparseEnumMessage* other) {
  std::swap(sparse_enum_, other->sparse_enum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SparseEnumMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SparseEnumMessage_descriptor_;
  metadata.reflection = SparseEnumMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SparseEnumMessage

// optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
bool SparseEnumMessage::has_sparse_enum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SparseEnumMessage::set_has_sparse_enum() {
  _has_bits_[0] |= 0x00000001u;
}
void SparseEnumMessage::clear_has_sparse_enum() {
  _has_bits_[0] &= ~0x00000001u;
}
void SparseEnumMessage::clear_sparse_enum() {
  sparse_enum_ = 123;
  clear_has_sparse_enum();
}
::protobuf_unittest::TestSparseEnum SparseEnumMessage::sparse_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.SparseEnumMessage.sparse_enum)
  return static_cast< ::protobuf_unittest::TestSparseEnum >(sparse_enum_);
}
void SparseEnumMessage::set_sparse_enum(::protobuf_unittest::TestSparseEnum value) {
  assert(::protobuf_unittest::TestSparseEnum_IsValid(value));
  set_has_sparse_enum();
  sparse_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.SparseEnumMessage.sparse_enum)
}

inline const SparseEnumMessage* SparseEnumMessage::internal_default_instance() {
  return &SparseEnumMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneString::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneString::OneString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OneString)
}
OneString::OneString(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OneString)
}

void OneString::InitAsDefaultInstance() {
}

OneString::OneString(const OneString& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneString)
}

void OneString::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OneString::~OneString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneString)
  SharedDtor();
}

void OneString::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  data_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void OneString::ArenaDtor(void* object) {
  OneString* _this = reinterpret_cast< OneString* >(object);
  (void)_this;
}
void OneString::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OneString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneString_descriptor_;
}

const OneString& OneString::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OneString> OneString_default_instance_;

OneString* OneString::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<OneString>(arena);
}

void OneString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OneString)
  if (has_data()) {
    data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OneString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OneString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.OneString.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OneString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OneString)
  return false;
#undef DO_
}

void OneString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OneString)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.OneString.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OneString)
}

::google::protobuf::uint8* OneString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneString)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.OneString.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneString)
  return target;
}

size_t OneString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OneString)
  size_t total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.OneString)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OneString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.OneString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.OneString)
    UnsafeMergeFrom(*source);
  }
}

void OneString::MergeFrom(const OneString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OneString)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OneString::UnsafeMergeFrom(const OneString& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OneString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.OneString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneString::CopyFrom(const OneString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OneString)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OneString::IsInitialized() const {

  return true;
}

void OneString::Swap(OneString* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OneString temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void OneString::UnsafeArenaSwap(OneString* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OneString::InternalSwap(OneString* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneString_descriptor_;
  metadata.reflection = OneString_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneString

// optional string data = 1;
bool OneString::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneString::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void OneString::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneString::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
const ::std::string& OneString::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.OneString.data)
  return data_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneString::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.OneString.data)
}
void OneString::set_data(const char* value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.OneString.data)
}
void OneString::set_data(const char* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.OneString.data)
}
::std::string* OneString::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.OneString.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OneString::release_data() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.OneString.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OneString::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.OneString.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void OneString::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneString.data)
}
void OneString::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.OneString.data)
}

inline const OneString* OneString::internal_default_instance() {
  return &OneString_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoreString::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoreString::MoreString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.MoreString)
}
MoreString::MoreString(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  data_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MoreString)
}

void MoreString::InitAsDefaultInstance() {
}

MoreString::MoreString(const MoreString& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreString)
}

void MoreString::SharedCtor() {
  _cached_size_ = 0;
}

MoreString::~MoreString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreString)
  SharedDtor();
}

void MoreString::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void MoreString::ArenaDtor(void* object) {
  MoreString* _this = reinterpret_cast< MoreString* >(object);
  (void)_this;
}
void MoreString::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MoreString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoreString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoreString_descriptor_;
}

const MoreString& MoreString::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MoreString> MoreString_default_instance_;

MoreString* MoreString::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MoreString>(arena);
}

void MoreString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MoreString)
  data_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MoreString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.MoreString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data(this->data_size() - 1).data(),
            this->data(this->data_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.MoreString.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.MoreString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.MoreString)
  return false;
#undef DO_
}

void MoreString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.MoreString)
  // repeated string data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data(i).data(), this->data(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.MoreString.data");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.MoreString)
}

::google::protobuf::uint8* MoreString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreString)
  // repeated string data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data(i).data(), this->data(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.MoreString.data");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreString)
  return target;
}

size_t MoreString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MoreString)
  size_t total_size = 0;

  // repeated string data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoreString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.MoreString)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MoreString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoreString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.MoreString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.MoreString)
    UnsafeMergeFrom(*source);
  }
}

void MoreString::MergeFrom(const MoreString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MoreString)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MoreString::UnsafeMergeFrom(const MoreString& from) {
  GOOGLE_DCHECK(&from != this);
  data_.UnsafeMergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void MoreString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.MoreString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoreString::CopyFrom(const MoreString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MoreString)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MoreString::IsInitialized() const {

  return true;
}

void MoreString::Swap(MoreString* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoreString temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MoreString::UnsafeArenaSwap(MoreString* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoreString::InternalSwap(MoreString* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoreString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoreString_descriptor_;
  metadata.reflection = MoreString_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoreString

// repeated string data = 1;
int MoreString::data_size() const {
  return data_.size();
}
void MoreString::clear_data() {
  data_.Clear();
}
const ::std::string& MoreString::data(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.MoreString.data)
  return data_.Get(index);
}
::std::string* MoreString::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.MoreString.data)
  return data_.Mutable(index);
}
void MoreString::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.MoreString.data)
  data_.Mutable(index)->assign(value);
}
void MoreString::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.MoreString.data)
}
void MoreString::set_data(int index, const char* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.MoreString.data)
}
::std::string* MoreString::add_data() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.MoreString.data)
  return data_.Add();
}
void MoreString::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.MoreString.data)
}
void MoreString::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.MoreString.data)
}
void MoreString::add_data(const char* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.MoreString.data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MoreString::data() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.MoreString.data)
  return data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MoreString::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.MoreString.data)
  return &data_;
}

inline const MoreString* MoreString::internal_default_instance() {
  return &MoreString_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneBytes::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneBytes::OneBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OneBytes)
}
OneBytes::OneBytes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OneBytes)
}

void OneBytes::InitAsDefaultInstance() {
}

OneBytes::OneBytes(const OneBytes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneBytes)
}

void OneBytes::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OneBytes::~OneBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneBytes)
  SharedDtor();
}

void OneBytes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  data_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void OneBytes::ArenaDtor(void* object) {
  OneBytes* _this = reinterpret_cast< OneBytes* >(object);
  (void)_this;
}
void OneBytes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OneBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneBytes_descriptor_;
}

const OneBytes& OneBytes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OneBytes> OneBytes_default_instance_;

OneBytes* OneBytes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<OneBytes>(arena);
}

void OneBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OneBytes)
  if (has_data()) {
    data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OneBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OneBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OneBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OneBytes)
  return false;
#undef DO_
}

void OneBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OneBytes)
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OneBytes)
}

::google::protobuf::uint8* OneBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneBytes)
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneBytes)
  return target;
}

size_t OneBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OneBytes)
  size_t total_size = 0;

  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.OneBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OneBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.OneBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.OneBytes)
    UnsafeMergeFrom(*source);
  }
}

void OneBytes::MergeFrom(const OneBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OneBytes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OneBytes::UnsafeMergeFrom(const OneBytes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OneBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.OneBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneBytes::CopyFrom(const OneBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OneBytes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OneBytes::IsInitialized() const {

  return true;
}

void OneBytes::Swap(OneBytes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OneBytes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void OneBytes::UnsafeArenaSwap(OneBytes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OneBytes::InternalSwap(OneBytes* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneBytes_descriptor_;
  metadata.reflection = OneBytes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneBytes

// optional bytes data = 1;
bool OneBytes::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneBytes::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void OneBytes::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneBytes::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
const ::std::string& OneBytes::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.OneBytes.data)
  return data_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneBytes::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.OneBytes.data)
}
void OneBytes::set_data(const char* value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.OneBytes.data)
}
void OneBytes::set_data(const void* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.OneBytes.data)
}
::std::string* OneBytes::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.OneBytes.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OneBytes::release_data() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.OneBytes.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OneBytes::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.OneBytes.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void OneBytes::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneBytes.data)
}
void OneBytes::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.OneBytes.data)
}

inline const OneBytes* OneBytes::internal_default_instance() {
  return &OneBytes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoreBytes::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoreBytes::MoreBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.MoreBytes)
}
MoreBytes::MoreBytes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  data_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MoreBytes)
}

void MoreBytes::InitAsDefaultInstance() {
}

MoreBytes::MoreBytes(const MoreBytes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreBytes)
}

void MoreBytes::SharedCtor() {
  _cached_size_ = 0;
}

MoreBytes::~MoreBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreBytes)
  SharedDtor();
}

void MoreBytes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void MoreBytes::ArenaDtor(void* object) {
  MoreBytes* _this = reinterpret_cast< MoreBytes* >(object);
  (void)_this;
}
void MoreBytes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MoreBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoreBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoreBytes_descriptor_;
}

const MoreBytes& MoreBytes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MoreBytes> MoreBytes_default_instance_;

MoreBytes* MoreBytes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MoreBytes>(arena);
}

void MoreBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MoreBytes)
  data_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MoreBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.MoreBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.MoreBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.MoreBytes)
  return false;
#undef DO_
}

void MoreBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.MoreBytes)
  // repeated bytes data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.MoreBytes)
}

::google::protobuf::uint8* MoreBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreBytes)
  // repeated bytes data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreBytes)
  return target;
}

size_t MoreBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MoreBytes)
  size_t total_size = 0;

  // repeated bytes data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoreBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.MoreBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MoreBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoreBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.MoreBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.MoreBytes)
    UnsafeMergeFrom(*source);
  }
}

void MoreBytes::MergeFrom(const MoreBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MoreBytes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MoreBytes::UnsafeMergeFrom(const MoreBytes& from) {
  GOOGLE_DCHECK(&from != this);
  data_.UnsafeMergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void MoreBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.MoreBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoreBytes::CopyFrom(const MoreBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MoreBytes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MoreBytes::IsInitialized() const {

  return true;
}

void MoreBytes::Swap(MoreBytes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoreBytes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MoreBytes::UnsafeArenaSwap(MoreBytes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoreBytes::InternalSwap(MoreBytes* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoreBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoreBytes_descriptor_;
  metadata.reflection = MoreBytes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoreBytes

// repeated bytes data = 1;
int MoreBytes::data_size() const {
  return data_.size();
}
void MoreBytes::clear_data() {
  data_.Clear();
}
const ::std::string& MoreBytes::data(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.MoreBytes.data)
  return data_.Get(index);
}
::std::string* MoreBytes::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.MoreBytes.data)
  return data_.Mutable(index);
}
void MoreBytes::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.MoreBytes.data)
  data_.Mutable(index)->assign(value);
}
void MoreBytes::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.MoreBytes.data)
}
void MoreBytes::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.MoreBytes.data)
}
::std::string* MoreBytes::add_data() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.MoreBytes.data)
  return data_.Add();
}
void MoreBytes::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.MoreBytes.data)
}
void MoreBytes::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.MoreBytes.data)
}
void MoreBytes::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.MoreBytes.data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MoreBytes::data() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.MoreBytes.data)
  return data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MoreBytes::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.MoreBytes.data)
  return &data_;
}

inline const MoreBytes* MoreBytes::internal_default_instance() {
  return &MoreBytes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32Message::Int32Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Int32Message)
}
Int32Message::Int32Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int32Message)
}

void Int32Message::InitAsDefaultInstance() {
}

Int32Message::Int32Message(const Int32Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int32Message)
}

void Int32Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
}

Int32Message::~Int32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int32Message)
  SharedDtor();
}

void Int32Message::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Int32Message::ArenaDtor(void* object) {
  Int32Message* _this = reinterpret_cast< Int32Message* >(object);
  (void)_this;
}
void Int32Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int32Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Int32Message_descriptor_;
}

const Int32Message& Int32Message::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Int32Message> Int32Message_default_instance_;

Int32Message* Int32Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Int32Message>(arena);
}

void Int32Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int32Message)
  data_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Int32Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Int32Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data = 1;
      case 1: {
        if (tag == 8) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Int32Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Int32Message)
  return false;
#undef DO_
}

void Int32Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Int32Message)
  // optional int32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Int32Message)
}

::google::protobuf::uint8* Int32Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int32Message)
  // optional int32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int32Message)
  return target;
}

size_t Int32Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int32Message)
  size_t total_size = 0;

  // optional int32 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int32Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.Int32Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Int32Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int32Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.Int32Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.Int32Message)
    UnsafeMergeFrom(*source);
  }
}

void Int32Message::MergeFrom(const Int32Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int32Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Int32Message::UnsafeMergeFrom(const Int32Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Int32Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.Int32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32Message::CopyFrom(const Int32Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int32Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Int32Message::IsInitialized() const {

  return true;
}

void Int32Message::Swap(Int32Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int32Message temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Int32Message::UnsafeArenaSwap(Int32Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int32Message::InternalSwap(Int32Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Int32Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Int32Message_descriptor_;
  metadata.reflection = Int32Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int32Message

// optional int32 data = 1;
bool Int32Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Int32Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Int32Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Int32Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
::google::protobuf::int32 Int32Message::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Int32Message.data)
  return data_;
}
void Int32Message::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.Int32Message.data)
}

inline const Int32Message* Int32Message::internal_default_instance() {
  return &Int32Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32Message::Uint32Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Uint32Message)
}
Uint32Message::Uint32Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Uint32Message)
}

void Uint32Message::InitAsDefaultInstance() {
}

Uint32Message::Uint32Message(const Uint32Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint32Message)
}

void Uint32Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0u;
}

Uint32Message::~Uint32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint32Message)
  SharedDtor();
}

void Uint32Message::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Uint32Message::ArenaDtor(void* object) {
  Uint32Message* _this = reinterpret_cast< Uint32Message* >(object);
  (void)_this;
}
void Uint32Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Uint32Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Uint32Message_descriptor_;
}

const Uint32Message& Uint32Message::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Uint32Message> Uint32Message_default_instance_;

Uint32Message* Uint32Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Uint32Message>(arena);
}

void Uint32Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Uint32Message)
  data_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Uint32Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Uint32Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 data = 1;
      case 1: {
        if (tag == 8) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Uint32Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Uint32Message)
  return false;
#undef DO_
}

void Uint32Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Uint32Message)
  // optional uint32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Uint32Message)
}

::google::protobuf::uint8* Uint32Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint32Message)
  // optional uint32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint32Message)
  return target;
}

size_t Uint32Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Uint32Message)
  size_t total_size = 0;

  // optional uint32 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.Uint32Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Uint32Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.Uint32Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.Uint32Message)
    UnsafeMergeFrom(*source);
  }
}

void Uint32Message::MergeFrom(const Uint32Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Uint32Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Uint32Message::UnsafeMergeFrom(const Uint32Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Uint32Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.Uint32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32Message::CopyFrom(const Uint32Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Uint32Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Uint32Message::IsInitialized() const {

  return true;
}

void Uint32Message::Swap(Uint32Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Uint32Message temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Uint32Message::UnsafeArenaSwap(Uint32Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Uint32Message::InternalSwap(Uint32Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Uint32Message_descriptor_;
  metadata.reflection = Uint32Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uint32Message

// optional uint32 data = 1;
bool Uint32Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Uint32Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Uint32Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Uint32Message::clear_data() {
  data_ = 0u;
  clear_has_data();
}
::google::protobuf::uint32 Uint32Message::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Uint32Message.data)
  return data_;
}
void Uint32Message::set_data(::google::protobuf::uint32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.Uint32Message.data)
}

inline const Uint32Message* Uint32Message::internal_default_instance() {
  return &Uint32Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Message::Int64Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Int64Message)
}
Int64Message::Int64Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int64Message)
}

void Int64Message::InitAsDefaultInstance() {
}

Int64Message::Int64Message(const Int64Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int64Message)
}

void Int64Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_LONGLONG(0);
}

Int64Message::~Int64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int64Message)
  SharedDtor();
}

void Int64Message::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Int64Message::ArenaDtor(void* object) {
  Int64Message* _this = reinterpret_cast< Int64Message* >(object);
  (void)_this;
}
void Int64Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int64Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Int64Message_descriptor_;
}

const Int64Message& Int64Message::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Int64Message> Int64Message_default_instance_;

Int64Message* Int64Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Int64Message>(arena);
}

void Int64Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int64Message)
  data_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Int64Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Int64Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 data = 1;
      case 1: {
        if (tag == 8) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Int64Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Int64Message)
  return false;
#undef DO_
}

void Int64Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Int64Message)
  // optional int64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Int64Message)
}

::google::protobuf::uint8* Int64Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int64Message)
  // optional int64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int64Message)
  return target;
}

size_t Int64Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int64Message)
  size_t total_size = 0;

  // optional int64 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int64Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.Int64Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Int64Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.Int64Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.Int64Message)
    UnsafeMergeFrom(*source);
  }
}

void Int64Message::MergeFrom(const Int64Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int64Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Int64Message::UnsafeMergeFrom(const Int64Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Int64Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.Int64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Message::CopyFrom(const Int64Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int64Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Int64Message::IsInitialized() const {

  return true;
}

void Int64Message::Swap(Int64Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64Message temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Int64Message::UnsafeArenaSwap(Int64Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64Message::InternalSwap(Int64Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Int64Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Int64Message_descriptor_;
  metadata.reflection = Int64Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int64Message

// optional int64 data = 1;
bool Int64Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Int64Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Int64Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Int64Message::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
::google::protobuf::int64 Int64Message::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Int64Message.data)
  return data_;
}
void Int64Message::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.Int64Message.data)
}

inline const Int64Message* Int64Message::internal_default_instance() {
  return &Int64Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint64Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint64Message::Uint64Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Uint64Message)
}
Uint64Message::Uint64Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Uint64Message)
}

void Uint64Message::InitAsDefaultInstance() {
}

Uint64Message::Uint64Message(const Uint64Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint64Message)
}

void Uint64Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_ULONGLONG(0);
}

Uint64Message::~Uint64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint64Message)
  SharedDtor();
}

void Uint64Message::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Uint64Message::ArenaDtor(void* object) {
  Uint64Message* _this = reinterpret_cast< Uint64Message* >(object);
  (void)_this;
}
void Uint64Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Uint64Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint64Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Uint64Message_descriptor_;
}

const Uint64Message& Uint64Message::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Uint64Message> Uint64Message_default_instance_;

Uint64Message* Uint64Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Uint64Message>(arena);
}

void Uint64Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Uint64Message)
  data_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Uint64Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Uint64Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 data = 1;
      case 1: {
        if (tag == 8) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Uint64Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Uint64Message)
  return false;
#undef DO_
}

void Uint64Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Uint64Message)
  // optional uint64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Uint64Message)
}

::google::protobuf::uint8* Uint64Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint64Message)
  // optional uint64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint64Message)
  return target;
}

size_t Uint64Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Uint64Message)
  size_t total_size = 0;

  // optional uint64 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint64Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.Uint64Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Uint64Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint64Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.Uint64Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.Uint64Message)
    UnsafeMergeFrom(*source);
  }
}

void Uint64Message::MergeFrom(const Uint64Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Uint64Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Uint64Message::UnsafeMergeFrom(const Uint64Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Uint64Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.Uint64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint64Message::CopyFrom(const Uint64Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Uint64Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Uint64Message::IsInitialized() const {

  return true;
}

void Uint64Message::Swap(Uint64Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Uint64Message temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Uint64Message::UnsafeArenaSwap(Uint64Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Uint64Message::InternalSwap(Uint64Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint64Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Uint64Message_descriptor_;
  metadata.reflection = Uint64Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uint64Message

// optional uint64 data = 1;
bool Uint64Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Uint64Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Uint64Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Uint64Message::clear_data() {
  data_ = GOOGLE_ULONGLONG(0);
  clear_has_data();
}
::google::protobuf::uint64 Uint64Message::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Uint64Message.data)
  return data_;
}
void Uint64Message::set_data(::google::protobuf::uint64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.Uint64Message.data)
}

inline const Uint64Message* Uint64Message::internal_default_instance() {
  return &Uint64Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolMessage::BoolMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BoolMessage)
}
BoolMessage::BoolMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BoolMessage)
}

void BoolMessage::InitAsDefaultInstance() {
}

BoolMessage::BoolMessage(const BoolMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BoolMessage)
}

void BoolMessage::SharedCtor() {
  _cached_size_ = 0;
  data_ = false;
}

BoolMessage::~BoolMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BoolMessage)
  SharedDtor();
}

void BoolMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void BoolMessage::ArenaDtor(void* object) {
  BoolMessage* _this = reinterpret_cast< BoolMessage* >(object);
  (void)_this;
}
void BoolMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BoolMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoolMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoolMessage_descriptor_;
}

const BoolMessage& BoolMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BoolMessage> BoolMessage_default_instance_;

BoolMessage* BoolMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BoolMessage>(arena);
}

void BoolMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BoolMessage)
  data_ = false;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BoolMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BoolMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool data = 1;
      case 1: {
        if (tag == 8) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BoolMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BoolMessage)
  return false;
#undef DO_
}

void BoolMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BoolMessage)
  // optional bool data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BoolMessage)
}

::google::protobuf::uint8* BoolMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BoolMessage)
  // optional bool data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BoolMessage)
  return target;
}

size_t BoolMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BoolMessage)
  size_t total_size = 0;

  // optional bool data = 1;
  if (has_data()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoolMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.BoolMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BoolMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoolMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.BoolMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.BoolMessage)
    UnsafeMergeFrom(*source);
  }
}

void BoolMessage::MergeFrom(const BoolMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BoolMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BoolMessage::UnsafeMergeFrom(const BoolMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BoolMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.BoolMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolMessage::CopyFrom(const BoolMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BoolMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BoolMessage::IsInitialized() const {

  return true;
}

void BoolMessage::Swap(BoolMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BoolMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void BoolMessage::UnsafeArenaSwap(BoolMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BoolMessage::InternalSwap(BoolMessage* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoolMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoolMessage_descriptor_;
  metadata.reflection = BoolMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoolMessage

// optional bool data = 1;
bool BoolMessage::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BoolMessage::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void BoolMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void BoolMessage::clear_data() {
  data_ = false;
  clear_has_data();
}
bool BoolMessage::data() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.BoolMessage.data)
  return data_;
}
void BoolMessage::set_data(bool value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.BoolMessage.data)
}

inline const BoolMessage* BoolMessage::internal_default_instance() {
  return &BoolMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneof_FooGroup::kAFieldNumber;
const int TestOneof_FooGroup::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneof_FooGroup::TestOneof_FooGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof.FooGroup)
}
TestOneof_FooGroup::TestOneof_FooGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof.FooGroup)
}

void TestOneof_FooGroup::InitAsDefaultInstance() {
}

TestOneof_FooGroup::TestOneof_FooGroup(const TestOneof_FooGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof.FooGroup)
}

void TestOneof_FooGroup::SharedCtor() {
  _cached_size_ = 0;
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

TestOneof_FooGroup::~TestOneof_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof.FooGroup)
  SharedDtor();
}

void TestOneof_FooGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  b_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TestOneof_FooGroup::ArenaDtor(void* object) {
  TestOneof_FooGroup* _this = reinterpret_cast< TestOneof_FooGroup* >(object);
  (void)_this;
}
void TestOneof_FooGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneof_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof_FooGroup_descriptor_;
}

const TestOneof_FooGroup& TestOneof_FooGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneof_FooGroup> TestOneof_FooGroup_default_instance_;

TestOneof_FooGroup* TestOneof_FooGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneof_FooGroup>(arena);
}

void TestOneof_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof.FooGroup)
  if (_has_bits_[0 / 32] & 3u) {
    a_ = 0;
    if (has_b()) {
      b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneof_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 5;
      case 5: {
        if (tag == 40) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_b;
        break;
      }

      // optional string b = 6;
      case 6: {
        if (tag == 50) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof.FooGroup.b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof.FooGroup)
  return false;
#undef DO_
}

void TestOneof_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof.FooGroup.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof.FooGroup)
}

::google::protobuf::uint8* TestOneof_FooGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof.FooGroup.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof.FooGroup)
  return target;
}

size_t TestOneof_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof.FooGroup)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a = 5;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 6;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneof.FooGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneof_FooGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneof_FooGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneof.FooGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneof.FooGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestOneof_FooGroup::MergeFrom(const TestOneof_FooGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof.FooGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneof_FooGroup::UnsafeMergeFrom(const TestOneof_FooGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneof_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneof.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof_FooGroup::CopyFrom(const TestOneof_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof.FooGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneof_FooGroup::IsInitialized() const {

  return true;
}

void TestOneof_FooGroup::Swap(TestOneof_FooGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneof_FooGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneof_FooGroup::UnsafeArenaSwap(TestOneof_FooGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneof_FooGroup::InternalSwap(TestOneof_FooGroup* other) {
  std::swap(a_, other->a_);
  b_.Swap(&other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneof_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof_FooGroup_descriptor_;
  metadata.reflection = TestOneof_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneof::kFooIntFieldNumber;
const int TestOneof::kFooStringFieldNumber;
const int TestOneof::kFooMessageFieldNumber;
const int TestOneof::kFoogroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneof::TestOneof()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof)
}
TestOneof::TestOneof(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof)
}

void TestOneof::InitAsDefaultInstance() {
  TestOneof_default_oneof_instance_->foo_int_ = 0;
  TestOneof_default_oneof_instance_->foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestOneof_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
  TestOneof_default_oneof_instance_->foogroup_ = const_cast< ::protobuf_unittest::TestOneof_FooGroup*>(
      ::protobuf_unittest::TestOneof_FooGroup::internal_default_instance());
}

TestOneof::TestOneof(const TestOneof& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof)
}

void TestOneof::SharedCtor() {
  _cached_size_ = 0;
  clear_has_foo();
}

TestOneof::~TestOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof)
  SharedDtor();
}

void TestOneof::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_foo()) {
    clear_foo();
  }
}

void TestOneof::ArenaDtor(void* object) {
  TestOneof* _this = reinterpret_cast< TestOneof* >(object);
  (void)_this;
}
void TestOneof::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof_descriptor_;
}

const TestOneof& TestOneof::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneof> TestOneof_default_instance_;

TestOneof* TestOneof::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneof>(arena);
}

void TestOneof::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foo_message_;
      }
      break;
    }
    case kFoogroup: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foogroup_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}


void TestOneof::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof)
  clear_foo();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        goto after_foogroup;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof.foo_string");
        } else {
          goto handle_unusual;
        }
        goto after_foogroup;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes foo_message = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(35)) goto parse_foogroup;
        break;
      }

      // optional group FooGroup = 4 { ... };
      case 4: {
        if (tag == 35) {
         parse_foogroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
       after_foogroup:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof)
  return false;
#undef DO_
}

void TestOneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof)
  switch (foo_case()) {
    case kFooInt:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof.foo_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->foo_string(), output);
      break;
    case kFooMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *foo_.foo_message_, output);
      break;
    case kFoogroup:
      ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
        4, *foo_.foogroup_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof)
}

::google::protobuf::uint8* TestOneof::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof)
  switch (foo_case()) {
    case kFooInt:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof.foo_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->foo_string(), target);
      break;
    case kFooMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *foo_.foo_message_, false, target);
      break;
    case kFoogroup:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteGroupNoVirtualToArray(
          4, *foo_.foogroup_, false, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof)
  return target;
}

size_t TestOneof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof)
  size_t total_size = 0;

  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *foo_.foo_message_);
      break;
    }
    // optional group FooGroup = 4 { ... };
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *foo_.foogroup_);
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneof)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneof* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneof>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneof)
    UnsafeMergeFrom(*source);
  }
}

void TestOneof::MergeFrom(const TestOneof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneof::UnsafeMergeFrom(const TestOneof& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.foo_message());
      break;
    }
    case kFoogroup: {
      mutable_foogroup()->::protobuf_unittest::TestOneof_FooGroup::MergeFrom(from.foogroup());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof::CopyFrom(const TestOneof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneof::IsInitialized() const {

  return true;
}

void TestOneof::Swap(TestOneof* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneof temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneof::UnsafeArenaSwap(TestOneof* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneof::InternalSwap(TestOneof* other) {
  std::swap(foo_, other->foo_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof_descriptor_;
  metadata.reflection = TestOneof_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestOneof_FooGroup

// optional int32 a = 5;
bool TestOneof_FooGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestOneof_FooGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestOneof_FooGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestOneof_FooGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestOneof_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.FooGroup.a)
  return a_;
}
void TestOneof_FooGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof.FooGroup.a)
}

// optional string b = 6;
bool TestOneof_FooGroup::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestOneof_FooGroup::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void TestOneof_FooGroup::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestOneof_FooGroup::clear_b() {
  b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_b();
}
const ::std::string& TestOneof_FooGroup::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.FooGroup.b)
  return b_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestOneof_FooGroup::set_b(const ::std::string& value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof.FooGroup.b)
}
void TestOneof_FooGroup::set_b(const char* value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof.FooGroup.b)
}
void TestOneof_FooGroup::set_b(const char* value,
    size_t size) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof.FooGroup.b)
}
::std::string* TestOneof_FooGroup::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof.FooGroup.b)
  return b_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneof_FooGroup::release_b() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof.FooGroup.b)
  clear_has_b();
  return b_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneof_FooGroup::unsafe_arena_release_b() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof.FooGroup.b)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_b();
  return b_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestOneof_FooGroup::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.FooGroup.b)
}
void TestOneof_FooGroup::unsafe_arena_set_allocated_b(
    ::std::string* b) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      b, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof.FooGroup.b)
}

inline const TestOneof_FooGroup* TestOneof_FooGroup::internal_default_instance() {
  return &TestOneof_FooGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestOneof

// optional int32 foo_int = 1;
bool TestOneof::has_foo_int() const {
  return foo_case() == kFooInt;
}
void TestOneof::set_has_foo_int() {
  _oneof_case_[0] = kFooInt;
}
void TestOneof::clear_foo_int() {
  if (has_foo_int()) {
    foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
::google::protobuf::int32 TestOneof::foo_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.foo_int)
  if (has_foo_int()) {
    return foo_.foo_int_;
  }
  return 0;
}
void TestOneof::set_foo_int(::google::protobuf::int32 value) {
  if (!has_foo_int()) {
    clear_foo();
    set_has_foo_int();
  }
  foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof.foo_int)
}

// optional string foo_string = 2;
bool TestOneof::has_foo_string() const {
  return foo_case() == kFooString;
}
void TestOneof::set_has_foo_string() {
  _oneof_case_[0] = kFooString;
}
void TestOneof::clear_foo_string() {
  if (has_foo_string()) {
    foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestOneof::foo_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.foo_string)
  if (has_foo_string()) {
    return foo_.foo_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestOneof::set_foo_string(const ::std::string& value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof.foo_string)
}
void TestOneof::set_foo_string(const char* value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof.foo_string)
}
void TestOneof::set_foo_string(const char* value,
                             size_t size) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof.foo_string)
}
::std::string* TestOneof::mutable_foo_string() {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof.foo_string)
}
::std::string* TestOneof::release_foo_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof.foo_string)
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof::unsafe_arena_release_foo_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof.foo_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof::set_allocated_foo_string(::std::string* foo_string) {
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string != NULL) {
    set_has_foo_string();
    foo_.foo_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.foo_string)
}
void TestOneof::unsafe_arena_set_allocated_foo_string(::std::string* foo_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string) {
    set_has_foo_string();
    foo_.foo_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof.foo_string)
}

// optional .protobuf_unittest.TestAllTypes foo_message = 3;
bool TestOneof::has_foo_message() const {
  return foo_case() == kFooMessage;
}
void TestOneof::set_has_foo_message() {
  _oneof_case_[0] = kFooMessage;
}
void TestOneof::clear_foo_message() {
  if (has_foo_message()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foo_message_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestAllTypes& TestOneof::foo_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.foo_message)
  return has_foo_message()
      ? *foo_.foo_message_
      : ::protobuf_unittest::TestAllTypes::default_instance();
}
::protobuf_unittest::TestAllTypes* TestOneof::mutable_foo_message() {
  if (!has_foo_message()) {
    clear_foo();
    set_has_foo_message();
    foo_.foo_message_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof.foo_message)
  return foo_.foo_message_;
}
::protobuf_unittest::TestAllTypes* TestOneof::release_foo_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*foo_.foo_message_);
      foo_.foo_message_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestAllTypes* temp = foo_.foo_message_;
      foo_.foo_message_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestOneof::set_allocated_foo_message(::protobuf_unittest::TestAllTypes* foo_message) {
  clear_foo();
  if (foo_message) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foo_message) == NULL) {
      GetArenaNoVirtual()->Own(foo_message);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foo_message)) {
      ::protobuf_unittest::TestAllTypes* new_foo_message = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
          GetArenaNoVirtual());
      new_foo_message->CopyFrom(*foo_message);
      foo_message = new_foo_message;
    }
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.foo_message)
}
 ::protobuf_unittest::TestAllTypes* TestOneof::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    ::protobuf_unittest::TestAllTypes* temp = foo_.foo_message_;
    foo_.foo_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestOneof::unsafe_arena_set_allocated_foo_message(::protobuf_unittest::TestAllTypes* foo_message) {
  clear_foo();
  if (foo_message) {
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof.foo_message)
}

// optional group FooGroup = 4 { ... };
bool TestOneof::has_foogroup() const {
  return foo_case() == kFoogroup;
}
void TestOneof::set_has_foogroup() {
  _oneof_case_[0] = kFoogroup;
}
void TestOneof::clear_foogroup() {
  if (has_foogroup()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foogroup_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestOneof_FooGroup& TestOneof::foogroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof.foogroup)
  return has_foogroup()
      ? *foo_.foogroup_
      : ::protobuf_unittest::TestOneof_FooGroup::default_instance();
}
::protobuf_unittest::TestOneof_FooGroup* TestOneof::mutable_foogroup() {
  if (!has_foogroup()) {
    clear_foo();
    set_has_foogroup();
    foo_.foogroup_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof_FooGroup >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof.foogroup)
  return foo_.foogroup_;
}
::protobuf_unittest::TestOneof_FooGroup* TestOneof::release_foogroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof.foogroup)
  if (has_foogroup()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestOneof_FooGroup* temp = new ::protobuf_unittest::TestOneof_FooGroup(*foo_.foogroup_);
      foo_.foogroup_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestOneof_FooGroup* temp = foo_.foogroup_;
      foo_.foogroup_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestOneof::set_allocated_foogroup(::protobuf_unittest::TestOneof_FooGroup* foogroup) {
  clear_foo();
  if (foogroup) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foogroup) == NULL) {
      GetArenaNoVirtual()->Own(foogroup);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foogroup)) {
      ::protobuf_unittest::TestOneof_FooGroup* new_foogroup = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof_FooGroup >(
          GetArenaNoVirtual());
      new_foogroup->CopyFrom(*foogroup);
      foogroup = new_foogroup;
    }
    set_has_foogroup();
    foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.foogroup)
}
 ::protobuf_unittest::TestOneof_FooGroup* TestOneof::unsafe_arena_release_foogroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof.foogroup)
  if (has_foogroup()) {
    clear_has_foo();
    ::protobuf_unittest::TestOneof_FooGroup* temp = foo_.foogroup_;
    foo_.foogroup_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestOneof::unsafe_arena_set_allocated_foogroup(::protobuf_unittest::TestOneof_FooGroup* foogroup) {
  clear_foo();
  if (foogroup) {
    set_has_foogroup();
    foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof.foogroup)
}

bool TestOneof::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
void TestOneof::clear_has_foo() {
  _oneof_case_[0] = FOO_NOT_SET;
}
TestOneof::FooCase TestOneof::foo_case() const {
  return TestOneof::FooCase(_oneof_case_[0]);
}
inline const TestOneof* TestOneof::internal_default_instance() {
  return &TestOneof_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneofBackwardsCompatible_FooGroup::kAFieldNumber;
const int TestOneofBackwardsCompatible_FooGroup::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}
TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

void TestOneofBackwardsCompatible_FooGroup::InitAsDefaultInstance() {
}

TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(const TestOneofBackwardsCompatible_FooGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

void TestOneofBackwardsCompatible_FooGroup::SharedCtor() {
  _cached_size_ = 0;
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

TestOneofBackwardsCompatible_FooGroup::~TestOneofBackwardsCompatible_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  SharedDtor();
}

void TestOneofBackwardsCompatible_FooGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  b_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TestOneofBackwardsCompatible_FooGroup::ArenaDtor(void* object) {
  TestOneofBackwardsCompatible_FooGroup* _this = reinterpret_cast< TestOneofBackwardsCompatible_FooGroup* >(object);
  (void)_this;
}
void TestOneofBackwardsCompatible_FooGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneofBackwardsCompatible_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneofBackwardsCompatible_FooGroup_descriptor_;
}

const TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible_FooGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneofBackwardsCompatible_FooGroup> TestOneofBackwardsCompatible_FooGroup_default_instance_;

TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible_FooGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneofBackwardsCompatible_FooGroup>(arena);
}

void TestOneofBackwardsCompatible_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (_has_bits_[0 / 32] & 3u) {
    a_ = 0;
    if (has_b()) {
      b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneofBackwardsCompatible_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 5;
      case 5: {
        if (tag == 40) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_b;
        break;
      }

      // optional string b = 6;
      case 6: {
        if (tag == 50) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return false;
#undef DO_
}

void TestOneofBackwardsCompatible_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

::google::protobuf::uint8* TestOneofBackwardsCompatible_FooGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return target;
}

size_t TestOneofBackwardsCompatible_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a = 5;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 6;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneofBackwardsCompatible_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneofBackwardsCompatible_FooGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneofBackwardsCompatible_FooGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestOneofBackwardsCompatible_FooGroup::MergeFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneofBackwardsCompatible_FooGroup::UnsafeMergeFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneofBackwardsCompatible_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneofBackwardsCompatible_FooGroup::CopyFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneofBackwardsCompatible_FooGroup::IsInitialized() const {

  return true;
}

void TestOneofBackwardsCompatible_FooGroup::Swap(TestOneofBackwardsCompatible_FooGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneofBackwardsCompatible_FooGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneofBackwardsCompatible_FooGroup::UnsafeArenaSwap(TestOneofBackwardsCompatible_FooGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneofBackwardsCompatible_FooGroup::InternalSwap(TestOneofBackwardsCompatible_FooGroup* other) {
  std::swap(a_, other->a_);
  b_.Swap(&other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneofBackwardsCompatible_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneofBackwardsCompatible_FooGroup_descriptor_;
  metadata.reflection = TestOneofBackwardsCompatible_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestOneofBackwardsCompatible::_slow_mutable_foo_message() {
  foo_message_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestOneofBackwardsCompatible::_slow_release_foo_message() {
  if (foo_message_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*foo_message_);
    foo_message_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestOneofBackwardsCompatible::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
  clear_has_foo_message();
  ::protobuf_unittest::TestAllTypes* temp = foo_message_;
  foo_message_ = NULL;
  return temp;
}
void TestOneofBackwardsCompatible::_slow_set_allocated_foo_message(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** foo_message) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*foo_message) == NULL) {
      message_arena->Own(*foo_message);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*foo_message)) {
      ::protobuf_unittest::TestAllTypes* new_foo_message = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_foo_message->CopyFrom(**foo_message);
      *foo_message = new_foo_message;
    }
}
void TestOneofBackwardsCompatible::unsafe_arena_set_allocated_foo_message(
    ::protobuf_unittest::TestAllTypes* foo_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete foo_message_;
  }
  foo_message_ = foo_message;
  if (foo_message) {
    set_has_foo_message();
  } else {
    clear_has_foo_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
}
void TestOneofBackwardsCompatible::_slow_mutable_foogroup() {
  foogroup_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::_slow_release_foogroup() {
  if (foogroup_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* temp = new ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup(*foogroup_);
    foogroup_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::unsafe_arena_release_foogroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
  clear_has_foogroup();
  ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* temp = foogroup_;
  foogroup_ = NULL;
  return temp;
}
void TestOneofBackwardsCompatible::_slow_set_allocated_foogroup(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup** foogroup) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*foogroup) == NULL) {
      message_arena->Own(*foogroup);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*foogroup)) {
      ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* new_foogroup = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup >(
            message_arena);
      new_foogroup->CopyFrom(**foogroup);
      *foogroup = new_foogroup;
    }
}
void TestOneofBackwardsCompatible::unsafe_arena_set_allocated_foogroup(
    ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* foogroup) {
  if (GetArenaNoVirtual() == NULL) {
    delete foogroup_;
  }
  foogroup_ = foogroup;
  if (foogroup) {
    set_has_foogroup();
  } else {
    clear_has_foogroup();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneofBackwardsCompatible::kFooIntFieldNumber;
const int TestOneofBackwardsCompatible::kFooStringFieldNumber;
const int TestOneofBackwardsCompatible::kFooMessageFieldNumber;
const int TestOneofBackwardsCompatible::kFoogroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneofBackwardsCompatible::TestOneofBackwardsCompatible()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}
TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}

void TestOneofBackwardsCompatible::InitAsDefaultInstance() {
  foo_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
  foogroup_ = const_cast< ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup*>(
      ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::internal_default_instance());
}

TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(const TestOneofBackwardsCompatible& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}

void TestOneofBackwardsCompatible::SharedCtor() {
  _cached_size_ = 0;
  foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  foo_message_ = NULL;
  foogroup_ = NULL;
  foo_int_ = 0;
}

TestOneofBackwardsCompatible::~TestOneofBackwardsCompatible() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible)
  SharedDtor();
}

void TestOneofBackwardsCompatible::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &TestOneofBackwardsCompatible_default_instance_.get()) {
    delete foo_message_;
    delete foogroup_;
  }
}

void TestOneofBackwardsCompatible::ArenaDtor(void* object) {
  TestOneofBackwardsCompatible* _this = reinterpret_cast< TestOneofBackwardsCompatible* >(object);
  (void)_this;
}
void TestOneofBackwardsCompatible::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneofBackwardsCompatible::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneofBackwardsCompatible_descriptor_;
}

const TestOneofBackwardsCompatible& TestOneofBackwardsCompatible::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneofBackwardsCompatible> TestOneofBackwardsCompatible_default_instance_;

TestOneofBackwardsCompatible* TestOneofBackwardsCompatible::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneofBackwardsCompatible>(arena);
}

void TestOneofBackwardsCompatible::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (_has_bits_[0 / 32] & 15u) {
    foo_int_ = 0;
    if (has_foo_string()) {
      foo_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (has_foo_message()) {
      if (foo_message_ != NULL) foo_message_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_foogroup()) {
      if (foogroup_ != NULL) foogroup_->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneofBackwardsCompatible::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneofBackwardsCompatible)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          set_has_foo_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_int_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_foo_string;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
         parse_foo_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneofBackwardsCompatible.foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes foo_message = 3;
      case 3: {
        if (tag == 26) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(35)) goto parse_foogroup;
        break;
      }

      // optional group FooGroup = 4 { ... };
      case 4: {
        if (tag == 35) {
         parse_foogroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneofBackwardsCompatible)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneofBackwardsCompatible)
  return false;
#undef DO_
}

void TestOneofBackwardsCompatible::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneofBackwardsCompatible)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneofBackwardsCompatible.foo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->foo_string(), output);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->foo_message_, output);
  }

  // optional group FooGroup = 4 { ... };
  if (has_foogroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, *this->foogroup_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneofBackwardsCompatible)
}

::google::protobuf::uint8* TestOneofBackwardsCompatible::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneofBackwardsCompatible.foo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->foo_string(), target);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->foo_message_, false, target);
  }

  // optional group FooGroup = 4 { ... };
  if (has_foogroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        4, *this->foogroup_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible)
  return target;
}

size_t TestOneofBackwardsCompatible::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneofBackwardsCompatible)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 foo_int = 1;
    if (has_foo_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
    }

    // optional string foo_string = 2;
    if (has_foo_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
    }

    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    if (has_foo_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->foo_message_);
    }

    // optional group FooGroup = 4 { ... };
    if (has_foogroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->foogroup_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneofBackwardsCompatible::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneofBackwardsCompatible* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneofBackwardsCompatible>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneofBackwardsCompatible)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneofBackwardsCompatible)
    UnsafeMergeFrom(*source);
  }
}

void TestOneofBackwardsCompatible::MergeFrom(const TestOneofBackwardsCompatible& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneofBackwardsCompatible::UnsafeMergeFrom(const TestOneofBackwardsCompatible& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foo_int()) {
      set_foo_int(from.foo_int());
    }
    if (from.has_foo_string()) {
      set_foo_string(from.foo_string());
    }
    if (from.has_foo_message()) {
      mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.foo_message());
    }
    if (from.has_foogroup()) {
      mutable_foogroup()->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::MergeFrom(from.foogroup());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneofBackwardsCompatible::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneofBackwardsCompatible::CopyFrom(const TestOneofBackwardsCompatible& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneofBackwardsCompatible::IsInitialized() const {

  return true;
}

void TestOneofBackwardsCompatible::Swap(TestOneofBackwardsCompatible* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneofBackwardsCompatible temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneofBackwardsCompatible::UnsafeArenaSwap(TestOneofBackwardsCompatible* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneofBackwardsCompatible::InternalSwap(TestOneofBackwardsCompatible* other) {
  std::swap(foo_int_, other->foo_int_);
  foo_string_.Swap(&other->foo_string_);
  std::swap(foo_message_, other->foo_message_);
  std::swap(foogroup_, other->foogroup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneofBackwardsCompatible::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneofBackwardsCompatible_descriptor_;
  metadata.reflection = TestOneofBackwardsCompatible_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestOneofBackwardsCompatible_FooGroup

// optional int32 a = 5;
bool TestOneofBackwardsCompatible_FooGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestOneofBackwardsCompatible_FooGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestOneofBackwardsCompatible_FooGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestOneofBackwardsCompatible_FooGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestOneofBackwardsCompatible_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.a)
  return a_;
}
void TestOneofBackwardsCompatible_FooGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.a)
}

// optional string b = 6;
bool TestOneofBackwardsCompatible_FooGroup::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestOneofBackwardsCompatible_FooGroup::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void TestOneofBackwardsCompatible_FooGroup::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestOneofBackwardsCompatible_FooGroup::clear_b() {
  b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_b();
}
const ::std::string& TestOneofBackwardsCompatible_FooGroup::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
  return b_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestOneofBackwardsCompatible_FooGroup::set_b(const ::std::string& value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}
void TestOneofBackwardsCompatible_FooGroup::set_b(const char* value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}
void TestOneofBackwardsCompatible_FooGroup::set_b(const char* value,
    size_t size) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}
::std::string* TestOneofBackwardsCompatible_FooGroup::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
  return b_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneofBackwardsCompatible_FooGroup::release_b() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
  clear_has_b();
  return b_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneofBackwardsCompatible_FooGroup::unsafe_arena_release_b() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_b();
  return b_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestOneofBackwardsCompatible_FooGroup::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}
void TestOneofBackwardsCompatible_FooGroup::unsafe_arena_set_allocated_b(
    ::std::string* b) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      b, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}

inline const TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible_FooGroup::internal_default_instance() {
  return &TestOneofBackwardsCompatible_FooGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestOneofBackwardsCompatible

// optional int32 foo_int = 1;
bool TestOneofBackwardsCompatible::has_foo_int() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestOneofBackwardsCompatible::set_has_foo_int() {
  _has_bits_[0] |= 0x00000001u;
}
void TestOneofBackwardsCompatible::clear_has_foo_int() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestOneofBackwardsCompatible::clear_foo_int() {
  foo_int_ = 0;
  clear_has_foo_int();
}
::google::protobuf::int32 TestOneofBackwardsCompatible::foo_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.foo_int)
  return foo_int_;
}
void TestOneofBackwardsCompatible::set_foo_int(::google::protobuf::int32 value) {
  set_has_foo_int();
  foo_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneofBackwardsCompatible.foo_int)
}

// optional string foo_string = 2;
bool TestOneofBackwardsCompatible::has_foo_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestOneofBackwardsCompatible::set_has_foo_string() {
  _has_bits_[0] |= 0x00000002u;
}
void TestOneofBackwardsCompatible::clear_has_foo_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestOneofBackwardsCompatible::clear_foo_string() {
  foo_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_foo_string();
}
const ::std::string& TestOneofBackwardsCompatible::foo_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
  return foo_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestOneofBackwardsCompatible::set_foo_string(const ::std::string& value) {
  set_has_foo_string();
  foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
}
void TestOneofBackwardsCompatible::set_foo_string(const char* value) {
  set_has_foo_string();
  foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
}
void TestOneofBackwardsCompatible::set_foo_string(const char* value,
    size_t size) {
  set_has_foo_string();
  foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
}
::std::string* TestOneofBackwardsCompatible::mutable_foo_string() {
  set_has_foo_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
  return foo_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneofBackwardsCompatible::release_foo_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
  clear_has_foo_string();
  return foo_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneofBackwardsCompatible::unsafe_arena_release_foo_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_foo_string();
  return foo_string_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestOneofBackwardsCompatible::set_allocated_foo_string(::std::string* foo_string) {
  if (foo_string != NULL) {
    set_has_foo_string();
  } else {
    clear_has_foo_string();
  }
  foo_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
}
void TestOneofBackwardsCompatible::unsafe_arena_set_allocated_foo_string(
    ::std::string* foo_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (foo_string != NULL) {
    set_has_foo_string();
  } else {
    clear_has_foo_string();
  }
  foo_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      foo_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foo_string)
}

// optional .protobuf_unittest.TestAllTypes foo_message = 3;
bool TestOneofBackwardsCompatible::has_foo_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestOneofBackwardsCompatible::set_has_foo_message() {
  _has_bits_[0] |= 0x00000004u;
}
void TestOneofBackwardsCompatible::clear_has_foo_message() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestOneofBackwardsCompatible::clear_foo_message() {
  if (foo_message_ != NULL) foo_message_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_foo_message();
}
const ::protobuf_unittest::TestAllTypes& TestOneofBackwardsCompatible::foo_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
  return foo_message_ != NULL ? *foo_message_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestOneofBackwardsCompatible::mutable_foo_message() {
  set_has_foo_message();
  if (foo_message_ == NULL) {
    _slow_mutable_foo_message();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
  return foo_message_;
}
::protobuf_unittest::TestAllTypes* TestOneofBackwardsCompatible::release_foo_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
  clear_has_foo_message();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_foo_message();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = foo_message_;
    foo_message_ = NULL;
    return temp;
  }
}
 void TestOneofBackwardsCompatible::set_allocated_foo_message(::protobuf_unittest::TestAllTypes* foo_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete foo_message_;
  }
  if (foo_message != NULL) {
    _slow_set_allocated_foo_message(message_arena, &foo_message);
  }
  foo_message_ = foo_message;
  if (foo_message) {
    set_has_foo_message();
  } else {
    clear_has_foo_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foo_message)
}

// optional group FooGroup = 4 { ... };
bool TestOneofBackwardsCompatible::has_foogroup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestOneofBackwardsCompatible::set_has_foogroup() {
  _has_bits_[0] |= 0x00000008u;
}
void TestOneofBackwardsCompatible::clear_has_foogroup() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestOneofBackwardsCompatible::clear_foogroup() {
  if (foogroup_ != NULL) foogroup_->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::Clear();
  clear_has_foogroup();
}
const ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible::foogroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
  return foogroup_ != NULL ? *foogroup_
                         : *::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::internal_default_instance();
}
::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::mutable_foogroup() {
  set_has_foogroup();
  if (foogroup_ == NULL) {
    _slow_mutable_foogroup();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
  return foogroup_;
}
::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::release_foogroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
  clear_has_foogroup();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_foogroup();
  } else {
    ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* temp = foogroup_;
    foogroup_ = NULL;
    return temp;
  }
}
 void TestOneofBackwardsCompatible::set_allocated_foogroup(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup* foogroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete foogroup_;
  }
  if (foogroup != NULL) {
    _slow_set_allocated_foogroup(message_arena, &foogroup);
  }
  foogroup_ = foogroup;
  if (foogroup) {
    set_has_foogroup();
  } else {
    clear_has_foogroup();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneofBackwardsCompatible.foogroup)
}

inline const TestOneofBackwardsCompatible* TestOneofBackwardsCompatible::internal_default_instance() {
  return &TestOneofBackwardsCompatible_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TestOneof2_NestedEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_NestedEnum_descriptor_;
}
bool TestOneof2_NestedEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestOneof2_NestedEnum TestOneof2::FOO;
const TestOneof2_NestedEnum TestOneof2::BAR;
const TestOneof2_NestedEnum TestOneof2::BAZ;
const TestOneof2_NestedEnum TestOneof2::NestedEnum_MIN;
const TestOneof2_NestedEnum TestOneof2::NestedEnum_MAX;
const int TestOneof2::NestedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneof2_FooGroup::kAFieldNumber;
const int TestOneof2_FooGroup::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneof2_FooGroup::TestOneof2_FooGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2.FooGroup)
}
TestOneof2_FooGroup::TestOneof2_FooGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2.FooGroup)
}

void TestOneof2_FooGroup::InitAsDefaultInstance() {
}

TestOneof2_FooGroup::TestOneof2_FooGroup(const TestOneof2_FooGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.FooGroup)
}

void TestOneof2_FooGroup::SharedCtor() {
  _cached_size_ = 0;
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

TestOneof2_FooGroup::~TestOneof2_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.FooGroup)
  SharedDtor();
}

void TestOneof2_FooGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  b_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TestOneof2_FooGroup::ArenaDtor(void* object) {
  TestOneof2_FooGroup* _this = reinterpret_cast< TestOneof2_FooGroup* >(object);
  (void)_this;
}
void TestOneof2_FooGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneof2_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_FooGroup_descriptor_;
}

const TestOneof2_FooGroup& TestOneof2_FooGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneof2_FooGroup> TestOneof2_FooGroup_default_instance_;

TestOneof2_FooGroup* TestOneof2_FooGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneof2_FooGroup>(arena);
}

void TestOneof2_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2.FooGroup)
  if (_has_bits_[0 / 32] & 3u) {
    a_ = 0;
    if (has_b()) {
      b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneof2_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 9;
      case 9: {
        if (tag == 72) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_b;
        break;
      }

      // optional string b = 10;
      case 10: {
        if (tag == 82) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.FooGroup.b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2.FooGroup)
  return false;
#undef DO_
}

void TestOneof2_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2.FooGroup)
  // optional int32 a = 9;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->a(), output);
  }

  // optional string b = 10;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof2.FooGroup.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2.FooGroup)
}

::google::protobuf::uint8* TestOneof2_FooGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.FooGroup)
  // optional int32 a = 9;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->a(), target);
  }

  // optional string b = 10;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof2.FooGroup.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.FooGroup)
  return target;
}

size_t TestOneof2_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2.FooGroup)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a = 9;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 10;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneof2.FooGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneof2_FooGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneof2_FooGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneof2.FooGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneof2.FooGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestOneof2_FooGroup::MergeFrom(const TestOneof2_FooGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2.FooGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneof2_FooGroup::UnsafeMergeFrom(const TestOneof2_FooGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneof2_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneof2.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2_FooGroup::CopyFrom(const TestOneof2_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2.FooGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneof2_FooGroup::IsInitialized() const {

  return true;
}

void TestOneof2_FooGroup::Swap(TestOneof2_FooGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneof2_FooGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneof2_FooGroup::UnsafeArenaSwap(TestOneof2_FooGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneof2_FooGroup::InternalSwap(TestOneof2_FooGroup* other) {
  std::swap(a_, other->a_);
  b_.Swap(&other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneof2_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_FooGroup_descriptor_;
  metadata.reflection = TestOneof2_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneof2_NestedMessage::kQuxIntFieldNumber;
const int TestOneof2_NestedMessage::kCorgeIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneof2_NestedMessage::TestOneof2_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2.NestedMessage)
}
TestOneof2_NestedMessage::TestOneof2_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  corge_int_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2.NestedMessage)
}

void TestOneof2_NestedMessage::InitAsDefaultInstance() {
}

TestOneof2_NestedMessage::TestOneof2_NestedMessage(const TestOneof2_NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.NestedMessage)
}

void TestOneof2_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  qux_int_ = GOOGLE_LONGLONG(0);
}

TestOneof2_NestedMessage::~TestOneof2_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.NestedMessage)
  SharedDtor();
}

void TestOneof2_NestedMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestOneof2_NestedMessage::ArenaDtor(void* object) {
  TestOneof2_NestedMessage* _this = reinterpret_cast< TestOneof2_NestedMessage* >(object);
  (void)_this;
}
void TestOneof2_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneof2_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_NestedMessage_descriptor_;
}

const TestOneof2_NestedMessage& TestOneof2_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneof2_NestedMessage> TestOneof2_NestedMessage_default_instance_;

TestOneof2_NestedMessage* TestOneof2_NestedMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneof2_NestedMessage>(arena);
}

void TestOneof2_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2.NestedMessage)
  qux_int_ = GOOGLE_LONGLONG(0);
  corge_int_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneof2_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 qux_int = 1;
      case 1: {
        if (tag == 8) {
          set_has_qux_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qux_int_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_corge_int;
        break;
      }

      // repeated int32 corge_int = 2;
      case 2: {
        if (tag == 16) {
         parse_corge_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_corge_int())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_corge_int())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_corge_int;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2.NestedMessage)
  return false;
#undef DO_
}

void TestOneof2_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2.NestedMessage)
  // optional int64 qux_int = 1;
  if (has_qux_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->qux_int(), output);
  }

  // repeated int32 corge_int = 2;
  for (int i = 0; i < this->corge_int_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->corge_int(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2.NestedMessage)
}

::google::protobuf::uint8* TestOneof2_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.NestedMessage)
  // optional int64 qux_int = 1;
  if (has_qux_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->qux_int(), target);
  }

  // repeated int32 corge_int = 2;
  for (int i = 0; i < this->corge_int_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->corge_int(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.NestedMessage)
  return target;
}

size_t TestOneof2_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2.NestedMessage)
  size_t total_size = 0;

  // optional int64 qux_int = 1;
  if (has_qux_int()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qux_int());
  }

  // repeated int32 corge_int = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->corge_int_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->corge_int(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->corge_int_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneof2_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneof2_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneof2.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneof2.NestedMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestOneof2_NestedMessage::MergeFrom(const TestOneof2_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneof2_NestedMessage::UnsafeMergeFrom(const TestOneof2_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  corge_int_.UnsafeMergeFrom(from.corge_int_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qux_int()) {
      set_qux_int(from.qux_int());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneof2_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2_NestedMessage::CopyFrom(const TestOneof2_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneof2_NestedMessage::IsInitialized() const {

  return true;
}

void TestOneof2_NestedMessage::Swap(TestOneof2_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneof2_NestedMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneof2_NestedMessage::UnsafeArenaSwap(TestOneof2_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneof2_NestedMessage::InternalSwap(TestOneof2_NestedMessage* other) {
  std::swap(qux_int_, other->qux_int_);
  corge_int_.UnsafeArenaSwap(&other->corge_int_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneof2_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_NestedMessage_descriptor_;
  metadata.reflection = TestOneof2_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

::std::string* TestOneof2::_default_bar_string_ = NULL;
::std::string* TestOneof2::_default_bar_cord_ = NULL;
::std::string* TestOneof2::_default_bar_string_piece_ = NULL;
::std::string* TestOneof2::_default_bar_bytes_ = NULL;
::std::string* TestOneof2::_default_baz_string_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOneof2::kFooIntFieldNumber;
const int TestOneof2::kFooStringFieldNumber;
const int TestOneof2::kFooCordFieldNumber;
const int TestOneof2::kFooStringPieceFieldNumber;
const int TestOneof2::kFooBytesFieldNumber;
const int TestOneof2::kFooEnumFieldNumber;
const int TestOneof2::kFooMessageFieldNumber;
const int TestOneof2::kFoogroupFieldNumber;
const int TestOneof2::kFooLazyMessageFieldNumber;
const int TestOneof2::kBarIntFieldNumber;
const int TestOneof2::kBarStringFieldNumber;
const int TestOneof2::kBarCordFieldNumber;
const int TestOneof2::kBarStringPieceFieldNumber;
const int TestOneof2::kBarBytesFieldNumber;
const int TestOneof2::kBarEnumFieldNumber;
const int TestOneof2::kBazIntFieldNumber;
const int TestOneof2::kBazStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOneof2::TestOneof2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2)
}
TestOneof2::TestOneof2(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2)
}

void TestOneof2::InitAsDefaultInstance() {
  TestOneof2_default_oneof_instance_->foo_int_ = 0;
  TestOneof2_default_oneof_instance_->foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestOneof2_default_oneof_instance_->foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestOneof2_default_oneof_instance_->foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestOneof2_default_oneof_instance_->foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestOneof2_default_oneof_instance_->foo_enum_ = 1;
  TestOneof2_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestOneof2_NestedMessage*>(
      ::protobuf_unittest::TestOneof2_NestedMessage::internal_default_instance());
  TestOneof2_default_oneof_instance_->foogroup_ = const_cast< ::protobuf_unittest::TestOneof2_FooGroup*>(
      ::protobuf_unittest::TestOneof2_FooGroup::internal_default_instance());
  TestOneof2_default_oneof_instance_->foo_lazy_message_ = const_cast< ::protobuf_unittest::TestOneof2_NestedMessage*>(
      ::protobuf_unittest::TestOneof2_NestedMessage::internal_default_instance());
  TestOneof2_default_oneof_instance_->bar_int_ = 5;
  TestOneof2_default_oneof_instance_->bar_string_.UnsafeSetDefault(_default_bar_string_);
  TestOneof2_default_oneof_instance_->bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  TestOneof2_default_oneof_instance_->bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  TestOneof2_default_oneof_instance_->bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  TestOneof2_default_oneof_instance_->bar_enum_ = 2;
}

TestOneof2::TestOneof2(const TestOneof2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2)
}

void TestOneof2::SharedCtor() {
  _cached_size_ = 0;
  baz_string_.UnsafeSetDefault(_default_baz_string_);
  baz_int_ = 0;
  clear_has_foo();
  clear_has_bar();
}

TestOneof2::~TestOneof2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2)
  SharedDtor();
}

void TestOneof2::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  baz_string_.Destroy(_default_baz_string_, arena);
  if (has_foo()) {
    clear_foo();
  }
  if (has_bar()) {
    clear_bar();
  }
}

void TestOneof2::ArenaDtor(void* object) {
  TestOneof2* _this = reinterpret_cast< TestOneof2* >(object);
  (void)_this;
}
void TestOneof2::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestOneof2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_descriptor_;
}

const TestOneof2& TestOneof2::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestOneof2> TestOneof2_default_instance_;

TestOneof2* TestOneof2::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestOneof2>(arena);
}

void TestOneof2::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof2)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooCord: {
      foo_.foo_cord_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooStringPiece: {
      foo_.foo_string_piece_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooBytes: {
      foo_.foo_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooEnum: {
      // No need to clear
      break;
    }
    case kFooMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foo_message_;
      }
      break;
    }
    case kFoogroup: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foogroup_;
      }
      break;
    }
    case kFooLazyMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foo_lazy_message_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}

void TestOneof2::clear_bar() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof2)
  switch (bar_case()) {
    case kBarInt: {
      // No need to clear
      break;
    }
    case kBarString: {
      bar_.bar_string_.Destroy(_default_bar_string_,
          GetArenaNoVirtual());
      break;
    }
    case kBarCord: {
      bar_.bar_cord_.Destroy(_default_bar_cord_,
          GetArenaNoVirtual());
      break;
    }
    case kBarStringPiece: {
      bar_.bar_string_piece_.Destroy(_default_bar_string_piece_,
          GetArenaNoVirtual());
      break;
    }
    case kBarBytes: {
      bar_.bar_bytes_.Destroy(_default_bar_bytes_,
          GetArenaNoVirtual());
      break;
    }
    case kBarEnum: {
      // No need to clear
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = BAR_NOT_SET;
}


void TestOneof2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2)
  baz_int_ = 0;
  if (has_baz_string()) {
    baz_string_.ClearToDefault(_default_baz_string_, GetArenaNoVirtual());
  }
  clear_foo();
  clear_bar();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestOneof2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.foo_string");
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional string foo_cord = 3 [ctype = CORD];
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_cord().data(), this->foo_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.foo_cord");
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string_piece().data(), this->foo_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.foo_string_piece");
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional bytes foo_bytes = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_foo_bytes()));
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
      case 6: {
        if (tag == 48) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value)) {
            set_foo_enum(static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
      case 7: {
        if (tag == 58) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        goto after_foo_lazy_message;
        break;
      }

      // optional group FooGroup = 8 { ... };
      case 8: {
        if (tag == 67) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                8, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_foo_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
      case 11: {
        if (tag == 90) {
         parse_foo_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_lazy_message()));
        } else {
          goto handle_unusual;
        }
       after_foo_lazy_message:
        if (input->ExpectTag(96)) goto parse_bar_int;
        break;
      }

      // optional int32 bar_int = 12 [default = 5];
      case 12: {
        if (tag == 96) {
         parse_bar_int:
          clear_bar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bar_.bar_int_)));
          set_has_bar_int();
        } else {
          goto handle_unusual;
        }
        goto after_bar_enum;
        break;
      }

      // optional string bar_string = 13 [default = "STRING"];
      case 13: {
        if (tag == 106) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_string().data(), this->bar_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.bar_string");
        } else {
          goto handle_unusual;
        }
        goto after_bar_enum;
        break;
      }

      // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
      case 14: {
        if (tag == 114) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_cord().data(), this->bar_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.bar_cord");
        } else {
          goto handle_unusual;
        }
        goto after_bar_enum;
        break;
      }

      // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
      case 15: {
        if (tag == 122) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_string_piece().data(), this->bar_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.bar_string_piece");
        } else {
          goto handle_unusual;
        }
        goto after_bar_enum;
        break;
      }

      // optional bytes bar_bytes = 16 [default = "BYTES"];
      case 16: {
        if (tag == 130) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bar_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_bar_enum;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
      case 17: {
        if (tag == 136) {
         parse_bar_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value)) {
            set_bar_enum(static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_unusual;
        }
       after_bar_enum:
        if (input->ExpectTag(144)) goto parse_baz_int;
        break;
      }

      // optional int32 baz_int = 18;
      case 18: {
        if (tag == 144) {
         parse_baz_int:
          set_has_baz_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baz_int_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_baz_string;
        break;
      }

      // optional string baz_string = 19 [default = "BAZ"];
      case 19: {
        if (tag == 154) {
         parse_baz_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_baz_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->baz_string().data(), this->baz_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestOneof2.baz_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2)
  return false;
#undef DO_
}

void TestOneof2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2)
  switch (foo_case()) {
    case kFooInt:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->foo_string(), output);
      break;
    case kFooCord:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_cord().data(), this->foo_cord().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_cord");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        3, this->foo_cord(), output);
      break;
    case kFooStringPiece:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string_piece().data(), this->foo_string_piece().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_string_piece");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        4, this->foo_string_piece(), output);
      break;
    case kFooBytes:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        5, this->foo_bytes(), output);
      break;
    case kFooEnum:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        6, this->foo_enum(), output);
      break;
    case kFooMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, *foo_.foo_message_, output);
      break;
    case kFoogroup:
      ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
        8, *foo_.foogroup_, output);
      break;
    case kFooLazyMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        11, *foo_.foo_lazy_message_, output);
      break;
    default: ;
  }
  switch (bar_case()) {
    case kBarInt:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->bar_int(), output);
      break;
    case kBarString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_string().data(), this->bar_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        13, this->bar_string(), output);
      break;
    case kBarCord:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_cord().data(), this->bar_cord().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_cord");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        14, this->bar_cord(), output);
      break;
    case kBarStringPiece:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_string_piece().data(), this->bar_string_piece().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_string_piece");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        15, this->bar_string_piece(), output);
      break;
    case kBarBytes:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        16, this->bar_bytes(), output);
      break;
    case kBarEnum:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        17, this->bar_enum(), output);
      break;
    default: ;
  }
  // optional int32 baz_int = 18;
  if (has_baz_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->baz_int(), output);
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (has_baz_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baz_string().data(), this->baz_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof2.baz_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->baz_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2)
}

::google::protobuf::uint8* TestOneof2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2)
  switch (foo_case()) {
    case kFooInt:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->foo_string(), target);
      break;
    case kFooCord:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_cord().data(), this->foo_cord().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_cord");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          3, this->foo_cord(), target);
      break;
    case kFooStringPiece:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string_piece().data(), this->foo_string_piece().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.foo_string_piece");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          4, this->foo_string_piece(), target);
      break;
    case kFooBytes:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          5, this->foo_bytes(), target);
      break;
    case kFooEnum:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        6, this->foo_enum(), target);
      break;
    case kFooMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          7, *foo_.foo_message_, false, target);
      break;
    case kFoogroup:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteGroupNoVirtualToArray(
          8, *foo_.foogroup_, false, target);
      break;
    case kFooLazyMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          11, *foo_.foo_lazy_message_, false, target);
      break;
    default: ;
  }
  switch (bar_case()) {
    case kBarInt:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->bar_int(), target);
      break;
    case kBarString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_string().data(), this->bar_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          13, this->bar_string(), target);
      break;
    case kBarCord:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_cord().data(), this->bar_cord().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_cord");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          14, this->bar_cord(), target);
      break;
    case kBarStringPiece:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->bar_string_piece().data(), this->bar_string_piece().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestOneof2.bar_string_piece");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          15, this->bar_string_piece(), target);
      break;
    case kBarBytes:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          16, this->bar_bytes(), target);
      break;
    case kBarEnum:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        17, this->bar_enum(), target);
      break;
    default: ;
  }
  // optional int32 baz_int = 18;
  if (has_baz_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->baz_int(), target);
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (has_baz_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baz_string().data(), this->baz_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestOneof2.baz_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->baz_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2)
  return target;
}

size_t TestOneof2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2)
  size_t total_size = 0;

  // optional int32 baz_int = 18;
  if (has_baz_int()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->baz_int());
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (has_baz_string()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->baz_string());
  }

  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional string foo_cord = 3 [ctype = CORD];
    case kFooCord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_cord());
      break;
    }
    // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
    case kFooStringPiece: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string_piece());
      break;
    }
    // optional bytes foo_bytes = 5;
    case kFooBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->foo_bytes());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
    case kFooEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->foo_enum());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *foo_.foo_message_);
      break;
    }
    // optional group FooGroup = 8 { ... };
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *foo_.foogroup_);
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
    case kFooLazyMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *foo_.foo_lazy_message_);
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (bar_case()) {
    // optional int32 bar_int = 12 [default = 5];
    case kBarInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bar_int());
      break;
    }
    // optional string bar_string = 13 [default = "STRING"];
    case kBarString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_string());
      break;
    }
    // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
    case kBarCord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_cord());
      break;
    }
    // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
    case kBarStringPiece: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_string_piece());
      break;
    }
    // optional bytes bar_bytes = 16 [default = "BYTES"];
    case kBarBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bar_bytes());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
    case kBarEnum: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bar_enum());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestOneof2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestOneof2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOneof2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestOneof2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestOneof2)
    UnsafeMergeFrom(*source);
  }
}

void TestOneof2::MergeFrom(const TestOneof2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestOneof2::UnsafeMergeFrom(const TestOneof2& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooCord: {
      set_foo_cord(from.foo_cord());
      break;
    }
    case kFooStringPiece: {
      set_foo_string_piece(from.foo_string_piece());
      break;
    }
    case kFooBytes: {
      set_foo_bytes(from.foo_bytes());
      break;
    }
    case kFooEnum: {
      set_foo_enum(from.foo_enum());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(from.foo_message());
      break;
    }
    case kFoogroup: {
      mutable_foogroup()->::protobuf_unittest::TestOneof2_FooGroup::MergeFrom(from.foogroup());
      break;
    }
    case kFooLazyMessage: {
      mutable_foo_lazy_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(from.foo_lazy_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (from.bar_case()) {
    case kBarInt: {
      set_bar_int(from.bar_int());
      break;
    }
    case kBarString: {
      set_bar_string(from.bar_string());
      break;
    }
    case kBarCord: {
      set_bar_cord(from.bar_cord());
      break;
    }
    case kBarStringPiece: {
      set_bar_string_piece(from.bar_string_piece());
      break;
    }
    case kBarBytes: {
      set_bar_bytes(from.bar_bytes());
      break;
    }
    case kBarEnum: {
      set_bar_enum(from.bar_enum());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    if (from.has_baz_int()) {
      set_baz_int(from.baz_int());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_baz_string()) {
      set_baz_string(from.baz_string());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestOneof2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestOneof2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2::CopyFrom(const TestOneof2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestOneof2::IsInitialized() const {

  return true;
}

void TestOneof2::Swap(TestOneof2* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestOneof2 temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestOneof2::UnsafeArenaSwap(TestOneof2* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestOneof2::InternalSwap(TestOneof2* other) {
  std::swap(baz_int_, other->baz_int_);
  baz_string_.Swap(&other->baz_string_);
  std::swap(foo_, other->foo_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(bar_, other->bar_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOneof2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_descriptor_;
  metadata.reflection = TestOneof2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestOneof2_FooGroup

// optional int32 a = 9;
bool TestOneof2_FooGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestOneof2_FooGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestOneof2_FooGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestOneof2_FooGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestOneof2_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.FooGroup.a)
  return a_;
}
void TestOneof2_FooGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.FooGroup.a)
}

// optional string b = 10;
bool TestOneof2_FooGroup::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestOneof2_FooGroup::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void TestOneof2_FooGroup::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestOneof2_FooGroup::clear_b() {
  b_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_b();
}
const ::std::string& TestOneof2_FooGroup::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.FooGroup.b)
  return b_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestOneof2_FooGroup::set_b(const ::std::string& value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.FooGroup.b)
}
void TestOneof2_FooGroup::set_b(const char* value) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.FooGroup.b)
}
void TestOneof2_FooGroup::set_b(const char* value,
    size_t size) {
  set_has_b();
  b_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.FooGroup.b)
}
::std::string* TestOneof2_FooGroup::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.FooGroup.b)
  return b_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneof2_FooGroup::release_b() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.FooGroup.b)
  clear_has_b();
  return b_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TestOneof2_FooGroup::unsafe_arena_release_b() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.FooGroup.b)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_b();
  return b_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TestOneof2_FooGroup::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.FooGroup.b)
}
void TestOneof2_FooGroup::unsafe_arena_set_allocated_b(
    ::std::string* b) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      b, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.FooGroup.b)
}

inline const TestOneof2_FooGroup* TestOneof2_FooGroup::internal_default_instance() {
  return &TestOneof2_FooGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestOneof2_NestedMessage

// optional int64 qux_int = 1;
bool TestOneof2_NestedMessage::has_qux_int() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestOneof2_NestedMessage::set_has_qux_int() {
  _has_bits_[0] |= 0x00000001u;
}
void TestOneof2_NestedMessage::clear_has_qux_int() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestOneof2_NestedMessage::clear_qux_int() {
  qux_int_ = GOOGLE_LONGLONG(0);
  clear_has_qux_int();
}
::google::protobuf::int64 TestOneof2_NestedMessage::qux_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.NestedMessage.qux_int)
  return qux_int_;
}
void TestOneof2_NestedMessage::set_qux_int(::google::protobuf::int64 value) {
  set_has_qux_int();
  qux_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.NestedMessage.qux_int)
}

// repeated int32 corge_int = 2;
int TestOneof2_NestedMessage::corge_int_size() const {
  return corge_int_.size();
}
void TestOneof2_NestedMessage::clear_corge_int() {
  corge_int_.Clear();
}
::google::protobuf::int32 TestOneof2_NestedMessage::corge_int(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.NestedMessage.corge_int)
  return corge_int_.Get(index);
}
void TestOneof2_NestedMessage::set_corge_int(int index, ::google::protobuf::int32 value) {
  corge_int_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.NestedMessage.corge_int)
}
void TestOneof2_NestedMessage::add_corge_int(::google::protobuf::int32 value) {
  corge_int_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestOneof2.NestedMessage.corge_int)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestOneof2_NestedMessage::corge_int() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestOneof2.NestedMessage.corge_int)
  return corge_int_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestOneof2_NestedMessage::mutable_corge_int() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestOneof2.NestedMessage.corge_int)
  return &corge_int_;
}

inline const TestOneof2_NestedMessage* TestOneof2_NestedMessage::internal_default_instance() {
  return &TestOneof2_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestOneof2

// optional int32 foo_int = 1;
bool TestOneof2::has_foo_int() const {
  return foo_case() == kFooInt;
}
void TestOneof2::set_has_foo_int() {
  _oneof_case_[0] = kFooInt;
}
void TestOneof2::clear_foo_int() {
  if (has_foo_int()) {
    foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
::google::protobuf::int32 TestOneof2::foo_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_int)
  if (has_foo_int()) {
    return foo_.foo_int_;
  }
  return 0;
}
void TestOneof2::set_foo_int(::google::protobuf::int32 value) {
  if (!has_foo_int()) {
    clear_foo();
    set_has_foo_int();
  }
  foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_int)
}

// optional string foo_string = 2;
bool TestOneof2::has_foo_string() const {
  return foo_case() == kFooString;
}
void TestOneof2::set_has_foo_string() {
  _oneof_case_[0] = kFooString;
}
void TestOneof2::clear_foo_string() {
  if (has_foo_string()) {
    foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestOneof2::foo_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_string)
  if (has_foo_string()) {
    return foo_.foo_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestOneof2::set_foo_string(const ::std::string& value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_string)
}
void TestOneof2::set_foo_string(const char* value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.foo_string)
}
void TestOneof2::set_foo_string(const char* value,
                             size_t size) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.foo_string)
}
::std::string* TestOneof2::mutable_foo_string() {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_string)
}
::std::string* TestOneof2::release_foo_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_string)
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_foo_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_string(::std::string* foo_string) {
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string != NULL) {
    set_has_foo_string();
    foo_.foo_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_string)
}
void TestOneof2::unsafe_arena_set_allocated_foo_string(::std::string* foo_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string) {
    set_has_foo_string();
    foo_.foo_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_string)
}

// optional string foo_cord = 3 [ctype = CORD];
bool TestOneof2::has_foo_cord() const {
  return foo_case() == kFooCord;
}
void TestOneof2::set_has_foo_cord() {
  _oneof_case_[0] = kFooCord;
}
void TestOneof2::clear_foo_cord() {
  if (has_foo_cord()) {
    foo_.foo_cord_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestOneof2::foo_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_cord)
  if (has_foo_cord()) {
    return foo_.foo_cord_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestOneof2::set_foo_cord(const ::std::string& value) {
  if (!has_foo_cord()) {
    clear_foo();
    set_has_foo_cord();
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_cord)
}
void TestOneof2::set_foo_cord(const char* value) {
  if (!has_foo_cord()) {
    clear_foo();
    set_has_foo_cord();
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.foo_cord)
}
void TestOneof2::set_foo_cord(const char* value,
                             size_t size) {
  if (!has_foo_cord()) {
    clear_foo();
    set_has_foo_cord();
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.foo_cord)
}
::std::string* TestOneof2::mutable_foo_cord() {
  if (!has_foo_cord()) {
    clear_foo();
    set_has_foo_cord();
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_cord_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_cord)
}
::std::string* TestOneof2::release_foo_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_cord)
  if (has_foo_cord()) {
    clear_has_foo();
    return foo_.foo_cord_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_foo_cord() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_cord)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_cord()) {
    clear_has_foo();
    return foo_.foo_cord_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_cord(::std::string* foo_cord) {
  if (!has_foo_cord()) {
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_cord != NULL) {
    set_has_foo_cord();
    foo_.foo_cord_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_cord,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_cord)
}
void TestOneof2::unsafe_arena_set_allocated_foo_cord(::std::string* foo_cord) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_cord()) {
    foo_.foo_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_cord) {
    set_has_foo_cord();
    foo_.foo_cord_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_cord, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_cord)
}

// optional string foo_string_piece = 4 [ctype = STRING_PIECE];
bool TestOneof2::has_foo_string_piece() const {
  return foo_case() == kFooStringPiece;
}
void TestOneof2::set_has_foo_string_piece() {
  _oneof_case_[0] = kFooStringPiece;
}
void TestOneof2::clear_foo_string_piece() {
  if (has_foo_string_piece()) {
    foo_.foo_string_piece_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestOneof2::foo_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_string_piece)
  if (has_foo_string_piece()) {
    return foo_.foo_string_piece_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestOneof2::set_foo_string_piece(const ::std::string& value) {
  if (!has_foo_string_piece()) {
    clear_foo();
    set_has_foo_string_piece();
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_string_piece)
}
void TestOneof2::set_foo_string_piece(const char* value) {
  if (!has_foo_string_piece()) {
    clear_foo();
    set_has_foo_string_piece();
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.foo_string_piece)
}
void TestOneof2::set_foo_string_piece(const char* value,
                             size_t size) {
  if (!has_foo_string_piece()) {
    clear_foo();
    set_has_foo_string_piece();
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.foo_string_piece)
}
::std::string* TestOneof2::mutable_foo_string_piece() {
  if (!has_foo_string_piece()) {
    clear_foo();
    set_has_foo_string_piece();
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_string_piece_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_string_piece)
}
::std::string* TestOneof2::release_foo_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_string_piece)
  if (has_foo_string_piece()) {
    clear_has_foo();
    return foo_.foo_string_piece_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_foo_string_piece() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_string_piece)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_string_piece()) {
    clear_has_foo();
    return foo_.foo_string_piece_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_string_piece(::std::string* foo_string_piece) {
  if (!has_foo_string_piece()) {
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string_piece != NULL) {
    set_has_foo_string_piece();
    foo_.foo_string_piece_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string_piece,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_string_piece)
}
void TestOneof2::unsafe_arena_set_allocated_foo_string_piece(::std::string* foo_string_piece) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_string_piece()) {
    foo_.foo_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string_piece) {
    set_has_foo_string_piece();
    foo_.foo_string_piece_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string_piece, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_string_piece)
}

// optional bytes foo_bytes = 5;
bool TestOneof2::has_foo_bytes() const {
  return foo_case() == kFooBytes;
}
void TestOneof2::set_has_foo_bytes() {
  _oneof_case_[0] = kFooBytes;
}
void TestOneof2::clear_foo_bytes() {
  if (has_foo_bytes()) {
    foo_.foo_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestOneof2::foo_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_bytes)
  if (has_foo_bytes()) {
    return foo_.foo_bytes_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestOneof2::set_foo_bytes(const ::std::string& value) {
  if (!has_foo_bytes()) {
    clear_foo();
    set_has_foo_bytes();
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_bytes)
}
void TestOneof2::set_foo_bytes(const char* value) {
  if (!has_foo_bytes()) {
    clear_foo();
    set_has_foo_bytes();
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.foo_bytes)
}
void TestOneof2::set_foo_bytes(const void* value,
                             size_t size) {
  if (!has_foo_bytes()) {
    clear_foo();
    set_has_foo_bytes();
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.foo_bytes)
}
::std::string* TestOneof2::mutable_foo_bytes() {
  if (!has_foo_bytes()) {
    clear_foo();
    set_has_foo_bytes();
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_bytes_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_bytes)
}
::std::string* TestOneof2::release_foo_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_bytes)
  if (has_foo_bytes()) {
    clear_has_foo();
    return foo_.foo_bytes_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_foo_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_bytes()) {
    clear_has_foo();
    return foo_.foo_bytes_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_bytes(::std::string* foo_bytes) {
  if (!has_foo_bytes()) {
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_bytes != NULL) {
    set_has_foo_bytes();
    foo_.foo_bytes_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_bytes,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_bytes)
}
void TestOneof2::unsafe_arena_set_allocated_foo_bytes(::std::string* foo_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_bytes()) {
    foo_.foo_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_bytes) {
    set_has_foo_bytes();
    foo_.foo_bytes_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_bytes, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_bytes)
}

// optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
bool TestOneof2::has_foo_enum() const {
  return foo_case() == kFooEnum;
}
void TestOneof2::set_has_foo_enum() {
  _oneof_case_[0] = kFooEnum;
}
void TestOneof2::clear_foo_enum() {
  if (has_foo_enum()) {
    foo_.foo_enum_ = 1;
    clear_has_foo();
  }
}
::protobuf_unittest::TestOneof2_NestedEnum TestOneof2::foo_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_enum)
  if (has_foo_enum()) {
    return static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(foo_.foo_enum_);
  }
  return static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(1);
}
void TestOneof2::set_foo_enum(::protobuf_unittest::TestOneof2_NestedEnum value) {
  assert(::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value));
  if (!has_foo_enum()) {
    clear_foo();
    set_has_foo_enum();
  }
  foo_.foo_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.foo_enum)
}

// optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
bool TestOneof2::has_foo_message() const {
  return foo_case() == kFooMessage;
}
void TestOneof2::set_has_foo_message() {
  _oneof_case_[0] = kFooMessage;
}
void TestOneof2::clear_foo_message() {
  if (has_foo_message()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foo_message_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestOneof2_NestedMessage& TestOneof2::foo_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_message)
  return has_foo_message()
      ? *foo_.foo_message_
      : ::protobuf_unittest::TestOneof2_NestedMessage::default_instance();
}
::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::mutable_foo_message() {
  if (!has_foo_message()) {
    clear_foo();
    set_has_foo_message();
    foo_.foo_message_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_NestedMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_message)
  return foo_.foo_message_;
}
::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::release_foo_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestOneof2_NestedMessage* temp = new ::protobuf_unittest::TestOneof2_NestedMessage(*foo_.foo_message_);
      foo_.foo_message_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestOneof2_NestedMessage* temp = foo_.foo_message_;
      foo_.foo_message_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_message) {
  clear_foo();
  if (foo_message) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foo_message) == NULL) {
      GetArenaNoVirtual()->Own(foo_message);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foo_message)) {
      ::protobuf_unittest::TestOneof2_NestedMessage* new_foo_message = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_NestedMessage >(
          GetArenaNoVirtual());
      new_foo_message->CopyFrom(*foo_message);
      foo_message = new_foo_message;
    }
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_message)
}
 ::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    ::protobuf_unittest::TestOneof2_NestedMessage* temp = foo_.foo_message_;
    foo_.foo_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestOneof2::unsafe_arena_set_allocated_foo_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_message) {
  clear_foo();
  if (foo_message) {
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_message)
}

// optional group FooGroup = 8 { ... };
bool TestOneof2::has_foogroup() const {
  return foo_case() == kFoogroup;
}
void TestOneof2::set_has_foogroup() {
  _oneof_case_[0] = kFoogroup;
}
void TestOneof2::clear_foogroup() {
  if (has_foogroup()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foogroup_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestOneof2_FooGroup& TestOneof2::foogroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foogroup)
  return has_foogroup()
      ? *foo_.foogroup_
      : ::protobuf_unittest::TestOneof2_FooGroup::default_instance();
}
::protobuf_unittest::TestOneof2_FooGroup* TestOneof2::mutable_foogroup() {
  if (!has_foogroup()) {
    clear_foo();
    set_has_foogroup();
    foo_.foogroup_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_FooGroup >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foogroup)
  return foo_.foogroup_;
}
::protobuf_unittest::TestOneof2_FooGroup* TestOneof2::release_foogroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foogroup)
  if (has_foogroup()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestOneof2_FooGroup* temp = new ::protobuf_unittest::TestOneof2_FooGroup(*foo_.foogroup_);
      foo_.foogroup_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestOneof2_FooGroup* temp = foo_.foogroup_;
      foo_.foogroup_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foogroup(::protobuf_unittest::TestOneof2_FooGroup* foogroup) {
  clear_foo();
  if (foogroup) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foogroup) == NULL) {
      GetArenaNoVirtual()->Own(foogroup);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foogroup)) {
      ::protobuf_unittest::TestOneof2_FooGroup* new_foogroup = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_FooGroup >(
          GetArenaNoVirtual());
      new_foogroup->CopyFrom(*foogroup);
      foogroup = new_foogroup;
    }
    set_has_foogroup();
    foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foogroup)
}
 ::protobuf_unittest::TestOneof2_FooGroup* TestOneof2::unsafe_arena_release_foogroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foogroup)
  if (has_foogroup()) {
    clear_has_foo();
    ::protobuf_unittest::TestOneof2_FooGroup* temp = foo_.foogroup_;
    foo_.foogroup_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestOneof2::unsafe_arena_set_allocated_foogroup(::protobuf_unittest::TestOneof2_FooGroup* foogroup) {
  clear_foo();
  if (foogroup) {
    set_has_foogroup();
    foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foogroup)
}

// optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
bool TestOneof2::has_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage;
}
void TestOneof2::set_has_foo_lazy_message() {
  _oneof_case_[0] = kFooLazyMessage;
}
void TestOneof2::clear_foo_lazy_message() {
  if (has_foo_lazy_message()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foo_lazy_message_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestOneof2_NestedMessage& TestOneof2::foo_lazy_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.foo_lazy_message)
  return has_foo_lazy_message()
      ? *foo_.foo_lazy_message_
      : ::protobuf_unittest::TestOneof2_NestedMessage::default_instance();
}
::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::mutable_foo_lazy_message() {
  if (!has_foo_lazy_message()) {
    clear_foo();
    set_has_foo_lazy_message();
    foo_.foo_lazy_message_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_NestedMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.foo_lazy_message)
  return foo_.foo_lazy_message_;
}
::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::release_foo_lazy_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.foo_lazy_message)
  if (has_foo_lazy_message()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestOneof2_NestedMessage* temp = new ::protobuf_unittest::TestOneof2_NestedMessage(*foo_.foo_lazy_message_);
      foo_.foo_lazy_message_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestOneof2_NestedMessage* temp = foo_.foo_lazy_message_;
      foo_.foo_lazy_message_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_foo_lazy_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_lazy_message) {
  clear_foo();
  if (foo_lazy_message) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foo_lazy_message) == NULL) {
      GetArenaNoVirtual()->Own(foo_lazy_message);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foo_lazy_message)) {
      ::protobuf_unittest::TestOneof2_NestedMessage* new_foo_lazy_message = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestOneof2_NestedMessage >(
          GetArenaNoVirtual());
      new_foo_lazy_message->CopyFrom(*foo_lazy_message);
      foo_lazy_message = new_foo_lazy_message;
    }
    set_has_foo_lazy_message();
    foo_.foo_lazy_message_ = foo_lazy_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_lazy_message)
}
 ::protobuf_unittest::TestOneof2_NestedMessage* TestOneof2::unsafe_arena_release_foo_lazy_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.foo_lazy_message)
  if (has_foo_lazy_message()) {
    clear_has_foo();
    ::protobuf_unittest::TestOneof2_NestedMessage* temp = foo_.foo_lazy_message_;
    foo_.foo_lazy_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestOneof2::unsafe_arena_set_allocated_foo_lazy_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_lazy_message) {
  clear_foo();
  if (foo_lazy_message) {
    set_has_foo_lazy_message();
    foo_.foo_lazy_message_ = foo_lazy_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.foo_lazy_message)
}

// optional int32 bar_int = 12 [default = 5];
bool TestOneof2::has_bar_int() const {
  return bar_case() == kBarInt;
}
void TestOneof2::set_has_bar_int() {
  _oneof_case_[1] = kBarInt;
}
void TestOneof2::clear_bar_int() {
  if (has_bar_int()) {
    bar_.bar_int_ = 5;
    clear_has_bar();
  }
}
::google::protobuf::int32 TestOneof2::bar_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_int)
  if (has_bar_int()) {
    return bar_.bar_int_;
  }
  return 5;
}
void TestOneof2::set_bar_int(::google::protobuf::int32 value) {
  if (!has_bar_int()) {
    clear_bar();
    set_has_bar_int();
  }
  bar_.bar_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_int)
}

// optional string bar_string = 13 [default = "STRING"];
bool TestOneof2::has_bar_string() const {
  return bar_case() == kBarString;
}
void TestOneof2::set_has_bar_string() {
  _oneof_case_[1] = kBarString;
}
void TestOneof2::clear_bar_string() {
  if (has_bar_string()) {
    bar_.bar_string_.Destroy(_default_bar_string_,
        GetArenaNoVirtual());
    clear_has_bar();
  }
}
const ::std::string& TestOneof2::bar_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_string)
  if (has_bar_string()) {
    return bar_.bar_string_.Get(_default_bar_string_);
  }
  return *_default_bar_string_;
}
void TestOneof2::set_bar_string(const ::std::string& value) {
  if (!has_bar_string()) {
    clear_bar();
    set_has_bar_string();
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  bar_.bar_string_.Set(_default_bar_string_, value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_string)
}
void TestOneof2::set_bar_string(const char* value) {
  if (!has_bar_string()) {
    clear_bar();
    set_has_bar_string();
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  bar_.bar_string_.Set(_default_bar_string_,
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.bar_string)
}
void TestOneof2::set_bar_string(const char* value,
                             size_t size) {
  if (!has_bar_string()) {
    clear_bar();
    set_has_bar_string();
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  bar_.bar_string_.Set(_default_bar_string_, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.bar_string)
}
::std::string* TestOneof2::mutable_bar_string() {
  if (!has_bar_string()) {
    clear_bar();
    set_has_bar_string();
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  return bar_.bar_string_.Mutable(_default_bar_string_,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.bar_string)
}
::std::string* TestOneof2::release_bar_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.bar_string)
  if (has_bar_string()) {
    clear_has_bar();
    return bar_.bar_string_.Release(_default_bar_string_,
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_bar_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.bar_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_bar_string()) {
    clear_has_bar();
    return bar_.bar_string_.UnsafeArenaRelease(
        _default_bar_string_, GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_bar_string(::std::string* bar_string) {
  if (!has_bar_string()) {
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  clear_bar();
  if (bar_string != NULL) {
    set_has_bar_string();
    bar_.bar_string_.SetAllocated(_default_bar_string_, bar_string,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.bar_string)
}
void TestOneof2::unsafe_arena_set_allocated_bar_string(::std::string* bar_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_bar_string()) {
    bar_.bar_string_.UnsafeSetDefault(_default_bar_string_);
  }
  clear_bar();
  if (bar_string) {
    set_has_bar_string();
    bar_.bar_string_.UnsafeArenaSetAllocated(_default_bar_string_, bar_string, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.bar_string)
}

// optional string bar_cord = 14 [default = "CORD", ctype = CORD];
bool TestOneof2::has_bar_cord() const {
  return bar_case() == kBarCord;
}
void TestOneof2::set_has_bar_cord() {
  _oneof_case_[1] = kBarCord;
}
void TestOneof2::clear_bar_cord() {
  if (has_bar_cord()) {
    bar_.bar_cord_.Destroy(_default_bar_cord_,
        GetArenaNoVirtual());
    clear_has_bar();
  }
}
const ::std::string& TestOneof2::bar_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_cord)
  if (has_bar_cord()) {
    return bar_.bar_cord_.Get(_default_bar_cord_);
  }
  return *_default_bar_cord_;
}
void TestOneof2::set_bar_cord(const ::std::string& value) {
  if (!has_bar_cord()) {
    clear_bar();
    set_has_bar_cord();
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  bar_.bar_cord_.Set(_default_bar_cord_, value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_cord)
}
void TestOneof2::set_bar_cord(const char* value) {
  if (!has_bar_cord()) {
    clear_bar();
    set_has_bar_cord();
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  bar_.bar_cord_.Set(_default_bar_cord_,
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.bar_cord)
}
void TestOneof2::set_bar_cord(const char* value,
                             size_t size) {
  if (!has_bar_cord()) {
    clear_bar();
    set_has_bar_cord();
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  bar_.bar_cord_.Set(_default_bar_cord_, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.bar_cord)
}
::std::string* TestOneof2::mutable_bar_cord() {
  if (!has_bar_cord()) {
    clear_bar();
    set_has_bar_cord();
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  return bar_.bar_cord_.Mutable(_default_bar_cord_,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.bar_cord)
}
::std::string* TestOneof2::release_bar_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.bar_cord)
  if (has_bar_cord()) {
    clear_has_bar();
    return bar_.bar_cord_.Release(_default_bar_cord_,
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_bar_cord() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.bar_cord)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_bar_cord()) {
    clear_has_bar();
    return bar_.bar_cord_.UnsafeArenaRelease(
        _default_bar_cord_, GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_bar_cord(::std::string* bar_cord) {
  if (!has_bar_cord()) {
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  clear_bar();
  if (bar_cord != NULL) {
    set_has_bar_cord();
    bar_.bar_cord_.SetAllocated(_default_bar_cord_, bar_cord,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.bar_cord)
}
void TestOneof2::unsafe_arena_set_allocated_bar_cord(::std::string* bar_cord) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_bar_cord()) {
    bar_.bar_cord_.UnsafeSetDefault(_default_bar_cord_);
  }
  clear_bar();
  if (bar_cord) {
    set_has_bar_cord();
    bar_.bar_cord_.UnsafeArenaSetAllocated(_default_bar_cord_, bar_cord, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.bar_cord)
}

// optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
bool TestOneof2::has_bar_string_piece() const {
  return bar_case() == kBarStringPiece;
}
void TestOneof2::set_has_bar_string_piece() {
  _oneof_case_[1] = kBarStringPiece;
}
void TestOneof2::clear_bar_string_piece() {
  if (has_bar_string_piece()) {
    bar_.bar_string_piece_.Destroy(_default_bar_string_piece_,
        GetArenaNoVirtual());
    clear_has_bar();
  }
}
const ::std::string& TestOneof2::bar_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_string_piece)
  if (has_bar_string_piece()) {
    return bar_.bar_string_piece_.Get(_default_bar_string_piece_);
  }
  return *_default_bar_string_piece_;
}
void TestOneof2::set_bar_string_piece(const ::std::string& value) {
  if (!has_bar_string_piece()) {
    clear_bar();
    set_has_bar_string_piece();
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  bar_.bar_string_piece_.Set(_default_bar_string_piece_, value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_string_piece)
}
void TestOneof2::set_bar_string_piece(const char* value) {
  if (!has_bar_string_piece()) {
    clear_bar();
    set_has_bar_string_piece();
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  bar_.bar_string_piece_.Set(_default_bar_string_piece_,
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.bar_string_piece)
}
void TestOneof2::set_bar_string_piece(const char* value,
                             size_t size) {
  if (!has_bar_string_piece()) {
    clear_bar();
    set_has_bar_string_piece();
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  bar_.bar_string_piece_.Set(_default_bar_string_piece_, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.bar_string_piece)
}
::std::string* TestOneof2::mutable_bar_string_piece() {
  if (!has_bar_string_piece()) {
    clear_bar();
    set_has_bar_string_piece();
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  return bar_.bar_string_piece_.Mutable(_default_bar_string_piece_,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.bar_string_piece)
}
::std::string* TestOneof2::release_bar_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.bar_string_piece)
  if (has_bar_string_piece()) {
    clear_has_bar();
    return bar_.bar_string_piece_.Release(_default_bar_string_piece_,
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_bar_string_piece() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.bar_string_piece)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_bar_string_piece()) {
    clear_has_bar();
    return bar_.bar_string_piece_.UnsafeArenaRelease(
        _default_bar_string_piece_, GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_bar_string_piece(::std::string* bar_string_piece) {
  if (!has_bar_string_piece()) {
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  clear_bar();
  if (bar_string_piece != NULL) {
    set_has_bar_string_piece();
    bar_.bar_string_piece_.SetAllocated(_default_bar_string_piece_, bar_string_piece,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.bar_string_piece)
}
void TestOneof2::unsafe_arena_set_allocated_bar_string_piece(::std::string* bar_string_piece) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_bar_string_piece()) {
    bar_.bar_string_piece_.UnsafeSetDefault(_default_bar_string_piece_);
  }
  clear_bar();
  if (bar_string_piece) {
    set_has_bar_string_piece();
    bar_.bar_string_piece_.UnsafeArenaSetAllocated(_default_bar_string_piece_, bar_string_piece, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.bar_string_piece)
}

// optional bytes bar_bytes = 16 [default = "BYTES"];
bool TestOneof2::has_bar_bytes() const {
  return bar_case() == kBarBytes;
}
void TestOneof2::set_has_bar_bytes() {
  _oneof_case_[1] = kBarBytes;
}
void TestOneof2::clear_bar_bytes() {
  if (has_bar_bytes()) {
    bar_.bar_bytes_.Destroy(_default_bar_bytes_,
        GetArenaNoVirtual());
    clear_has_bar();
  }
}
const ::std::string& TestOneof2::bar_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_bytes)
  if (has_bar_bytes()) {
    return bar_.bar_bytes_.Get(_default_bar_bytes_);
  }
  return *_default_bar_bytes_;
}
void TestOneof2::set_bar_bytes(const ::std::string& value) {
  if (!has_bar_bytes()) {
    clear_bar();
    set_has_bar_bytes();
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  bar_.bar_bytes_.Set(_default_bar_bytes_, value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_bytes)
}
void TestOneof2::set_bar_bytes(const char* value) {
  if (!has_bar_bytes()) {
    clear_bar();
    set_has_bar_bytes();
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  bar_.bar_bytes_.Set(_default_bar_bytes_,
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.bar_bytes)
}
void TestOneof2::set_bar_bytes(const void* value,
                             size_t size) {
  if (!has_bar_bytes()) {
    clear_bar();
    set_has_bar_bytes();
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  bar_.bar_bytes_.Set(_default_bar_bytes_, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.bar_bytes)
}
::std::string* TestOneof2::mutable_bar_bytes() {
  if (!has_bar_bytes()) {
    clear_bar();
    set_has_bar_bytes();
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  return bar_.bar_bytes_.Mutable(_default_bar_bytes_,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.bar_bytes)
}
::std::string* TestOneof2::release_bar_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.bar_bytes)
  if (has_bar_bytes()) {
    clear_has_bar();
    return bar_.bar_bytes_.Release(_default_bar_bytes_,
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestOneof2::unsafe_arena_release_bar_bytes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.bar_bytes)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_bar_bytes()) {
    clear_has_bar();
    return bar_.bar_bytes_.UnsafeArenaRelease(
        _default_bar_bytes_, GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestOneof2::set_allocated_bar_bytes(::std::string* bar_bytes) {
  if (!has_bar_bytes()) {
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  clear_bar();
  if (bar_bytes != NULL) {
    set_has_bar_bytes();
    bar_.bar_bytes_.SetAllocated(_default_bar_bytes_, bar_bytes,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.bar_bytes)
}
void TestOneof2::unsafe_arena_set_allocated_bar_bytes(::std::string* bar_bytes) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_bar_bytes()) {
    bar_.bar_bytes_.UnsafeSetDefault(_default_bar_bytes_);
  }
  clear_bar();
  if (bar_bytes) {
    set_has_bar_bytes();
    bar_.bar_bytes_.UnsafeArenaSetAllocated(_default_bar_bytes_, bar_bytes, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.bar_bytes)
}

// optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
bool TestOneof2::has_bar_enum() const {
  return bar_case() == kBarEnum;
}
void TestOneof2::set_has_bar_enum() {
  _oneof_case_[1] = kBarEnum;
}
void TestOneof2::clear_bar_enum() {
  if (has_bar_enum()) {
    bar_.bar_enum_ = 2;
    clear_has_bar();
  }
}
::protobuf_unittest::TestOneof2_NestedEnum TestOneof2::bar_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.bar_enum)
  if (has_bar_enum()) {
    return static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(bar_.bar_enum_);
  }
  return static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(2);
}
void TestOneof2::set_bar_enum(::protobuf_unittest::TestOneof2_NestedEnum value) {
  assert(::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value));
  if (!has_bar_enum()) {
    clear_bar();
    set_has_bar_enum();
  }
  bar_.bar_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.bar_enum)
}

// optional int32 baz_int = 18;
bool TestOneof2::has_baz_int() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TestOneof2::set_has_baz_int() {
  _has_bits_[0] |= 0x00008000u;
}
void TestOneof2::clear_has_baz_int() {
  _has_bits_[0] &= ~0x00008000u;
}
void TestOneof2::clear_baz_int() {
  baz_int_ = 0;
  clear_has_baz_int();
}
::google::protobuf::int32 TestOneof2::baz_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.baz_int)
  return baz_int_;
}
void TestOneof2::set_baz_int(::google::protobuf::int32 value) {
  set_has_baz_int();
  baz_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.baz_int)
}

// optional string baz_string = 19 [default = "BAZ"];
bool TestOneof2::has_baz_string() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TestOneof2::set_has_baz_string() {
  _has_bits_[0] |= 0x00010000u;
}
void TestOneof2::clear_has_baz_string() {
  _has_bits_[0] &= ~0x00010000u;
}
void TestOneof2::clear_baz_string() {
  baz_string_.ClearToDefault(_default_baz_string_, GetArenaNoVirtual());
  clear_has_baz_string();
}
const ::std::string& TestOneof2::baz_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestOneof2.baz_string)
  return baz_string_.Get(_default_baz_string_);
}
void TestOneof2::set_baz_string(const ::std::string& value) {
  set_has_baz_string();
  baz_string_.Set(_default_baz_string_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestOneof2.baz_string)
}
void TestOneof2::set_baz_string(const char* value) {
  set_has_baz_string();
  baz_string_.Set(_default_baz_string_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestOneof2.baz_string)
}
void TestOneof2::set_baz_string(const char* value,
    size_t size) {
  set_has_baz_string();
  baz_string_.Set(_default_baz_string_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestOneof2.baz_string)
}
::std::string* TestOneof2::mutable_baz_string() {
  set_has_baz_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestOneof2.baz_string)
  return baz_string_.Mutable(_default_baz_string_, GetArenaNoVirtual());
}
::std::string* TestOneof2::release_baz_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestOneof2.baz_string)
  clear_has_baz_string();
  return baz_string_.Release(_default_baz_string_, GetArenaNoVirtual());
}
::std::string* TestOneof2::unsafe_arena_release_baz_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestOneof2.baz_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_baz_string();
  return baz_string_.UnsafeArenaRelease(_default_baz_string_,
      GetArenaNoVirtual());
}
void TestOneof2::set_allocated_baz_string(::std::string* baz_string) {
  if (baz_string != NULL) {
    set_has_baz_string();
  } else {
    clear_has_baz_string();
  }
  baz_string_.SetAllocated(_default_baz_string_, baz_string,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.baz_string)
}
void TestOneof2::unsafe_arena_set_allocated_baz_string(
    ::std::string* baz_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (baz_string != NULL) {
    set_has_baz_string();
  } else {
    clear_has_baz_string();
  }
  baz_string_.UnsafeArenaSetAllocated(_default_baz_string_,
      baz_string, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestOneof2.baz_string)
}

bool TestOneof2::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
void TestOneof2::clear_has_foo() {
  _oneof_case_[0] = FOO_NOT_SET;
}
bool TestOneof2::has_bar() const {
  return bar_case() != BAR_NOT_SET;
}
void TestOneof2::clear_has_bar() {
  _oneof_case_[1] = BAR_NOT_SET;
}
TestOneof2::FooCase TestOneof2::foo_case() const {
  return TestOneof2::FooCase(_oneof_case_[0]);
}
TestOneof2::BarCase TestOneof2::bar_case() const {
  return TestOneof2::BarCase(_oneof_case_[1]);
}
inline const TestOneof2* TestOneof2::internal_default_instance() {
  return &TestOneof2_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequiredOneof_NestedMessage::kRequiredDoubleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}
TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

void TestRequiredOneof_NestedMessage::InitAsDefaultInstance() {
}

TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(const TestRequiredOneof_NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

void TestRequiredOneof_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  required_double_ = 0;
}

TestRequiredOneof_NestedMessage::~TestRequiredOneof_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
  SharedDtor();
}

void TestRequiredOneof_NestedMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestRequiredOneof_NestedMessage::ArenaDtor(void* object) {
  TestRequiredOneof_NestedMessage* _this = reinterpret_cast< TestRequiredOneof_NestedMessage* >(object);
  (void)_this;
}
void TestRequiredOneof_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRequiredOneof_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredOneof_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredOneof_NestedMessage_descriptor_;
}

const TestRequiredOneof_NestedMessage& TestRequiredOneof_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRequiredOneof_NestedMessage> TestRequiredOneof_NestedMessage_default_instance_;

TestRequiredOneof_NestedMessage* TestRequiredOneof_NestedMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRequiredOneof_NestedMessage>(arena);
}

void TestRequiredOneof_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  required_double_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRequiredOneof_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double required_double = 1;
      case 1: {
        if (tag == 9) {
          set_has_required_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &required_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return false;
#undef DO_
}

void TestRequiredOneof_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  // required double required_double = 1;
  if (has_required_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->required_double(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

::google::protobuf::uint8* TestRequiredOneof_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  // required double required_double = 1;
  if (has_required_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->required_double(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return target;
}

size_t TestRequiredOneof_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  size_t total_size = 0;

  // required double required_double = 1;
  if (has_required_double()) {
    total_size += 1 + 8;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredOneof_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRequiredOneof_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRequiredOneof_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRequiredOneof.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRequiredOneof.NestedMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestRequiredOneof_NestedMessage::MergeFrom(const TestRequiredOneof_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRequiredOneof_NestedMessage::UnsafeMergeFrom(const TestRequiredOneof_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_double()) {
      set_required_double(from.required_double());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRequiredOneof_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredOneof_NestedMessage::CopyFrom(const TestRequiredOneof_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRequiredOneof_NestedMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestRequiredOneof_NestedMessage::Swap(TestRequiredOneof_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRequiredOneof_NestedMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRequiredOneof_NestedMessage::UnsafeArenaSwap(TestRequiredOneof_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRequiredOneof_NestedMessage::InternalSwap(TestRequiredOneof_NestedMessage* other) {
  std::swap(required_double_, other->required_double_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRequiredOneof_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredOneof_NestedMessage_descriptor_;
  metadata.reflection = TestRequiredOneof_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequiredOneof::kFooIntFieldNumber;
const int TestRequiredOneof::kFooStringFieldNumber;
const int TestRequiredOneof::kFooMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRequiredOneof::TestRequiredOneof()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredOneof)
}
TestRequiredOneof::TestRequiredOneof(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredOneof)
}

void TestRequiredOneof::InitAsDefaultInstance() {
  TestRequiredOneof_default_oneof_instance_->foo_int_ = 0;
  TestRequiredOneof_default_oneof_instance_->foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TestRequiredOneof_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestRequiredOneof_NestedMessage*>(
      ::protobuf_unittest::TestRequiredOneof_NestedMessage::internal_default_instance());
}

TestRequiredOneof::TestRequiredOneof(const TestRequiredOneof& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof)
}

void TestRequiredOneof::SharedCtor() {
  _cached_size_ = 0;
  clear_has_foo();
}

TestRequiredOneof::~TestRequiredOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof)
  SharedDtor();
}

void TestRequiredOneof::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_foo()) {
    clear_foo();
  }
}

void TestRequiredOneof::ArenaDtor(void* object) {
  TestRequiredOneof* _this = reinterpret_cast< TestRequiredOneof* >(object);
  (void)_this;
}
void TestRequiredOneof::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRequiredOneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredOneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredOneof_descriptor_;
}

const TestRequiredOneof& TestRequiredOneof::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRequiredOneof> TestRequiredOneof_default_instance_;

TestRequiredOneof* TestRequiredOneof::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRequiredOneof>(arena);
}

void TestRequiredOneof::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestRequiredOneof)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kFooMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete foo_.foo_message_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}


void TestRequiredOneof::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredOneof)
  clear_foo();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRequiredOneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredOneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        goto after_foo_message;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestRequiredOneof.foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
      case 3: {
        if (tag == 26) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
       after_foo_message:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredOneof)
  return false;
#undef DO_
}

void TestRequiredOneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredOneof)
  switch (foo_case()) {
    case kFooInt:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestRequiredOneof.foo_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->foo_string(), output);
      break;
    case kFooMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *foo_.foo_message_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredOneof)
}

::google::protobuf::uint8* TestRequiredOneof::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof)
  switch (foo_case()) {
    case kFooInt:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
      break;
    case kFooString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->foo_string().data(), this->foo_string().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_unittest.TestRequiredOneof.foo_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->foo_string(), target);
      break;
    case kFooMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *foo_.foo_message_, false, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof)
  return target;
}

size_t TestRequiredOneof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredOneof)
  size_t total_size = 0;

  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *foo_.foo_message_);
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredOneof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRequiredOneof)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRequiredOneof* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRequiredOneof>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRequiredOneof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRequiredOneof)
    UnsafeMergeFrom(*source);
  }
}

void TestRequiredOneof::MergeFrom(const TestRequiredOneof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredOneof)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRequiredOneof::UnsafeMergeFrom(const TestRequiredOneof& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(from.foo_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRequiredOneof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRequiredOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredOneof::CopyFrom(const TestRequiredOneof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredOneof)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRequiredOneof::IsInitialized() const {

  if (has_foo_message()) {
    if (!this->foo_message().IsInitialized()) return false;
  }
  return true;
}

void TestRequiredOneof::Swap(TestRequiredOneof* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRequiredOneof temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRequiredOneof::UnsafeArenaSwap(TestRequiredOneof* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRequiredOneof::InternalSwap(TestRequiredOneof* other) {
  std::swap(foo_, other->foo_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRequiredOneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredOneof_descriptor_;
  metadata.reflection = TestRequiredOneof_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestRequiredOneof_NestedMessage

// required double required_double = 1;
bool TestRequiredOneof_NestedMessage::has_required_double() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestRequiredOneof_NestedMessage::set_has_required_double() {
  _has_bits_[0] |= 0x00000001u;
}
void TestRequiredOneof_NestedMessage::clear_has_required_double() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestRequiredOneof_NestedMessage::clear_required_double() {
  required_double_ = 0;
  clear_has_required_double();
}
double TestRequiredOneof_NestedMessage::required_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredOneof.NestedMessage.required_double)
  return required_double_;
}
void TestRequiredOneof_NestedMessage::set_required_double(double value) {
  set_has_required_double();
  required_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredOneof.NestedMessage.required_double)
}

inline const TestRequiredOneof_NestedMessage* TestRequiredOneof_NestedMessage::internal_default_instance() {
  return &TestRequiredOneof_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestRequiredOneof

// optional int32 foo_int = 1;
bool TestRequiredOneof::has_foo_int() const {
  return foo_case() == kFooInt;
}
void TestRequiredOneof::set_has_foo_int() {
  _oneof_case_[0] = kFooInt;
}
void TestRequiredOneof::clear_foo_int() {
  if (has_foo_int()) {
    foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
::google::protobuf::int32 TestRequiredOneof::foo_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredOneof.foo_int)
  if (has_foo_int()) {
    return foo_.foo_int_;
  }
  return 0;
}
void TestRequiredOneof::set_foo_int(::google::protobuf::int32 value) {
  if (!has_foo_int()) {
    clear_foo();
    set_has_foo_int();
  }
  foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredOneof.foo_int)
}

// optional string foo_string = 2;
bool TestRequiredOneof::has_foo_string() const {
  return foo_case() == kFooString;
}
void TestRequiredOneof::set_has_foo_string() {
  _oneof_case_[0] = kFooString;
}
void TestRequiredOneof::clear_foo_string() {
  if (has_foo_string()) {
    foo_.foo_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_foo();
  }
}
const ::std::string& TestRequiredOneof::foo_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredOneof.foo_string)
  if (has_foo_string()) {
    return foo_.foo_string_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestRequiredOneof::set_foo_string(const ::std::string& value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredOneof.foo_string)
}
void TestRequiredOneof::set_foo_string(const char* value) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestRequiredOneof.foo_string)
}
void TestRequiredOneof::set_foo_string(const char* value,
                             size_t size) {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  foo_.foo_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestRequiredOneof.foo_string)
}
::std::string* TestRequiredOneof::mutable_foo_string() {
  if (!has_foo_string()) {
    clear_foo();
    set_has_foo_string();
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return foo_.foo_string_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRequiredOneof.foo_string)
}
::std::string* TestRequiredOneof::release_foo_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestRequiredOneof.foo_string)
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* TestRequiredOneof::unsafe_arena_release_foo_string() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestRequiredOneof.foo_string)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_foo_string()) {
    clear_has_foo();
    return foo_.foo_string_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void TestRequiredOneof::set_allocated_foo_string(::std::string* foo_string) {
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string != NULL) {
    set_has_foo_string();
    foo_.foo_string_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRequiredOneof.foo_string)
}
void TestRequiredOneof::unsafe_arena_set_allocated_foo_string(::std::string* foo_string) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_foo_string()) {
    foo_.foo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_foo();
  if (foo_string) {
    set_has_foo_string();
    foo_.foo_string_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), foo_string, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestRequiredOneof.foo_string)
}

// optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
bool TestRequiredOneof::has_foo_message() const {
  return foo_case() == kFooMessage;
}
void TestRequiredOneof::set_has_foo_message() {
  _oneof_case_[0] = kFooMessage;
}
void TestRequiredOneof::clear_foo_message() {
  if (has_foo_message()) {
    if (GetArenaNoVirtual() == NULL) {
      delete foo_.foo_message_;
    }
    clear_has_foo();
  }
}
 const ::protobuf_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::foo_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredOneof.foo_message)
  return has_foo_message()
      ? *foo_.foo_message_
      : ::protobuf_unittest::TestRequiredOneof_NestedMessage::default_instance();
}
::protobuf_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::mutable_foo_message() {
  if (!has_foo_message()) {
    clear_foo();
    set_has_foo_message();
    foo_.foo_message_ = 
      ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRequiredOneof_NestedMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRequiredOneof.foo_message)
  return foo_.foo_message_;
}
::protobuf_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::release_foo_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestRequiredOneof.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    if (GetArenaNoVirtual() != NULL) {
      ::protobuf_unittest::TestRequiredOneof_NestedMessage* temp = new ::protobuf_unittest::TestRequiredOneof_NestedMessage(*foo_.foo_message_);
      foo_.foo_message_ = NULL;
      return temp;
    } else {
      ::protobuf_unittest::TestRequiredOneof_NestedMessage* temp = foo_.foo_message_;
      foo_.foo_message_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TestRequiredOneof::set_allocated_foo_message(::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_message) {
  clear_foo();
  if (foo_message) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(foo_message) == NULL) {
      GetArenaNoVirtual()->Own(foo_message);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(foo_message)) {
      ::protobuf_unittest::TestRequiredOneof_NestedMessage* new_foo_message = 
          ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestRequiredOneof_NestedMessage >(
          GetArenaNoVirtual());
      new_foo_message->CopyFrom(*foo_message);
      foo_message = new_foo_message;
    }
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRequiredOneof.foo_message)
}
 ::protobuf_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestRequiredOneof.foo_message)
  if (has_foo_message()) {
    clear_has_foo();
    ::protobuf_unittest::TestRequiredOneof_NestedMessage* temp = foo_.foo_message_;
    foo_.foo_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TestRequiredOneof::unsafe_arena_set_allocated_foo_message(::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_message) {
  clear_foo();
  if (foo_message) {
    set_has_foo_message();
    foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestRequiredOneof.foo_message)
}

bool TestRequiredOneof::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
void TestRequiredOneof::clear_has_foo() {
  _oneof_case_[0] = FOO_NOT_SET;
}
TestRequiredOneof::FooCase TestRequiredOneof::foo_case() const {
  return TestRequiredOneof::FooCase(_oneof_case_[0]);
}
inline const TestRequiredOneof* TestRequiredOneof::internal_default_instance() {
  return &TestRequiredOneof_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestPackedTypes::kPackedInt32FieldNumber;
const int TestPackedTypes::kPackedInt64FieldNumber;
const int TestPackedTypes::kPackedUint32FieldNumber;
const int TestPackedTypes::kPackedUint64FieldNumber;
const int TestPackedTypes::kPackedSint32FieldNumber;
const int TestPackedTypes::kPackedSint64FieldNumber;
const int TestPackedTypes::kPackedFixed32FieldNumber;
const int TestPackedTypes::kPackedFixed64FieldNumber;
const int TestPackedTypes::kPackedSfixed32FieldNumber;
const int TestPackedTypes::kPackedSfixed64FieldNumber;
const int TestPackedTypes::kPackedFloatFieldNumber;
const int TestPackedTypes::kPackedDoubleFieldNumber;
const int TestPackedTypes::kPackedBoolFieldNumber;
const int TestPackedTypes::kPackedEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPackedTypes::TestPackedTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedTypes)
}
TestPackedTypes::TestPackedTypes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  packed_int32_(arena),
  packed_int64_(arena),
  packed_uint32_(arena),
  packed_uint64_(arena),
  packed_sint32_(arena),
  packed_sint64_(arena),
  packed_fixed32_(arena),
  packed_fixed64_(arena),
  packed_sfixed32_(arena),
  packed_sfixed64_(arena),
  packed_float_(arena),
  packed_double_(arena),
  packed_bool_(arena),
  packed_enum_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedTypes)
}

void TestPackedTypes::InitAsDefaultInstance() {
}

TestPackedTypes::TestPackedTypes(const TestPackedTypes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedTypes)
}

void TestPackedTypes::SharedCtor() {
  _cached_size_ = 0;
}

TestPackedTypes::~TestPackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedTypes)
  SharedDtor();
}

void TestPackedTypes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestPackedTypes::ArenaDtor(void* object) {
  TestPackedTypes* _this = reinterpret_cast< TestPackedTypes* >(object);
  (void)_this;
}
void TestPackedTypes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestPackedTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPackedTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestPackedTypes_descriptor_;
}

const TestPackedTypes& TestPackedTypes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestPackedTypes> TestPackedTypes_default_instance_;

TestPackedTypes* TestPackedTypes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestPackedTypes>(arena);
}

void TestPackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedTypes)
  packed_int32_.Clear();
  packed_int64_.Clear();
  packed_uint32_.Clear();
  packed_uint64_.Clear();
  packed_sint32_.Clear();
  packed_sint64_.Clear();
  packed_fixed32_.Clear();
  packed_fixed64_.Clear();
  packed_sfixed32_.Clear();
  packed_sfixed64_.Clear();
  packed_float_.Clear();
  packed_double_.Clear();
  packed_bool_.Clear();
  packed_enum_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestPackedTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 packed_int32 = 90 [packed = true];
      case 90: {
        if (tag == 722) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_packed_int32())));
        } else if (tag == 720) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 722, input, this->mutable_packed_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_packed_int64;
        break;
      }

      // repeated int64 packed_int64 = 91 [packed = true];
      case 91: {
        if (tag == 730) {
         parse_packed_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_packed_int64())));
        } else if (tag == 728) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 730, input, this->mutable_packed_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_packed_uint32;
        break;
      }

      // repeated uint32 packed_uint32 = 92 [packed = true];
      case 92: {
        if (tag == 738) {
         parse_packed_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_packed_uint32())));
        } else if (tag == 736) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 738, input, this->mutable_packed_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(746)) goto parse_packed_uint64;
        break;
      }

      // repeated uint64 packed_uint64 = 93 [packed = true];
      case 93: {
        if (tag == 746) {
         parse_packed_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_packed_uint64())));
        } else if (tag == 744) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 746, input, this->mutable_packed_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(754)) goto parse_packed_sint32;
        break;
      }

      // repeated sint32 packed_sint32 = 94 [packed = true];
      case 94: {
        if (tag == 754) {
         parse_packed_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_sint32())));
        } else if (tag == 752) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 754, input, this->mutable_packed_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(762)) goto parse_packed_sint64;
        break;
      }

      // repeated sint64 packed_sint64 = 95 [packed = true];
      case 95: {
        if (tag == 762) {
         parse_packed_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_packed_sint64())));
        } else if (tag == 760) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 762, input, this->mutable_packed_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(770)) goto parse_packed_fixed32;
        break;
      }

      // repeated fixed32 packed_fixed32 = 96 [packed = true];
      case 96: {
        if (tag == 770) {
         parse_packed_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_packed_fixed32())));
        } else if (tag == 773) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 770, input, this->mutable_packed_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(778)) goto parse_packed_fixed64;
        break;
      }

      // repeated fixed64 packed_fixed64 = 97 [packed = true];
      case 97: {
        if (tag == 778) {
         parse_packed_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_packed_fixed64())));
        } else if (tag == 777) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 778, input, this->mutable_packed_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(786)) goto parse_packed_sfixed32;
        break;
      }

      // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
      case 98: {
        if (tag == 786) {
         parse_packed_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_packed_sfixed32())));
        } else if (tag == 789) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 786, input, this->mutable_packed_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(794)) goto parse_packed_sfixed64;
        break;
      }

      // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
      case 99: {
        if (tag == 794) {
         parse_packed_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_packed_sfixed64())));
        } else if (tag == 793) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 794, input, this->mutable_packed_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_packed_float;
        break;
      }

      // repeated float packed_float = 100 [packed = true];
      case 100: {
        if (tag == 802) {
         parse_packed_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_packed_float())));
        } else if (tag == 805) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 802, input, this->mutable_packed_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_packed_double;
        break;
      }

      // repeated double packed_double = 101 [packed = true];
      case 101: {
        if (tag == 810) {
         parse_packed_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_packed_double())));
        } else if (tag == 809) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 810, input, this->mutable_packed_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_packed_bool;
        break;
      }

      // repeated bool packed_bool = 102 [packed = true];
      case 102: {
        if (tag == 818) {
         parse_packed_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_packed_bool())));
        } else if (tag == 816) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 818, input, this->mutable_packed_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_packed_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
      case 103: {
        if (tag == 826) {
         parse_packed_enum:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
              add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
            } else {
              mutable_unknown_fields()->AddVarint(103, value);
            }
          }
          input->PopLimit(limit);
        } else if (tag == 824) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(103, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedTypes)
  return false;
#undef DO_
}

void TestPackedTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedTypes)
  // repeated int32 packed_int32 = 90 [packed = true];
  if (this->packed_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(90, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->packed_int32(i), output);
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  if (this->packed_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(91, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->packed_int64(i), output);
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  if (this->packed_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(92, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->packed_uint32(i), output);
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  if (this->packed_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(93, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->packed_uint64(i), output);
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  if (this->packed_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(94, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_sint32(i), output);
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  if (this->packed_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(95, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->packed_sint64(i), output);
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->packed_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(96, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32NoTag(
      this->packed_fixed32(i), output);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->packed_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(97, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64NoTag(
      this->packed_fixed64(i), output);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->packed_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(98, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32NoTag(
      this->packed_sfixed32(i), output);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->packed_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(99, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64NoTag(
      this->packed_sfixed64(i), output);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->packed_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(100, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_float_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->packed_float(i), output);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->packed_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(101, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_double_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->packed_double(i), output);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->packed_bool_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(102, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_bool_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->packed_bool(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  if (this->packed_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_packed_enum_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->packed_enum(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedTypes)
}

::google::protobuf::uint8* TestPackedTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedTypes)
  // repeated int32 packed_int32 = 90 [packed = true];
  if (this->packed_int32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      90,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_int32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->packed_int32(i), target);
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  if (this->packed_int64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      91,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_int64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->packed_int64(i), target);
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  if (this->packed_uint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      92,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_uint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->packed_uint32(i), target);
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  if (this->packed_uint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      93,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_uint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->packed_uint64(i), target);
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  if (this->packed_sint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      94,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->packed_sint32(i), target);
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  if (this->packed_sint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      95,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->packed_sint64(i), target);
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->packed_fixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      96,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_fixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->packed_fixed32(i), target);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->packed_fixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      97,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_fixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->packed_fixed64(i), target);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->packed_sfixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      98,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sfixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->packed_sfixed32(i), target);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->packed_sfixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      99,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sfixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->packed_sfixed64(i), target);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->packed_float_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      100,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_float_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->packed_float(i), target);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->packed_double_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      101,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_double_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->packed_double(i), target);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->packed_bool_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      102,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_bool_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->packed_bool(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  if (this->packed_enum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _packed_enum_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->packed_enum(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedTypes)
  return target;
}

size_t TestPackedTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedTypes)
  size_t total_size = 0;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->packed_int32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->packed_int64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_uint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->packed_uint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->packed_uint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_sint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->packed_sint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_fixed32_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_fixed64_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sfixed32_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sfixed64_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float packed_float = 100 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_float_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_float_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double packed_double = 101 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_double_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_double_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool packed_bool = 102 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_bool_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_bool_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->packed_enum(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_enum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestPackedTypes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestPackedTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestPackedTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestPackedTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestPackedTypes)
    UnsafeMergeFrom(*source);
  }
}

void TestPackedTypes::MergeFrom(const TestPackedTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedTypes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestPackedTypes::UnsafeMergeFrom(const TestPackedTypes& from) {
  GOOGLE_DCHECK(&from != this);
  packed_int32_.UnsafeMergeFrom(from.packed_int32_);
  packed_int64_.UnsafeMergeFrom(from.packed_int64_);
  packed_uint32_.UnsafeMergeFrom(from.packed_uint32_);
  packed_uint64_.UnsafeMergeFrom(from.packed_uint64_);
  packed_sint32_.UnsafeMergeFrom(from.packed_sint32_);
  packed_sint64_.UnsafeMergeFrom(from.packed_sint64_);
  packed_fixed32_.UnsafeMergeFrom(from.packed_fixed32_);
  packed_fixed64_.UnsafeMergeFrom(from.packed_fixed64_);
  packed_sfixed32_.UnsafeMergeFrom(from.packed_sfixed32_);
  packed_sfixed64_.UnsafeMergeFrom(from.packed_sfixed64_);
  packed_float_.UnsafeMergeFrom(from.packed_float_);
  packed_double_.UnsafeMergeFrom(from.packed_double_);
  packed_bool_.UnsafeMergeFrom(from.packed_bool_);
  packed_enum_.UnsafeMergeFrom(from.packed_enum_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestPackedTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestPackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPackedTypes::CopyFrom(const TestPackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedTypes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestPackedTypes::IsInitialized() const {

  return true;
}

void TestPackedTypes::Swap(TestPackedTypes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestPackedTypes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestPackedTypes::UnsafeArenaSwap(TestPackedTypes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestPackedTypes::InternalSwap(TestPackedTypes* other) {
  packed_int32_.UnsafeArenaSwap(&other->packed_int32_);
  packed_int64_.UnsafeArenaSwap(&other->packed_int64_);
  packed_uint32_.UnsafeArenaSwap(&other->packed_uint32_);
  packed_uint64_.UnsafeArenaSwap(&other->packed_uint64_);
  packed_sint32_.UnsafeArenaSwap(&other->packed_sint32_);
  packed_sint64_.UnsafeArenaSwap(&other->packed_sint64_);
  packed_fixed32_.UnsafeArenaSwap(&other->packed_fixed32_);
  packed_fixed64_.UnsafeArenaSwap(&other->packed_fixed64_);
  packed_sfixed32_.UnsafeArenaSwap(&other->packed_sfixed32_);
  packed_sfixed64_.UnsafeArenaSwap(&other->packed_sfixed64_);
  packed_float_.UnsafeArenaSwap(&other->packed_float_);
  packed_double_.UnsafeArenaSwap(&other->packed_double_);
  packed_bool_.UnsafeArenaSwap(&other->packed_bool_);
  packed_enum_.UnsafeArenaSwap(&other->packed_enum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestPackedTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestPackedTypes_descriptor_;
  metadata.reflection = TestPackedTypes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestPackedTypes

// repeated int32 packed_int32 = 90 [packed = true];
int TestPackedTypes::packed_int32_size() const {
  return packed_int32_.size();
}
void TestPackedTypes::clear_packed_int32() {
  packed_int32_.Clear();
}
::google::protobuf::int32 TestPackedTypes::packed_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_int32)
  return packed_int32_.Get(index);
}
void TestPackedTypes::set_packed_int32(int index, ::google::protobuf::int32 value) {
  packed_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_int32)
}
void TestPackedTypes::add_packed_int32(::google::protobuf::int32 value) {
  packed_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypes::packed_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_int32)
  return packed_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypes::mutable_packed_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_int32)
  return &packed_int32_;
}

// repeated int64 packed_int64 = 91 [packed = true];
int TestPackedTypes::packed_int64_size() const {
  return packed_int64_.size();
}
void TestPackedTypes::clear_packed_int64() {
  packed_int64_.Clear();
}
::google::protobuf::int64 TestPackedTypes::packed_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_int64)
  return packed_int64_.Get(index);
}
void TestPackedTypes::set_packed_int64(int index, ::google::protobuf::int64 value) {
  packed_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_int64)
}
void TestPackedTypes::add_packed_int64(::google::protobuf::int64 value) {
  packed_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypes::packed_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_int64)
  return packed_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypes::mutable_packed_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_int64)
  return &packed_int64_;
}

// repeated uint32 packed_uint32 = 92 [packed = true];
int TestPackedTypes::packed_uint32_size() const {
  return packed_uint32_.size();
}
void TestPackedTypes::clear_packed_uint32() {
  packed_uint32_.Clear();
}
::google::protobuf::uint32 TestPackedTypes::packed_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_uint32)
  return packed_uint32_.Get(index);
}
void TestPackedTypes::set_packed_uint32(int index, ::google::protobuf::uint32 value) {
  packed_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_uint32)
}
void TestPackedTypes::add_packed_uint32(::google::protobuf::uint32 value) {
  packed_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_uint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestPackedTypes::packed_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_uint32)
  return packed_uint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestPackedTypes::mutable_packed_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_uint32)
  return &packed_uint32_;
}

// repeated uint64 packed_uint64 = 93 [packed = true];
int TestPackedTypes::packed_uint64_size() const {
  return packed_uint64_.size();
}
void TestPackedTypes::clear_packed_uint64() {
  packed_uint64_.Clear();
}
::google::protobuf::uint64 TestPackedTypes::packed_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_uint64)
  return packed_uint64_.Get(index);
}
void TestPackedTypes::set_packed_uint64(int index, ::google::protobuf::uint64 value) {
  packed_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_uint64)
}
void TestPackedTypes::add_packed_uint64(::google::protobuf::uint64 value) {
  packed_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestPackedTypes::packed_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_uint64)
  return packed_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestPackedTypes::mutable_packed_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_uint64)
  return &packed_uint64_;
}

// repeated sint32 packed_sint32 = 94 [packed = true];
int TestPackedTypes::packed_sint32_size() const {
  return packed_sint32_.size();
}
void TestPackedTypes::clear_packed_sint32() {
  packed_sint32_.Clear();
}
::google::protobuf::int32 TestPackedTypes::packed_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_sint32)
  return packed_sint32_.Get(index);
}
void TestPackedTypes::set_packed_sint32(int index, ::google::protobuf::int32 value) {
  packed_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_sint32)
}
void TestPackedTypes::add_packed_sint32(::google::protobuf::int32 value) {
  packed_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_sint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypes::packed_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_sint32)
  return packed_sint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypes::mutable_packed_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_sint32)
  return &packed_sint32_;
}

// repeated sint64 packed_sint64 = 95 [packed = true];
int TestPackedTypes::packed_sint64_size() const {
  return packed_sint64_.size();
}
void TestPackedTypes::clear_packed_sint64() {
  packed_sint64_.Clear();
}
::google::protobuf::int64 TestPackedTypes::packed_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_sint64)
  return packed_sint64_.Get(index);
}
void TestPackedTypes::set_packed_sint64(int index, ::google::protobuf::int64 value) {
  packed_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_sint64)
}
void TestPackedTypes::add_packed_sint64(::google::protobuf::int64 value) {
  packed_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_sint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypes::packed_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_sint64)
  return packed_sint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypes::mutable_packed_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_sint64)
  return &packed_sint64_;
}

// repeated fixed32 packed_fixed32 = 96 [packed = true];
int TestPackedTypes::packed_fixed32_size() const {
  return packed_fixed32_.size();
}
void TestPackedTypes::clear_packed_fixed32() {
  packed_fixed32_.Clear();
}
::google::protobuf::uint32 TestPackedTypes::packed_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_fixed32)
  return packed_fixed32_.Get(index);
}
void TestPackedTypes::set_packed_fixed32(int index, ::google::protobuf::uint32 value) {
  packed_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_fixed32)
}
void TestPackedTypes::add_packed_fixed32(::google::protobuf::uint32 value) {
  packed_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestPackedTypes::packed_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_fixed32)
  return packed_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestPackedTypes::mutable_packed_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_fixed32)
  return &packed_fixed32_;
}

// repeated fixed64 packed_fixed64 = 97 [packed = true];
int TestPackedTypes::packed_fixed64_size() const {
  return packed_fixed64_.size();
}
void TestPackedTypes::clear_packed_fixed64() {
  packed_fixed64_.Clear();
}
::google::protobuf::uint64 TestPackedTypes::packed_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_fixed64)
  return packed_fixed64_.Get(index);
}
void TestPackedTypes::set_packed_fixed64(int index, ::google::protobuf::uint64 value) {
  packed_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_fixed64)
}
void TestPackedTypes::add_packed_fixed64(::google::protobuf::uint64 value) {
  packed_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestPackedTypes::packed_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_fixed64)
  return packed_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestPackedTypes::mutable_packed_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_fixed64)
  return &packed_fixed64_;
}

// repeated sfixed32 packed_sfixed32 = 98 [packed = true];
int TestPackedTypes::packed_sfixed32_size() const {
  return packed_sfixed32_.size();
}
void TestPackedTypes::clear_packed_sfixed32() {
  packed_sfixed32_.Clear();
}
::google::protobuf::int32 TestPackedTypes::packed_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_sfixed32)
  return packed_sfixed32_.Get(index);
}
void TestPackedTypes::set_packed_sfixed32(int index, ::google::protobuf::int32 value) {
  packed_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_sfixed32)
}
void TestPackedTypes::add_packed_sfixed32(::google::protobuf::int32 value) {
  packed_sfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_sfixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypes::packed_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_sfixed32)
  return packed_sfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypes::mutable_packed_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_sfixed32)
  return &packed_sfixed32_;
}

// repeated sfixed64 packed_sfixed64 = 99 [packed = true];
int TestPackedTypes::packed_sfixed64_size() const {
  return packed_sfixed64_.size();
}
void TestPackedTypes::clear_packed_sfixed64() {
  packed_sfixed64_.Clear();
}
::google::protobuf::int64 TestPackedTypes::packed_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_sfixed64)
  return packed_sfixed64_.Get(index);
}
void TestPackedTypes::set_packed_sfixed64(int index, ::google::protobuf::int64 value) {
  packed_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_sfixed64)
}
void TestPackedTypes::add_packed_sfixed64(::google::protobuf::int64 value) {
  packed_sfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_sfixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypes::packed_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_sfixed64)
  return packed_sfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypes::mutable_packed_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_sfixed64)
  return &packed_sfixed64_;
}

// repeated float packed_float = 100 [packed = true];
int TestPackedTypes::packed_float_size() const {
  return packed_float_.size();
}
void TestPackedTypes::clear_packed_float() {
  packed_float_.Clear();
}
float TestPackedTypes::packed_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_float)
  return packed_float_.Get(index);
}
void TestPackedTypes::set_packed_float(int index, float value) {
  packed_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_float)
}
void TestPackedTypes::add_packed_float(float value) {
  packed_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_float)
}
const ::google::protobuf::RepeatedField< float >&
TestPackedTypes::packed_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_float)
  return packed_float_;
}
::google::protobuf::RepeatedField< float >*
TestPackedTypes::mutable_packed_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_float)
  return &packed_float_;
}

// repeated double packed_double = 101 [packed = true];
int TestPackedTypes::packed_double_size() const {
  return packed_double_.size();
}
void TestPackedTypes::clear_packed_double() {
  packed_double_.Clear();
}
double TestPackedTypes::packed_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_double)
  return packed_double_.Get(index);
}
void TestPackedTypes::set_packed_double(int index, double value) {
  packed_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_double)
}
void TestPackedTypes::add_packed_double(double value) {
  packed_double_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_double)
}
const ::google::protobuf::RepeatedField< double >&
TestPackedTypes::packed_double() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_double)
  return packed_double_;
}
::google::protobuf::RepeatedField< double >*
TestPackedTypes::mutable_packed_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_double)
  return &packed_double_;
}

// repeated bool packed_bool = 102 [packed = true];
int TestPackedTypes::packed_bool_size() const {
  return packed_bool_.size();
}
void TestPackedTypes::clear_packed_bool() {
  packed_bool_.Clear();
}
bool TestPackedTypes::packed_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_bool)
  return packed_bool_.Get(index);
}
void TestPackedTypes::set_packed_bool(int index, bool value) {
  packed_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_bool)
}
void TestPackedTypes::add_packed_bool(bool value) {
  packed_bool_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_bool)
}
const ::google::protobuf::RepeatedField< bool >&
TestPackedTypes::packed_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_bool)
  return packed_bool_;
}
::google::protobuf::RepeatedField< bool >*
TestPackedTypes::mutable_packed_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_bool)
  return &packed_bool_;
}

// repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
int TestPackedTypes::packed_enum_size() const {
  return packed_enum_.size();
}
void TestPackedTypes::clear_packed_enum() {
  packed_enum_.Clear();
}
::protobuf_unittest::ForeignEnum TestPackedTypes::packed_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypes.packed_enum)
  return static_cast< ::protobuf_unittest::ForeignEnum >(packed_enum_.Get(index));
}
void TestPackedTypes::set_packed_enum(int index, ::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  packed_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypes.packed_enum)
}
void TestPackedTypes::add_packed_enum(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  packed_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypes.packed_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestPackedTypes::packed_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypes.packed_enum)
  return packed_enum_;
}
::google::protobuf::RepeatedField<int>*
TestPackedTypes::mutable_packed_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypes.packed_enum)
  return &packed_enum_;
}

inline const TestPackedTypes* TestPackedTypes::internal_default_instance() {
  return &TestPackedTypes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestUnpackedTypes::kUnpackedInt32FieldNumber;
const int TestUnpackedTypes::kUnpackedInt64FieldNumber;
const int TestUnpackedTypes::kUnpackedUint32FieldNumber;
const int TestUnpackedTypes::kUnpackedUint64FieldNumber;
const int TestUnpackedTypes::kUnpackedSint32FieldNumber;
const int TestUnpackedTypes::kUnpackedSint64FieldNumber;
const int TestUnpackedTypes::kUnpackedFixed32FieldNumber;
const int TestUnpackedTypes::kUnpackedFixed64FieldNumber;
const int TestUnpackedTypes::kUnpackedSfixed32FieldNumber;
const int TestUnpackedTypes::kUnpackedSfixed64FieldNumber;
const int TestUnpackedTypes::kUnpackedFloatFieldNumber;
const int TestUnpackedTypes::kUnpackedDoubleFieldNumber;
const int TestUnpackedTypes::kUnpackedBoolFieldNumber;
const int TestUnpackedTypes::kUnpackedEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestUnpackedTypes::TestUnpackedTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestUnpackedTypes)
}
TestUnpackedTypes::TestUnpackedTypes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  unpacked_int32_(arena),
  unpacked_int64_(arena),
  unpacked_uint32_(arena),
  unpacked_uint64_(arena),
  unpacked_sint32_(arena),
  unpacked_sint64_(arena),
  unpacked_fixed32_(arena),
  unpacked_fixed64_(arena),
  unpacked_sfixed32_(arena),
  unpacked_sfixed64_(arena),
  unpacked_float_(arena),
  unpacked_double_(arena),
  unpacked_bool_(arena),
  unpacked_enum_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestUnpackedTypes)
}

void TestUnpackedTypes::InitAsDefaultInstance() {
}

TestUnpackedTypes::TestUnpackedTypes(const TestUnpackedTypes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedTypes)
}

void TestUnpackedTypes::SharedCtor() {
  _cached_size_ = 0;
}

TestUnpackedTypes::~TestUnpackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedTypes)
  SharedDtor();
}

void TestUnpackedTypes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestUnpackedTypes::ArenaDtor(void* object) {
  TestUnpackedTypes* _this = reinterpret_cast< TestUnpackedTypes* >(object);
  (void)_this;
}
void TestUnpackedTypes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestUnpackedTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestUnpackedTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestUnpackedTypes_descriptor_;
}

const TestUnpackedTypes& TestUnpackedTypes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestUnpackedTypes> TestUnpackedTypes_default_instance_;

TestUnpackedTypes* TestUnpackedTypes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestUnpackedTypes>(arena);
}

void TestUnpackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestUnpackedTypes)
  unpacked_int32_.Clear();
  unpacked_int64_.Clear();
  unpacked_uint32_.Clear();
  unpacked_uint64_.Clear();
  unpacked_sint32_.Clear();
  unpacked_sint64_.Clear();
  unpacked_fixed32_.Clear();
  unpacked_fixed64_.Clear();
  unpacked_sfixed32_.Clear();
  unpacked_sfixed64_.Clear();
  unpacked_float_.Clear();
  unpacked_double_.Clear();
  unpacked_bool_.Clear();
  unpacked_enum_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestUnpackedTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestUnpackedTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 unpacked_int32 = 90 [packed = false];
      case 90: {
        if (tag == 720) {
         parse_unpacked_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 720, input, this->mutable_unpacked_int32())));
        } else if (tag == 722) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unpacked_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_unpacked_int32;
        if (input->ExpectTag(728)) goto parse_unpacked_int64;
        break;
      }

      // repeated int64 unpacked_int64 = 91 [packed = false];
      case 91: {
        if (tag == 728) {
         parse_unpacked_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 728, input, this->mutable_unpacked_int64())));
        } else if (tag == 730) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_unpacked_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_unpacked_int64;
        if (input->ExpectTag(736)) goto parse_unpacked_uint32;
        break;
      }

      // repeated uint32 unpacked_uint32 = 92 [packed = false];
      case 92: {
        if (tag == 736) {
         parse_unpacked_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 736, input, this->mutable_unpacked_uint32())));
        } else if (tag == 738) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unpacked_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_unpacked_uint32;
        if (input->ExpectTag(744)) goto parse_unpacked_uint64;
        break;
      }

      // repeated uint64 unpacked_uint64 = 93 [packed = false];
      case 93: {
        if (tag == 744) {
         parse_unpacked_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 744, input, this->mutable_unpacked_uint64())));
        } else if (tag == 746) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unpacked_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(744)) goto parse_unpacked_uint64;
        if (input->ExpectTag(752)) goto parse_unpacked_sint32;
        break;
      }

      // repeated sint32 unpacked_sint32 = 94 [packed = false];
      case 94: {
        if (tag == 752) {
         parse_unpacked_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 752, input, this->mutable_unpacked_sint32())));
        } else if (tag == 754) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_unpacked_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(752)) goto parse_unpacked_sint32;
        if (input->ExpectTag(760)) goto parse_unpacked_sint64;
        break;
      }

      // repeated sint64 unpacked_sint64 = 95 [packed = false];
      case 95: {
        if (tag == 760) {
         parse_unpacked_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 760, input, this->mutable_unpacked_sint64())));
        } else if (tag == 762) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_unpacked_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(760)) goto parse_unpacked_sint64;
        if (input->ExpectTag(773)) goto parse_unpacked_fixed32;
        break;
      }

      // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
      case 96: {
        if (tag == 773) {
         parse_unpacked_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 773, input, this->mutable_unpacked_fixed32())));
        } else if (tag == 770) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_unpacked_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(773)) goto parse_unpacked_fixed32;
        if (input->ExpectTag(777)) goto parse_unpacked_fixed64;
        break;
      }

      // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
      case 97: {
        if (tag == 777) {
         parse_unpacked_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 777, input, this->mutable_unpacked_fixed64())));
        } else if (tag == 778) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_unpacked_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(777)) goto parse_unpacked_fixed64;
        if (input->ExpectTag(789)) goto parse_unpacked_sfixed32;
        break;
      }

      // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
      case 98: {
        if (tag == 789) {
         parse_unpacked_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 789, input, this->mutable_unpacked_sfixed32())));
        } else if (tag == 786) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_unpacked_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(789)) goto parse_unpacked_sfixed32;
        if (input->ExpectTag(793)) goto parse_unpacked_sfixed64;
        break;
      }

      // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
      case 99: {
        if (tag == 793) {
         parse_unpacked_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 793, input, this->mutable_unpacked_sfixed64())));
        } else if (tag == 794) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_unpacked_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(793)) goto parse_unpacked_sfixed64;
        if (input->ExpectTag(805)) goto parse_unpacked_float;
        break;
      }

      // repeated float unpacked_float = 100 [packed = false];
      case 100: {
        if (tag == 805) {
         parse_unpacked_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 805, input, this->mutable_unpacked_float())));
        } else if (tag == 802) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_unpacked_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(805)) goto parse_unpacked_float;
        if (input->ExpectTag(809)) goto parse_unpacked_double;
        break;
      }

      // repeated double unpacked_double = 101 [packed = false];
      case 101: {
        if (tag == 809) {
         parse_unpacked_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 809, input, this->mutable_unpacked_double())));
        } else if (tag == 810) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_unpacked_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(809)) goto parse_unpacked_double;
        if (input->ExpectTag(816)) goto parse_unpacked_bool;
        break;
      }

      // repeated bool unpacked_bool = 102 [packed = false];
      case 102: {
        if (tag == 816) {
         parse_unpacked_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 816, input, this->mutable_unpacked_bool())));
        } else if (tag == 818) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_unpacked_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(816)) goto parse_unpacked_bool;
        if (input->ExpectTag(824)) goto parse_unpacked_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
      case 103: {
        if (tag == 824) {
         parse_unpacked_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_unpacked_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(103, value);
          }
        } else if (tag == 826) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 103,
                 ::protobuf_unittest::ForeignEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_unpacked_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(824)) goto parse_unpacked_enum;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestUnpackedTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestUnpackedTypes)
  return false;
#undef DO_
}

void TestUnpackedTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestUnpackedTypes)
  // repeated int32 unpacked_int32 = 90 [packed = false];
  for (int i = 0; i < this->unpacked_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      90, this->unpacked_int32(i), output);
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  for (int i = 0; i < this->unpacked_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      91, this->unpacked_int64(i), output);
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  for (int i = 0; i < this->unpacked_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      92, this->unpacked_uint32(i), output);
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  for (int i = 0; i < this->unpacked_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      93, this->unpacked_uint64(i), output);
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  for (int i = 0; i < this->unpacked_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      94, this->unpacked_sint32(i), output);
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  for (int i = 0; i < this->unpacked_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      95, this->unpacked_sint64(i), output);
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  for (int i = 0; i < this->unpacked_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      96, this->unpacked_fixed32(i), output);
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  for (int i = 0; i < this->unpacked_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      97, this->unpacked_fixed64(i), output);
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      98, this->unpacked_sfixed32(i), output);
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      99, this->unpacked_sfixed64(i), output);
  }

  // repeated float unpacked_float = 100 [packed = false];
  for (int i = 0; i < this->unpacked_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      100, this->unpacked_float(i), output);
  }

  // repeated double unpacked_double = 101 [packed = false];
  for (int i = 0; i < this->unpacked_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      101, this->unpacked_double(i), output);
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  for (int i = 0; i < this->unpacked_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      102, this->unpacked_bool(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  for (int i = 0; i < this->unpacked_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      103, this->unpacked_enum(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestUnpackedTypes)
}

::google::protobuf::uint8* TestUnpackedTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedTypes)
  // repeated int32 unpacked_int32 = 90 [packed = false];
  for (int i = 0; i < this->unpacked_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(90, this->unpacked_int32(i), target);
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  for (int i = 0; i < this->unpacked_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(91, this->unpacked_int64(i), target);
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  for (int i = 0; i < this->unpacked_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(92, this->unpacked_uint32(i), target);
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  for (int i = 0; i < this->unpacked_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(93, this->unpacked_uint64(i), target);
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  for (int i = 0; i < this->unpacked_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(94, this->unpacked_sint32(i), target);
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  for (int i = 0; i < this->unpacked_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(95, this->unpacked_sint64(i), target);
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  for (int i = 0; i < this->unpacked_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(96, this->unpacked_fixed32(i), target);
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  for (int i = 0; i < this->unpacked_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(97, this->unpacked_fixed64(i), target);
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(98, this->unpacked_sfixed32(i), target);
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(99, this->unpacked_sfixed64(i), target);
  }

  // repeated float unpacked_float = 100 [packed = false];
  for (int i = 0; i < this->unpacked_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(100, this->unpacked_float(i), target);
  }

  // repeated double unpacked_double = 101 [packed = false];
  for (int i = 0; i < this->unpacked_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(101, this->unpacked_double(i), target);
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  for (int i = 0; i < this->unpacked_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(102, this->unpacked_bool(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  for (int i = 0; i < this->unpacked_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      103, this->unpacked_enum(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedTypes)
  return target;
}

size_t TestUnpackedTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestUnpackedTypes)
  size_t total_size = 0;

  // repeated int32 unpacked_int32 = 90 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unpacked_int32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_int32_size());
    total_size += data_size;
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->unpacked_int64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_int64_size());
    total_size += data_size;
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_uint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->unpacked_uint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_uint32_size());
    total_size += data_size;
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->unpacked_uint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_uint64_size());
    total_size += data_size;
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_sint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->unpacked_sint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_sint32_size());
    total_size += data_size;
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_sint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->unpacked_sint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_sint64_size());
    total_size += data_size;
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_fixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_fixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_fixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_fixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_sfixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_sfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_sfixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_sfixed64_size());
    total_size += data_size;
  }

  // repeated float unpacked_float = 100 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_float_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_float_size());
    total_size += data_size;
  }

  // repeated double unpacked_double = 101 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_double_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_double_size());
    total_size += data_size;
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_bool_size();
    data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_bool_size());
    total_size += data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  {
    size_t data_size = 0;
    unsigned int count = this->unpacked_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->unpacked_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestUnpackedTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestUnpackedTypes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestUnpackedTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestUnpackedTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestUnpackedTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestUnpackedTypes)
    UnsafeMergeFrom(*source);
  }
}

void TestUnpackedTypes::MergeFrom(const TestUnpackedTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestUnpackedTypes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestUnpackedTypes::UnsafeMergeFrom(const TestUnpackedTypes& from) {
  GOOGLE_DCHECK(&from != this);
  unpacked_int32_.UnsafeMergeFrom(from.unpacked_int32_);
  unpacked_int64_.UnsafeMergeFrom(from.unpacked_int64_);
  unpacked_uint32_.UnsafeMergeFrom(from.unpacked_uint32_);
  unpacked_uint64_.UnsafeMergeFrom(from.unpacked_uint64_);
  unpacked_sint32_.UnsafeMergeFrom(from.unpacked_sint32_);
  unpacked_sint64_.UnsafeMergeFrom(from.unpacked_sint64_);
  unpacked_fixed32_.UnsafeMergeFrom(from.unpacked_fixed32_);
  unpacked_fixed64_.UnsafeMergeFrom(from.unpacked_fixed64_);
  unpacked_sfixed32_.UnsafeMergeFrom(from.unpacked_sfixed32_);
  unpacked_sfixed64_.UnsafeMergeFrom(from.unpacked_sfixed64_);
  unpacked_float_.UnsafeMergeFrom(from.unpacked_float_);
  unpacked_double_.UnsafeMergeFrom(from.unpacked_double_);
  unpacked_bool_.UnsafeMergeFrom(from.unpacked_bool_);
  unpacked_enum_.UnsafeMergeFrom(from.unpacked_enum_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestUnpackedTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestUnpackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestUnpackedTypes::CopyFrom(const TestUnpackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestUnpackedTypes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestUnpackedTypes::IsInitialized() const {

  return true;
}

void TestUnpackedTypes::Swap(TestUnpackedTypes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestUnpackedTypes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestUnpackedTypes::UnsafeArenaSwap(TestUnpackedTypes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestUnpackedTypes::InternalSwap(TestUnpackedTypes* other) {
  unpacked_int32_.UnsafeArenaSwap(&other->unpacked_int32_);
  unpacked_int64_.UnsafeArenaSwap(&other->unpacked_int64_);
  unpacked_uint32_.UnsafeArenaSwap(&other->unpacked_uint32_);
  unpacked_uint64_.UnsafeArenaSwap(&other->unpacked_uint64_);
  unpacked_sint32_.UnsafeArenaSwap(&other->unpacked_sint32_);
  unpacked_sint64_.UnsafeArenaSwap(&other->unpacked_sint64_);
  unpacked_fixed32_.UnsafeArenaSwap(&other->unpacked_fixed32_);
  unpacked_fixed64_.UnsafeArenaSwap(&other->unpacked_fixed64_);
  unpacked_sfixed32_.UnsafeArenaSwap(&other->unpacked_sfixed32_);
  unpacked_sfixed64_.UnsafeArenaSwap(&other->unpacked_sfixed64_);
  unpacked_float_.UnsafeArenaSwap(&other->unpacked_float_);
  unpacked_double_.UnsafeArenaSwap(&other->unpacked_double_);
  unpacked_bool_.UnsafeArenaSwap(&other->unpacked_bool_);
  unpacked_enum_.UnsafeArenaSwap(&other->unpacked_enum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestUnpackedTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestUnpackedTypes_descriptor_;
  metadata.reflection = TestUnpackedTypes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestUnpackedTypes

// repeated int32 unpacked_int32 = 90 [packed = false];
int TestUnpackedTypes::unpacked_int32_size() const {
  return unpacked_int32_.size();
}
void TestUnpackedTypes::clear_unpacked_int32() {
  unpacked_int32_.Clear();
}
::google::protobuf::int32 TestUnpackedTypes::unpacked_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_int32)
  return unpacked_int32_.Get(index);
}
void TestUnpackedTypes::set_unpacked_int32(int index, ::google::protobuf::int32 value) {
  unpacked_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_int32)
}
void TestUnpackedTypes::add_unpacked_int32(::google::protobuf::int32 value) {
  unpacked_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestUnpackedTypes::unpacked_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_int32)
  return unpacked_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestUnpackedTypes::mutable_unpacked_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_int32)
  return &unpacked_int32_;
}

// repeated int64 unpacked_int64 = 91 [packed = false];
int TestUnpackedTypes::unpacked_int64_size() const {
  return unpacked_int64_.size();
}
void TestUnpackedTypes::clear_unpacked_int64() {
  unpacked_int64_.Clear();
}
::google::protobuf::int64 TestUnpackedTypes::unpacked_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_int64)
  return unpacked_int64_.Get(index);
}
void TestUnpackedTypes::set_unpacked_int64(int index, ::google::protobuf::int64 value) {
  unpacked_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_int64)
}
void TestUnpackedTypes::add_unpacked_int64(::google::protobuf::int64 value) {
  unpacked_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestUnpackedTypes::unpacked_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_int64)
  return unpacked_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestUnpackedTypes::mutable_unpacked_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_int64)
  return &unpacked_int64_;
}

// repeated uint32 unpacked_uint32 = 92 [packed = false];
int TestUnpackedTypes::unpacked_uint32_size() const {
  return unpacked_uint32_.size();
}
void TestUnpackedTypes::clear_unpacked_uint32() {
  unpacked_uint32_.Clear();
}
::google::protobuf::uint32 TestUnpackedTypes::unpacked_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_uint32)
  return unpacked_uint32_.Get(index);
}
void TestUnpackedTypes::set_unpacked_uint32(int index, ::google::protobuf::uint32 value) {
  unpacked_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_uint32)
}
void TestUnpackedTypes::add_unpacked_uint32(::google::protobuf::uint32 value) {
  unpacked_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_uint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestUnpackedTypes::unpacked_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_uint32)
  return unpacked_uint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestUnpackedTypes::mutable_unpacked_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_uint32)
  return &unpacked_uint32_;
}

// repeated uint64 unpacked_uint64 = 93 [packed = false];
int TestUnpackedTypes::unpacked_uint64_size() const {
  return unpacked_uint64_.size();
}
void TestUnpackedTypes::clear_unpacked_uint64() {
  unpacked_uint64_.Clear();
}
::google::protobuf::uint64 TestUnpackedTypes::unpacked_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_uint64)
  return unpacked_uint64_.Get(index);
}
void TestUnpackedTypes::set_unpacked_uint64(int index, ::google::protobuf::uint64 value) {
  unpacked_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_uint64)
}
void TestUnpackedTypes::add_unpacked_uint64(::google::protobuf::uint64 value) {
  unpacked_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestUnpackedTypes::unpacked_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_uint64)
  return unpacked_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestUnpackedTypes::mutable_unpacked_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_uint64)
  return &unpacked_uint64_;
}

// repeated sint32 unpacked_sint32 = 94 [packed = false];
int TestUnpackedTypes::unpacked_sint32_size() const {
  return unpacked_sint32_.size();
}
void TestUnpackedTypes::clear_unpacked_sint32() {
  unpacked_sint32_.Clear();
}
::google::protobuf::int32 TestUnpackedTypes::unpacked_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_sint32)
  return unpacked_sint32_.Get(index);
}
void TestUnpackedTypes::set_unpacked_sint32(int index, ::google::protobuf::int32 value) {
  unpacked_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_sint32)
}
void TestUnpackedTypes::add_unpacked_sint32(::google::protobuf::int32 value) {
  unpacked_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_sint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestUnpackedTypes::unpacked_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_sint32)
  return unpacked_sint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestUnpackedTypes::mutable_unpacked_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_sint32)
  return &unpacked_sint32_;
}

// repeated sint64 unpacked_sint64 = 95 [packed = false];
int TestUnpackedTypes::unpacked_sint64_size() const {
  return unpacked_sint64_.size();
}
void TestUnpackedTypes::clear_unpacked_sint64() {
  unpacked_sint64_.Clear();
}
::google::protobuf::int64 TestUnpackedTypes::unpacked_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_sint64)
  return unpacked_sint64_.Get(index);
}
void TestUnpackedTypes::set_unpacked_sint64(int index, ::google::protobuf::int64 value) {
  unpacked_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_sint64)
}
void TestUnpackedTypes::add_unpacked_sint64(::google::protobuf::int64 value) {
  unpacked_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_sint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestUnpackedTypes::unpacked_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_sint64)
  return unpacked_sint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestUnpackedTypes::mutable_unpacked_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_sint64)
  return &unpacked_sint64_;
}

// repeated fixed32 unpacked_fixed32 = 96 [packed = false];
int TestUnpackedTypes::unpacked_fixed32_size() const {
  return unpacked_fixed32_.size();
}
void TestUnpackedTypes::clear_unpacked_fixed32() {
  unpacked_fixed32_.Clear();
}
::google::protobuf::uint32 TestUnpackedTypes::unpacked_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_fixed32)
  return unpacked_fixed32_.Get(index);
}
void TestUnpackedTypes::set_unpacked_fixed32(int index, ::google::protobuf::uint32 value) {
  unpacked_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_fixed32)
}
void TestUnpackedTypes::add_unpacked_fixed32(::google::protobuf::uint32 value) {
  unpacked_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestUnpackedTypes::unpacked_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_fixed32)
  return unpacked_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestUnpackedTypes::mutable_unpacked_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_fixed32)
  return &unpacked_fixed32_;
}

// repeated fixed64 unpacked_fixed64 = 97 [packed = false];
int TestUnpackedTypes::unpacked_fixed64_size() const {
  return unpacked_fixed64_.size();
}
void TestUnpackedTypes::clear_unpacked_fixed64() {
  unpacked_fixed64_.Clear();
}
::google::protobuf::uint64 TestUnpackedTypes::unpacked_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_fixed64)
  return unpacked_fixed64_.Get(index);
}
void TestUnpackedTypes::set_unpacked_fixed64(int index, ::google::protobuf::uint64 value) {
  unpacked_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_fixed64)
}
void TestUnpackedTypes::add_unpacked_fixed64(::google::protobuf::uint64 value) {
  unpacked_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestUnpackedTypes::unpacked_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_fixed64)
  return unpacked_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestUnpackedTypes::mutable_unpacked_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_fixed64)
  return &unpacked_fixed64_;
}

// repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
int TestUnpackedTypes::unpacked_sfixed32_size() const {
  return unpacked_sfixed32_.size();
}
void TestUnpackedTypes::clear_unpacked_sfixed32() {
  unpacked_sfixed32_.Clear();
}
::google::protobuf::int32 TestUnpackedTypes::unpacked_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed32)
  return unpacked_sfixed32_.Get(index);
}
void TestUnpackedTypes::set_unpacked_sfixed32(int index, ::google::protobuf::int32 value) {
  unpacked_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed32)
}
void TestUnpackedTypes::add_unpacked_sfixed32(::google::protobuf::int32 value) {
  unpacked_sfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestUnpackedTypes::unpacked_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed32)
  return unpacked_sfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestUnpackedTypes::mutable_unpacked_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed32)
  return &unpacked_sfixed32_;
}

// repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
int TestUnpackedTypes::unpacked_sfixed64_size() const {
  return unpacked_sfixed64_.size();
}
void TestUnpackedTypes::clear_unpacked_sfixed64() {
  unpacked_sfixed64_.Clear();
}
::google::protobuf::int64 TestUnpackedTypes::unpacked_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed64)
  return unpacked_sfixed64_.Get(index);
}
void TestUnpackedTypes::set_unpacked_sfixed64(int index, ::google::protobuf::int64 value) {
  unpacked_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed64)
}
void TestUnpackedTypes::add_unpacked_sfixed64(::google::protobuf::int64 value) {
  unpacked_sfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestUnpackedTypes::unpacked_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed64)
  return unpacked_sfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestUnpackedTypes::mutable_unpacked_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_sfixed64)
  return &unpacked_sfixed64_;
}

// repeated float unpacked_float = 100 [packed = false];
int TestUnpackedTypes::unpacked_float_size() const {
  return unpacked_float_.size();
}
void TestUnpackedTypes::clear_unpacked_float() {
  unpacked_float_.Clear();
}
float TestUnpackedTypes::unpacked_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_float)
  return unpacked_float_.Get(index);
}
void TestUnpackedTypes::set_unpacked_float(int index, float value) {
  unpacked_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_float)
}
void TestUnpackedTypes::add_unpacked_float(float value) {
  unpacked_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_float)
}
const ::google::protobuf::RepeatedField< float >&
TestUnpackedTypes::unpacked_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_float)
  return unpacked_float_;
}
::google::protobuf::RepeatedField< float >*
TestUnpackedTypes::mutable_unpacked_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_float)
  return &unpacked_float_;
}

// repeated double unpacked_double = 101 [packed = false];
int TestUnpackedTypes::unpacked_double_size() const {
  return unpacked_double_.size();
}
void TestUnpackedTypes::clear_unpacked_double() {
  unpacked_double_.Clear();
}
double TestUnpackedTypes::unpacked_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_double)
  return unpacked_double_.Get(index);
}
void TestUnpackedTypes::set_unpacked_double(int index, double value) {
  unpacked_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_double)
}
void TestUnpackedTypes::add_unpacked_double(double value) {
  unpacked_double_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_double)
}
const ::google::protobuf::RepeatedField< double >&
TestUnpackedTypes::unpacked_double() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_double)
  return unpacked_double_;
}
::google::protobuf::RepeatedField< double >*
TestUnpackedTypes::mutable_unpacked_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_double)
  return &unpacked_double_;
}

// repeated bool unpacked_bool = 102 [packed = false];
int TestUnpackedTypes::unpacked_bool_size() const {
  return unpacked_bool_.size();
}
void TestUnpackedTypes::clear_unpacked_bool() {
  unpacked_bool_.Clear();
}
bool TestUnpackedTypes::unpacked_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_bool)
  return unpacked_bool_.Get(index);
}
void TestUnpackedTypes::set_unpacked_bool(int index, bool value) {
  unpacked_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_bool)
}
void TestUnpackedTypes::add_unpacked_bool(bool value) {
  unpacked_bool_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_bool)
}
const ::google::protobuf::RepeatedField< bool >&
TestUnpackedTypes::unpacked_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_bool)
  return unpacked_bool_;
}
::google::protobuf::RepeatedField< bool >*
TestUnpackedTypes::mutable_unpacked_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_bool)
  return &unpacked_bool_;
}

// repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
int TestUnpackedTypes::unpacked_enum_size() const {
  return unpacked_enum_.size();
}
void TestUnpackedTypes::clear_unpacked_enum() {
  unpacked_enum_.Clear();
}
::protobuf_unittest::ForeignEnum TestUnpackedTypes::unpacked_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestUnpackedTypes.unpacked_enum)
  return static_cast< ::protobuf_unittest::ForeignEnum >(unpacked_enum_.Get(index));
}
void TestUnpackedTypes::set_unpacked_enum(int index, ::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  unpacked_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestUnpackedTypes.unpacked_enum)
}
void TestUnpackedTypes::add_unpacked_enum(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  unpacked_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestUnpackedTypes.unpacked_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestUnpackedTypes::unpacked_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestUnpackedTypes.unpacked_enum)
  return unpacked_enum_;
}
::google::protobuf::RepeatedField<int>*
TestUnpackedTypes::mutable_unpacked_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestUnpackedTypes.unpacked_enum)
  return &unpacked_enum_;
}

inline const TestUnpackedTypes* TestUnpackedTypes::internal_default_instance() {
  return &TestUnpackedTypes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPackedExtensions::TestPackedExtensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedExtensions)
}
TestPackedExtensions::TestPackedExtensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedExtensions)
}

void TestPackedExtensions::InitAsDefaultInstance() {
}

TestPackedExtensions::TestPackedExtensions(const TestPackedExtensions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedExtensions)
}

void TestPackedExtensions::SharedCtor() {
  _cached_size_ = 0;
}

TestPackedExtensions::~TestPackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedExtensions)
  SharedDtor();
}

void TestPackedExtensions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestPackedExtensions::ArenaDtor(void* object) {
  TestPackedExtensions* _this = reinterpret_cast< TestPackedExtensions* >(object);
  (void)_this;
}
void TestPackedExtensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestPackedExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPackedExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestPackedExtensions_descriptor_;
}

const TestPackedExtensions& TestPackedExtensions::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestPackedExtensions> TestPackedExtensions_default_instance_;

TestPackedExtensions* TestPackedExtensions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestPackedExtensions>(arena);
}

void TestPackedExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedExtensions)
  _extensions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestPackedExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedExtensions)
  return false;
#undef DO_
}

void TestPackedExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedExtensions)
}

::google::protobuf::uint8* TestPackedExtensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      1, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedExtensions)
  return target;
}

size_t TestPackedExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedExtensions)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedExtensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestPackedExtensions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestPackedExtensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestPackedExtensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestPackedExtensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestPackedExtensions)
    UnsafeMergeFrom(*source);
  }
}

void TestPackedExtensions::MergeFrom(const TestPackedExtensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedExtensions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestPackedExtensions::UnsafeMergeFrom(const TestPackedExtensions& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestPackedExtensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestPackedExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPackedExtensions::CopyFrom(const TestPackedExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedExtensions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestPackedExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestPackedExtensions::Swap(TestPackedExtensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestPackedExtensions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestPackedExtensions::UnsafeArenaSwap(TestPackedExtensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestPackedExtensions::InternalSwap(TestPackedExtensions* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestPackedExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestPackedExtensions_descriptor_;
  metadata.reflection = TestPackedExtensions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestPackedExtensions

inline const TestPackedExtensions* TestPackedExtensions::internal_default_instance() {
  return &TestPackedExtensions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestUnpackedExtensions::TestUnpackedExtensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestUnpackedExtensions)
}
TestUnpackedExtensions::TestUnpackedExtensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestUnpackedExtensions)
}

void TestUnpackedExtensions::InitAsDefaultInstance() {
}

TestUnpackedExtensions::TestUnpackedExtensions(const TestUnpackedExtensions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedExtensions)
}

void TestUnpackedExtensions::SharedCtor() {
  _cached_size_ = 0;
}

TestUnpackedExtensions::~TestUnpackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedExtensions)
  SharedDtor();
}

void TestUnpackedExtensions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestUnpackedExtensions::ArenaDtor(void* object) {
  TestUnpackedExtensions* _this = reinterpret_cast< TestUnpackedExtensions* >(object);
  (void)_this;
}
void TestUnpackedExtensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestUnpackedExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestUnpackedExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestUnpackedExtensions_descriptor_;
}

const TestUnpackedExtensions& TestUnpackedExtensions::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestUnpackedExtensions> TestUnpackedExtensions_default_instance_;

TestUnpackedExtensions* TestUnpackedExtensions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestUnpackedExtensions>(arena);
}

void TestUnpackedExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestUnpackedExtensions)
  _extensions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestUnpackedExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestUnpackedExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestUnpackedExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestUnpackedExtensions)
  return false;
#undef DO_
}

void TestUnpackedExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestUnpackedExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestUnpackedExtensions)
}

::google::protobuf::uint8* TestUnpackedExtensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      1, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedExtensions)
  return target;
}

size_t TestUnpackedExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestUnpackedExtensions)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestUnpackedExtensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestUnpackedExtensions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestUnpackedExtensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestUnpackedExtensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestUnpackedExtensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestUnpackedExtensions)
    UnsafeMergeFrom(*source);
  }
}

void TestUnpackedExtensions::MergeFrom(const TestUnpackedExtensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestUnpackedExtensions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestUnpackedExtensions::UnsafeMergeFrom(const TestUnpackedExtensions& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestUnpackedExtensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestUnpackedExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestUnpackedExtensions::CopyFrom(const TestUnpackedExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestUnpackedExtensions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestUnpackedExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestUnpackedExtensions::Swap(TestUnpackedExtensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestUnpackedExtensions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestUnpackedExtensions::UnsafeArenaSwap(TestUnpackedExtensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestUnpackedExtensions::InternalSwap(TestUnpackedExtensions* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestUnpackedExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestUnpackedExtensions_descriptor_;
  metadata.reflection = TestUnpackedExtensions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestUnpackedExtensions

inline const TestUnpackedExtensions* TestUnpackedExtensions::internal_default_instance() {
  return &TestUnpackedExtensions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TestDynamicExtensions_DynamicEnumType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_DynamicEnumType_descriptor_;
}
bool TestDynamicExtensions_DynamicEnumType_IsValid(int value) {
  switch (value) {
    case 2200:
    case 2201:
    case 2202:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_FOO;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAR;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAZ;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MIN;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MAX;
const int TestDynamicExtensions::DynamicEnumType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDynamicExtensions_DynamicMessageType::kDynamicFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}
TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

void TestDynamicExtensions_DynamicMessageType::InitAsDefaultInstance() {
}

TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(const TestDynamicExtensions_DynamicMessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

void TestDynamicExtensions_DynamicMessageType::SharedCtor() {
  _cached_size_ = 0;
  dynamic_field_ = 0;
}

TestDynamicExtensions_DynamicMessageType::~TestDynamicExtensions_DynamicMessageType() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  SharedDtor();
}

void TestDynamicExtensions_DynamicMessageType::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestDynamicExtensions_DynamicMessageType::ArenaDtor(void* object) {
  TestDynamicExtensions_DynamicMessageType* _this = reinterpret_cast< TestDynamicExtensions_DynamicMessageType* >(object);
  (void)_this;
}
void TestDynamicExtensions_DynamicMessageType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDynamicExtensions_DynamicMessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDynamicExtensions_DynamicMessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_DynamicMessageType_descriptor_;
}

const TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions_DynamicMessageType::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDynamicExtensions_DynamicMessageType> TestDynamicExtensions_DynamicMessageType_default_instance_;

TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions_DynamicMessageType::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDynamicExtensions_DynamicMessageType>(arena);
}

void TestDynamicExtensions_DynamicMessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  dynamic_field_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDynamicExtensions_DynamicMessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16800);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dynamic_field = 2100;
      case 2100: {
        if (tag == 16800) {
          set_has_dynamic_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dynamic_field_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return false;
#undef DO_
}

void TestDynamicExtensions_DynamicMessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  // optional int32 dynamic_field = 2100;
  if (has_dynamic_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2100, this->dynamic_field(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

::google::protobuf::uint8* TestDynamicExtensions_DynamicMessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  // optional int32 dynamic_field = 2100;
  if (has_dynamic_field()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2100, this->dynamic_field(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return target;
}

size_t TestDynamicExtensions_DynamicMessageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  size_t total_size = 0;

  // optional int32 dynamic_field = 2100;
  if (has_dynamic_field()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dynamic_field());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDynamicExtensions_DynamicMessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDynamicExtensions_DynamicMessageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDynamicExtensions_DynamicMessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
    UnsafeMergeFrom(*source);
  }
}

void TestDynamicExtensions_DynamicMessageType::MergeFrom(const TestDynamicExtensions_DynamicMessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDynamicExtensions_DynamicMessageType::UnsafeMergeFrom(const TestDynamicExtensions_DynamicMessageType& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dynamic_field()) {
      set_dynamic_field(from.dynamic_field());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDynamicExtensions_DynamicMessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDynamicExtensions_DynamicMessageType::CopyFrom(const TestDynamicExtensions_DynamicMessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDynamicExtensions_DynamicMessageType::IsInitialized() const {

  return true;
}

void TestDynamicExtensions_DynamicMessageType::Swap(TestDynamicExtensions_DynamicMessageType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDynamicExtensions_DynamicMessageType temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDynamicExtensions_DynamicMessageType::UnsafeArenaSwap(TestDynamicExtensions_DynamicMessageType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDynamicExtensions_DynamicMessageType::InternalSwap(TestDynamicExtensions_DynamicMessageType* other) {
  std::swap(dynamic_field_, other->dynamic_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDynamicExtensions_DynamicMessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDynamicExtensions_DynamicMessageType_descriptor_;
  metadata.reflection = TestDynamicExtensions_DynamicMessageType_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestDynamicExtensions::_slow_mutable_message_extension() {
  message_extension_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
      GetArenaNoVirtual());
}
::protobuf_unittest::ForeignMessage* TestDynamicExtensions::_slow_release_message_extension() {
  if (message_extension_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::ForeignMessage* temp = new ::protobuf_unittest::ForeignMessage(*message_extension_);
    message_extension_ = NULL;
    return temp;
  }
}
::protobuf_unittest::ForeignMessage* TestDynamicExtensions::unsafe_arena_release_message_extension() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestDynamicExtensions.message_extension)
  clear_has_message_extension();
  ::protobuf_unittest::ForeignMessage* temp = message_extension_;
  message_extension_ = NULL;
  return temp;
}
void TestDynamicExtensions::_slow_set_allocated_message_extension(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::ForeignMessage** message_extension) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*message_extension) == NULL) {
      message_arena->Own(*message_extension);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*message_extension)) {
      ::protobuf_unittest::ForeignMessage* new_message_extension = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::ForeignMessage >(
            message_arena);
      new_message_extension->CopyFrom(**message_extension);
      *message_extension = new_message_extension;
    }
}
void TestDynamicExtensions::unsafe_arena_set_allocated_message_extension(
    ::protobuf_unittest::ForeignMessage* message_extension) {
  if (GetArenaNoVirtual() == NULL) {
    delete message_extension_;
  }
  message_extension_ = message_extension;
  if (message_extension) {
    set_has_message_extension();
  } else {
    clear_has_message_extension();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDynamicExtensions.message_extension)
}
void TestDynamicExtensions::_slow_mutable_dynamic_message_extension() {
  dynamic_message_extension_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::_slow_release_dynamic_message_extension() {
  if (dynamic_message_extension_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* temp = new ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType(*dynamic_message_extension_);
    dynamic_message_extension_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::unsafe_arena_release_dynamic_message_extension() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
  clear_has_dynamic_message_extension();
  ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* temp = dynamic_message_extension_;
  dynamic_message_extension_ = NULL;
  return temp;
}
void TestDynamicExtensions::_slow_set_allocated_dynamic_message_extension(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType** dynamic_message_extension) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*dynamic_message_extension) == NULL) {
      message_arena->Own(*dynamic_message_extension);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*dynamic_message_extension)) {
      ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* new_dynamic_message_extension = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType >(
            message_arena);
      new_dynamic_message_extension->CopyFrom(**dynamic_message_extension);
      *dynamic_message_extension = new_dynamic_message_extension;
    }
}
void TestDynamicExtensions::unsafe_arena_set_allocated_dynamic_message_extension(
    ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* dynamic_message_extension) {
  if (GetArenaNoVirtual() == NULL) {
    delete dynamic_message_extension_;
  }
  dynamic_message_extension_ = dynamic_message_extension;
  if (dynamic_message_extension) {
    set_has_dynamic_message_extension();
  } else {
    clear_has_dynamic_message_extension();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDynamicExtensions::kScalarExtensionFieldNumber;
const int TestDynamicExtensions::kEnumExtensionFieldNumber;
const int TestDynamicExtensions::kDynamicEnumExtensionFieldNumber;
const int TestDynamicExtensions::kMessageExtensionFieldNumber;
const int TestDynamicExtensions::kDynamicMessageExtensionFieldNumber;
const int TestDynamicExtensions::kRepeatedExtensionFieldNumber;
const int TestDynamicExtensions::kPackedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDynamicExtensions::TestDynamicExtensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDynamicExtensions)
}
TestDynamicExtensions::TestDynamicExtensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_extension_(arena),
  packed_extension_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDynamicExtensions)
}

void TestDynamicExtensions::InitAsDefaultInstance() {
  message_extension_ = const_cast< ::protobuf_unittest::ForeignMessage*>(
      ::protobuf_unittest::ForeignMessage::internal_default_instance());
  dynamic_message_extension_ = const_cast< ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType*>(
      ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::internal_default_instance());
}

TestDynamicExtensions::TestDynamicExtensions(const TestDynamicExtensions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions)
}

void TestDynamicExtensions::SharedCtor() {
  _cached_size_ = 0;
  message_extension_ = NULL;
  dynamic_message_extension_ = NULL;
  scalar_extension_ = 0u;
  enum_extension_ = 4;
  dynamic_enum_extension_ = 2200;
}

TestDynamicExtensions::~TestDynamicExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions)
  SharedDtor();
}

void TestDynamicExtensions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestDynamicExtensions_default_instance_.get()) {
    delete message_extension_;
    delete dynamic_message_extension_;
  }
}

void TestDynamicExtensions::ArenaDtor(void* object) {
  TestDynamicExtensions* _this = reinterpret_cast< TestDynamicExtensions* >(object);
  (void)_this;
}
void TestDynamicExtensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestDynamicExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDynamicExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_descriptor_;
}

const TestDynamicExtensions& TestDynamicExtensions::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDynamicExtensions> TestDynamicExtensions_default_instance_;

TestDynamicExtensions* TestDynamicExtensions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestDynamicExtensions>(arena);
}

void TestDynamicExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDynamicExtensions)
  if (_has_bits_[0 / 32] & 31u) {
    scalar_extension_ = 0u;
    enum_extension_ = 4;
    dynamic_enum_extension_ = 2200;
    if (has_message_extension()) {
      if (message_extension_ != NULL) message_extension_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_dynamic_message_extension()) {
      if (dynamic_message_extension_ != NULL) dynamic_message_extension_->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::Clear();
    }
  }
  repeated_extension_.Clear();
  packed_extension_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestDynamicExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDynamicExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 scalar_extension = 2000;
      case 2000: {
        if (tag == 16005) {
          set_has_scalar_extension();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &scalar_extension_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16008)) goto parse_enum_extension;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
      case 2001: {
        if (tag == 16008) {
         parse_enum_extension:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_enum_extension(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2001, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16016)) goto parse_dynamic_enum_extension;
        break;
      }

      // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
      case 2002: {
        if (tag == 16016) {
         parse_dynamic_enum_extension:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestDynamicExtensions_DynamicEnumType_IsValid(value)) {
            set_dynamic_enum_extension(static_cast< ::protobuf_unittest::TestDynamicExtensions_DynamicEnumType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2002, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16026)) goto parse_message_extension;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
      case 2003: {
        if (tag == 16026) {
         parse_message_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16034)) goto parse_dynamic_message_extension;
        break;
      }

      // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
      case 2004: {
        if (tag == 16034) {
         parse_dynamic_message_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_message_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16042)) goto parse_repeated_extension;
        break;
      }

      // repeated string repeated_extension = 2005;
      case 2005: {
        if (tag == 16042) {
         parse_repeated_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_extension(this->repeated_extension_size() - 1).data(),
            this->repeated_extension(this->repeated_extension_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestDynamicExtensions.repeated_extension");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16042)) goto parse_repeated_extension;
        if (input->ExpectTag(16050)) goto parse_packed_extension;
        break;
      }

      // repeated sint32 packed_extension = 2006 [packed = true];
      case 2006: {
        if (tag == 16050) {
         parse_packed_extension:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_extension())));
        } else if (tag == 16048) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 16050, input, this->mutable_packed_extension())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDynamicExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDynamicExtensions)
  return false;
#undef DO_
}

void TestDynamicExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDynamicExtensions)
  // optional fixed32 scalar_extension = 2000;
  if (has_scalar_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2000, this->scalar_extension(), output);
  }

  // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
  if (has_enum_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2001, this->enum_extension(), output);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  if (has_dynamic_enum_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2002, this->dynamic_enum_extension(), output);
  }

  // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
  if (has_message_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2003, *this->message_extension_, output);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  if (has_dynamic_message_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2004, *this->dynamic_message_extension_, output);
  }

  // repeated string repeated_extension = 2005;
  for (int i = 0; i < this->repeated_extension_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_extension(i).data(), this->repeated_extension(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestDynamicExtensions.repeated_extension");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2005, this->repeated_extension(i), output);
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  if (this->packed_extension_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2006, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_extension_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_extension_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_extension(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDynamicExtensions)
}

::google::protobuf::uint8* TestDynamicExtensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions)
  // optional fixed32 scalar_extension = 2000;
  if (has_scalar_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2000, this->scalar_extension(), target);
  }

  // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
  if (has_enum_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2001, this->enum_extension(), target);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  if (has_dynamic_enum_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2002, this->dynamic_enum_extension(), target);
  }

  // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
  if (has_message_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2003, *this->message_extension_, false, target);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  if (has_dynamic_message_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2004, *this->dynamic_message_extension_, false, target);
  }

  // repeated string repeated_extension = 2005;
  for (int i = 0; i < this->repeated_extension_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_extension(i).data(), this->repeated_extension(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestDynamicExtensions.repeated_extension");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2005, this->repeated_extension(i), target);
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  if (this->packed_extension_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2006,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_extension_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_extension_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->packed_extension(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions)
  return target;
}

size_t TestDynamicExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDynamicExtensions)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed32 scalar_extension = 2000;
    if (has_scalar_extension()) {
      total_size += 2 + 4;
    }

    // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
    if (has_enum_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_extension());
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
    if (has_dynamic_enum_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dynamic_enum_extension());
    }

    // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
    if (has_message_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->message_extension_);
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
    if (has_dynamic_message_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dynamic_message_extension_);
    }

  }
  // repeated string repeated_extension = 2005;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_extension_size());
  for (int i = 0; i < this->repeated_extension_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_extension(i));
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_extension_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_extension(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_extension_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDynamicExtensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestDynamicExtensions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestDynamicExtensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestDynamicExtensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestDynamicExtensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestDynamicExtensions)
    UnsafeMergeFrom(*source);
  }
}

void TestDynamicExtensions::MergeFrom(const TestDynamicExtensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDynamicExtensions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDynamicExtensions::UnsafeMergeFrom(const TestDynamicExtensions& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_extension_.UnsafeMergeFrom(from.repeated_extension_);
  packed_extension_.UnsafeMergeFrom(from.packed_extension_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scalar_extension()) {
      set_scalar_extension(from.scalar_extension());
    }
    if (from.has_enum_extension()) {
      set_enum_extension(from.enum_extension());
    }
    if (from.has_dynamic_enum_extension()) {
      set_dynamic_enum_extension(from.dynamic_enum_extension());
    }
    if (from.has_message_extension()) {
      mutable_message_extension()->::protobuf_unittest::ForeignMessage::MergeFrom(from.message_extension());
    }
    if (from.has_dynamic_message_extension()) {
      mutable_dynamic_message_extension()->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::MergeFrom(from.dynamic_message_extension());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestDynamicExtensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestDynamicExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDynamicExtensions::CopyFrom(const TestDynamicExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDynamicExtensions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDynamicExtensions::IsInitialized() const {

  return true;
}

void TestDynamicExtensions::Swap(TestDynamicExtensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestDynamicExtensions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestDynamicExtensions::UnsafeArenaSwap(TestDynamicExtensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestDynamicExtensions::InternalSwap(TestDynamicExtensions* other) {
  std::swap(scalar_extension_, other->scalar_extension_);
  std::swap(enum_extension_, other->enum_extension_);
  std::swap(dynamic_enum_extension_, other->dynamic_enum_extension_);
  std::swap(message_extension_, other->message_extension_);
  std::swap(dynamic_message_extension_, other->dynamic_message_extension_);
  repeated_extension_.UnsafeArenaSwap(&other->repeated_extension_);
  packed_extension_.UnsafeArenaSwap(&other->packed_extension_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestDynamicExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDynamicExtensions_descriptor_;
  metadata.reflection = TestDynamicExtensions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestDynamicExtensions_DynamicMessageType

// optional int32 dynamic_field = 2100;
bool TestDynamicExtensions_DynamicMessageType::has_dynamic_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDynamicExtensions_DynamicMessageType::set_has_dynamic_field() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDynamicExtensions_DynamicMessageType::clear_has_dynamic_field() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDynamicExtensions_DynamicMessageType::clear_dynamic_field() {
  dynamic_field_ = 0;
  clear_has_dynamic_field();
}
::google::protobuf::int32 TestDynamicExtensions_DynamicMessageType::dynamic_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.DynamicMessageType.dynamic_field)
  return dynamic_field_;
}
void TestDynamicExtensions_DynamicMessageType::set_dynamic_field(::google::protobuf::int32 value) {
  set_has_dynamic_field();
  dynamic_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.DynamicMessageType.dynamic_field)
}

inline const TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions_DynamicMessageType::internal_default_instance() {
  return &TestDynamicExtensions_DynamicMessageType_default_instance_.get();
}
// -------------------------------------------------------------------

// TestDynamicExtensions

// optional fixed32 scalar_extension = 2000;
bool TestDynamicExtensions::has_scalar_extension() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDynamicExtensions::set_has_scalar_extension() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDynamicExtensions::clear_has_scalar_extension() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDynamicExtensions::clear_scalar_extension() {
  scalar_extension_ = 0u;
  clear_has_scalar_extension();
}
::google::protobuf::uint32 TestDynamicExtensions::scalar_extension() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.scalar_extension)
  return scalar_extension_;
}
void TestDynamicExtensions::set_scalar_extension(::google::protobuf::uint32 value) {
  set_has_scalar_extension();
  scalar_extension_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.scalar_extension)
}

// optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
bool TestDynamicExtensions::has_enum_extension() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestDynamicExtensions::set_has_enum_extension() {
  _has_bits_[0] |= 0x00000002u;
}
void TestDynamicExtensions::clear_has_enum_extension() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestDynamicExtensions::clear_enum_extension() {
  enum_extension_ = 4;
  clear_has_enum_extension();
}
::protobuf_unittest::ForeignEnum TestDynamicExtensions::enum_extension() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.enum_extension)
  return static_cast< ::protobuf_unittest::ForeignEnum >(enum_extension_);
}
void TestDynamicExtensions::set_enum_extension(::protobuf_unittest::ForeignEnum value) {
  assert(::protobuf_unittest::ForeignEnum_IsValid(value));
  set_has_enum_extension();
  enum_extension_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.enum_extension)
}

// optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
bool TestDynamicExtensions::has_dynamic_enum_extension() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestDynamicExtensions::set_has_dynamic_enum_extension() {
  _has_bits_[0] |= 0x00000004u;
}
void TestDynamicExtensions::clear_has_dynamic_enum_extension() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestDynamicExtensions::clear_dynamic_enum_extension() {
  dynamic_enum_extension_ = 2200;
  clear_has_dynamic_enum_extension();
}
::protobuf_unittest::TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::dynamic_enum_extension() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.dynamic_enum_extension)
  return static_cast< ::protobuf_unittest::TestDynamicExtensions_DynamicEnumType >(dynamic_enum_extension_);
}
void TestDynamicExtensions::set_dynamic_enum_extension(::protobuf_unittest::TestDynamicExtensions_DynamicEnumType value) {
  assert(::protobuf_unittest::TestDynamicExtensions_DynamicEnumType_IsValid(value));
  set_has_dynamic_enum_extension();
  dynamic_enum_extension_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.dynamic_enum_extension)
}

// optional .protobuf_unittest.ForeignMessage message_extension = 2003;
bool TestDynamicExtensions::has_message_extension() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestDynamicExtensions::set_has_message_extension() {
  _has_bits_[0] |= 0x00000008u;
}
void TestDynamicExtensions::clear_has_message_extension() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestDynamicExtensions::clear_message_extension() {
  if (message_extension_ != NULL) message_extension_->::protobuf_unittest::ForeignMessage::Clear();
  clear_has_message_extension();
}
const ::protobuf_unittest::ForeignMessage& TestDynamicExtensions::message_extension() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.message_extension)
  return message_extension_ != NULL ? *message_extension_
                         : *::protobuf_unittest::ForeignMessage::internal_default_instance();
}
::protobuf_unittest::ForeignMessage* TestDynamicExtensions::mutable_message_extension() {
  set_has_message_extension();
  if (message_extension_ == NULL) {
    _slow_mutable_message_extension();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDynamicExtensions.message_extension)
  return message_extension_;
}
::protobuf_unittest::ForeignMessage* TestDynamicExtensions::release_message_extension() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDynamicExtensions.message_extension)
  clear_has_message_extension();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_message_extension();
  } else {
    ::protobuf_unittest::ForeignMessage* temp = message_extension_;
    message_extension_ = NULL;
    return temp;
  }
}
 void TestDynamicExtensions::set_allocated_message_extension(::protobuf_unittest::ForeignMessage* message_extension) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete message_extension_;
  }
  if (message_extension != NULL) {
    _slow_set_allocated_message_extension(message_arena, &message_extension);
  }
  message_extension_ = message_extension;
  if (message_extension) {
    set_has_message_extension();
  } else {
    clear_has_message_extension();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDynamicExtensions.message_extension)
}

// optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
bool TestDynamicExtensions::has_dynamic_message_extension() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestDynamicExtensions::set_has_dynamic_message_extension() {
  _has_bits_[0] |= 0x00000010u;
}
void TestDynamicExtensions::clear_has_dynamic_message_extension() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestDynamicExtensions::clear_dynamic_message_extension() {
  if (dynamic_message_extension_ != NULL) dynamic_message_extension_->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::Clear();
  clear_has_dynamic_message_extension();
}
const ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions::dynamic_message_extension() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
  return dynamic_message_extension_ != NULL ? *dynamic_message_extension_
                         : *::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::internal_default_instance();
}
::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::mutable_dynamic_message_extension() {
  set_has_dynamic_message_extension();
  if (dynamic_message_extension_ == NULL) {
    _slow_mutable_dynamic_message_extension();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
  return dynamic_message_extension_;
}
::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::release_dynamic_message_extension() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
  clear_has_dynamic_message_extension();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_dynamic_message_extension();
  } else {
    ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* temp = dynamic_message_extension_;
    dynamic_message_extension_ = NULL;
    return temp;
  }
}
 void TestDynamicExtensions::set_allocated_dynamic_message_extension(::protobuf_unittest::TestDynamicExtensions_DynamicMessageType* dynamic_message_extension) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dynamic_message_extension_;
  }
  if (dynamic_message_extension != NULL) {
    _slow_set_allocated_dynamic_message_extension(message_arena, &dynamic_message_extension);
  }
  dynamic_message_extension_ = dynamic_message_extension;
  if (dynamic_message_extension) {
    set_has_dynamic_message_extension();
  } else {
    clear_has_dynamic_message_extension();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDynamicExtensions.dynamic_message_extension)
}

// repeated string repeated_extension = 2005;
int TestDynamicExtensions::repeated_extension_size() const {
  return repeated_extension_.size();
}
void TestDynamicExtensions::clear_repeated_extension() {
  repeated_extension_.Clear();
}
const ::std::string& TestDynamicExtensions::repeated_extension(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  return repeated_extension_.Get(index);
}
::std::string* TestDynamicExtensions::mutable_repeated_extension(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  return repeated_extension_.Mutable(index);
}
void TestDynamicExtensions::set_repeated_extension(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  repeated_extension_.Mutable(index)->assign(value);
}
void TestDynamicExtensions::set_repeated_extension(int index, const char* value) {
  repeated_extension_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestDynamicExtensions.repeated_extension)
}
void TestDynamicExtensions::set_repeated_extension(int index, const char* value, size_t size) {
  repeated_extension_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestDynamicExtensions.repeated_extension)
}
::std::string* TestDynamicExtensions::add_repeated_extension() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  return repeated_extension_.Add();
}
void TestDynamicExtensions::add_repeated_extension(const ::std::string& value) {
  repeated_extension_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDynamicExtensions.repeated_extension)
}
void TestDynamicExtensions::add_repeated_extension(const char* value) {
  repeated_extension_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestDynamicExtensions.repeated_extension)
}
void TestDynamicExtensions::add_repeated_extension(const char* value, size_t size) {
  repeated_extension_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestDynamicExtensions.repeated_extension)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestDynamicExtensions::repeated_extension() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  return repeated_extension_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestDynamicExtensions::mutable_repeated_extension() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDynamicExtensions.repeated_extension)
  return &repeated_extension_;
}

// repeated sint32 packed_extension = 2006 [packed = true];
int TestDynamicExtensions::packed_extension_size() const {
  return packed_extension_.size();
}
void TestDynamicExtensions::clear_packed_extension() {
  packed_extension_.Clear();
}
::google::protobuf::int32 TestDynamicExtensions::packed_extension(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDynamicExtensions.packed_extension)
  return packed_extension_.Get(index);
}
void TestDynamicExtensions::set_packed_extension(int index, ::google::protobuf::int32 value) {
  packed_extension_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDynamicExtensions.packed_extension)
}
void TestDynamicExtensions::add_packed_extension(::google::protobuf::int32 value) {
  packed_extension_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDynamicExtensions.packed_extension)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestDynamicExtensions::packed_extension() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDynamicExtensions.packed_extension)
  return packed_extension_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestDynamicExtensions::mutable_packed_extension() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDynamicExtensions.packed_extension)
  return &packed_extension_;
}

inline const TestDynamicExtensions* TestDynamicExtensions::internal_default_instance() {
  return &TestDynamicExtensions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFixed32FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedInt32FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFixed64FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedInt64FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFloatFieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}
TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_fixed32_(arena),
  repeated_int32_(arena),
  repeated_fixed64_(arena),
  repeated_int64_(arena),
  repeated_float_(arena),
  repeated_uint64_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

void TestRepeatedScalarDifferentTagSizes::InitAsDefaultInstance() {
}

TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(const TestRepeatedScalarDifferentTagSizes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

void TestRepeatedScalarDifferentTagSizes::SharedCtor() {
  _cached_size_ = 0;
}

TestRepeatedScalarDifferentTagSizes::~TestRepeatedScalarDifferentTagSizes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  SharedDtor();
}

void TestRepeatedScalarDifferentTagSizes::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestRepeatedScalarDifferentTagSizes::ArenaDtor(void* object) {
  TestRepeatedScalarDifferentTagSizes* _this = reinterpret_cast< TestRepeatedScalarDifferentTagSizes* >(object);
  (void)_this;
}
void TestRepeatedScalarDifferentTagSizes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestRepeatedScalarDifferentTagSizes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRepeatedScalarDifferentTagSizes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRepeatedScalarDifferentTagSizes_descriptor_;
}

const TestRepeatedScalarDifferentTagSizes& TestRepeatedScalarDifferentTagSizes::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestRepeatedScalarDifferentTagSizes> TestRepeatedScalarDifferentTagSizes_default_instance_;

TestRepeatedScalarDifferentTagSizes* TestRepeatedScalarDifferentTagSizes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestRepeatedScalarDifferentTagSizes>(arena);
}

void TestRepeatedScalarDifferentTagSizes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  repeated_fixed32_.Clear();
  repeated_int32_.Clear();
  repeated_fixed64_.Clear();
  repeated_int64_.Clear();
  repeated_float_.Clear();
  repeated_uint64_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestRepeatedScalarDifferentTagSizes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2097144);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 repeated_fixed32 = 12;
      case 12: {
        if (tag == 101) {
         parse_repeated_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 101, input, this->mutable_repeated_fixed32())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_repeated_fixed32;
        if (input->ExpectTag(104)) goto parse_repeated_int32;
        break;
      }

      // repeated int32 repeated_int32 = 13;
      case 13: {
        if (tag == 104) {
         parse_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_repeated_int32())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_repeated_int32;
        if (input->ExpectTag(16369)) goto parse_repeated_fixed64;
        break;
      }

      // repeated fixed64 repeated_fixed64 = 2046;
      case 2046: {
        if (tag == 16369) {
         parse_repeated_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 16369, input, this->mutable_repeated_fixed64())));
        } else if (tag == 16370) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16369)) goto parse_repeated_fixed64;
        if (input->ExpectTag(16376)) goto parse_repeated_int64;
        break;
      }

      // repeated int64 repeated_int64 = 2047;
      case 2047: {
        if (tag == 16376) {
         parse_repeated_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 16376, input, this->mutable_repeated_int64())));
        } else if (tag == 16378) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16376)) goto parse_repeated_int64;
        if (input->ExpectTag(2097141)) goto parse_repeated_float;
        break;
      }

      // repeated float repeated_float = 262142;
      case 262142: {
        if (tag == 2097141) {
         parse_repeated_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 3, 2097141, input, this->mutable_repeated_float())));
        } else if (tag == 2097138) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2097141)) goto parse_repeated_float;
        if (input->ExpectTag(2097144)) goto parse_repeated_uint64;
        break;
      }

      // repeated uint64 repeated_uint64 = 262143;
      case 262143: {
        if (tag == 2097144) {
         parse_repeated_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 3, 2097144, input, this->mutable_repeated_uint64())));
        } else if (tag == 2097146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2097144)) goto parse_repeated_uint64;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return false;
#undef DO_
}

void TestRepeatedScalarDifferentTagSizes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  // repeated fixed32 repeated_fixed32 = 12;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      12, this->repeated_fixed32(i), output);
  }

  // repeated int32 repeated_int32 = 13;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->repeated_int32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2046, this->repeated_fixed64(i), output);
  }

  // repeated int64 repeated_int64 = 2047;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2047, this->repeated_int64(i), output);
  }

  // repeated float repeated_float = 262142;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      262142, this->repeated_float(i), output);
  }

  // repeated uint64 repeated_uint64 = 262143;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      262143, this->repeated_uint64(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

::google::protobuf::uint8* TestRepeatedScalarDifferentTagSizes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  // repeated fixed32 repeated_fixed32 = 12;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(12, this->repeated_fixed32(i), target);
  }

  // repeated int32 repeated_int32 = 13;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->repeated_int32(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2046, this->repeated_fixed64(i), target);
  }

  // repeated int64 repeated_int64 = 2047;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2047, this->repeated_int64(i), target);
  }

  // repeated float repeated_float = 262142;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(262142, this->repeated_float(i), target);
  }

  // repeated uint64 repeated_uint64 = 262143;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(262143, this->repeated_uint64(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return target;
}

size_t TestRepeatedScalarDifferentTagSizes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  size_t total_size = 0;

  // repeated fixed32 repeated_fixed32 = 12;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed32_size();
    data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed32_size());
    total_size += data_size;
  }

  // repeated int32 repeated_int32 = 13;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeated_int32(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int32_size());
    total_size += data_size;
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed64_size());
    total_size += data_size;
  }

  // repeated int64 repeated_int64 = 2047;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->repeated_int64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int64_size());
    total_size += data_size;
  }

  // repeated float repeated_float = 262142;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_float_size();
    data_size = 4UL * count;
    total_size += 3 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_float_size());
    total_size += data_size;
  }

  // repeated uint64 repeated_uint64 = 262143;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->repeated_uint64(i));
    }
    total_size += 3 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint64_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRepeatedScalarDifferentTagSizes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestRepeatedScalarDifferentTagSizes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRepeatedScalarDifferentTagSizes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
    UnsafeMergeFrom(*source);
  }
}

void TestRepeatedScalarDifferentTagSizes::MergeFrom(const TestRepeatedScalarDifferentTagSizes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestRepeatedScalarDifferentTagSizes::UnsafeMergeFrom(const TestRepeatedScalarDifferentTagSizes& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_fixed32_.UnsafeMergeFrom(from.repeated_fixed32_);
  repeated_int32_.UnsafeMergeFrom(from.repeated_int32_);
  repeated_fixed64_.UnsafeMergeFrom(from.repeated_fixed64_);
  repeated_int64_.UnsafeMergeFrom(from.repeated_int64_);
  repeated_float_.UnsafeMergeFrom(from.repeated_float_);
  repeated_uint64_.UnsafeMergeFrom(from.repeated_uint64_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestRepeatedScalarDifferentTagSizes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRepeatedScalarDifferentTagSizes::CopyFrom(const TestRepeatedScalarDifferentTagSizes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestRepeatedScalarDifferentTagSizes::IsInitialized() const {

  return true;
}

void TestRepeatedScalarDifferentTagSizes::Swap(TestRepeatedScalarDifferentTagSizes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestRepeatedScalarDifferentTagSizes temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestRepeatedScalarDifferentTagSizes::UnsafeArenaSwap(TestRepeatedScalarDifferentTagSizes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestRepeatedScalarDifferentTagSizes::InternalSwap(TestRepeatedScalarDifferentTagSizes* other) {
  repeated_fixed32_.UnsafeArenaSwap(&other->repeated_fixed32_);
  repeated_int32_.UnsafeArenaSwap(&other->repeated_int32_);
  repeated_fixed64_.UnsafeArenaSwap(&other->repeated_fixed64_);
  repeated_int64_.UnsafeArenaSwap(&other->repeated_int64_);
  repeated_float_.UnsafeArenaSwap(&other->repeated_float_);
  repeated_uint64_.UnsafeArenaSwap(&other->repeated_uint64_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRepeatedScalarDifferentTagSizes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRepeatedScalarDifferentTagSizes_descriptor_;
  metadata.reflection = TestRepeatedScalarDifferentTagSizes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestRepeatedScalarDifferentTagSizes

// repeated fixed32 repeated_fixed32 = 12;
int TestRepeatedScalarDifferentTagSizes::repeated_fixed32_size() const {
  return repeated_fixed32_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_fixed32() {
  repeated_fixed32_.Clear();
}
::google::protobuf::uint32 TestRepeatedScalarDifferentTagSizes::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  return repeated_fixed32_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_fixed32(int index, ::google::protobuf::uint32 value) {
  repeated_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_fixed32(::google::protobuf::uint32 value) {
  repeated_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestRepeatedScalarDifferentTagSizes::repeated_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  return repeated_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  return &repeated_fixed32_;
}

// repeated int32 repeated_int32 = 13;
int TestRepeatedScalarDifferentTagSizes::repeated_int32_size() const {
  return repeated_int32_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_int32() {
  repeated_int32_.Clear();
}
::google::protobuf::int32 TestRepeatedScalarDifferentTagSizes::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  return repeated_int32_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestRepeatedScalarDifferentTagSizes::repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  return repeated_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  return &repeated_int32_;
}

// repeated fixed64 repeated_fixed64 = 2046;
int TestRepeatedScalarDifferentTagSizes::repeated_fixed64_size() const {
  return repeated_fixed64_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_fixed64() {
  repeated_fixed64_.Clear();
}
::google::protobuf::uint64 TestRepeatedScalarDifferentTagSizes::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  return repeated_fixed64_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_fixed64(int index, ::google::protobuf::uint64 value) {
  repeated_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_fixed64(::google::protobuf::uint64 value) {
  repeated_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestRepeatedScalarDifferentTagSizes::repeated_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  return repeated_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  return &repeated_fixed64_;
}

// repeated int64 repeated_int64 = 2047;
int TestRepeatedScalarDifferentTagSizes::repeated_int64_size() const {
  return repeated_int64_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_int64() {
  repeated_int64_.Clear();
}
::google::protobuf::int64 TestRepeatedScalarDifferentTagSizes::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  return repeated_int64_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestRepeatedScalarDifferentTagSizes::repeated_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  return repeated_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  return &repeated_int64_;
}

// repeated float repeated_float = 262142;
int TestRepeatedScalarDifferentTagSizes::repeated_float_size() const {
  return repeated_float_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_float() {
  repeated_float_.Clear();
}
float TestRepeatedScalarDifferentTagSizes::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  return repeated_float_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
}
const ::google::protobuf::RepeatedField< float >&
TestRepeatedScalarDifferentTagSizes::repeated_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  return repeated_float_;
}
::google::protobuf::RepeatedField< float >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  return &repeated_float_;
}

// repeated uint64 repeated_uint64 = 262143;
int TestRepeatedScalarDifferentTagSizes::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
void TestRepeatedScalarDifferentTagSizes::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
::google::protobuf::uint64 TestRepeatedScalarDifferentTagSizes::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  return repeated_uint64_.Get(index);
}
void TestRepeatedScalarDifferentTagSizes::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
}
void TestRepeatedScalarDifferentTagSizes::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestRepeatedScalarDifferentTagSizes::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  return repeated_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestRepeatedScalarDifferentTagSizes::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  return &repeated_uint64_;
}

inline const TestRepeatedScalarDifferentTagSizes* TestRepeatedScalarDifferentTagSizes::internal_default_instance() {
  return &TestRepeatedScalarDifferentTagSizes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TestParsingMerge_RepeatedFieldsGenerator_Group1::_slow_mutable_field1() {
  field1_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::_slow_release_field1() {
  if (field1_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*field1_);
    field1_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::unsafe_arena_release_field1() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  clear_has_field1();
  ::protobuf_unittest::TestAllTypes* temp = field1_;
  field1_ = NULL;
  return temp;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::_slow_set_allocated_field1(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** field1) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*field1) == NULL) {
      message_arena->Own(*field1);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*field1)) {
      ::protobuf_unittest::TestAllTypes* new_field1 = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_field1->CopyFrom(**field1);
      *field1 = new_field1;
    }
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::unsafe_arena_set_allocated_field1(
    ::protobuf_unittest::TestAllTypes* field1) {
  if (GetArenaNoVirtual() == NULL) {
    delete field1_;
  }
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge_RepeatedFieldsGenerator_Group1::kField1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}
TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedCtor() {
  _cached_size_ = 0;
  field1_ = NULL;
}

TestParsingMerge_RepeatedFieldsGenerator_Group1::~TestParsingMerge_RepeatedFieldsGenerator_Group1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_.get()) {
    delete field1_;
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::ArenaDtor(void* object) {
  TestParsingMerge_RepeatedFieldsGenerator_Group1* _this = reinterpret_cast< TestParsingMerge_RepeatedFieldsGenerator_Group1* >(object);
  (void)_this;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator_Group1& TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge_RepeatedFieldsGenerator_Group1> TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_;

TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator_Group1::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1>(arena);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes field1 = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->field1_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator_Group1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->field1_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return target;
}

size_t TestParsingMerge_RepeatedFieldsGenerator_Group1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (has_field1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field1_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge_RepeatedFieldsGenerator_Group1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge_RepeatedFieldsGenerator_Group1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::UnsafeMergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(from.field1());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group1::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::Swap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge_RepeatedFieldsGenerator_Group1 temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
  std::swap(field1_, other->field1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestParsingMerge_RepeatedFieldsGenerator_Group2::_slow_mutable_field1() {
  field1_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::_slow_release_field1() {
  if (field1_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*field1_);
    field1_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::unsafe_arena_release_field1() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  clear_has_field1();
  ::protobuf_unittest::TestAllTypes* temp = field1_;
  field1_ = NULL;
  return temp;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::_slow_set_allocated_field1(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** field1) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*field1) == NULL) {
      message_arena->Own(*field1);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*field1)) {
      ::protobuf_unittest::TestAllTypes* new_field1 = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_field1->CopyFrom(**field1);
      *field1 = new_field1;
    }
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::unsafe_arena_set_allocated_field1(
    ::protobuf_unittest::TestAllTypes* field1) {
  if (GetArenaNoVirtual() == NULL) {
    delete field1_;
  }
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge_RepeatedFieldsGenerator_Group2::kField1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}
TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedCtor() {
  _cached_size_ = 0;
  field1_ = NULL;
}

TestParsingMerge_RepeatedFieldsGenerator_Group2::~TestParsingMerge_RepeatedFieldsGenerator_Group2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_.get()) {
    delete field1_;
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::ArenaDtor(void* object) {
  TestParsingMerge_RepeatedFieldsGenerator_Group2* _this = reinterpret_cast< TestParsingMerge_RepeatedFieldsGenerator_Group2* >(object);
  (void)_this;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator_Group2& TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge_RepeatedFieldsGenerator_Group2> TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_;

TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator_Group2::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2>(arena);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes field1 = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->field1_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator_Group2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->field1_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return target;
}

size_t TestParsingMerge_RepeatedFieldsGenerator_Group2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (has_field1()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field1_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge_RepeatedFieldsGenerator_Group2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge_RepeatedFieldsGenerator_Group2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::UnsafeMergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(from.field1());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group2::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::Swap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge_RepeatedFieldsGenerator_Group2 temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
  std::swap(field1_, other->field1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge_RepeatedFieldsGenerator::kField1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kField2FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kField3FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kGroup1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kGroup2FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kExt1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kExt2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}
TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  field1_(arena),
  field2_(arena),
  field3_(arena),
  group1_(arena),
  group2_(arena),
  ext1_(arena),
  ext2_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

void TestParsingMerge_RepeatedFieldsGenerator::InitAsDefaultInstance() {
}

TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(const TestParsingMerge_RepeatedFieldsGenerator& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

void TestParsingMerge_RepeatedFieldsGenerator::SharedCtor() {
  _cached_size_ = 0;
}

TestParsingMerge_RepeatedFieldsGenerator::~TestParsingMerge_RepeatedFieldsGenerator() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestParsingMerge_RepeatedFieldsGenerator::ArenaDtor(void* object) {
  TestParsingMerge_RepeatedFieldsGenerator* _this = reinterpret_cast< TestParsingMerge_RepeatedFieldsGenerator* >(object);
  (void)_this;
}
void TestParsingMerge_RepeatedFieldsGenerator::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge_RepeatedFieldsGenerator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator& TestParsingMerge_RepeatedFieldsGenerator::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge_RepeatedFieldsGenerator> TestParsingMerge_RepeatedFieldsGenerator_default_instance_;

TestParsingMerge_RepeatedFieldsGenerator* TestParsingMerge_RepeatedFieldsGenerator::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge_RepeatedFieldsGenerator>(arena);
}

void TestParsingMerge_RepeatedFieldsGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  field1_.Clear();
  field2_.Clear();
  field3_.Clear();
  group1_.Clear();
  group2_.Clear();
  ext1_.Clear();
  ext2_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge_RepeatedFieldsGenerator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf_unittest.TestAllTypes field1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field1;
        if (input->ExpectTag(18)) goto parse_loop_field2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes field2 = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_field2;
        if (input->ExpectTag(26)) goto parse_loop_field3;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes field3 = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_field3;
        if (input->ExpectTag(83)) goto parse_loop_group1;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated group Group1 = 10 { ... };
      case 10: {
        if (tag == 83) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                10, input, add_group1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_loop_group1;
        if (input->ExpectTag(163)) goto parse_loop_group2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated group Group2 = 20 { ... };
      case 20: {
        if (tag == 163) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                20, input, add_group2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_loop_group2;
        if (input->ExpectTag(8002)) goto parse_loop_ext1;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
      case 1000: {
        if (tag == 8002) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ext1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ext1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_loop_ext1;
        if (input->ExpectTag(8010)) goto parse_loop_ext2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
      case 1001: {
        if (tag == 8010) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ext2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ext2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_loop_ext2;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  for (unsigned int i = 0, n = this->field1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  for (unsigned int i = 0, n = this->field2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  for (unsigned int i = 0, n = this->field3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->field3(i), output);
  }

  // repeated group Group1 = 10 { ... };
  for (unsigned int i = 0, n = this->group1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, this->group1(i), output);
  }

  // repeated group Group2 = 20 { ... };
  for (unsigned int i = 0, n = this->group2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, this->group2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  for (unsigned int i = 0, n = this->ext1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->ext1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  for (unsigned int i = 0, n = this->ext2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1001, this->ext2(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  for (unsigned int i = 0, n = this->field1_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field1(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  for (unsigned int i = 0, n = this->field2_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->field2(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  for (unsigned int i = 0, n = this->field3_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->field3(i), false, target);
  }

  // repeated group Group1 = 10 { ... };
  for (unsigned int i = 0, n = this->group1_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        10, this->group1(i), false, target);
  }

  // repeated group Group2 = 20 { ... };
  for (unsigned int i = 0, n = this->group2_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        20, this->group2(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  for (unsigned int i = 0, n = this->ext1_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1000, this->ext1(i), false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  for (unsigned int i = 0, n = this->ext2_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1001, this->ext2(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return target;
}

size_t TestParsingMerge_RepeatedFieldsGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  size_t total_size = 0;

  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  {
    unsigned int count = this->field1_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  {
    unsigned int count = this->field2_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field2(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  {
    unsigned int count = this->field3_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field3(i));
    }
  }

  // repeated group Group1 = 10 { ... };
  {
    unsigned int count = this->group1_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->group1(i));
    }
  }

  // repeated group Group2 = 20 { ... };
  {
    unsigned int count = this->group2_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->group2(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  {
    unsigned int count = this->ext1_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext1(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  {
    unsigned int count = this->ext2_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext2(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge_RepeatedFieldsGenerator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge_RepeatedFieldsGenerator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator::UnsafeMergeFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
  GOOGLE_DCHECK(&from != this);
  field1_.MergeFrom(from.field1_);
  field2_.MergeFrom(from.field2_);
  field3_.MergeFrom(from.field3_);
  group1_.MergeFrom(from.group1_);
  group2_.MergeFrom(from.group2_);
  ext1_.MergeFrom(from.ext1_);
  ext2_.MergeFrom(from.ext2_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator::Swap(TestParsingMerge_RepeatedFieldsGenerator* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge_RepeatedFieldsGenerator temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge_RepeatedFieldsGenerator::UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge_RepeatedFieldsGenerator::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator* other) {
  field1_.UnsafeArenaSwap(&other->field1_);
  field2_.UnsafeArenaSwap(&other->field2_);
  field3_.UnsafeArenaSwap(&other->field3_);
  group1_.UnsafeArenaSwap(&other->group1_);
  group2_.UnsafeArenaSwap(&other->group2_);
  ext1_.UnsafeArenaSwap(&other->ext1_);
  ext2_.UnsafeArenaSwap(&other->ext2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestParsingMerge_OptionalGroup::_slow_mutable_optional_group_all_types() {
  optional_group_all_types_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::_slow_release_optional_group_all_types() {
  if (optional_group_all_types_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*optional_group_all_types_);
    optional_group_all_types_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::unsafe_arena_release_optional_group_all_types() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  clear_has_optional_group_all_types();
  ::protobuf_unittest::TestAllTypes* temp = optional_group_all_types_;
  optional_group_all_types_ = NULL;
  return temp;
}
void TestParsingMerge_OptionalGroup::_slow_set_allocated_optional_group_all_types(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** optional_group_all_types) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_group_all_types) == NULL) {
      message_arena->Own(*optional_group_all_types);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_group_all_types)) {
      ::protobuf_unittest::TestAllTypes* new_optional_group_all_types = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_optional_group_all_types->CopyFrom(**optional_group_all_types);
      *optional_group_all_types = new_optional_group_all_types;
    }
}
void TestParsingMerge_OptionalGroup::unsafe_arena_set_allocated_optional_group_all_types(
    ::protobuf_unittest::TestAllTypes* optional_group_all_types) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_group_all_types_;
  }
  optional_group_all_types_ = optional_group_all_types;
  if (optional_group_all_types) {
    set_has_optional_group_all_types();
  } else {
    clear_has_optional_group_all_types();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge_OptionalGroup::kOptionalGroupAllTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}
TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

void TestParsingMerge_OptionalGroup::InitAsDefaultInstance() {
  optional_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(const TestParsingMerge_OptionalGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

void TestParsingMerge_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  optional_group_all_types_ = NULL;
}

TestParsingMerge_OptionalGroup::~TestParsingMerge_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
  SharedDtor();
}

void TestParsingMerge_OptionalGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestParsingMerge_OptionalGroup_default_instance_.get()) {
    delete optional_group_all_types_;
  }
}

void TestParsingMerge_OptionalGroup::ArenaDtor(void* object) {
  TestParsingMerge_OptionalGroup* _this = reinterpret_cast< TestParsingMerge_OptionalGroup* >(object);
  (void)_this;
}
void TestParsingMerge_OptionalGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_OptionalGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_OptionalGroup_descriptor_;
}

const TestParsingMerge_OptionalGroup& TestParsingMerge_OptionalGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge_OptionalGroup> TestParsingMerge_OptionalGroup_default_instance_;

TestParsingMerge_OptionalGroup* TestParsingMerge_OptionalGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge_OptionalGroup>(arena);
}

void TestParsingMerge_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (has_optional_group_all_types()) {
    if (optional_group_all_types_ != NULL) optional_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return false;
#undef DO_
}

void TestParsingMerge_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->optional_group_all_types_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

::google::protobuf::uint8* TestParsingMerge_OptionalGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->optional_group_all_types_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return target;
}

size_t TestParsingMerge_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optional_group_all_types_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_OptionalGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge_OptionalGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge_OptionalGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge.OptionalGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge.OptionalGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge_OptionalGroup::MergeFrom(const TestParsingMerge_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge_OptionalGroup::UnsafeMergeFrom(const TestParsingMerge_OptionalGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_group_all_types()) {
      mutable_optional_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.optional_group_all_types());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge_OptionalGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_OptionalGroup::CopyFrom(const TestParsingMerge_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge_OptionalGroup::IsInitialized() const {

  return true;
}

void TestParsingMerge_OptionalGroup::Swap(TestParsingMerge_OptionalGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge_OptionalGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge_OptionalGroup::UnsafeArenaSwap(TestParsingMerge_OptionalGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge_OptionalGroup::InternalSwap(TestParsingMerge_OptionalGroup* other) {
  std::swap(optional_group_all_types_, other->optional_group_all_types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParsingMerge_OptionalGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_OptionalGroup_descriptor_;
  metadata.reflection = TestParsingMerge_OptionalGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestParsingMerge_RepeatedGroup::_slow_mutable_repeated_group_all_types() {
  repeated_group_all_types_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::_slow_release_repeated_group_all_types() {
  if (repeated_group_all_types_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*repeated_group_all_types_);
    repeated_group_all_types_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::unsafe_arena_release_repeated_group_all_types() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  clear_has_repeated_group_all_types();
  ::protobuf_unittest::TestAllTypes* temp = repeated_group_all_types_;
  repeated_group_all_types_ = NULL;
  return temp;
}
void TestParsingMerge_RepeatedGroup::_slow_set_allocated_repeated_group_all_types(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** repeated_group_all_types) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*repeated_group_all_types) == NULL) {
      message_arena->Own(*repeated_group_all_types);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*repeated_group_all_types)) {
      ::protobuf_unittest::TestAllTypes* new_repeated_group_all_types = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_repeated_group_all_types->CopyFrom(**repeated_group_all_types);
      *repeated_group_all_types = new_repeated_group_all_types;
    }
}
void TestParsingMerge_RepeatedGroup::unsafe_arena_set_allocated_repeated_group_all_types(
    ::protobuf_unittest::TestAllTypes* repeated_group_all_types) {
  if (GetArenaNoVirtual() == NULL) {
    delete repeated_group_all_types_;
  }
  repeated_group_all_types_ = repeated_group_all_types;
  if (repeated_group_all_types) {
    set_has_repeated_group_all_types();
  } else {
    clear_has_repeated_group_all_types();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge_RepeatedGroup::kRepeatedGroupAllTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}
TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

void TestParsingMerge_RepeatedGroup::InitAsDefaultInstance() {
  repeated_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
}

TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(const TestParsingMerge_RepeatedGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

void TestParsingMerge_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  repeated_group_all_types_ = NULL;
}

TestParsingMerge_RepeatedGroup::~TestParsingMerge_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  SharedDtor();
}

void TestParsingMerge_RepeatedGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestParsingMerge_RepeatedGroup_default_instance_.get()) {
    delete repeated_group_all_types_;
  }
}

void TestParsingMerge_RepeatedGroup::ArenaDtor(void* object) {
  TestParsingMerge_RepeatedGroup* _this = reinterpret_cast< TestParsingMerge_RepeatedGroup* >(object);
  (void)_this;
}
void TestParsingMerge_RepeatedGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedGroup_descriptor_;
}

const TestParsingMerge_RepeatedGroup& TestParsingMerge_RepeatedGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge_RepeatedGroup> TestParsingMerge_RepeatedGroup_default_instance_;

TestParsingMerge_RepeatedGroup* TestParsingMerge_RepeatedGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge_RepeatedGroup>(arena);
}

void TestParsingMerge_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (has_repeated_group_all_types()) {
    if (repeated_group_all_types_ != NULL) repeated_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repeated_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->repeated_group_all_types_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->repeated_group_all_types_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return target;
}

size_t TestParsingMerge_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->repeated_group_all_types_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge_RepeatedGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge_RepeatedGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge.RepeatedGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge.RepeatedGroup)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedGroup::MergeFrom(const TestParsingMerge_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge_RepeatedGroup::UnsafeMergeFrom(const TestParsingMerge_RepeatedGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_repeated_group_all_types()) {
      mutable_repeated_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.repeated_group_all_types());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge_RepeatedGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedGroup::CopyFrom(const TestParsingMerge_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedGroup::Swap(TestParsingMerge_RepeatedGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge_RepeatedGroup temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge_RepeatedGroup::UnsafeArenaSwap(TestParsingMerge_RepeatedGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge_RepeatedGroup::InternalSwap(TestParsingMerge_RepeatedGroup* other) {
  std::swap(repeated_group_all_types_, other->repeated_group_all_types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedGroup_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void TestParsingMerge::_slow_mutable_required_all_types() {
  required_all_types_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::_slow_release_required_all_types() {
  if (required_all_types_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*required_all_types_);
    required_all_types_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::unsafe_arena_release_required_all_types() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.required_all_types)
  clear_has_required_all_types();
  ::protobuf_unittest::TestAllTypes* temp = required_all_types_;
  required_all_types_ = NULL;
  return temp;
}
void TestParsingMerge::_slow_set_allocated_required_all_types(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** required_all_types) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*required_all_types) == NULL) {
      message_arena->Own(*required_all_types);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*required_all_types)) {
      ::protobuf_unittest::TestAllTypes* new_required_all_types = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_required_all_types->CopyFrom(**required_all_types);
      *required_all_types = new_required_all_types;
    }
}
void TestParsingMerge::unsafe_arena_set_allocated_required_all_types(
    ::protobuf_unittest::TestAllTypes* required_all_types) {
  if (GetArenaNoVirtual() == NULL) {
    delete required_all_types_;
  }
  required_all_types_ = required_all_types;
  if (required_all_types) {
    set_has_required_all_types();
  } else {
    clear_has_required_all_types();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.required_all_types)
}
void TestParsingMerge::_slow_mutable_optional_all_types() {
  optional_all_types_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::_slow_release_optional_all_types() {
  if (optional_all_types_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestAllTypes* temp = new ::protobuf_unittest::TestAllTypes(*optional_all_types_);
    optional_all_types_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::unsafe_arena_release_optional_all_types() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.optional_all_types)
  clear_has_optional_all_types();
  ::protobuf_unittest::TestAllTypes* temp = optional_all_types_;
  optional_all_types_ = NULL;
  return temp;
}
void TestParsingMerge::_slow_set_allocated_optional_all_types(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestAllTypes** optional_all_types) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optional_all_types) == NULL) {
      message_arena->Own(*optional_all_types);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optional_all_types)) {
      ::protobuf_unittest::TestAllTypes* new_optional_all_types = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestAllTypes >(
            message_arena);
      new_optional_all_types->CopyFrom(**optional_all_types);
      *optional_all_types = new_optional_all_types;
    }
}
void TestParsingMerge::unsafe_arena_set_allocated_optional_all_types(
    ::protobuf_unittest::TestAllTypes* optional_all_types) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_all_types_;
  }
  optional_all_types_ = optional_all_types;
  if (optional_all_types) {
    set_has_optional_all_types();
  } else {
    clear_has_optional_all_types();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.optional_all_types)
}
void TestParsingMerge::_slow_mutable_optionalgroup() {
  optionalgroup_ = ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestParsingMerge_OptionalGroup >(
      GetArenaNoVirtual());
}
::protobuf_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::_slow_release_optionalgroup() {
  if (optionalgroup_ == NULL) {
    return NULL;
  } else {
    ::protobuf_unittest::TestParsingMerge_OptionalGroup* temp = new ::protobuf_unittest::TestParsingMerge_OptionalGroup(*optionalgroup_);
    optionalgroup_ = NULL;
    return temp;
  }
}
::protobuf_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::unsafe_arena_release_optionalgroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestParsingMerge.optionalgroup)
  clear_has_optionalgroup();
  ::protobuf_unittest::TestParsingMerge_OptionalGroup* temp = optionalgroup_;
  optionalgroup_ = NULL;
  return temp;
}
void TestParsingMerge::_slow_set_allocated_optionalgroup(
    ::google::protobuf::Arena* message_arena, ::protobuf_unittest::TestParsingMerge_OptionalGroup** optionalgroup) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*optionalgroup) == NULL) {
      message_arena->Own(*optionalgroup);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*optionalgroup)) {
      ::protobuf_unittest::TestParsingMerge_OptionalGroup* new_optionalgroup = 
            ::google::protobuf::Arena::CreateMessage< ::protobuf_unittest::TestParsingMerge_OptionalGroup >(
            message_arena);
      new_optionalgroup->CopyFrom(**optionalgroup);
      *optionalgroup = new_optionalgroup;
    }
}
void TestParsingMerge::unsafe_arena_set_allocated_optionalgroup(
    ::protobuf_unittest::TestParsingMerge_OptionalGroup* optionalgroup) {
  if (GetArenaNoVirtual() == NULL) {
    delete optionalgroup_;
  }
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestParsingMerge.optionalgroup)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge::kRequiredAllTypesFieldNumber;
const int TestParsingMerge::kOptionalAllTypesFieldNumber;
const int TestParsingMerge::kRepeatedAllTypesFieldNumber;
const int TestParsingMerge::kOptionalgroupFieldNumber;
const int TestParsingMerge::kRepeatedgroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge::kOptionalExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false >
  TestParsingMerge::optional_ext(kOptionalExtFieldNumber, *::protobuf_unittest::TestAllTypes::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMerge::kRepeatedExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false >
  TestParsingMerge::repeated_ext(kRepeatedExtFieldNumber, *::protobuf_unittest::TestAllTypes::internal_default_instance());
TestParsingMerge::TestParsingMerge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge)
}
TestParsingMerge::TestParsingMerge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena),
  repeated_all_types_(arena),
  repeatedgroup_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge)
}

void TestParsingMerge::InitAsDefaultInstance() {
  required_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
  optional_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(
      ::protobuf_unittest::TestAllTypes::internal_default_instance());
  optionalgroup_ = const_cast< ::protobuf_unittest::TestParsingMerge_OptionalGroup*>(
      ::protobuf_unittest::TestParsingMerge_OptionalGroup::internal_default_instance());
}

TestParsingMerge::TestParsingMerge(const TestParsingMerge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge)
}

void TestParsingMerge::SharedCtor() {
  _cached_size_ = 0;
  required_all_types_ = NULL;
  optional_all_types_ = NULL;
  optionalgroup_ = NULL;
}

TestParsingMerge::~TestParsingMerge() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge)
  SharedDtor();
}

void TestParsingMerge::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TestParsingMerge_default_instance_.get()) {
    delete required_all_types_;
    delete optional_all_types_;
    delete optionalgroup_;
  }
}

void TestParsingMerge::ArenaDtor(void* object) {
  TestParsingMerge* _this = reinterpret_cast< TestParsingMerge* >(object);
  (void)_this;
}
void TestParsingMerge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestParsingMerge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_descriptor_;
}

const TestParsingMerge& TestParsingMerge::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMerge> TestParsingMerge_default_instance_;

TestParsingMerge* TestParsingMerge::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestParsingMerge>(arena);
}

void TestParsingMerge::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge)
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 11u) {
    if (has_required_all_types()) {
      if (required_all_types_ != NULL) required_all_types_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_optional_all_types()) {
      if (optional_all_types_ != NULL) optional_all_types_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestParsingMerge_OptionalGroup::Clear();
    }
  }
  repeated_all_types_.Clear();
  repeatedgroup_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestParsingMerge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf_unittest.TestAllTypes required_all_types = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_required_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_optional_all_types;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
      case 2: {
        if (tag == 18) {
         parse_optional_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repeated_all_types;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
      case 3: {
        if (tag == 26) {
         parse_repeated_all_types:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_repeated_all_types;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(83)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 10 { ... };
      case 10: {
        if (tag == 83) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 20 { ... };
      case 20: {
        if (tag == 163) {
         parse_repeatedgroup:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                20, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_loop_repeatedgroup;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge)
  return false;
#undef DO_
}

void TestParsingMerge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge)
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (has_required_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->required_all_types_, output);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
  if (has_optional_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->optional_all_types_, output);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  for (unsigned int i = 0, n = this->repeated_all_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->repeated_all_types(i), output);
  }

  // optional group OptionalGroup = 10 { ... };
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, *this->optionalgroup_, output);
  }

  // repeated group RepeatedGroup = 20 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, this->repeatedgroup(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge)
}

::google::protobuf::uint8* TestParsingMerge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge)
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (has_required_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->required_all_types_, false, target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
  if (has_optional_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->optional_all_types_, false, target);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  for (unsigned int i = 0, n = this->repeated_all_types_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->repeated_all_types(i), false, target);
  }

  // optional group OptionalGroup = 10 { ... };
  if (has_optionalgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        10, *this->optionalgroup_, false, target);
  }

  // repeated group RepeatedGroup = 20 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        20, this->repeatedgroup(i), false, target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      1000, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge)
  return target;
}

size_t TestParsingMerge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge)
  size_t total_size = 0;

  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (has_required_all_types()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->required_all_types_);
  }
  if (_has_bits_[1 / 32] & 10u) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
    if (has_optional_all_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_all_types_);
    }

    // optional group OptionalGroup = 10 { ... };
    if (has_optionalgroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->optionalgroup_);
    }

  }
  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  {
    unsigned int count = this->repeated_all_types_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_all_types(i));
    }
  }

  // repeated group RepeatedGroup = 20 { ... };
  {
    unsigned int count = this->repeatedgroup_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->repeatedgroup(i));
    }
  }

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestParsingMerge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestParsingMerge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParsingMerge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestParsingMerge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestParsingMerge)
    UnsafeMergeFrom(*source);
  }
}

void TestParsingMerge::MergeFrom(const TestParsingMerge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMerge::UnsafeMergeFrom(const TestParsingMerge& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_all_types_.MergeFrom(from.repeated_all_types_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_all_types()) {
      mutable_required_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.required_all_types());
    }
    if (from.has_optional_all_types()) {
      mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.optional_all_types());
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestParsingMerge_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestParsingMerge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestParsingMerge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge::CopyFrom(const TestParsingMerge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMerge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestParsingMerge::Swap(TestParsingMerge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestParsingMerge temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestParsingMerge::UnsafeArenaSwap(TestParsingMerge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestParsingMerge::InternalSwap(TestParsingMerge* other) {
  std::swap(required_all_types_, other->required_all_types_);
  std::swap(optional_all_types_, other->optional_all_types_);
  repeated_all_types_.UnsafeArenaSwap(&other->repeated_all_types_);
  std::swap(optionalgroup_, other->optionalgroup_);
  repeatedgroup_.UnsafeArenaSwap(&other->repeatedgroup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestParsingMerge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_descriptor_;
  metadata.reflection = TestParsingMerge_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestParsingMerge_RepeatedFieldsGenerator_Group1

// optional .protobuf_unittest.TestAllTypes field1 = 11;
bool TestParsingMerge_RepeatedFieldsGenerator_Group1::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::clear_field1() {
  if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_field1();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group1::field1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  return field1_ != NULL ? *field1_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::mutable_field1() {
  set_has_field1();
  if (field1_ == NULL) {
    _slow_mutable_field1();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  return field1_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::release_field1() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  clear_has_field1();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_field1();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = field1_;
    field1_ = NULL;
    return temp;
  }
}
 void TestParsingMerge_RepeatedFieldsGenerator_Group1::set_allocated_field1(::protobuf_unittest::TestAllTypes* field1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete field1_;
  }
  if (field1 != NULL) {
    _slow_set_allocated_field1(message_arena, &field1);
  }
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
}

inline const TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator_Group1::internal_default_instance() {
  return &TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMerge_RepeatedFieldsGenerator_Group2

// optional .protobuf_unittest.TestAllTypes field1 = 21;
bool TestParsingMerge_RepeatedFieldsGenerator_Group2::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::clear_field1() {
  if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_field1();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group2::field1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  return field1_ != NULL ? *field1_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::mutable_field1() {
  set_has_field1();
  if (field1_ == NULL) {
    _slow_mutable_field1();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  return field1_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::release_field1() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  clear_has_field1();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_field1();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = field1_;
    field1_ = NULL;
    return temp;
  }
}
 void TestParsingMerge_RepeatedFieldsGenerator_Group2::set_allocated_field1(::protobuf_unittest::TestAllTypes* field1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete field1_;
  }
  if (field1 != NULL) {
    _slow_set_allocated_field1(message_arena, &field1);
  }
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
}

inline const TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator_Group2::internal_default_instance() {
  return &TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMerge_RepeatedFieldsGenerator

// repeated .protobuf_unittest.TestAllTypes field1 = 1;
int TestParsingMerge_RepeatedFieldsGenerator::field1_size() const {
  return field1_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_field1() {
  field1_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return field1_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return field1_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return field1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_field1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return &field1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge_RepeatedFieldsGenerator::field1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return field1_;
}

// repeated .protobuf_unittest.TestAllTypes field2 = 2;
int TestParsingMerge_RepeatedFieldsGenerator::field2_size() const {
  return field2_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_field2() {
  field2_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return field2_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return field2_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return field2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_field2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return &field2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge_RepeatedFieldsGenerator::field2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return field2_;
}

// repeated .protobuf_unittest.TestAllTypes field3 = 3;
int TestParsingMerge_RepeatedFieldsGenerator::field3_size() const {
  return field3_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_field3() {
  field3_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field3(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return field3_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field3(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return field3_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field3() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return field3_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_field3() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return &field3_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge_RepeatedFieldsGenerator::field3() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return field3_;
}

// repeated group Group1 = 10 { ... };
int TestParsingMerge_RepeatedFieldsGenerator::group1_size() const {
  return group1_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_group1() {
  group1_.Clear();
}
const ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1& TestParsingMerge_RepeatedFieldsGenerator::group1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return group1_.Get(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator::mutable_group1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return group1_.Mutable(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator::add_group1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return group1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1 >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_group1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return &group1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1 >&
TestParsingMerge_RepeatedFieldsGenerator::group1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return group1_;
}

// repeated group Group2 = 20 { ... };
int TestParsingMerge_RepeatedFieldsGenerator::group2_size() const {
  return group2_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_group2() {
  group2_.Clear();
}
const ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2& TestParsingMerge_RepeatedFieldsGenerator::group2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return group2_.Get(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator::mutable_group2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return group2_.Mutable(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator::add_group2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return group2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2 >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_group2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return &group2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2 >&
TestParsingMerge_RepeatedFieldsGenerator::group2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return group2_;
}

// repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
int TestParsingMerge_RepeatedFieldsGenerator::ext1_size() const {
  return ext1_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_ext1() {
  ext1_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::ext1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return ext1_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return ext1_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_ext1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return ext1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_ext1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return &ext1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge_RepeatedFieldsGenerator::ext1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return ext1_;
}

// repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
int TestParsingMerge_RepeatedFieldsGenerator::ext2_size() const {
  return ext2_.size();
}
void TestParsingMerge_RepeatedFieldsGenerator::clear_ext2() {
  ext2_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::ext2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return ext2_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return ext2_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_ext2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return ext2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge_RepeatedFieldsGenerator::mutable_ext2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return &ext2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge_RepeatedFieldsGenerator::ext2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return ext2_;
}

inline const TestParsingMerge_RepeatedFieldsGenerator* TestParsingMerge_RepeatedFieldsGenerator::internal_default_instance() {
  return &TestParsingMerge_RepeatedFieldsGenerator_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMerge_OptionalGroup

// optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
bool TestParsingMerge_OptionalGroup::has_optional_group_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMerge_OptionalGroup::set_has_optional_group_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMerge_OptionalGroup::clear_has_optional_group_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMerge_OptionalGroup::clear_optional_group_all_types() {
  if (optional_group_all_types_ != NULL) optional_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_optional_group_all_types();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_OptionalGroup::optional_group_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  return optional_group_all_types_ != NULL ? *optional_group_all_types_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::mutable_optional_group_all_types() {
  set_has_optional_group_all_types();
  if (optional_group_all_types_ == NULL) {
    _slow_mutable_optional_group_all_types();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  return optional_group_all_types_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::release_optional_group_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  clear_has_optional_group_all_types();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_group_all_types();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = optional_group_all_types_;
    optional_group_all_types_ = NULL;
    return temp;
  }
}
 void TestParsingMerge_OptionalGroup::set_allocated_optional_group_all_types(::protobuf_unittest::TestAllTypes* optional_group_all_types) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_group_all_types_;
  }
  if (optional_group_all_types != NULL) {
    _slow_set_allocated_optional_group_all_types(message_arena, &optional_group_all_types);
  }
  optional_group_all_types_ = optional_group_all_types;
  if (optional_group_all_types) {
    set_has_optional_group_all_types();
  } else {
    clear_has_optional_group_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
}

inline const TestParsingMerge_OptionalGroup* TestParsingMerge_OptionalGroup::internal_default_instance() {
  return &TestParsingMerge_OptionalGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMerge_RepeatedGroup

// optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
bool TestParsingMerge_RepeatedGroup::has_repeated_group_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMerge_RepeatedGroup::set_has_repeated_group_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMerge_RepeatedGroup::clear_has_repeated_group_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMerge_RepeatedGroup::clear_repeated_group_all_types() {
  if (repeated_group_all_types_ != NULL) repeated_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_repeated_group_all_types();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedGroup::repeated_group_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  return repeated_group_all_types_ != NULL ? *repeated_group_all_types_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::mutable_repeated_group_all_types() {
  set_has_repeated_group_all_types();
  if (repeated_group_all_types_ == NULL) {
    _slow_mutable_repeated_group_all_types();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  return repeated_group_all_types_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::release_repeated_group_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  clear_has_repeated_group_all_types();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_repeated_group_all_types();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = repeated_group_all_types_;
    repeated_group_all_types_ = NULL;
    return temp;
  }
}
 void TestParsingMerge_RepeatedGroup::set_allocated_repeated_group_all_types(::protobuf_unittest::TestAllTypes* repeated_group_all_types) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete repeated_group_all_types_;
  }
  if (repeated_group_all_types != NULL) {
    _slow_set_allocated_repeated_group_all_types(message_arena, &repeated_group_all_types);
  }
  repeated_group_all_types_ = repeated_group_all_types;
  if (repeated_group_all_types) {
    set_has_repeated_group_all_types();
  } else {
    clear_has_repeated_group_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
}

inline const TestParsingMerge_RepeatedGroup* TestParsingMerge_RepeatedGroup::internal_default_instance() {
  return &TestParsingMerge_RepeatedGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMerge

// required .protobuf_unittest.TestAllTypes required_all_types = 1;
bool TestParsingMerge::has_required_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMerge::set_has_required_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMerge::clear_has_required_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMerge::clear_required_all_types() {
  if (required_all_types_ != NULL) required_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_required_all_types();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge::required_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.required_all_types)
  return required_all_types_ != NULL ? *required_all_types_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::mutable_required_all_types() {
  set_has_required_all_types();
  if (required_all_types_ == NULL) {
    _slow_mutable_required_all_types();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.required_all_types)
  return required_all_types_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::release_required_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.required_all_types)
  clear_has_required_all_types();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_required_all_types();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = required_all_types_;
    required_all_types_ = NULL;
    return temp;
  }
}
 void TestParsingMerge::set_allocated_required_all_types(::protobuf_unittest::TestAllTypes* required_all_types) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete required_all_types_;
  }
  if (required_all_types != NULL) {
    _slow_set_allocated_required_all_types(message_arena, &required_all_types);
  }
  required_all_types_ = required_all_types;
  if (required_all_types) {
    set_has_required_all_types();
  } else {
    clear_has_required_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.required_all_types)
}

// optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
bool TestParsingMerge::has_optional_all_types() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestParsingMerge::set_has_optional_all_types() {
  _has_bits_[0] |= 0x00000002u;
}
void TestParsingMerge::clear_has_optional_all_types() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestParsingMerge::clear_optional_all_types() {
  if (optional_all_types_ != NULL) optional_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  clear_has_optional_all_types();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge::optional_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.optional_all_types)
  return optional_all_types_ != NULL ? *optional_all_types_
                         : *::protobuf_unittest::TestAllTypes::internal_default_instance();
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::mutable_optional_all_types() {
  set_has_optional_all_types();
  if (optional_all_types_ == NULL) {
    _slow_mutable_optional_all_types();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.optional_all_types)
  return optional_all_types_;
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::release_optional_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.optional_all_types)
  clear_has_optional_all_types();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optional_all_types();
  } else {
    ::protobuf_unittest::TestAllTypes* temp = optional_all_types_;
    optional_all_types_ = NULL;
    return temp;
  }
}
 void TestParsingMerge::set_allocated_optional_all_types(::protobuf_unittest::TestAllTypes* optional_all_types) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_all_types_;
  }
  if (optional_all_types != NULL) {
    _slow_set_allocated_optional_all_types(message_arena, &optional_all_types);
  }
  optional_all_types_ = optional_all_types;
  if (optional_all_types) {
    set_has_optional_all_types();
  } else {
    clear_has_optional_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.optional_all_types)
}

// repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
int TestParsingMerge::repeated_all_types_size() const {
  return repeated_all_types_.size();
}
void TestParsingMerge::clear_repeated_all_types() {
  repeated_all_types_.Clear();
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge::repeated_all_types(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.repeated_all_types)
  return repeated_all_types_.Get(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::mutable_repeated_all_types(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.repeated_all_types)
  return repeated_all_types_.Mutable(index);
}
::protobuf_unittest::TestAllTypes* TestParsingMerge::add_repeated_all_types() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.repeated_all_types)
  return repeated_all_types_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >*
TestParsingMerge::mutable_repeated_all_types() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.repeated_all_types)
  return &repeated_all_types_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypes >&
TestParsingMerge::repeated_all_types() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.repeated_all_types)
  return repeated_all_types_;
}

// optional group OptionalGroup = 10 { ... };
bool TestParsingMerge::has_optionalgroup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestParsingMerge::set_has_optionalgroup() {
  _has_bits_[0] |= 0x00000008u;
}
void TestParsingMerge::clear_has_optionalgroup() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestParsingMerge::clear_optionalgroup() {
  if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestParsingMerge_OptionalGroup::Clear();
  clear_has_optionalgroup();
}
const ::protobuf_unittest::TestParsingMerge_OptionalGroup& TestParsingMerge::optionalgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.optionalgroup)
  return optionalgroup_ != NULL ? *optionalgroup_
                         : *::protobuf_unittest::TestParsingMerge_OptionalGroup::internal_default_instance();
}
::protobuf_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::mutable_optionalgroup() {
  set_has_optionalgroup();
  if (optionalgroup_ == NULL) {
    _slow_mutable_optionalgroup();
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.optionalgroup)
  return optionalgroup_;
}
::protobuf_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::release_optionalgroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMerge.optionalgroup)
  clear_has_optionalgroup();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_optionalgroup();
  } else {
    ::protobuf_unittest::TestParsingMerge_OptionalGroup* temp = optionalgroup_;
    optionalgroup_ = NULL;
    return temp;
  }
}
 void TestParsingMerge::set_allocated_optionalgroup(::protobuf_unittest::TestParsingMerge_OptionalGroup* optionalgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optionalgroup_;
  }
  if (optionalgroup != NULL) {
    _slow_set_allocated_optionalgroup(message_arena, &optionalgroup);
  }
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMerge.optionalgroup)
}

// repeated group RepeatedGroup = 20 { ... };
int TestParsingMerge::repeatedgroup_size() const {
  return repeatedgroup_.size();
}
void TestParsingMerge::clear_repeatedgroup() {
  repeatedgroup_.Clear();
}
const ::protobuf_unittest::TestParsingMerge_RepeatedGroup& TestParsingMerge::repeatedgroup(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMerge.repeatedgroup)
  return repeatedgroup_.Get(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedGroup* TestParsingMerge::mutable_repeatedgroup(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMerge.repeatedgroup)
  return repeatedgroup_.Mutable(index);
}
::protobuf_unittest::TestParsingMerge_RepeatedGroup* TestParsingMerge::add_repeatedgroup() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMerge.repeatedgroup)
  return repeatedgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedGroup >*
TestParsingMerge::mutable_repeatedgroup() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMerge.repeatedgroup)
  return &repeatedgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMerge_RepeatedGroup >&
TestParsingMerge::repeatedgroup() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMerge.repeatedgroup)
  return repeatedgroup_;
}

inline const TestParsingMerge* TestParsingMerge::internal_default_instance() {
  return &TestParsingMerge_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::std::string* TestCommentInjectionMessage::_default_a_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCommentInjectionMessage::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCommentInjectionMessage::TestCommentInjectionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestCommentInjectionMessage)
}
TestCommentInjectionMessage::TestCommentInjectionMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestCommentInjectionMessage)
}

void TestCommentInjectionMessage::InitAsDefaultInstance() {
}

TestCommentInjectionMessage::TestCommentInjectionMessage(const TestCommentInjectionMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCommentInjectionMessage)
}

void TestCommentInjectionMessage::SharedCtor() {
  _cached_size_ = 0;
  a_.UnsafeSetDefault(_default_a_);
}

TestCommentInjectionMessage::~TestCommentInjectionMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCommentInjectionMessage)
  SharedDtor();
}

void TestCommentInjectionMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  a_.Destroy(_default_a_, arena);
}

void TestCommentInjectionMessage::ArenaDtor(void* object) {
  TestCommentInjectionMessage* _this = reinterpret_cast< TestCommentInjectionMessage* >(object);
  (void)_this;
}
void TestCommentInjectionMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestCommentInjectionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestCommentInjectionMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestCommentInjectionMessage_descriptor_;
}

const TestCommentInjectionMessage& TestCommentInjectionMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestCommentInjectionMessage> TestCommentInjectionMessage_default_instance_;

TestCommentInjectionMessage* TestCommentInjectionMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestCommentInjectionMessage>(arena);
}

void TestCommentInjectionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestCommentInjectionMessage)
  if (has_a()) {
    a_.ClearToDefault(_default_a_, GetArenaNoVirtual());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestCommentInjectionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestCommentInjectionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string a = 1 [default = "*/ <- Neither should this."];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_unittest.TestCommentInjectionMessage.a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestCommentInjectionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestCommentInjectionMessage)
  return false;
#undef DO_
}

void TestCommentInjectionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestCommentInjectionMessage)
  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCommentInjectionMessage.a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestCommentInjectionMessage)
}

::google::protobuf::uint8* TestCommentInjectionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCommentInjectionMessage)
  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestCommentInjectionMessage.a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCommentInjectionMessage)
  return target;
}

size_t TestCommentInjectionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestCommentInjectionMessage)
  size_t total_size = 0;

  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestCommentInjectionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestCommentInjectionMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestCommentInjectionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestCommentInjectionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestCommentInjectionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestCommentInjectionMessage)
    UnsafeMergeFrom(*source);
  }
}

void TestCommentInjectionMessage::MergeFrom(const TestCommentInjectionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestCommentInjectionMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestCommentInjectionMessage::UnsafeMergeFrom(const TestCommentInjectionMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestCommentInjectionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestCommentInjectionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCommentInjectionMessage::CopyFrom(const TestCommentInjectionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestCommentInjectionMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestCommentInjectionMessage::IsInitialized() const {

  return true;
}

void TestCommentInjectionMessage::Swap(TestCommentInjectionMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestCommentInjectionMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestCommentInjectionMessage::UnsafeArenaSwap(TestCommentInjectionMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestCommentInjectionMessage::InternalSwap(TestCommentInjectionMessage* other) {
  a_.Swap(&other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestCommentInjectionMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestCommentInjectionMessage_descriptor_;
  metadata.reflection = TestCommentInjectionMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestCommentInjectionMessage

// optional string a = 1 [default = "*/ <- Neither should this."];
bool TestCommentInjectionMessage::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestCommentInjectionMessage::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestCommentInjectionMessage::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestCommentInjectionMessage::clear_a() {
  a_.ClearToDefault(_default_a_, GetArenaNoVirtual());
  clear_has_a();
}
const ::std::string& TestCommentInjectionMessage::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCommentInjectionMessage.a)
  return a_.Get(_default_a_);
}
void TestCommentInjectionMessage::set_a(const ::std::string& value) {
  set_has_a();
  a_.Set(_default_a_, value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCommentInjectionMessage.a)
}
void TestCommentInjectionMessage::set_a(const char* value) {
  set_has_a();
  a_.Set(_default_a_, ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestCommentInjectionMessage.a)
}
void TestCommentInjectionMessage::set_a(const char* value,
    size_t size) {
  set_has_a();
  a_.Set(_default_a_, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestCommentInjectionMessage.a)
}
::std::string* TestCommentInjectionMessage::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCommentInjectionMessage.a)
  return a_.Mutable(_default_a_, GetArenaNoVirtual());
}
::std::string* TestCommentInjectionMessage::release_a() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCommentInjectionMessage.a)
  clear_has_a();
  return a_.Release(_default_a_, GetArenaNoVirtual());
}
::std::string* TestCommentInjectionMessage::unsafe_arena_release_a() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestCommentInjectionMessage.a)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_a();
  return a_.UnsafeArenaRelease(_default_a_,
      GetArenaNoVirtual());
}
void TestCommentInjectionMessage::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocated(_default_a_, a,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCommentInjectionMessage.a)
}
void TestCommentInjectionMessage::unsafe_arena_set_allocated_a(
    ::std::string* a) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.UnsafeArenaSetAllocated(_default_a_,
      a, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestCommentInjectionMessage.a)
}

inline const TestCommentInjectionMessage* TestCommentInjectionMessage::internal_default_instance() {
  return &TestCommentInjectionMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FooRequest::FooRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooRequest)
}
FooRequest::FooRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooRequest)
}

void FooRequest::InitAsDefaultInstance() {
}

FooRequest::FooRequest(const FooRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooRequest)
}

void FooRequest::SharedCtor() {
  _cached_size_ = 0;
}

FooRequest::~FooRequest() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooRequest)
  SharedDtor();
}

void FooRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void FooRequest::ArenaDtor(void* object) {
  FooRequest* _this = reinterpret_cast< FooRequest* >(object);
  (void)_this;
}
void FooRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FooRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooRequest_descriptor_;
}

const FooRequest& FooRequest::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FooRequest> FooRequest_default_instance_;

FooRequest* FooRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FooRequest>(arena);
}

void FooRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.FooRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FooRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooRequest)
  return false;
#undef DO_
}

void FooRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooRequest)
}

::google::protobuf::uint8* FooRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooRequest)
  return target;
}

size_t FooRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.FooRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.FooRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FooRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FooRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.FooRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.FooRequest)
    UnsafeMergeFrom(*source);
  }
}

void FooRequest::MergeFrom(const FooRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.FooRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FooRequest::UnsafeMergeFrom(const FooRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FooRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.FooRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooRequest::CopyFrom(const FooRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.FooRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FooRequest::IsInitialized() const {

  return true;
}

void FooRequest::Swap(FooRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FooRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FooRequest::UnsafeArenaSwap(FooRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FooRequest::InternalSwap(FooRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FooRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooRequest_descriptor_;
  metadata.reflection = FooRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FooRequest

inline const FooRequest* FooRequest::internal_default_instance() {
  return &FooRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FooResponse::FooResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooResponse)
}
FooResponse::FooResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooResponse)
}

void FooResponse::InitAsDefaultInstance() {
}

FooResponse::FooResponse(const FooResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooResponse)
}

void FooResponse::SharedCtor() {
  _cached_size_ = 0;
}

FooResponse::~FooResponse() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooResponse)
  SharedDtor();
}

void FooResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void FooResponse::ArenaDtor(void* object) {
  FooResponse* _this = reinterpret_cast< FooResponse* >(object);
  (void)_this;
}
void FooResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FooResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooResponse_descriptor_;
}

const FooResponse& FooResponse::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FooResponse> FooResponse_default_instance_;

FooResponse* FooResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FooResponse>(arena);
}

void FooResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.FooResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FooResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooResponse)
  return false;
#undef DO_
}

void FooResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooResponse)
}

::google::protobuf::uint8* FooResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooResponse)
  return target;
}

size_t FooResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.FooResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.FooResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FooResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FooResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.FooResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.FooResponse)
    UnsafeMergeFrom(*source);
  }
}

void FooResponse::MergeFrom(const FooResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.FooResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FooResponse::UnsafeMergeFrom(const FooResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FooResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.FooResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooResponse::CopyFrom(const FooResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.FooResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FooResponse::IsInitialized() const {

  return true;
}

void FooResponse::Swap(FooResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FooResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FooResponse::UnsafeArenaSwap(FooResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FooResponse::InternalSwap(FooResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FooResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooResponse_descriptor_;
  metadata.reflection = FooResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FooResponse

inline const FooResponse* FooResponse::internal_default_instance() {
  return &FooResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FooClientMessage::FooClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooClientMessage)
}
FooClientMessage::FooClientMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooClientMessage)
}

void FooClientMessage::InitAsDefaultInstance() {
}

FooClientMessage::FooClientMessage(const FooClientMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooClientMessage)
}

void FooClientMessage::SharedCtor() {
  _cached_size_ = 0;
}

FooClientMessage::~FooClientMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooClientMessage)
  SharedDtor();
}

void FooClientMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void FooClientMessage::ArenaDtor(void* object) {
  FooClientMessage* _this = reinterpret_cast< FooClientMessage* >(object);
  (void)_this;
}
void FooClientMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FooClientMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooClientMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooClientMessage_descriptor_;
}

const FooClientMessage& FooClientMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FooClientMessage> FooClientMessage_default_instance_;

FooClientMessage* FooClientMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FooClientMessage>(arena);
}

void FooClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.FooClientMessage)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FooClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooClientMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooClientMessage)
  return false;
#undef DO_
}

void FooClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooClientMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooClientMessage)
}

::google::protobuf::uint8* FooClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooClientMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooClientMessage)
  return target;
}

size_t FooClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.FooClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.FooClientMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FooClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FooClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.FooClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.FooClientMessage)
    UnsafeMergeFrom(*source);
  }
}

void FooClientMessage::MergeFrom(const FooClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.FooClientMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FooClientMessage::UnsafeMergeFrom(const FooClientMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FooClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.FooClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooClientMessage::CopyFrom(const FooClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.FooClientMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FooClientMessage::IsInitialized() const {

  return true;
}

void FooClientMessage::Swap(FooClientMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FooClientMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FooClientMessage::UnsafeArenaSwap(FooClientMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FooClientMessage::InternalSwap(FooClientMessage* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FooClientMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooClientMessage_descriptor_;
  metadata.reflection = FooClientMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FooClientMessage

inline const FooClientMessage* FooClientMessage::internal_default_instance() {
  return &FooClientMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FooServerMessage::FooServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooServerMessage)
}
FooServerMessage::FooServerMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooServerMessage)
}

void FooServerMessage::InitAsDefaultInstance() {
}

FooServerMessage::FooServerMessage(const FooServerMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooServerMessage)
}

void FooServerMessage::SharedCtor() {
  _cached_size_ = 0;
}

FooServerMessage::~FooServerMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooServerMessage)
  SharedDtor();
}

void FooServerMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void FooServerMessage::ArenaDtor(void* object) {
  FooServerMessage* _this = reinterpret_cast< FooServerMessage* >(object);
  (void)_this;
}
void FooServerMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FooServerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooServerMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooServerMessage_descriptor_;
}

const FooServerMessage& FooServerMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FooServerMessage> FooServerMessage_default_instance_;

FooServerMessage* FooServerMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FooServerMessage>(arena);
}

void FooServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.FooServerMessage)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FooServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooServerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooServerMessage)
  return false;
#undef DO_
}

void FooServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooServerMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooServerMessage)
}

::google::protobuf::uint8* FooServerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooServerMessage)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooServerMessage)
  return target;
}

size_t FooServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.FooServerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.FooServerMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FooServerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FooServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.FooServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.FooServerMessage)
    UnsafeMergeFrom(*source);
  }
}

void FooServerMessage::MergeFrom(const FooServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.FooServerMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FooServerMessage::UnsafeMergeFrom(const FooServerMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FooServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.FooServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooServerMessage::CopyFrom(const FooServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.FooServerMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FooServerMessage::IsInitialized() const {

  return true;
}

void FooServerMessage::Swap(FooServerMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FooServerMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FooServerMessage::UnsafeArenaSwap(FooServerMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FooServerMessage::InternalSwap(FooServerMessage* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FooServerMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooServerMessage_descriptor_;
  metadata.reflection = FooServerMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FooServerMessage

inline const FooServerMessage* FooServerMessage::internal_default_instance() {
  return &FooServerMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarRequest::BarRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BarRequest)
}
BarRequest::BarRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BarRequest)
}

void BarRequest::InitAsDefaultInstance() {
}

BarRequest::BarRequest(const BarRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarRequest)
}

void BarRequest::SharedCtor() {
  _cached_size_ = 0;
}

BarRequest::~BarRequest() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BarRequest)
  SharedDtor();
}

void BarRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void BarRequest::ArenaDtor(void* object) {
  BarRequest* _this = reinterpret_cast< BarRequest* >(object);
  (void)_this;
}
void BarRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BarRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BarRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BarRequest_descriptor_;
}

const BarRequest& BarRequest::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BarRequest> BarRequest_default_instance_;

BarRequest* BarRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BarRequest>(arena);
}

void BarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BarRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BarRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BarRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BarRequest)
  return false;
#undef DO_
}

void BarRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BarRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BarRequest)
}

::google::protobuf::uint8* BarRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BarRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BarRequest)
  return target;
}

size_t BarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BarRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BarRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.BarRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BarRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BarRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.BarRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.BarRequest)
    UnsafeMergeFrom(*source);
  }
}

void BarRequest::MergeFrom(const BarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BarRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BarRequest::UnsafeMergeFrom(const BarRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BarRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.BarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarRequest::CopyFrom(const BarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BarRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BarRequest::IsInitialized() const {

  return true;
}

void BarRequest::Swap(BarRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BarRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void BarRequest::UnsafeArenaSwap(BarRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BarRequest::InternalSwap(BarRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BarRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BarRequest_descriptor_;
  metadata.reflection = BarRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BarRequest

inline const BarRequest* BarRequest::internal_default_instance() {
  return &BarRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarResponse::BarResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BarResponse)
}
BarResponse::BarResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BarResponse)
}

void BarResponse::InitAsDefaultInstance() {
}

BarResponse::BarResponse(const BarResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarResponse)
}

void BarResponse::SharedCtor() {
  _cached_size_ = 0;
}

BarResponse::~BarResponse() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BarResponse)
  SharedDtor();
}

void BarResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void BarResponse::ArenaDtor(void* object) {
  BarResponse* _this = reinterpret_cast< BarResponse* >(object);
  (void)_this;
}
void BarResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BarResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BarResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BarResponse_descriptor_;
}

const BarResponse& BarResponse::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BarResponse> BarResponse_default_instance_;

BarResponse* BarResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BarResponse>(arena);
}

void BarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BarResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BarResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BarResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BarResponse)
  return false;
#undef DO_
}

void BarResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BarResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BarResponse)
}

::google::protobuf::uint8* BarResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BarResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BarResponse)
  return target;
}

size_t BarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BarResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BarResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.BarResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BarResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BarResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.BarResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.BarResponse)
    UnsafeMergeFrom(*source);
  }
}

void BarResponse::MergeFrom(const BarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BarResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BarResponse::UnsafeMergeFrom(const BarResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BarResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.BarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarResponse::CopyFrom(const BarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BarResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BarResponse::IsInitialized() const {

  return true;
}

void BarResponse::Swap(BarResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BarResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void BarResponse::UnsafeArenaSwap(BarResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BarResponse::InternalSwap(BarResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BarResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BarResponse_descriptor_;
  metadata.reflection = BarResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BarResponse

inline const BarResponse* BarResponse::internal_default_instance() {
  return &BarResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestJsonName::kFieldName1FieldNumber;
const int TestJsonName::kFieldName2FieldNumber;
const int TestJsonName::kFieldName3FieldNumber;
const int TestJsonName::kFieldName4FieldNumber;
const int TestJsonName::kFIELDNAME5FieldNumber;
const int TestJsonName::kFieldName6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestJsonName::TestJsonName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestJsonName)
}
TestJsonName::TestJsonName(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestJsonName)
}

void TestJsonName::InitAsDefaultInstance() {
}

TestJsonName::TestJsonName(const TestJsonName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestJsonName)
}

void TestJsonName::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&field_name1_, 0, reinterpret_cast<char*>(&field_name6_) -
    reinterpret_cast<char*>(&field_name1_) + sizeof(field_name6_));
}

TestJsonName::~TestJsonName() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestJsonName)
  SharedDtor();
}

void TestJsonName::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TestJsonName::ArenaDtor(void* object) {
  TestJsonName* _this = reinterpret_cast< TestJsonName* >(object);
  (void)_this;
}
void TestJsonName::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TestJsonName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestJsonName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestJsonName_descriptor_;
}

const TestJsonName& TestJsonName::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestJsonName> TestJsonName_default_instance_;

TestJsonName* TestJsonName::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TestJsonName>(arena);
}

void TestJsonName::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestJsonName)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestJsonName, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestJsonName*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(field_name1_, field_name6_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestJsonName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestJsonName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 field_name1 = 1;
      case 1: {
        if (tag == 8) {
          set_has_field_name1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fieldName2;
        break;
      }

      // optional int32 fieldName2 = 2;
      case 2: {
        if (tag == 16) {
         parse_fieldName2:
          set_has_fieldname2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FieldName3;
        break;
      }

      // optional int32 FieldName3 = 3;
      case 3: {
        if (tag == 24) {
         parse_FieldName3:
          set_has_fieldname3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname3_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__field_name4;
        break;
      }

      // optional int32 _field_name4 = 4;
      case 4: {
        if (tag == 32) {
         parse__field_name4:
          set_has__field_name4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_field_name4_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_FIELD_NAME5;
        break;
      }

      // optional int32 FIELD_NAME5 = 5;
      case 5: {
        if (tag == 40) {
         parse_FIELD_NAME5:
          set_has_field_name5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name5_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_field_name6;
        break;
      }

      // optional int32 field_name6 = 6[json_name = "@type"];
      case 6: {
        if (tag == 48) {
         parse_field_name6:
          set_has_field_name6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name6_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestJsonName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestJsonName)
  return false;
#undef DO_
}

void TestJsonName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestJsonName)
  // optional int32 field_name1 = 1;
  if (has_field_name1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->field_name1(), output);
  }

  // optional int32 fieldName2 = 2;
  if (has_fieldname2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fieldname2(), output);
  }

  // optional int32 FieldName3 = 3;
  if (has_fieldname3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fieldname3(), output);
  }

  // optional int32 _field_name4 = 4;
  if (has__field_name4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_field_name4(), output);
  }

  // optional int32 FIELD_NAME5 = 5;
  if (has_field_name5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->field_name5(), output);
  }

  // optional int32 field_name6 = 6[json_name = "@type"];
  if (has_field_name6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->field_name6(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestJsonName)
}

::google::protobuf::uint8* TestJsonName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestJsonName)
  // optional int32 field_name1 = 1;
  if (has_field_name1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->field_name1(), target);
  }

  // optional int32 fieldName2 = 2;
  if (has_fieldname2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fieldname2(), target);
  }

  // optional int32 FieldName3 = 3;
  if (has_fieldname3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fieldname3(), target);
  }

  // optional int32 _field_name4 = 4;
  if (has__field_name4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_field_name4(), target);
  }

  // optional int32 FIELD_NAME5 = 5;
  if (has_field_name5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->field_name5(), target);
  }

  // optional int32 field_name6 = 6[json_name = "@type"];
  if (has_field_name6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->field_name6(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestJsonName)
  return target;
}

size_t TestJsonName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestJsonName)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 field_name1 = 1;
    if (has_field_name1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name1());
    }

    // optional int32 fieldName2 = 2;
    if (has_fieldname2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fieldname2());
    }

    // optional int32 FieldName3 = 3;
    if (has_fieldname3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fieldname3());
    }

    // optional int32 _field_name4 = 4;
    if (has__field_name4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_field_name4());
    }

    // optional int32 FIELD_NAME5 = 5;
    if (has_field_name5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name5());
    }

    // optional int32 field_name6 = 6[json_name = "@type"];
    if (has_field_name6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name6());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestJsonName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestJsonName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestJsonName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestJsonName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestJsonName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestJsonName)
    UnsafeMergeFrom(*source);
  }
}

void TestJsonName::MergeFrom(const TestJsonName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestJsonName)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestJsonName::UnsafeMergeFrom(const TestJsonName& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field_name1()) {
      set_field_name1(from.field_name1());
    }
    if (from.has_fieldname2()) {
      set_fieldname2(from.fieldname2());
    }
    if (from.has_fieldname3()) {
      set_fieldname3(from.fieldname3());
    }
    if (from.has__field_name4()) {
      set__field_name4(from._field_name4());
    }
    if (from.has_field_name5()) {
      set_field_name5(from.field_name5());
    }
    if (from.has_field_name6()) {
      set_field_name6(from.field_name6());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TestJsonName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestJsonName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestJsonName::CopyFrom(const TestJsonName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestJsonName)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestJsonName::IsInitialized() const {

  return true;
}

void TestJsonName::Swap(TestJsonName* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestJsonName temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TestJsonName::UnsafeArenaSwap(TestJsonName* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestJsonName::InternalSwap(TestJsonName* other) {
  std::swap(field_name1_, other->field_name1_);
  std::swap(fieldname2_, other->fieldname2_);
  std::swap(fieldname3_, other->fieldname3_);
  std::swap(_field_name4_, other->_field_name4_);
  std::swap(field_name5_, other->field_name5_);
  std::swap(field_name6_, other->field_name6_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestJsonName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestJsonName_descriptor_;
  metadata.reflection = TestJsonName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestJsonName

// optional int32 field_name1 = 1;
bool TestJsonName::has_field_name1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestJsonName::set_has_field_name1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestJsonName::clear_has_field_name1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestJsonName::clear_field_name1() {
  field_name1_ = 0;
  clear_has_field_name1();
}
::google::protobuf::int32 TestJsonName::field_name1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName.field_name1)
  return field_name1_;
}
void TestJsonName::set_field_name1(::google::protobuf::int32 value) {
  set_has_field_name1();
  field_name1_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName.field_name1)
}

// optional int32 fieldName2 = 2;
bool TestJsonName::has_fieldname2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestJsonName::set_has_fieldname2() {
  _has_bits_[0] |= 0x00000002u;
}
void TestJsonName::clear_has_fieldname2() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestJsonName::clear_fieldname2() {
  fieldname2_ = 0;
  clear_has_fieldname2();
}
::google::protobuf::int32 TestJsonName::fieldname2() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName.fieldName2)
  return fieldname2_;
}
void TestJsonName::set_fieldname2(::google::protobuf::int32 value) {
  set_has_fieldname2();
  fieldname2_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName.fieldName2)
}

// optional int32 FieldName3 = 3;
bool TestJsonName::has_fieldname3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestJsonName::set_has_fieldname3() {
  _has_bits_[0] |= 0x00000004u;
}
void TestJsonName::clear_has_fieldname3() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestJsonName::clear_fieldname3() {
  fieldname3_ = 0;
  clear_has_fieldname3();
}
::google::protobuf::int32 TestJsonName::fieldname3() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName.FieldName3)
  return fieldname3_;
}
void TestJsonName::set_fieldname3(::google::protobuf::int32 value) {
  set_has_fieldname3();
  fieldname3_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName.FieldName3)
}

// optional int32 _field_name4 = 4;
bool TestJsonName::has__field_name4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestJsonName::set_has__field_name4() {
  _has_bits_[0] |= 0x00000008u;
}
void TestJsonName::clear_has__field_name4() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestJsonName::clear__field_name4() {
  _field_name4_ = 0;
  clear_has__field_name4();
}
::google::protobuf::int32 TestJsonName::_field_name4() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName._field_name4)
  return _field_name4_;
}
void TestJsonName::set__field_name4(::google::protobuf::int32 value) {
  set_has__field_name4();
  _field_name4_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName._field_name4)
}

// optional int32 FIELD_NAME5 = 5;
bool TestJsonName::has_field_name5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestJsonName::set_has_field_name5() {
  _has_bits_[0] |= 0x00000010u;
}
void TestJsonName::clear_has_field_name5() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestJsonName::clear_field_name5() {
  field_name5_ = 0;
  clear_has_field_name5();
}
::google::protobuf::int32 TestJsonName::field_name5() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName.FIELD_NAME5)
  return field_name5_;
}
void TestJsonName::set_field_name5(::google::protobuf::int32 value) {
  set_has_field_name5();
  field_name5_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName.FIELD_NAME5)
}

// optional int32 field_name6 = 6[json_name = "@type"];
bool TestJsonName::has_field_name6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestJsonName::set_has_field_name6() {
  _has_bits_[0] |= 0x00000020u;
}
void TestJsonName::clear_has_field_name6() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestJsonName::clear_field_name6() {
  field_name6_ = 0;
  clear_has_field_name6();
}
::google::protobuf::int32 TestJsonName::field_name6() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJsonName.field_name6)
  return field_name6_;
}
void TestJsonName::set_field_name6(::google::protobuf::int32 value) {
  set_has_field_name6();
  field_name6_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJsonName.field_name6)
}

inline const TestJsonName* TestJsonName::internal_default_instance() {
  return &TestJsonName_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

TestService::~TestService() {}

const ::google::protobuf::ServiceDescriptor* TestService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* TestService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestService_descriptor_;
}

void TestService::Foo(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::FooRequest*,
                         ::protobuf_unittest::FooResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Foo() not implemented.");
  done->Run();
}

void TestService::Bar(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::BarRequest*,
                         ::protobuf_unittest::BarResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Bar() not implemented.");
  done->Run();
}

void TestService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), TestService_descriptor_);
  switch(method->index()) {
    case 0:
      Foo(controller,
             ::google::protobuf::down_cast<const ::protobuf_unittest::FooRequest*>(request),
             ::google::protobuf::down_cast< ::protobuf_unittest::FooResponse*>(response),
             done);
      break;
    case 1:
      Bar(controller,
             ::google::protobuf::down_cast<const ::protobuf_unittest::BarRequest*>(request),
             ::google::protobuf::down_cast< ::protobuf_unittest::BarResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TestService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::protobuf_unittest::FooRequest::default_instance();
    case 1:
      return ::protobuf_unittest::BarRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TestService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::protobuf_unittest::FooResponse::default_instance();
    case 1:
      return ::protobuf_unittest::BarResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TestService_Stub::TestService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TestService_Stub::TestService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TestService_Stub::~TestService_Stub() {
  if (owns_channel_) delete channel_;
}

void TestService_Stub::Foo(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::FooRequest* request,
                              ::protobuf_unittest::FooResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TestService_Stub::Bar(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::BarRequest* request,
                              ::protobuf_unittest::BarResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  optional_int32_extension(kOptionalInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  optional_int64_extension(kOptionalInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  optional_uint32_extension(kOptionalUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  optional_uint64_extension(kOptionalUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  optional_sint32_extension(kOptionalSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  optional_sint64_extension(kOptionalSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  optional_fixed32_extension(kOptionalFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  optional_fixed64_extension(kOptionalFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  optional_sfixed32_extension(kOptionalSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  optional_sfixed64_extension(kOptionalSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  optional_float_extension(kOptionalFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  optional_double_extension(kOptionalDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  optional_bool_extension(kOptionalBoolExtensionFieldNumber, false);
const ::std::string optional_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_extension(kOptionalStringExtensionFieldNumber, optional_string_extension_default);
const ::std::string optional_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  optional_bytes_extension(kOptionalBytesExtensionFieldNumber, optional_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::OptionalGroup_extension >, 10, false >
  optionalgroup_extension(kOptionalgroupExtensionFieldNumber, *::protobuf_unittest::OptionalGroup_extension::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  optional_nested_message_extension(kOptionalNestedMessageExtensionFieldNumber, *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false >
  optional_foreign_message_extension(kOptionalForeignMessageExtensionFieldNumber, *::protobuf_unittest::ForeignMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false >
  optional_import_message_extension(kOptionalImportMessageExtensionFieldNumber, *::protobuf_unittest_import::ImportMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  optional_nested_enum_extension(kOptionalNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  optional_foreign_enum_extension(kOptionalForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  optional_import_enum_extension(kOptionalImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7));
const ::std::string optional_string_piece_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_piece_extension(kOptionalStringPieceExtensionFieldNumber, optional_string_piece_extension_default);
const ::std::string optional_cord_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_cord_extension(kOptionalCordExtensionFieldNumber, optional_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessage >, 11, false >
  optional_public_import_message_extension(kOptionalPublicImportMessageExtensionFieldNumber, *::protobuf_unittest_import::PublicImportMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  optional_lazy_message_extension(kOptionalLazyMessageExtensionFieldNumber, *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  repeated_int32_extension(kRepeatedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  repeated_int64_extension(kRepeatedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  repeated_uint32_extension(kRepeatedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  repeated_uint64_extension(kRepeatedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  repeated_sint32_extension(kRepeatedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  repeated_sint64_extension(kRepeatedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  repeated_fixed32_extension(kRepeatedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  repeated_fixed64_extension(kRepeatedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  repeated_sfixed32_extension(kRepeatedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  repeated_sfixed64_extension(kRepeatedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false >
  repeated_float_extension(kRepeatedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  repeated_double_extension(kRepeatedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false >
  repeated_bool_extension(kRepeatedBoolExtensionFieldNumber, false);
const ::std::string repeated_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_extension(kRepeatedStringExtensionFieldNumber, repeated_string_extension_default);
const ::std::string repeated_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 12, false >
  repeated_bytes_extension(kRepeatedBytesExtensionFieldNumber, repeated_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::RepeatedGroup_extension >, 10, false >
  repeatedgroup_extension(kRepeatedgroupExtensionFieldNumber, *::protobuf_unittest::RepeatedGroup_extension::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  repeated_nested_message_extension(kRepeatedNestedMessageExtensionFieldNumber, *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false >
  repeated_foreign_message_extension(kRepeatedForeignMessageExtensionFieldNumber, *::protobuf_unittest::ForeignMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false >
  repeated_import_message_extension(kRepeatedImportMessageExtensionFieldNumber, *::protobuf_unittest_import::ImportMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  repeated_nested_enum_extension(kRepeatedNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  repeated_foreign_enum_extension(kRepeatedForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  repeated_import_enum_extension(kRepeatedImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7));
const ::std::string repeated_string_piece_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_piece_extension(kRepeatedStringPieceExtensionFieldNumber, repeated_string_piece_extension_default);
const ::std::string repeated_cord_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_cord_extension(kRepeatedCordExtensionFieldNumber, repeated_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  repeated_lazy_message_extension(kRepeatedLazyMessageExtensionFieldNumber, *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  default_int32_extension(kDefaultInt32ExtensionFieldNumber, 41);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  default_int64_extension(kDefaultInt64ExtensionFieldNumber, GOOGLE_LONGLONG(42));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  default_uint32_extension(kDefaultUint32ExtensionFieldNumber, 43u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  default_uint64_extension(kDefaultUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(44));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  default_sint32_extension(kDefaultSint32ExtensionFieldNumber, -45);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  default_sint64_extension(kDefaultSint64ExtensionFieldNumber, GOOGLE_LONGLONG(46));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  default_fixed32_extension(kDefaultFixed32ExtensionFieldNumber, 47u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  default_fixed64_extension(kDefaultFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(48));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  default_sfixed32_extension(kDefaultSfixed32ExtensionFieldNumber, 49);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  default_sfixed64_extension(kDefaultSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(-50));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  default_float_extension(kDefaultFloatExtensionFieldNumber, 51.5f);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  default_double_extension(kDefaultDoubleExtensionFieldNumber, 52000);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  default_bool_extension(kDefaultBoolExtensionFieldNumber, true);
const ::std::string default_string_extension_default("hello");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_extension(kDefaultStringExtensionFieldNumber, default_string_extension_default);
const ::std::string default_bytes_extension_default("world");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  default_bytes_extension(kDefaultBytesExtensionFieldNumber, default_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  default_nested_enum_extension(kDefaultNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(2));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  default_foreign_enum_extension(kDefaultForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(5));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  default_import_enum_extension(kDefaultImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(8));
const ::std::string default_string_piece_extension_default("abc");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_piece_extension(kDefaultStringPieceExtensionFieldNumber, default_string_piece_extension_default);
const ::std::string default_cord_extension_default("123");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_cord_extension(kDefaultCordExtensionFieldNumber, default_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  oneof_uint32_extension(kOneofUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  oneof_nested_message_extension(kOneofNestedMessageExtensionFieldNumber, *::protobuf_unittest::TestAllTypes_NestedMessage::internal_default_instance());
const ::std::string oneof_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  oneof_string_extension(kOneofStringExtensionFieldNumber, oneof_string_extension_default);
const ::std::string oneof_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  oneof_bytes_extension(kOneofBytesExtensionFieldNumber, oneof_bytes_extension_default);
const ::std::string my_extension_string_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  my_extension_string(kMyExtensionStringFieldNumber, my_extension_string_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  my_extension_int(kMyExtensionIntFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, true >
  packed_int32_extension(kPackedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, true >
  packed_int64_extension(kPackedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, true >
  packed_uint32_extension(kPackedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, true >
  packed_uint64_extension(kPackedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, true >
  packed_sint32_extension(kPackedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, true >
  packed_sint64_extension(kPackedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, true >
  packed_fixed32_extension(kPackedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, true >
  packed_fixed64_extension(kPackedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, true >
  packed_sfixed32_extension(kPackedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, true >
  packed_sfixed64_extension(kPackedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, true >
  packed_float_extension(kPackedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, true >
  packed_double_extension(kPackedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true >
  packed_bool_extension(kPackedBoolExtensionFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, true >
  packed_enum_extension(kPackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  unpacked_int32_extension(kUnpackedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  unpacked_int64_extension(kUnpackedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  unpacked_uint32_extension(kUnpackedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  unpacked_uint64_extension(kUnpackedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  unpacked_sint32_extension(kUnpackedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  unpacked_sint64_extension(kUnpackedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  unpacked_fixed32_extension(kUnpackedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  unpacked_fixed64_extension(kUnpackedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  unpacked_sfixed32_extension(kUnpackedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  unpacked_sfixed64_extension(kUnpackedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false >
  unpacked_float_extension(kUnpackedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  unpacked_double_extension(kUnpackedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false >
  unpacked_bool_extension(kUnpackedBoolExtensionFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  unpacked_enum_extension(kUnpackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
