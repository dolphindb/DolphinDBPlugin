// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include <google/protobuf/unittest_lite.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

void protobuf_ShutdownFile_google_2fprotobuf_2funittest_5flite_2eproto() {
  TestAllTypesLite_default_instance_.Shutdown();
  delete TestAllTypesLite::_default_default_string_;
  delete TestAllTypesLite::_default_default_bytes_;
  delete TestAllTypesLite::_default_default_string_piece_;
  delete TestAllTypesLite::_default_default_cord_;
  TestAllTypesLite_NestedMessage_default_instance_.Shutdown();
  TestAllTypesLite_OptionalGroup_default_instance_.Shutdown();
  TestAllTypesLite_RepeatedGroup_default_instance_.Shutdown();
  ForeignMessageLite_default_instance_.Shutdown();
  TestPackedTypesLite_default_instance_.Shutdown();
  TestAllExtensionsLite_default_instance_.Shutdown();
  OptionalGroup_extension_lite_default_instance_.Shutdown();
  RepeatedGroup_extension_lite_default_instance_.Shutdown();
  TestPackedExtensionsLite_default_instance_.Shutdown();
  TestNestedExtensionLite_default_instance_.Shutdown();
  TestDeprecatedLite_default_instance_.Shutdown();
  TestParsingMergeLite_default_instance_.Shutdown();
  TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_.Shutdown();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_.Shutdown();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_.Shutdown();
  TestParsingMergeLite_OptionalGroup_default_instance_.Shutdown();
  TestParsingMergeLite_RepeatedGroup_default_instance_.Shutdown();
  TestEmptyMessageLite_default_instance_.Shutdown();
  TestEmptyMessageWithExtensionsLite_default_instance_.Shutdown();
  V1MessageLite_default_instance_.Shutdown();
  V2MessageLite_default_instance_.Shutdown();
}

void protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_unittest_import::protobuf_InitDefaults_google_2fprotobuf_2funittest_5fimport_5flite_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TestAllTypesLite::_default_default_string_ =
      new ::std::string("hello", 5);
  TestAllTypesLite::_default_default_bytes_ =
      new ::std::string("world", 5);
  TestAllTypesLite::_default_default_string_piece_ =
      new ::std::string("abc", 3);
  TestAllTypesLite::_default_default_cord_ =
      new ::std::string("123", 3);
  TestAllTypesLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestAllTypesLite_NestedMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestAllTypesLite_OptionalGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestAllTypesLite_RepeatedGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ForeignMessageLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestPackedTypesLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestAllExtensionsLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OptionalGroup_extension_lite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RepeatedGroup_extension_lite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestPackedExtensionsLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestNestedExtensionLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestDeprecatedLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_OptionalGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestParsingMergeLite_RepeatedGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestEmptyMessageLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TestEmptyMessageWithExtensionsLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  V1MessageLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  V2MessageLite_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    1, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    2, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    3, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    4, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    5, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    6, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    7, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    8, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    9, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    10, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    11, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    12, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    13, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    14, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    15, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    16, 10, false, false,
    ::protobuf_unittest::OptionalGroup_extension_lite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    18, 11, false, false,
    ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    19, 11, false, false,
    ::protobuf_unittest::ForeignMessageLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    20, 11, false, false,
    ::protobuf_unittest_import::ImportMessageLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    21, 14, false, false,
    &::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    22, 14, false, false,
    &::protobuf_unittest::ForeignEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    23, 14, false, false,
    &::protobuf_unittest_import::ImportEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    24, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    25, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    26, 11, false, false,
    ::protobuf_unittest_import::PublicImportMessageLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    27, 11, false, false,
    ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    31, 5, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    32, 3, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    33, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    34, 4, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    35, 17, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    36, 18, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    37, 7, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    38, 6, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    39, 15, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    40, 16, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    41, 2, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    42, 1, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    43, 8, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    44, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    45, 12, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    46, 10, true, false,
    ::protobuf_unittest::RepeatedGroup_extension_lite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    48, 11, true, false,
    ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    49, 11, true, false,
    ::protobuf_unittest::ForeignMessageLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    50, 11, true, false,
    ::protobuf_unittest_import::ImportMessageLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    51, 14, true, false,
    &::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    52, 14, true, false,
    &::protobuf_unittest::ForeignEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    53, 14, true, false,
    &::protobuf_unittest_import::ImportEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    54, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    55, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    57, 11, true, false,
    ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    61, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    62, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    63, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    64, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    65, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    66, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    67, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    68, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    69, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    70, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    71, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    72, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    73, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    74, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    75, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    81, 14, false, false,
    &::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    82, 14, false, false,
    &::protobuf_unittest::ForeignEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    83, 14, false, false,
    &::protobuf_unittest_import::ImportEnumLite_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    84, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    85, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    111, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    112, 11, false, false,
    ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    113, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    114, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    90, 5, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    91, 3, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    92, 13, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    93, 4, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    94, 17, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    95, 18, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    96, 7, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    97, 6, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    98, 15, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    99, 16, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    100, 2, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    101, 1, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    102, 8, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::protobuf_unittest::TestPackedExtensionsLite::internal_default_instance(),
    103, 14, true, true,
    &::protobuf_unittest::ForeignEnumLite_IsValid);
  TestAllTypesLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypesLite_NestedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypesLite_OptionalGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllTypesLite_RepeatedGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  ForeignMessageLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestPackedTypesLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestAllExtensionsLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  OptionalGroup_extension_lite_default_instance_.get_mutable()->InitAsDefaultInstance();
  RepeatedGroup_extension_lite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestPackedExtensionsLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestNestedExtensionLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::protobuf_unittest::TestAllExtensionsLite::internal_default_instance(),
    12345, 5, false, false);
  TestDeprecatedLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMergeLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestParsingMergeLite::internal_default_instance(),
    1000, 11, false, false,
    ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::protobuf_unittest::TestParsingMergeLite::internal_default_instance(),
    1001, 11, true, false,
    ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
  TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMergeLite_OptionalGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestParsingMergeLite_RepeatedGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestEmptyMessageLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TestEmptyMessageWithExtensionsLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  V1MessageLite_default_instance_.get_mutable()->InitAsDefaultInstance();
  V2MessageLite_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto_once_);
void protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto_once_,
                 &protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto_impl);
}
void protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  ::protobuf_unittest_import::protobuf_AddDesc_google_2fprotobuf_2funittest_5fimport_5flite_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funittest_5flite_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto_once_);
void protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto_once_,
                 &protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_5flite_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_5flite_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_5flite_2eproto_;
bool ForeignEnumLite_IsValid(int value) {
  switch (value) {
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

bool V1EnumLite_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

bool V2EnumLite_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForTestAllTypesLite(
    TestAllTypesLite* ptr) {
  return ptr->mutable_unknown_fields();
}

bool TestAllTypesLite_NestedEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestAllTypesLite_NestedEnum TestAllTypesLite::FOO;
const TestAllTypesLite_NestedEnum TestAllTypesLite::BAR;
const TestAllTypesLite_NestedEnum TestAllTypesLite::BAZ;
const TestAllTypesLite_NestedEnum TestAllTypesLite::NestedEnum_MIN;
const TestAllTypesLite_NestedEnum TestAllTypesLite::NestedEnum_MAX;
const int TestAllTypesLite::NestedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
static ::std::string* MutableUnknownFieldsForTestAllTypesLite_NestedMessage(
    TestAllTypesLite_NestedMessage* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesLite_NestedMessage::kBbFieldNumber;
const int TestAllTypesLite_NestedMessage::kCcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesLite_NestedMessage::TestAllTypesLite_NestedMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
}

void TestAllTypesLite_NestedMessage::InitAsDefaultInstance() {
}

TestAllTypesLite_NestedMessage::TestAllTypesLite_NestedMessage(const TestAllTypesLite_NestedMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
}

void TestAllTypesLite_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cc_, 0, reinterpret_cast<char*>(&bb_) -
    reinterpret_cast<char*>(&cc_) + sizeof(bb_));
}

TestAllTypesLite_NestedMessage::~TestAllTypesLite_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
  SharedDtor();
}

void TestAllTypesLite_NestedMessage::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestAllTypesLite_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestAllTypesLite_NestedMessage& TestAllTypesLite_NestedMessage::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesLite_NestedMessage> TestAllTypesLite_NestedMessage_default_instance_;

TestAllTypesLite_NestedMessage* TestAllTypesLite_NestedMessage::New(::google::protobuf::Arena* arena) const {
  TestAllTypesLite_NestedMessage* n = new TestAllTypesLite_NestedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestAllTypesLite_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestAllTypesLite_NestedMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestAllTypesLite_NestedMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cc_, bb_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestAllTypesLite_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestAllTypesLite_NestedMessage, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bb = 1;
      case 1: {
        if (tag == 8) {
          set_has_bb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cc;
        break;
      }

      // optional int64 cc = 2;
      case 2: {
        if (tag == 16) {
         parse_cc:
          set_has_cc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypesLite.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypesLite.NestedMessage)
  return false;
#undef DO_
}

void TestAllTypesLite_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bb(), output);
  }

  // optional int64 cc = 2;
  if (has_cc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cc(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypesLite.NestedMessage)
}

size_t TestAllTypesLite_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 bb = 1;
    if (has_bb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bb());
    }

    // optional int64 cc = 2;
    if (has_cc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cc());
    }

  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypesLite_NestedMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestAllTypesLite_NestedMessage*>(&from));
}

void TestAllTypesLite_NestedMessage::MergeFrom(const TestAllTypesLite_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypesLite_NestedMessage::UnsafeMergeFrom(const TestAllTypesLite_NestedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bb()) {
      set_bb(from.bb());
    }
    if (from.has_cc()) {
      set_cc(from.cc());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestAllTypesLite_NestedMessage::CopyFrom(const TestAllTypesLite_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypesLite_NestedMessage::IsInitialized() const {

  return true;
}

void TestAllTypesLite_NestedMessage::Swap(TestAllTypesLite_NestedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestAllTypesLite_NestedMessage::InternalSwap(TestAllTypesLite_NestedMessage* other) {
  std::swap(bb_, other->bb_);
  std::swap(cc_, other->cc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestAllTypesLite_NestedMessage::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.NestedMessage";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForTestAllTypesLite_OptionalGroup(
    TestAllTypesLite_OptionalGroup* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesLite_OptionalGroup::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesLite_OptionalGroup::TestAllTypesLite_OptionalGroup()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypesLite.OptionalGroup)
}

void TestAllTypesLite_OptionalGroup::InitAsDefaultInstance() {
}

TestAllTypesLite_OptionalGroup::TestAllTypesLite_OptionalGroup(const TestAllTypesLite_OptionalGroup& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite.OptionalGroup)
}

void TestAllTypesLite_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

TestAllTypesLite_OptionalGroup::~TestAllTypesLite_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  SharedDtor();
}

void TestAllTypesLite_OptionalGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestAllTypesLite_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestAllTypesLite_OptionalGroup& TestAllTypesLite_OptionalGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesLite_OptionalGroup> TestAllTypesLite_OptionalGroup_default_instance_;

TestAllTypesLite_OptionalGroup* TestAllTypesLite_OptionalGroup::New(::google::protobuf::Arena* arena) const {
  TestAllTypesLite_OptionalGroup* n = new TestAllTypesLite_OptionalGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestAllTypesLite_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  a_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestAllTypesLite_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestAllTypesLite_OptionalGroup, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  return false;
#undef DO_
}

void TestAllTypesLite_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypesLite.OptionalGroup)
}

size_t TestAllTypesLite_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  size_t total_size = 0;

  // optional int32 a = 17;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypesLite_OptionalGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestAllTypesLite_OptionalGroup*>(&from));
}

void TestAllTypesLite_OptionalGroup::MergeFrom(const TestAllTypesLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypesLite_OptionalGroup::UnsafeMergeFrom(const TestAllTypesLite_OptionalGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestAllTypesLite_OptionalGroup::CopyFrom(const TestAllTypesLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypesLite_OptionalGroup::IsInitialized() const {

  return true;
}

void TestAllTypesLite_OptionalGroup::Swap(TestAllTypesLite_OptionalGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestAllTypesLite_OptionalGroup::InternalSwap(TestAllTypesLite_OptionalGroup* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestAllTypesLite_OptionalGroup::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.OptionalGroup";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForTestAllTypesLite_RepeatedGroup(
    TestAllTypesLite_RepeatedGroup* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesLite_RepeatedGroup::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesLite_RepeatedGroup::TestAllTypesLite_RepeatedGroup()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
}

void TestAllTypesLite_RepeatedGroup::InitAsDefaultInstance() {
}

TestAllTypesLite_RepeatedGroup::TestAllTypesLite_RepeatedGroup(const TestAllTypesLite_RepeatedGroup& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
}

void TestAllTypesLite_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

TestAllTypesLite_RepeatedGroup::~TestAllTypesLite_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  SharedDtor();
}

void TestAllTypesLite_RepeatedGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestAllTypesLite_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestAllTypesLite_RepeatedGroup& TestAllTypesLite_RepeatedGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesLite_RepeatedGroup> TestAllTypesLite_RepeatedGroup_default_instance_;

TestAllTypesLite_RepeatedGroup* TestAllTypesLite_RepeatedGroup::New(::google::protobuf::Arena* arena) const {
  TestAllTypesLite_RepeatedGroup* n = new TestAllTypesLite_RepeatedGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestAllTypesLite_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  a_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestAllTypesLite_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestAllTypesLite_RepeatedGroup, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  return false;
#undef DO_
}

void TestAllTypesLite_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
}

size_t TestAllTypesLite_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  size_t total_size = 0;

  // optional int32 a = 47;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypesLite_RepeatedGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestAllTypesLite_RepeatedGroup*>(&from));
}

void TestAllTypesLite_RepeatedGroup::MergeFrom(const TestAllTypesLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypesLite_RepeatedGroup::UnsafeMergeFrom(const TestAllTypesLite_RepeatedGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestAllTypesLite_RepeatedGroup::CopyFrom(const TestAllTypesLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypesLite_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestAllTypesLite_RepeatedGroup::Swap(TestAllTypesLite_RepeatedGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestAllTypesLite_RepeatedGroup::InternalSwap(TestAllTypesLite_RepeatedGroup* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestAllTypesLite_RepeatedGroup::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.RepeatedGroup";
}


// -------------------------------------------------------------------

::std::string* TestAllTypesLite::_default_default_string_ = NULL;
::std::string* TestAllTypesLite::_default_default_bytes_ = NULL;
::std::string* TestAllTypesLite::_default_default_string_piece_ = NULL;
::std::string* TestAllTypesLite::_default_default_cord_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesLite::kOptionalInt32FieldNumber;
const int TestAllTypesLite::kOptionalInt64FieldNumber;
const int TestAllTypesLite::kOptionalUint32FieldNumber;
const int TestAllTypesLite::kOptionalUint64FieldNumber;
const int TestAllTypesLite::kOptionalSint32FieldNumber;
const int TestAllTypesLite::kOptionalSint64FieldNumber;
const int TestAllTypesLite::kOptionalFixed32FieldNumber;
const int TestAllTypesLite::kOptionalFixed64FieldNumber;
const int TestAllTypesLite::kOptionalSfixed32FieldNumber;
const int TestAllTypesLite::kOptionalSfixed64FieldNumber;
const int TestAllTypesLite::kOptionalFloatFieldNumber;
const int TestAllTypesLite::kOptionalDoubleFieldNumber;
const int TestAllTypesLite::kOptionalBoolFieldNumber;
const int TestAllTypesLite::kOptionalStringFieldNumber;
const int TestAllTypesLite::kOptionalBytesFieldNumber;
const int TestAllTypesLite::kOptionalgroupFieldNumber;
const int TestAllTypesLite::kOptionalNestedMessageFieldNumber;
const int TestAllTypesLite::kOptionalForeignMessageFieldNumber;
const int TestAllTypesLite::kOptionalImportMessageFieldNumber;
const int TestAllTypesLite::kOptionalNestedEnumFieldNumber;
const int TestAllTypesLite::kOptionalForeignEnumFieldNumber;
const int TestAllTypesLite::kOptionalImportEnumFieldNumber;
const int TestAllTypesLite::kOptionalStringPieceFieldNumber;
const int TestAllTypesLite::kOptionalCordFieldNumber;
const int TestAllTypesLite::kOptionalPublicImportMessageFieldNumber;
const int TestAllTypesLite::kOptionalLazyMessageFieldNumber;
const int TestAllTypesLite::kRepeatedInt32FieldNumber;
const int TestAllTypesLite::kRepeatedInt64FieldNumber;
const int TestAllTypesLite::kRepeatedUint32FieldNumber;
const int TestAllTypesLite::kRepeatedUint64FieldNumber;
const int TestAllTypesLite::kRepeatedSint32FieldNumber;
const int TestAllTypesLite::kRepeatedSint64FieldNumber;
const int TestAllTypesLite::kRepeatedFixed32FieldNumber;
const int TestAllTypesLite::kRepeatedFixed64FieldNumber;
const int TestAllTypesLite::kRepeatedSfixed32FieldNumber;
const int TestAllTypesLite::kRepeatedSfixed64FieldNumber;
const int TestAllTypesLite::kRepeatedFloatFieldNumber;
const int TestAllTypesLite::kRepeatedDoubleFieldNumber;
const int TestAllTypesLite::kRepeatedBoolFieldNumber;
const int TestAllTypesLite::kRepeatedStringFieldNumber;
const int TestAllTypesLite::kRepeatedBytesFieldNumber;
const int TestAllTypesLite::kRepeatedgroupFieldNumber;
const int TestAllTypesLite::kRepeatedNestedMessageFieldNumber;
const int TestAllTypesLite::kRepeatedForeignMessageFieldNumber;
const int TestAllTypesLite::kRepeatedImportMessageFieldNumber;
const int TestAllTypesLite::kRepeatedNestedEnumFieldNumber;
const int TestAllTypesLite::kRepeatedForeignEnumFieldNumber;
const int TestAllTypesLite::kRepeatedImportEnumFieldNumber;
const int TestAllTypesLite::kRepeatedStringPieceFieldNumber;
const int TestAllTypesLite::kRepeatedCordFieldNumber;
const int TestAllTypesLite::kRepeatedLazyMessageFieldNumber;
const int TestAllTypesLite::kDefaultInt32FieldNumber;
const int TestAllTypesLite::kDefaultInt64FieldNumber;
const int TestAllTypesLite::kDefaultUint32FieldNumber;
const int TestAllTypesLite::kDefaultUint64FieldNumber;
const int TestAllTypesLite::kDefaultSint32FieldNumber;
const int TestAllTypesLite::kDefaultSint64FieldNumber;
const int TestAllTypesLite::kDefaultFixed32FieldNumber;
const int TestAllTypesLite::kDefaultFixed64FieldNumber;
const int TestAllTypesLite::kDefaultSfixed32FieldNumber;
const int TestAllTypesLite::kDefaultSfixed64FieldNumber;
const int TestAllTypesLite::kDefaultFloatFieldNumber;
const int TestAllTypesLite::kDefaultDoubleFieldNumber;
const int TestAllTypesLite::kDefaultBoolFieldNumber;
const int TestAllTypesLite::kDefaultStringFieldNumber;
const int TestAllTypesLite::kDefaultBytesFieldNumber;
const int TestAllTypesLite::kDefaultNestedEnumFieldNumber;
const int TestAllTypesLite::kDefaultForeignEnumFieldNumber;
const int TestAllTypesLite::kDefaultImportEnumFieldNumber;
const int TestAllTypesLite::kDefaultStringPieceFieldNumber;
const int TestAllTypesLite::kDefaultCordFieldNumber;
const int TestAllTypesLite::kOneofUint32FieldNumber;
const int TestAllTypesLite::kOneofNestedMessageFieldNumber;
const int TestAllTypesLite::kOneofStringFieldNumber;
const int TestAllTypesLite::kOneofBytesFieldNumber;
const int TestAllTypesLite::kOneofLazyNestedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesLite::TestAllTypesLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypesLite)
}

void TestAllTypesLite::InitAsDefaultInstance() {
  optionalgroup_ = const_cast< ::protobuf_unittest::TestAllTypesLite_OptionalGroup*>(
      ::protobuf_unittest::TestAllTypesLite_OptionalGroup::internal_default_instance());
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestAllTypesLite_NestedMessage*>(
      ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
  optional_foreign_message_ = const_cast< ::protobuf_unittest::ForeignMessageLite*>(
      ::protobuf_unittest::ForeignMessageLite::internal_default_instance());
  optional_import_message_ = const_cast< ::protobuf_unittest_import::ImportMessageLite*>(
      ::protobuf_unittest_import::ImportMessageLite::internal_default_instance());
  optional_public_import_message_ = const_cast< ::protobuf_unittest_import::PublicImportMessageLite*>(
      ::protobuf_unittest_import::PublicImportMessageLite::internal_default_instance());
  optional_lazy_message_ = const_cast< ::protobuf_unittest::TestAllTypesLite_NestedMessage*>(
      ::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
}

TestAllTypesLite::TestAllTypesLite(const TestAllTypesLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite)
}

void TestAllTypesLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_string_.UnsafeSetDefault(_default_default_string_);
  default_bytes_.UnsafeSetDefault(_default_default_bytes_);
  default_string_piece_.UnsafeSetDefault(_default_default_string_piece_);
  default_cord_.UnsafeSetDefault(_default_default_cord_);
  optionalgroup_ = NULL;
  optional_nested_message_ = NULL;
  optional_foreign_message_ = NULL;
  optional_import_message_ = NULL;
  optional_public_import_message_ = NULL;
  optional_lazy_message_ = NULL;
  ::memset(&optional_int64_, 0, reinterpret_cast<char*>(&optional_bool_) -
    reinterpret_cast<char*>(&optional_int64_) + sizeof(optional_bool_));
  default_import_enum_ = 8;
  optional_nested_enum_ = 1;
  optional_foreign_enum_ = 4;
  optional_import_enum_ = 7;
  default_int32_ = 41;
  default_int64_ = GOOGLE_LONGLONG(42);
  default_uint64_ = GOOGLE_ULONGLONG(44);
  default_uint32_ = 43u;
  default_sint32_ = -45;
  default_sint64_ = GOOGLE_LONGLONG(46);
  default_fixed64_ = GOOGLE_ULONGLONG(48);
  default_fixed32_ = 47u;
  default_sfixed32_ = 49;
  default_sfixed64_ = GOOGLE_LONGLONG(-50);
  default_double_ = 52000;
  default_float_ = 51.5f;
  default_bool_ = true;
  default_nested_enum_ = 2;
  default_foreign_enum_ = 5;
  clear_has_oneof_field();
}

TestAllTypesLite::~TestAllTypesLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite)
  SharedDtor();
}

void TestAllTypesLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_string_.DestroyNoArena(_default_default_string_);
  default_bytes_.DestroyNoArena(_default_default_bytes_);
  default_string_piece_.DestroyNoArena(_default_default_string_piece_);
  default_cord_.DestroyNoArena(_default_default_cord_);
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (this != &TestAllTypesLite_default_instance_.get()) {
    delete optionalgroup_;
    delete optional_nested_message_;
    delete optional_foreign_message_;
    delete optional_import_message_;
    delete optional_public_import_message_;
    delete optional_lazy_message_;
  }
}

void TestAllTypesLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestAllTypesLite& TestAllTypesLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesLite> TestAllTypesLite_default_instance_;

TestAllTypesLite* TestAllTypesLite::New(::google::protobuf::Arena* arena) const {
  TestAllTypesLite* n = new TestAllTypesLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestAllTypesLite::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestAllTypesLite)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      delete oneof_field_.oneof_nested_message_;
      break;
    }
    case kOneofString: {
      oneof_field_.oneof_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOneofBytes: {
      oneof_field_.oneof_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOneofLazyNestedMessage: {
      delete oneof_field_.oneof_lazy_nested_message_;
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void TestAllTypesLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TestAllTypesLite, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TestAllTypesLite*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(optional_int64_, optional_fixed64_);
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(optional_sfixed64_, optional_bool_);
    if (has_optional_string()) {
      optional_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_optional_bytes()) {
      optional_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestAllTypesLite_OptionalGroup::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_optional_nested_message()) {
      if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestAllTypesLite_NestedMessage::Clear();
    }
    if (has_optional_foreign_message()) {
      if (optional_foreign_message_ != NULL) optional_foreign_message_->::protobuf_unittest::ForeignMessageLite::Clear();
    }
    if (has_optional_import_message()) {
      if (optional_import_message_ != NULL) optional_import_message_->::protobuf_unittest_import::ImportMessageLite::Clear();
    }
    optional_nested_enum_ = 1;
    optional_foreign_enum_ = 4;
    optional_import_enum_ = 7;
    if (has_optional_string_piece()) {
      optional_string_piece_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_optional_cord()) {
      optional_cord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[24 / 32] & 50331648u) {
    if (has_optional_public_import_message()) {
      if (optional_public_import_message_ != NULL) optional_public_import_message_->::protobuf_unittest_import::PublicImportMessageLite::Clear();
    }
    if (has_optional_lazy_message()) {
      if (optional_lazy_message_ != NULL) optional_lazy_message_->::protobuf_unittest::TestAllTypesLite_NestedMessage::Clear();
    }
  }
  if (_has_bits_[48 / 32] & 16252928u) {
    default_int32_ = 41;
    default_int64_ = GOOGLE_LONGLONG(42);
    default_uint32_ = 43u;
    default_uint64_ = GOOGLE_ULONGLONG(44);
    default_sint32_ = -45;
  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    default_sint64_ = GOOGLE_LONGLONG(46);
    default_fixed32_ = 47u;
    default_fixed64_ = GOOGLE_ULONGLONG(48);
    default_sfixed32_ = 49;
    default_sfixed64_ = GOOGLE_LONGLONG(-50);
    default_float_ = 51.5f;
    default_double_ = 52000;
    default_bool_ = true;
  }
  if (_has_bits_[64 / 32] & 127u) {
    if (has_default_string()) {
      default_string_.ClearToDefaultNoArena(_default_default_string_);
    }
    if (has_default_bytes()) {
      default_bytes_.ClearToDefaultNoArena(_default_default_bytes_);
    }
    default_nested_enum_ = 2;
    default_foreign_enum_ = 5;
    default_import_enum_ = 8;
    if (has_default_string_piece()) {
      default_string_piece_.ClearToDefaultNoArena(_default_default_string_piece_);
    }
    if (has_default_cord()) {
      default_cord_.ClearToDefaultNoArena(_default_default_cord_);
    }
  }

#undef ZR_HELPER_
#undef ZR_

  repeated_int32_.Clear();
  repeated_int64_.Clear();
  repeated_uint32_.Clear();
  repeated_uint64_.Clear();
  repeated_sint32_.Clear();
  repeated_sint64_.Clear();
  repeated_fixed32_.Clear();
  repeated_fixed64_.Clear();
  repeated_sfixed32_.Clear();
  repeated_sfixed64_.Clear();
  repeated_float_.Clear();
  repeated_double_.Clear();
  repeated_bool_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  repeatedgroup_.Clear();
  repeated_nested_message_.Clear();
  repeated_foreign_message_.Clear();
  repeated_import_message_.Clear();
  repeated_nested_enum_.Clear();
  repeated_foreign_enum_.Clear();
  repeated_import_enum_.Clear();
  repeated_string_piece_.Clear();
  repeated_cord_.Clear();
  repeated_lazy_message_.Clear();
  clear_oneof_field();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestAllTypesLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestAllTypesLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypesLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 optional_int32 = 1;
      case 1: {
        if (tag == 8) {
          set_has_optional_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optional_int64;
        break;
      }

      // optional int64 optional_int64 = 2;
      case 2: {
        if (tag == 16) {
         parse_optional_int64:
          set_has_optional_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optional_uint32;
        break;
      }

      // optional uint32 optional_uint32 = 3;
      case 3: {
        if (tag == 24) {
         parse_optional_uint32:
          set_has_optional_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_uint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_optional_uint64;
        break;
      }

      // optional uint64 optional_uint64 = 4;
      case 4: {
        if (tag == 32) {
         parse_optional_uint64:
          set_has_optional_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &optional_uint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_optional_sint32;
        break;
      }

      // optional sint32 optional_sint32 = 5;
      case 5: {
        if (tag == 40) {
         parse_optional_sint32:
          set_has_optional_sint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &optional_sint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_optional_sint64;
        break;
      }

      // optional sint64 optional_sint64 = 6;
      case 6: {
        if (tag == 48) {
         parse_optional_sint64:
          set_has_optional_sint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &optional_sint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_optional_fixed32;
        break;
      }

      // optional fixed32 optional_fixed32 = 7;
      case 7: {
        if (tag == 61) {
         parse_optional_fixed32:
          set_has_optional_fixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &optional_fixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_optional_fixed64;
        break;
      }

      // optional fixed64 optional_fixed64 = 8;
      case 8: {
        if (tag == 65) {
         parse_optional_fixed64:
          set_has_optional_fixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &optional_fixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_optional_sfixed32;
        break;
      }

      // optional sfixed32 optional_sfixed32 = 9;
      case 9: {
        if (tag == 77) {
         parse_optional_sfixed32:
          set_has_optional_sfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &optional_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_optional_sfixed64;
        break;
      }

      // optional sfixed64 optional_sfixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_optional_sfixed64:
          set_has_optional_sfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optional_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_optional_float;
        break;
      }

      // optional float optional_float = 11;
      case 11: {
        if (tag == 93) {
         parse_optional_float:
          set_has_optional_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_optional_double;
        break;
      }

      // optional double optional_double = 12;
      case 12: {
        if (tag == 97) {
         parse_optional_double:
          set_has_optional_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optional_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_optional_bool;
        break;
      }

      // optional bool optional_bool = 13;
      case 13: {
        if (tag == 104) {
         parse_optional_bool:
          set_has_optional_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_bool_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_optional_string;
        break;
      }

      // optional string optional_string = 14;
      case 14: {
        if (tag == 114) {
         parse_optional_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_optional_bytes;
        break;
      }

      // optional bytes optional_bytes = 15;
      case 15: {
        if (tag == 122) {
         parse_optional_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(131)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 16 { ... };
      case 16: {
        if (tag == 131) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                16, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_optional_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
      case 18: {
        if (tag == 146) {
         parse_optional_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_optional_foreign_message;
        break;
      }

      // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
      case 19: {
        if (tag == 154) {
         parse_optional_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_optional_import_message;
        break;
      }

      // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
      case 20: {
        if (tag == 162) {
         parse_optional_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_optional_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
      case 21: {
        if (tag == 168) {
         parse_optional_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value)) {
            set_optional_nested_enum(static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(value));
          } else {
            unknown_fields_stream.WriteVarint32(168);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_optional_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
      case 22: {
        if (tag == 176) {
         parse_optional_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnumLite_IsValid(value)) {
            set_optional_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(176);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_optional_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
      case 23: {
        if (tag == 184) {
         parse_optional_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnumLite_IsValid(value)) {
            set_optional_import_enum(static_cast< ::protobuf_unittest_import::ImportEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(184);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_optional_string_piece;
        break;
      }

      // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
      case 24: {
        if (tag == 194) {
         parse_optional_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string_piece()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_optional_cord;
        break;
      }

      // optional string optional_cord = 25 [ctype = CORD];
      case 25: {
        if (tag == 202) {
         parse_optional_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_cord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_optional_public_import_message;
        break;
      }

      // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
      case 26: {
        if (tag == 210) {
         parse_optional_public_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_public_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_optional_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
      case 27: {
        if (tag == 218) {
         parse_optional_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        break;
      }

      // repeated int32 repeated_int32 = 31;
      case 31: {
        if (tag == 248) {
         parse_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 248, input, this->mutable_repeated_int32())));
        } else if (tag == 250) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        break;
      }

      // repeated int64 repeated_int64 = 32;
      case 32: {
        if (tag == 256) {
         parse_repeated_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 256, input, this->mutable_repeated_int64())));
        } else if (tag == 258) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        break;
      }

      // repeated uint32 repeated_uint32 = 33;
      case 33: {
        if (tag == 264) {
         parse_repeated_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 264, input, this->mutable_repeated_uint32())));
        } else if (tag == 266) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repeated_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        break;
      }

      // repeated uint64 repeated_uint64 = 34;
      case 34: {
        if (tag == 272) {
         parse_repeated_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 272, input, this->mutable_repeated_uint64())));
        } else if (tag == 274) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        break;
      }

      // repeated sint32 repeated_sint32 = 35;
      case 35: {
        if (tag == 280) {
         parse_repeated_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 280, input, this->mutable_repeated_sint32())));
        } else if (tag == 282) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repeated_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        break;
      }

      // repeated sint64 repeated_sint64 = 36;
      case 36: {
        if (tag == 288) {
         parse_repeated_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 288, input, this->mutable_repeated_sint64())));
        } else if (tag == 290) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repeated_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        break;
      }

      // repeated fixed32 repeated_fixed32 = 37;
      case 37: {
        if (tag == 301) {
         parse_repeated_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 301, input, this->mutable_repeated_fixed32())));
        } else if (tag == 298) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        break;
      }

      // repeated fixed64 repeated_fixed64 = 38;
      case 38: {
        if (tag == 305) {
         parse_repeated_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 305, input, this->mutable_repeated_fixed64())));
        } else if (tag == 306) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        break;
      }

      // repeated sfixed32 repeated_sfixed32 = 39;
      case 39: {
        if (tag == 317) {
         parse_repeated_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 317, input, this->mutable_repeated_sfixed32())));
        } else if (tag == 314) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repeated_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        break;
      }

      // repeated sfixed64 repeated_sfixed64 = 40;
      case 40: {
        if (tag == 321) {
         parse_repeated_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 321, input, this->mutable_repeated_sfixed64())));
        } else if (tag == 322) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repeated_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        if (input->ExpectTag(333)) goto parse_repeated_float;
        break;
      }

      // repeated float repeated_float = 41;
      case 41: {
        if (tag == 333) {
         parse_repeated_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 333, input, this->mutable_repeated_float())));
        } else if (tag == 330) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(333)) goto parse_repeated_float;
        if (input->ExpectTag(337)) goto parse_repeated_double;
        break;
      }

      // repeated double repeated_double = 42;
      case 42: {
        if (tag == 337) {
         parse_repeated_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 337, input, this->mutable_repeated_double())));
        } else if (tag == 338) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repeated_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_repeated_double;
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        break;
      }

      // repeated bool repeated_bool = 43;
      case 43: {
        if (tag == 344) {
         parse_repeated_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 344, input, this->mutable_repeated_bool())));
        } else if (tag == 346) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repeated_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        if (input->ExpectTag(354)) goto parse_repeated_string;
        break;
      }

      // repeated string repeated_string = 44;
      case 44: {
        if (tag == 354) {
         parse_repeated_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_repeated_string;
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        break;
      }

      // repeated bytes repeated_bytes = 45;
      case 45: {
        if (tag == 362) {
         parse_repeated_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        if (input->ExpectTag(371)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 46 { ... };
      case 46: {
        if (tag == 371) {
         parse_repeatedgroup:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                46, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(371)) goto parse_loop_repeatedgroup;
        if (input->ExpectTag(386)) goto parse_loop_repeated_nested_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
      case 48: {
        if (tag == 386) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_loop_repeated_nested_message;
        if (input->ExpectTag(394)) goto parse_loop_repeated_foreign_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
      case 49: {
        if (tag == 394) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_loop_repeated_foreign_message;
        if (input->ExpectTag(402)) goto parse_loop_repeated_import_message;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
      case 50: {
        if (tag == 402) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_loop_repeated_import_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
      case 51: {
        if (tag == 408) {
         parse_repeated_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value)) {
            add_repeated_nested_enum(static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else if (tag == 410) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 51,
                 ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid,
                 &unknown_fields_stream,
                 this->mutable_repeated_nested_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
      case 52: {
        if (tag == 416) {
         parse_repeated_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnumLite_IsValid(value)) {
            add_repeated_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else if (tag == 418) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 52,
                 ::protobuf_unittest::ForeignEnumLite_IsValid,
                 &unknown_fields_stream,
                 this->mutable_repeated_foreign_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        break;
      }

      // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
      case 53: {
        if (tag == 424) {
         parse_repeated_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnumLite_IsValid(value)) {
            add_repeated_import_enum(static_cast< ::protobuf_unittest_import::ImportEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else if (tag == 426) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 53,
                 ::protobuf_unittest_import::ImportEnumLite_IsValid,
                 &unknown_fields_stream,
                 this->mutable_repeated_import_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        break;
      }

      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      case 54: {
        if (tag == 434) {
         parse_repeated_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string_piece()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        break;
      }

      // repeated string repeated_cord = 55 [ctype = CORD];
      case 55: {
        if (tag == 442) {
         parse_repeated_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_cord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        if (input->ExpectTag(458)) goto parse_repeated_lazy_message;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
      case 57: {
        if (tag == 458) {
         parse_repeated_lazy_message:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_loop_repeated_lazy_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(488)) goto parse_default_int32;
        break;
      }

      // optional int32 default_int32 = 61 [default = 41];
      case 61: {
        if (tag == 488) {
         parse_default_int32:
          set_has_default_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_int32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_default_int64;
        break;
      }

      // optional int64 default_int64 = 62 [default = 42];
      case 62: {
        if (tag == 496) {
         parse_default_int64:
          set_has_default_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &default_int64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(504)) goto parse_default_uint32;
        break;
      }

      // optional uint32 default_uint32 = 63 [default = 43];
      case 63: {
        if (tag == 504) {
         parse_default_uint32:
          set_has_default_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_uint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(512)) goto parse_default_uint64;
        break;
      }

      // optional uint64 default_uint64 = 64 [default = 44];
      case 64: {
        if (tag == 512) {
         parse_default_uint64:
          set_has_default_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &default_uint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_default_sint32;
        break;
      }

      // optional sint32 default_sint32 = 65 [default = -45];
      case 65: {
        if (tag == 520) {
         parse_default_sint32:
          set_has_default_sint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &default_sint32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_default_sint64;
        break;
      }

      // optional sint64 default_sint64 = 66 [default = 46];
      case 66: {
        if (tag == 528) {
         parse_default_sint64:
          set_has_default_sint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &default_sint64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(541)) goto parse_default_fixed32;
        break;
      }

      // optional fixed32 default_fixed32 = 67 [default = 47];
      case 67: {
        if (tag == 541) {
         parse_default_fixed32:
          set_has_default_fixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &default_fixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(545)) goto parse_default_fixed64;
        break;
      }

      // optional fixed64 default_fixed64 = 68 [default = 48];
      case 68: {
        if (tag == 545) {
         parse_default_fixed64:
          set_has_default_fixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &default_fixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(557)) goto parse_default_sfixed32;
        break;
      }

      // optional sfixed32 default_sfixed32 = 69 [default = 49];
      case 69: {
        if (tag == 557) {
         parse_default_sfixed32:
          set_has_default_sfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &default_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_default_sfixed64;
        break;
      }

      // optional sfixed64 default_sfixed64 = 70 [default = -50];
      case 70: {
        if (tag == 561) {
         parse_default_sfixed64:
          set_has_default_sfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &default_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(573)) goto parse_default_float;
        break;
      }

      // optional float default_float = 71 [default = 51.5];
      case 71: {
        if (tag == 573) {
         parse_default_float:
          set_has_default_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &default_float_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(577)) goto parse_default_double;
        break;
      }

      // optional double default_double = 72 [default = 52000];
      case 72: {
        if (tag == 577) {
         parse_default_double:
          set_has_default_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_double_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_default_bool;
        break;
      }

      // optional bool default_bool = 73 [default = true];
      case 73: {
        if (tag == 584) {
         parse_default_bool:
          set_has_default_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_bool_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(594)) goto parse_default_string;
        break;
      }

      // optional string default_string = 74 [default = "hello"];
      case 74: {
        if (tag == 594) {
         parse_default_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(602)) goto parse_default_bytes;
        break;
      }

      // optional bytes default_bytes = 75 [default = "world"];
      case 75: {
        if (tag == 602) {
         parse_default_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_default_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(648)) goto parse_default_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
      case 81: {
        if (tag == 648) {
         parse_default_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value)) {
            set_default_nested_enum(static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(value));
          } else {
            unknown_fields_stream.WriteVarint32(648);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(656)) goto parse_default_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
      case 82: {
        if (tag == 656) {
         parse_default_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnumLite_IsValid(value)) {
            set_default_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(656);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(664)) goto parse_default_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
      case 83: {
        if (tag == 664) {
         parse_default_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnumLite_IsValid(value)) {
            set_default_import_enum(static_cast< ::protobuf_unittest_import::ImportEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(664);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_default_string_piece;
        break;
      }

      // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
      case 84: {
        if (tag == 674) {
         parse_default_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string_piece()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_default_cord;
        break;
      }

      // optional string default_cord = 85 [default = "123", ctype = CORD];
      case 85: {
        if (tag == 682) {
         parse_default_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(888)) goto parse_oneof_uint32;
        break;
      }

      // optional uint32 oneof_uint32 = 111;
      case 111: {
        if (tag == 888) {
         parse_oneof_uint32:
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_field_.oneof_uint32_)));
          set_has_oneof_uint32();
        } else {
          goto handle_unusual;
        }
        goto after_oneof_lazy_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
      case 112: {
        if (tag == 898) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneof_nested_message()));
        } else {
          goto handle_unusual;
        }
        goto after_oneof_lazy_nested_message;
        break;
      }

      // optional string oneof_string = 113;
      case 113: {
        if (tag == 906) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oneof_string()));
        } else {
          goto handle_unusual;
        }
        goto after_oneof_lazy_nested_message;
        break;
      }

      // optional bytes oneof_bytes = 114;
      case 114: {
        if (tag == 914) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oneof_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(922)) goto parse_oneof_lazy_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115 [lazy = true];
      case 115: {
        if (tag == 922) {
         parse_oneof_lazy_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneof_lazy_nested_message()));
        } else {
          goto handle_unusual;
        }
       after_oneof_lazy_nested_message:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypesLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypesLite)
  return false;
#undef DO_
}

void TestAllTypesLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypesLite)
  // optional int32 optional_int32 = 1;
  if (has_optional_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optional_int32(), output);
  }

  // optional int64 optional_int64 = 2;
  if (has_optional_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->optional_int64(), output);
  }

  // optional uint32 optional_uint32 = 3;
  if (has_optional_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optional_uint32(), output);
  }

  // optional uint64 optional_uint64 = 4;
  if (has_optional_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->optional_uint64(), output);
  }

  // optional sint32 optional_sint32 = 5;
  if (has_optional_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->optional_sint32(), output);
  }

  // optional sint64 optional_sint64 = 6;
  if (has_optional_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->optional_sint64(), output);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (has_optional_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->optional_fixed32(), output);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (has_optional_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->optional_fixed64(), output);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (has_optional_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->optional_sfixed32(), output);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (has_optional_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->optional_sfixed64(), output);
  }

  // optional float optional_float = 11;
  if (has_optional_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->optional_float(), output);
  }

  // optional double optional_double = 12;
  if (has_optional_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->optional_double(), output);
  }

  // optional bool optional_bool = 13;
  if (has_optional_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->optional_bool(), output);
  }

  // optional string optional_string = 14;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->optional_string(), output);
  }

  // optional bytes optional_bytes = 15;
  if (has_optional_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->optional_bytes(), output);
  }

  // optional group OptionalGroup = 16 { ... };
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      16, *this->optionalgroup_, output);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, *this->optional_nested_message_, output);
  }

  // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
  if (has_optional_foreign_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, *this->optional_foreign_message_, output);
  }

  // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
  if (has_optional_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, *this->optional_import_message_, output);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
  if (has_optional_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->optional_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
  if (has_optional_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->optional_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
  if (has_optional_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->optional_import_enum(), output);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (has_optional_string_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->optional_string_piece(), output);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (has_optional_cord()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->optional_cord(), output);
  }

  // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
  if (has_optional_public_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      26, *this->optional_public_import_message_, output);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (has_optional_lazy_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      27, *this->optional_lazy_message_, output);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      31, this->repeated_int32(i), output);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      32, this->repeated_int64(i), output);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0; i < this->repeated_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      33, this->repeated_uint32(i), output);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      34, this->repeated_uint64(i), output);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0; i < this->repeated_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      35, this->repeated_sint32(i), output);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0; i < this->repeated_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      36, this->repeated_sint64(i), output);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      37, this->repeated_fixed32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      38, this->repeated_fixed64(i), output);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0; i < this->repeated_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      39, this->repeated_sfixed32(i), output);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0; i < this->repeated_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      40, this->repeated_sfixed64(i), output);
  }

  // repeated float repeated_float = 41;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      41, this->repeated_float(i), output);
  }

  // repeated double repeated_double = 42;
  for (int i = 0; i < this->repeated_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      42, this->repeated_double(i), output);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0; i < this->repeated_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      43, this->repeated_bool(i), output);
  }

  // repeated string repeated_string = 44;
  for (int i = 0; i < this->repeated_string_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->repeated_string(i), output);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      45, this->repeated_bytes(i), output);
  }

  // repeated group RepeatedGroup = 46 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      46, this->repeatedgroup(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0, n = this->repeated_nested_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      48, this->repeated_nested_message(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
  for (unsigned int i = 0, n = this->repeated_foreign_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      49, this->repeated_foreign_message(i), output);
  }

  // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
  for (unsigned int i = 0, n = this->repeated_import_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      50, this->repeated_import_message(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
  for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      51, this->repeated_nested_enum(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
  for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      52, this->repeated_foreign_enum(i), output);
  }

  // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
  for (int i = 0; i < this->repeated_import_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      53, this->repeated_import_enum(i), output);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->repeated_string_piece(i), output);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->repeated_cord(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned int i = 0, n = this->repeated_lazy_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      57, this->repeated_lazy_message(i), output);
  }

  // optional int32 default_int32 = 61 [default = 41];
  if (has_default_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->default_int32(), output);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (has_default_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(62, this->default_int64(), output);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (has_default_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(63, this->default_uint32(), output);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (has_default_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(64, this->default_uint64(), output);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (has_default_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(65, this->default_sint32(), output);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (has_default_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(66, this->default_sint64(), output);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (has_default_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(67, this->default_fixed32(), output);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (has_default_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(68, this->default_fixed64(), output);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (has_default_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(69, this->default_sfixed32(), output);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (has_default_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(70, this->default_sfixed64(), output);
  }

  // optional float default_float = 71 [default = 51.5];
  if (has_default_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(71, this->default_float(), output);
  }

  // optional double default_double = 72 [default = 52000];
  if (has_default_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(72, this->default_double(), output);
  }

  // optional bool default_bool = 73 [default = true];
  if (has_default_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->default_bool(), output);
  }

  // optional string default_string = 74 [default = "hello"];
  if (has_default_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      74, this->default_string(), output);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (has_default_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      75, this->default_bytes(), output);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
  if (has_default_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      81, this->default_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
  if (has_default_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      82, this->default_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
  if (has_default_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      83, this->default_import_enum(), output);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (has_default_string_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->default_string_piece(), output);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (has_default_cord()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      85, this->default_cord(), output);
  }

  switch (oneof_field_case()) {
    case kOneofUint32:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->oneof_uint32(), output);
      break;
    case kOneofNestedMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        112, *oneof_field_.oneof_nested_message_, output);
      break;
    case kOneofString:
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        113, this->oneof_string(), output);
      break;
    case kOneofBytes:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        114, this->oneof_bytes(), output);
      break;
    case kOneofLazyNestedMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        115, *oneof_field_.oneof_lazy_nested_message_, output);
      break;
    default: ;
  }
  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypesLite)
}

size_t TestAllTypesLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 optional_int32 = 1;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

    // optional int64 optional_int64 = 2;
    if (has_optional_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->optional_int64());
    }

    // optional uint32 optional_uint32 = 3;
    if (has_optional_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (has_optional_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->optional_uint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (has_optional_sint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->optional_sint32());
    }

    // optional sint64 optional_sint64 = 6;
    if (has_optional_sint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->optional_sint64());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (has_optional_fixed32()) {
      total_size += 1 + 4;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (has_optional_fixed64()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional sfixed32 optional_sfixed32 = 9;
    if (has_optional_sfixed32()) {
      total_size += 1 + 4;
    }

    // optional sfixed64 optional_sfixed64 = 10;
    if (has_optional_sfixed64()) {
      total_size += 1 + 8;
    }

    // optional float optional_float = 11;
    if (has_optional_float()) {
      total_size += 1 + 4;
    }

    // optional double optional_double = 12;
    if (has_optional_double()) {
      total_size += 1 + 8;
    }

    // optional bool optional_bool = 13;
    if (has_optional_bool()) {
      total_size += 1 + 1;
    }

    // optional string optional_string = 14;
    if (has_optional_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (has_optional_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->optional_bytes());
    }

    // optional group OptionalGroup = 16 { ... };
    if (has_optionalgroup()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->optionalgroup_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    if (has_optional_nested_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_nested_message_);
    }

    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    if (has_optional_foreign_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_foreign_message_);
    }

    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    if (has_optional_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    if (has_optional_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    if (has_optional_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
    if (has_optional_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_import_enum());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (has_optional_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (has_optional_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_cord());
    }

  }
  if (_has_bits_[24 / 32] & 50331648u) {
    // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
    if (has_optional_public_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_public_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
    if (has_optional_lazy_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_lazy_message_);
    }

  }
  if (_has_bits_[51 / 32] & 16252928u) {
    // optional int32 default_int32 = 61 [default = 41];
    if (has_default_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->default_int32());
    }

    // optional int64 default_int64 = 62 [default = 42];
    if (has_default_int64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->default_int64());
    }

    // optional uint32 default_uint32 = 63 [default = 43];
    if (has_default_uint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_uint32());
    }

    // optional uint64 default_uint64 = 64 [default = 44];
    if (has_default_uint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->default_uint64());
    }

    // optional sint32 default_sint32 = 65 [default = -45];
    if (has_default_sint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->default_sint32());
    }

  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    // optional sint64 default_sint64 = 66 [default = 46];
    if (has_default_sint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->default_sint64());
    }

    // optional fixed32 default_fixed32 = 67 [default = 47];
    if (has_default_fixed32()) {
      total_size += 2 + 4;
    }

    // optional fixed64 default_fixed64 = 68 [default = 48];
    if (has_default_fixed64()) {
      total_size += 2 + 8;
    }

    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    if (has_default_sfixed32()) {
      total_size += 2 + 4;
    }

    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    if (has_default_sfixed64()) {
      total_size += 2 + 8;
    }

    // optional float default_float = 71 [default = 51.5];
    if (has_default_float()) {
      total_size += 2 + 4;
    }

    // optional double default_double = 72 [default = 52000];
    if (has_default_double()) {
      total_size += 2 + 8;
    }

    // optional bool default_bool = 73 [default = true];
    if (has_default_bool()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[64 / 32] & 127u) {
    // optional string default_string = 74 [default = "hello"];
    if (has_default_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string());
    }

    // optional bytes default_bytes = 75 [default = "world"];
    if (has_default_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->default_bytes());
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
    if (has_default_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
    if (has_default_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
    if (has_default_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_import_enum());
    }

    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    if (has_default_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string_piece());
    }

    // optional string default_cord = 85 [default = "123", ctype = CORD];
    if (has_default_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_cord());
    }

  }
  // repeated int32 repeated_int32 = 31;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeated_int32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int32_size());
    total_size += data_size;
  }

  // repeated int64 repeated_int64 = 32;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->repeated_int64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int64_size());
    total_size += data_size;
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_uint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->repeated_uint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint32_size());
    total_size += data_size;
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->repeated_uint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint64_size());
    total_size += data_size;
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->repeated_sint32(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint32_size());
    total_size += data_size;
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->repeated_sint64(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint64_size());
    total_size += data_size;
  }

  // repeated fixed32 repeated_fixed32 = 37;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 repeated_fixed64 = 38;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_fixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sfixed32_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_sfixed64_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed64_size());
    total_size += data_size;
  }

  // repeated float repeated_float = 41;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_float_size();
    data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_float_size());
    total_size += data_size;
  }

  // repeated double repeated_double = 42;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_double_size();
    data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_double_size());
    total_size += data_size;
  }

  // repeated bool repeated_bool = 43;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_bool_size();
    data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_bool_size());
    total_size += data_size;
  }

  // repeated string repeated_string = 44;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_size());
  for (int i = 0; i < this->repeated_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 45;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_bytes_size());
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  // repeated group RepeatedGroup = 46 { ... };
  {
    unsigned int count = this->repeatedgroup_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->repeatedgroup(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
  {
    unsigned int count = this->repeated_nested_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_nested_message(i));
    }
  }

  // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
  {
    unsigned int count = this->repeated_foreign_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_foreign_message(i));
    }
  }

  // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
  {
    unsigned int count = this->repeated_import_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_import_message(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_nested_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_nested_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_foreign_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_foreign_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
  {
    size_t data_size = 0;
    unsigned int count = this->repeated_import_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_import_enum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_piece_size());
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string_piece(i));
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_cord_size());
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_cord(i));
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
  {
    unsigned int count = this->repeated_lazy_message_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_lazy_message(i));
    }
  }

  switch (oneof_field_case()) {
    // optional uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oneof_uint32());
      break;
    }
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_field_.oneof_nested_message_);
      break;
    }
    // optional string oneof_string = 113;
    case kOneofString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oneof_string());
      break;
    }
    // optional bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oneof_bytes());
      break;
    }
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115 [lazy = true];
    case kOneofLazyNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_field_.oneof_lazy_nested_message_);
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypesLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestAllTypesLite*>(&from));
}

void TestAllTypesLite::MergeFrom(const TestAllTypesLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllTypesLite::UnsafeMergeFrom(const TestAllTypesLite& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_int32_.UnsafeMergeFrom(from.repeated_int32_);
  repeated_int64_.UnsafeMergeFrom(from.repeated_int64_);
  repeated_uint32_.UnsafeMergeFrom(from.repeated_uint32_);
  repeated_uint64_.UnsafeMergeFrom(from.repeated_uint64_);
  repeated_sint32_.UnsafeMergeFrom(from.repeated_sint32_);
  repeated_sint64_.UnsafeMergeFrom(from.repeated_sint64_);
  repeated_fixed32_.UnsafeMergeFrom(from.repeated_fixed32_);
  repeated_fixed64_.UnsafeMergeFrom(from.repeated_fixed64_);
  repeated_sfixed32_.UnsafeMergeFrom(from.repeated_sfixed32_);
  repeated_sfixed64_.UnsafeMergeFrom(from.repeated_sfixed64_);
  repeated_float_.UnsafeMergeFrom(from.repeated_float_);
  repeated_double_.UnsafeMergeFrom(from.repeated_double_);
  repeated_bool_.UnsafeMergeFrom(from.repeated_bool_);
  repeated_string_.UnsafeMergeFrom(from.repeated_string_);
  repeated_bytes_.UnsafeMergeFrom(from.repeated_bytes_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  repeated_nested_message_.MergeFrom(from.repeated_nested_message_);
  repeated_foreign_message_.MergeFrom(from.repeated_foreign_message_);
  repeated_import_message_.MergeFrom(from.repeated_import_message_);
  repeated_nested_enum_.UnsafeMergeFrom(from.repeated_nested_enum_);
  repeated_foreign_enum_.UnsafeMergeFrom(from.repeated_foreign_enum_);
  repeated_import_enum_.UnsafeMergeFrom(from.repeated_import_enum_);
  repeated_string_piece_.UnsafeMergeFrom(from.repeated_string_piece_);
  repeated_cord_.UnsafeMergeFrom(from.repeated_cord_);
  repeated_lazy_message_.MergeFrom(from.repeated_lazy_message_);
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case kOneofLazyNestedMessage: {
      mutable_oneof_lazy_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(from.oneof_lazy_nested_message());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_int32()) {
      set_optional_int32(from.optional_int32());
    }
    if (from.has_optional_int64()) {
      set_optional_int64(from.optional_int64());
    }
    if (from.has_optional_uint32()) {
      set_optional_uint32(from.optional_uint32());
    }
    if (from.has_optional_uint64()) {
      set_optional_uint64(from.optional_uint64());
    }
    if (from.has_optional_sint32()) {
      set_optional_sint32(from.optional_sint32());
    }
    if (from.has_optional_sint64()) {
      set_optional_sint64(from.optional_sint64());
    }
    if (from.has_optional_fixed32()) {
      set_optional_fixed32(from.optional_fixed32());
    }
    if (from.has_optional_fixed64()) {
      set_optional_fixed64(from.optional_fixed64());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_optional_sfixed32()) {
      set_optional_sfixed32(from.optional_sfixed32());
    }
    if (from.has_optional_sfixed64()) {
      set_optional_sfixed64(from.optional_sfixed64());
    }
    if (from.has_optional_float()) {
      set_optional_float(from.optional_float());
    }
    if (from.has_optional_double()) {
      set_optional_double(from.optional_double());
    }
    if (from.has_optional_bool()) {
      set_optional_bool(from.optional_bool());
    }
    if (from.has_optional_string()) {
      set_has_optional_string();
      optional_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string_);
    }
    if (from.has_optional_bytes()) {
      set_has_optional_bytes();
      optional_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_bytes_);
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestAllTypesLite_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(from.optional_nested_message());
    }
    if (from.has_optional_foreign_message()) {
      mutable_optional_foreign_message()->::protobuf_unittest::ForeignMessageLite::MergeFrom(from.optional_foreign_message());
    }
    if (from.has_optional_import_message()) {
      mutable_optional_import_message()->::protobuf_unittest_import::ImportMessageLite::MergeFrom(from.optional_import_message());
    }
    if (from.has_optional_nested_enum()) {
      set_optional_nested_enum(from.optional_nested_enum());
    }
    if (from.has_optional_foreign_enum()) {
      set_optional_foreign_enum(from.optional_foreign_enum());
    }
    if (from.has_optional_import_enum()) {
      set_optional_import_enum(from.optional_import_enum());
    }
    if (from.has_optional_string_piece()) {
      set_has_optional_string_piece();
      optional_string_piece_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string_piece_);
    }
    if (from.has_optional_cord()) {
      set_has_optional_cord();
      optional_cord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_cord_);
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_optional_public_import_message()) {
      mutable_optional_public_import_message()->::protobuf_unittest_import::PublicImportMessageLite::MergeFrom(from.optional_public_import_message());
    }
    if (from.has_optional_lazy_message()) {
      mutable_optional_lazy_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(from.optional_lazy_message());
    }
  }
  if (from._has_bits_[51 / 32] & (0xffu << (51 % 32))) {
    if (from.has_default_int32()) {
      set_default_int32(from.default_int32());
    }
    if (from.has_default_int64()) {
      set_default_int64(from.default_int64());
    }
    if (from.has_default_uint32()) {
      set_default_uint32(from.default_uint32());
    }
    if (from.has_default_uint64()) {
      set_default_uint64(from.default_uint64());
    }
    if (from.has_default_sint32()) {
      set_default_sint32(from.default_sint32());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_default_sint64()) {
      set_default_sint64(from.default_sint64());
    }
    if (from.has_default_fixed32()) {
      set_default_fixed32(from.default_fixed32());
    }
    if (from.has_default_fixed64()) {
      set_default_fixed64(from.default_fixed64());
    }
    if (from.has_default_sfixed32()) {
      set_default_sfixed32(from.default_sfixed32());
    }
    if (from.has_default_sfixed64()) {
      set_default_sfixed64(from.default_sfixed64());
    }
    if (from.has_default_float()) {
      set_default_float(from.default_float());
    }
    if (from.has_default_double()) {
      set_default_double(from.default_double());
    }
    if (from.has_default_bool()) {
      set_default_bool(from.default_bool());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_default_string()) {
      set_has_default_string();
      default_string_.AssignWithDefault(_default_default_string_, from.default_string_);
    }
    if (from.has_default_bytes()) {
      set_has_default_bytes();
      default_bytes_.AssignWithDefault(_default_default_bytes_, from.default_bytes_);
    }
    if (from.has_default_nested_enum()) {
      set_default_nested_enum(from.default_nested_enum());
    }
    if (from.has_default_foreign_enum()) {
      set_default_foreign_enum(from.default_foreign_enum());
    }
    if (from.has_default_import_enum()) {
      set_default_import_enum(from.default_import_enum());
    }
    if (from.has_default_string_piece()) {
      set_has_default_string_piece();
      default_string_piece_.AssignWithDefault(_default_default_string_piece_, from.default_string_piece_);
    }
    if (from.has_default_cord()) {
      set_has_default_cord();
      default_cord_.AssignWithDefault(_default_default_cord_, from.default_cord_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestAllTypesLite::CopyFrom(const TestAllTypesLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllTypesLite::IsInitialized() const {

  return true;
}

void TestAllTypesLite::Swap(TestAllTypesLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestAllTypesLite::InternalSwap(TestAllTypesLite* other) {
  std::swap(optional_int32_, other->optional_int32_);
  std::swap(optional_int64_, other->optional_int64_);
  std::swap(optional_uint32_, other->optional_uint32_);
  std::swap(optional_uint64_, other->optional_uint64_);
  std::swap(optional_sint32_, other->optional_sint32_);
  std::swap(optional_sint64_, other->optional_sint64_);
  std::swap(optional_fixed32_, other->optional_fixed32_);
  std::swap(optional_fixed64_, other->optional_fixed64_);
  std::swap(optional_sfixed32_, other->optional_sfixed32_);
  std::swap(optional_sfixed64_, other->optional_sfixed64_);
  std::swap(optional_float_, other->optional_float_);
  std::swap(optional_double_, other->optional_double_);
  std::swap(optional_bool_, other->optional_bool_);
  optional_string_.Swap(&other->optional_string_);
  optional_bytes_.Swap(&other->optional_bytes_);
  std::swap(optionalgroup_, other->optionalgroup_);
  std::swap(optional_nested_message_, other->optional_nested_message_);
  std::swap(optional_foreign_message_, other->optional_foreign_message_);
  std::swap(optional_import_message_, other->optional_import_message_);
  std::swap(optional_nested_enum_, other->optional_nested_enum_);
  std::swap(optional_foreign_enum_, other->optional_foreign_enum_);
  std::swap(optional_import_enum_, other->optional_import_enum_);
  optional_string_piece_.Swap(&other->optional_string_piece_);
  optional_cord_.Swap(&other->optional_cord_);
  std::swap(optional_public_import_message_, other->optional_public_import_message_);
  std::swap(optional_lazy_message_, other->optional_lazy_message_);
  repeated_int32_.UnsafeArenaSwap(&other->repeated_int32_);
  repeated_int64_.UnsafeArenaSwap(&other->repeated_int64_);
  repeated_uint32_.UnsafeArenaSwap(&other->repeated_uint32_);
  repeated_uint64_.UnsafeArenaSwap(&other->repeated_uint64_);
  repeated_sint32_.UnsafeArenaSwap(&other->repeated_sint32_);
  repeated_sint64_.UnsafeArenaSwap(&other->repeated_sint64_);
  repeated_fixed32_.UnsafeArenaSwap(&other->repeated_fixed32_);
  repeated_fixed64_.UnsafeArenaSwap(&other->repeated_fixed64_);
  repeated_sfixed32_.UnsafeArenaSwap(&other->repeated_sfixed32_);
  repeated_sfixed64_.UnsafeArenaSwap(&other->repeated_sfixed64_);
  repeated_float_.UnsafeArenaSwap(&other->repeated_float_);
  repeated_double_.UnsafeArenaSwap(&other->repeated_double_);
  repeated_bool_.UnsafeArenaSwap(&other->repeated_bool_);
  repeated_string_.UnsafeArenaSwap(&other->repeated_string_);
  repeated_bytes_.UnsafeArenaSwap(&other->repeated_bytes_);
  repeatedgroup_.UnsafeArenaSwap(&other->repeatedgroup_);
  repeated_nested_message_.UnsafeArenaSwap(&other->repeated_nested_message_);
  repeated_foreign_message_.UnsafeArenaSwap(&other->repeated_foreign_message_);
  repeated_import_message_.UnsafeArenaSwap(&other->repeated_import_message_);
  repeated_nested_enum_.UnsafeArenaSwap(&other->repeated_nested_enum_);
  repeated_foreign_enum_.UnsafeArenaSwap(&other->repeated_foreign_enum_);
  repeated_import_enum_.UnsafeArenaSwap(&other->repeated_import_enum_);
  repeated_string_piece_.UnsafeArenaSwap(&other->repeated_string_piece_);
  repeated_cord_.UnsafeArenaSwap(&other->repeated_cord_);
  repeated_lazy_message_.UnsafeArenaSwap(&other->repeated_lazy_message_);
  std::swap(default_int32_, other->default_int32_);
  std::swap(default_int64_, other->default_int64_);
  std::swap(default_uint32_, other->default_uint32_);
  std::swap(default_uint64_, other->default_uint64_);
  std::swap(default_sint32_, other->default_sint32_);
  std::swap(default_sint64_, other->default_sint64_);
  std::swap(default_fixed32_, other->default_fixed32_);
  std::swap(default_fixed64_, other->default_fixed64_);
  std::swap(default_sfixed32_, other->default_sfixed32_);
  std::swap(default_sfixed64_, other->default_sfixed64_);
  std::swap(default_float_, other->default_float_);
  std::swap(default_double_, other->default_double_);
  std::swap(default_bool_, other->default_bool_);
  default_string_.Swap(&other->default_string_);
  default_bytes_.Swap(&other->default_bytes_);
  std::swap(default_nested_enum_, other->default_nested_enum_);
  std::swap(default_foreign_enum_, other->default_foreign_enum_);
  std::swap(default_import_enum_, other->default_import_enum_);
  default_string_piece_.Swap(&other->default_string_piece_);
  default_cord_.Swap(&other->default_cord_);
  std::swap(oneof_field_, other->oneof_field_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  std::swap(_has_bits_[2], other->_has_bits_[2]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestAllTypesLite::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestAllTypesLite_NestedMessage

// optional int32 bb = 1;
bool TestAllTypesLite_NestedMessage::has_bb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypesLite_NestedMessage::set_has_bb() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypesLite_NestedMessage::clear_has_bb() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypesLite_NestedMessage::clear_bb() {
  bb_ = 0;
  clear_has_bb();
}
::google::protobuf::int32 TestAllTypesLite_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.NestedMessage.bb)
  return bb_;
}
void TestAllTypesLite_NestedMessage::set_bb(::google::protobuf::int32 value) {
  set_has_bb();
  bb_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.NestedMessage.bb)
}

// optional int64 cc = 2;
bool TestAllTypesLite_NestedMessage::has_cc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestAllTypesLite_NestedMessage::set_has_cc() {
  _has_bits_[0] |= 0x00000002u;
}
void TestAllTypesLite_NestedMessage::clear_has_cc() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestAllTypesLite_NestedMessage::clear_cc() {
  cc_ = GOOGLE_LONGLONG(0);
  clear_has_cc();
}
::google::protobuf::int64 TestAllTypesLite_NestedMessage::cc() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.NestedMessage.cc)
  return cc_;
}
void TestAllTypesLite_NestedMessage::set_cc(::google::protobuf::int64 value) {
  set_has_cc();
  cc_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.NestedMessage.cc)
}

inline const TestAllTypesLite_NestedMessage* TestAllTypesLite_NestedMessage::internal_default_instance() {
  return &TestAllTypesLite_NestedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypesLite_OptionalGroup

// optional int32 a = 17;
bool TestAllTypesLite_OptionalGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypesLite_OptionalGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypesLite_OptionalGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypesLite_OptionalGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestAllTypesLite_OptionalGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.OptionalGroup.a)
  return a_;
}
void TestAllTypesLite_OptionalGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.OptionalGroup.a)
}

inline const TestAllTypesLite_OptionalGroup* TestAllTypesLite_OptionalGroup::internal_default_instance() {
  return &TestAllTypesLite_OptionalGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypesLite_RepeatedGroup

// optional int32 a = 47;
bool TestAllTypesLite_RepeatedGroup::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypesLite_RepeatedGroup::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypesLite_RepeatedGroup::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypesLite_RepeatedGroup::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 TestAllTypesLite_RepeatedGroup::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.RepeatedGroup.a)
  return a_;
}
void TestAllTypesLite_RepeatedGroup::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.RepeatedGroup.a)
}

inline const TestAllTypesLite_RepeatedGroup* TestAllTypesLite_RepeatedGroup::internal_default_instance() {
  return &TestAllTypesLite_RepeatedGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAllTypesLite

// optional int32 optional_int32 = 1;
bool TestAllTypesLite::has_optional_int32() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestAllTypesLite::set_has_optional_int32() {
  _has_bits_[0] |= 0x00000001u;
}
void TestAllTypesLite::clear_has_optional_int32() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestAllTypesLite::clear_optional_int32() {
  optional_int32_ = 0;
  clear_has_optional_int32();
}
::google::protobuf::int32 TestAllTypesLite::optional_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_int32)
  return optional_int32_;
}
void TestAllTypesLite::set_optional_int32(::google::protobuf::int32 value) {
  set_has_optional_int32();
  optional_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_int32)
}

// optional int64 optional_int64 = 2;
bool TestAllTypesLite::has_optional_int64() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestAllTypesLite::set_has_optional_int64() {
  _has_bits_[0] |= 0x00000002u;
}
void TestAllTypesLite::clear_has_optional_int64() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestAllTypesLite::clear_optional_int64() {
  optional_int64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_int64();
}
::google::protobuf::int64 TestAllTypesLite::optional_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_int64)
  return optional_int64_;
}
void TestAllTypesLite::set_optional_int64(::google::protobuf::int64 value) {
  set_has_optional_int64();
  optional_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_int64)
}

// optional uint32 optional_uint32 = 3;
bool TestAllTypesLite::has_optional_uint32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestAllTypesLite::set_has_optional_uint32() {
  _has_bits_[0] |= 0x00000004u;
}
void TestAllTypesLite::clear_has_optional_uint32() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestAllTypesLite::clear_optional_uint32() {
  optional_uint32_ = 0u;
  clear_has_optional_uint32();
}
::google::protobuf::uint32 TestAllTypesLite::optional_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_uint32)
  return optional_uint32_;
}
void TestAllTypesLite::set_optional_uint32(::google::protobuf::uint32 value) {
  set_has_optional_uint32();
  optional_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_uint32)
}

// optional uint64 optional_uint64 = 4;
bool TestAllTypesLite::has_optional_uint64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestAllTypesLite::set_has_optional_uint64() {
  _has_bits_[0] |= 0x00000008u;
}
void TestAllTypesLite::clear_has_optional_uint64() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestAllTypesLite::clear_optional_uint64() {
  optional_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_optional_uint64();
}
::google::protobuf::uint64 TestAllTypesLite::optional_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_uint64)
  return optional_uint64_;
}
void TestAllTypesLite::set_optional_uint64(::google::protobuf::uint64 value) {
  set_has_optional_uint64();
  optional_uint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_uint64)
}

// optional sint32 optional_sint32 = 5;
bool TestAllTypesLite::has_optional_sint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TestAllTypesLite::set_has_optional_sint32() {
  _has_bits_[0] |= 0x00000010u;
}
void TestAllTypesLite::clear_has_optional_sint32() {
  _has_bits_[0] &= ~0x00000010u;
}
void TestAllTypesLite::clear_optional_sint32() {
  optional_sint32_ = 0;
  clear_has_optional_sint32();
}
::google::protobuf::int32 TestAllTypesLite::optional_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_sint32)
  return optional_sint32_;
}
void TestAllTypesLite::set_optional_sint32(::google::protobuf::int32 value) {
  set_has_optional_sint32();
  optional_sint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_sint32)
}

// optional sint64 optional_sint64 = 6;
bool TestAllTypesLite::has_optional_sint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TestAllTypesLite::set_has_optional_sint64() {
  _has_bits_[0] |= 0x00000020u;
}
void TestAllTypesLite::clear_has_optional_sint64() {
  _has_bits_[0] &= ~0x00000020u;
}
void TestAllTypesLite::clear_optional_sint64() {
  optional_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_sint64();
}
::google::protobuf::int64 TestAllTypesLite::optional_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_sint64)
  return optional_sint64_;
}
void TestAllTypesLite::set_optional_sint64(::google::protobuf::int64 value) {
  set_has_optional_sint64();
  optional_sint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_sint64)
}

// optional fixed32 optional_fixed32 = 7;
bool TestAllTypesLite::has_optional_fixed32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TestAllTypesLite::set_has_optional_fixed32() {
  _has_bits_[0] |= 0x00000040u;
}
void TestAllTypesLite::clear_has_optional_fixed32() {
  _has_bits_[0] &= ~0x00000040u;
}
void TestAllTypesLite::clear_optional_fixed32() {
  optional_fixed32_ = 0u;
  clear_has_optional_fixed32();
}
::google::protobuf::uint32 TestAllTypesLite::optional_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_fixed32)
  return optional_fixed32_;
}
void TestAllTypesLite::set_optional_fixed32(::google::protobuf::uint32 value) {
  set_has_optional_fixed32();
  optional_fixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_fixed32)
}

// optional fixed64 optional_fixed64 = 8;
bool TestAllTypesLite::has_optional_fixed64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TestAllTypesLite::set_has_optional_fixed64() {
  _has_bits_[0] |= 0x00000080u;
}
void TestAllTypesLite::clear_has_optional_fixed64() {
  _has_bits_[0] &= ~0x00000080u;
}
void TestAllTypesLite::clear_optional_fixed64() {
  optional_fixed64_ = GOOGLE_ULONGLONG(0);
  clear_has_optional_fixed64();
}
::google::protobuf::uint64 TestAllTypesLite::optional_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_fixed64)
  return optional_fixed64_;
}
void TestAllTypesLite::set_optional_fixed64(::google::protobuf::uint64 value) {
  set_has_optional_fixed64();
  optional_fixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_fixed64)
}

// optional sfixed32 optional_sfixed32 = 9;
bool TestAllTypesLite::has_optional_sfixed32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TestAllTypesLite::set_has_optional_sfixed32() {
  _has_bits_[0] |= 0x00000100u;
}
void TestAllTypesLite::clear_has_optional_sfixed32() {
  _has_bits_[0] &= ~0x00000100u;
}
void TestAllTypesLite::clear_optional_sfixed32() {
  optional_sfixed32_ = 0;
  clear_has_optional_sfixed32();
}
::google::protobuf::int32 TestAllTypesLite::optional_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_sfixed32)
  return optional_sfixed32_;
}
void TestAllTypesLite::set_optional_sfixed32(::google::protobuf::int32 value) {
  set_has_optional_sfixed32();
  optional_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_sfixed32)
}

// optional sfixed64 optional_sfixed64 = 10;
bool TestAllTypesLite::has_optional_sfixed64() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TestAllTypesLite::set_has_optional_sfixed64() {
  _has_bits_[0] |= 0x00000200u;
}
void TestAllTypesLite::clear_has_optional_sfixed64() {
  _has_bits_[0] &= ~0x00000200u;
}
void TestAllTypesLite::clear_optional_sfixed64() {
  optional_sfixed64_ = GOOGLE_LONGLONG(0);
  clear_has_optional_sfixed64();
}
::google::protobuf::int64 TestAllTypesLite::optional_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_sfixed64)
  return optional_sfixed64_;
}
void TestAllTypesLite::set_optional_sfixed64(::google::protobuf::int64 value) {
  set_has_optional_sfixed64();
  optional_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_sfixed64)
}

// optional float optional_float = 11;
bool TestAllTypesLite::has_optional_float() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TestAllTypesLite::set_has_optional_float() {
  _has_bits_[0] |= 0x00000400u;
}
void TestAllTypesLite::clear_has_optional_float() {
  _has_bits_[0] &= ~0x00000400u;
}
void TestAllTypesLite::clear_optional_float() {
  optional_float_ = 0;
  clear_has_optional_float();
}
float TestAllTypesLite::optional_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_float)
  return optional_float_;
}
void TestAllTypesLite::set_optional_float(float value) {
  set_has_optional_float();
  optional_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_float)
}

// optional double optional_double = 12;
bool TestAllTypesLite::has_optional_double() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TestAllTypesLite::set_has_optional_double() {
  _has_bits_[0] |= 0x00000800u;
}
void TestAllTypesLite::clear_has_optional_double() {
  _has_bits_[0] &= ~0x00000800u;
}
void TestAllTypesLite::clear_optional_double() {
  optional_double_ = 0;
  clear_has_optional_double();
}
double TestAllTypesLite::optional_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_double)
  return optional_double_;
}
void TestAllTypesLite::set_optional_double(double value) {
  set_has_optional_double();
  optional_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_double)
}

// optional bool optional_bool = 13;
bool TestAllTypesLite::has_optional_bool() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TestAllTypesLite::set_has_optional_bool() {
  _has_bits_[0] |= 0x00001000u;
}
void TestAllTypesLite::clear_has_optional_bool() {
  _has_bits_[0] &= ~0x00001000u;
}
void TestAllTypesLite::clear_optional_bool() {
  optional_bool_ = false;
  clear_has_optional_bool();
}
bool TestAllTypesLite::optional_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_bool)
  return optional_bool_;
}
void TestAllTypesLite::set_optional_bool(bool value) {
  set_has_optional_bool();
  optional_bool_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_bool)
}

// optional string optional_string = 14;
bool TestAllTypesLite::has_optional_string() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TestAllTypesLite::set_has_optional_string() {
  _has_bits_[0] |= 0x00002000u;
}
void TestAllTypesLite::clear_has_optional_string() {
  _has_bits_[0] &= ~0x00002000u;
}
void TestAllTypesLite::clear_optional_string() {
  optional_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_string();
}
const ::std::string& TestAllTypesLite::optional_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_string)
  return optional_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_optional_string(const ::std::string& value) {
  set_has_optional_string();
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_string)
}
void TestAllTypesLite::set_optional_string(const char* value) {
  set_has_optional_string();
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.optional_string)
}
void TestAllTypesLite::set_optional_string(const char* value, size_t size) {
  set_has_optional_string();
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.optional_string)
}
::std::string* TestAllTypesLite::mutable_optional_string() {
  set_has_optional_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_string)
  return optional_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_optional_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_string)
  clear_has_optional_string();
  return optional_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_allocated_optional_string(::std::string* optional_string) {
  if (optional_string != NULL) {
    set_has_optional_string();
  } else {
    clear_has_optional_string();
  }
  optional_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_string);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_string)
}

// optional bytes optional_bytes = 15;
bool TestAllTypesLite::has_optional_bytes() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TestAllTypesLite::set_has_optional_bytes() {
  _has_bits_[0] |= 0x00004000u;
}
void TestAllTypesLite::clear_has_optional_bytes() {
  _has_bits_[0] &= ~0x00004000u;
}
void TestAllTypesLite::clear_optional_bytes() {
  optional_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_bytes();
}
const ::std::string& TestAllTypesLite::optional_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_bytes)
  return optional_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_optional_bytes(const ::std::string& value) {
  set_has_optional_bytes();
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_bytes)
}
void TestAllTypesLite::set_optional_bytes(const char* value) {
  set_has_optional_bytes();
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.optional_bytes)
}
void TestAllTypesLite::set_optional_bytes(const void* value, size_t size) {
  set_has_optional_bytes();
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.optional_bytes)
}
::std::string* TestAllTypesLite::mutable_optional_bytes() {
  set_has_optional_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_bytes)
  return optional_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_optional_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_bytes)
  clear_has_optional_bytes();
  return optional_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_allocated_optional_bytes(::std::string* optional_bytes) {
  if (optional_bytes != NULL) {
    set_has_optional_bytes();
  } else {
    clear_has_optional_bytes();
  }
  optional_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_bytes);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_bytes)
}

// optional group OptionalGroup = 16 { ... };
bool TestAllTypesLite::has_optionalgroup() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TestAllTypesLite::set_has_optionalgroup() {
  _has_bits_[0] |= 0x00008000u;
}
void TestAllTypesLite::clear_has_optionalgroup() {
  _has_bits_[0] &= ~0x00008000u;
}
void TestAllTypesLite::clear_optionalgroup() {
  if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestAllTypesLite_OptionalGroup::Clear();
  clear_has_optionalgroup();
}
const ::protobuf_unittest::TestAllTypesLite_OptionalGroup& TestAllTypesLite::optionalgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optionalgroup)
  return optionalgroup_ != NULL ? *optionalgroup_
                         : *::protobuf_unittest::TestAllTypesLite_OptionalGroup::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite_OptionalGroup* TestAllTypesLite::mutable_optionalgroup() {
  set_has_optionalgroup();
  if (optionalgroup_ == NULL) {
    optionalgroup_ = new ::protobuf_unittest::TestAllTypesLite_OptionalGroup;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optionalgroup)
  return optionalgroup_;
}
::protobuf_unittest::TestAllTypesLite_OptionalGroup* TestAllTypesLite::release_optionalgroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optionalgroup)
  clear_has_optionalgroup();
  ::protobuf_unittest::TestAllTypesLite_OptionalGroup* temp = optionalgroup_;
  optionalgroup_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optionalgroup(::protobuf_unittest::TestAllTypesLite_OptionalGroup* optionalgroup) {
  delete optionalgroup_;
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optionalgroup)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
bool TestAllTypesLite::has_optional_nested_message() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TestAllTypesLite::set_has_optional_nested_message() {
  _has_bits_[0] |= 0x00010000u;
}
void TestAllTypesLite::clear_has_optional_nested_message() {
  _has_bits_[0] &= ~0x00010000u;
}
void TestAllTypesLite::clear_optional_nested_message() {
  if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestAllTypesLite_NestedMessage::Clear();
  clear_has_optional_nested_message();
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::optional_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_nested_message)
  return optional_nested_message_ != NULL ? *optional_nested_message_
                         : *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_optional_nested_message() {
  set_has_optional_nested_message();
  if (optional_nested_message_ == NULL) {
    optional_nested_message_ = new ::protobuf_unittest::TestAllTypesLite_NestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_nested_message)
  return optional_nested_message_;
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::release_optional_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_nested_message)
  clear_has_optional_nested_message();
  ::protobuf_unittest::TestAllTypesLite_NestedMessage* temp = optional_nested_message_;
  optional_nested_message_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optional_nested_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* optional_nested_message) {
  delete optional_nested_message_;
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_nested_message)
}

// optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
bool TestAllTypesLite::has_optional_foreign_message() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void TestAllTypesLite::set_has_optional_foreign_message() {
  _has_bits_[0] |= 0x00020000u;
}
void TestAllTypesLite::clear_has_optional_foreign_message() {
  _has_bits_[0] &= ~0x00020000u;
}
void TestAllTypesLite::clear_optional_foreign_message() {
  if (optional_foreign_message_ != NULL) optional_foreign_message_->::protobuf_unittest::ForeignMessageLite::Clear();
  clear_has_optional_foreign_message();
}
const ::protobuf_unittest::ForeignMessageLite& TestAllTypesLite::optional_foreign_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_foreign_message)
  return optional_foreign_message_ != NULL ? *optional_foreign_message_
                         : *::protobuf_unittest::ForeignMessageLite::internal_default_instance();
}
::protobuf_unittest::ForeignMessageLite* TestAllTypesLite::mutable_optional_foreign_message() {
  set_has_optional_foreign_message();
  if (optional_foreign_message_ == NULL) {
    optional_foreign_message_ = new ::protobuf_unittest::ForeignMessageLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_foreign_message)
  return optional_foreign_message_;
}
::protobuf_unittest::ForeignMessageLite* TestAllTypesLite::release_optional_foreign_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_foreign_message)
  clear_has_optional_foreign_message();
  ::protobuf_unittest::ForeignMessageLite* temp = optional_foreign_message_;
  optional_foreign_message_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optional_foreign_message(::protobuf_unittest::ForeignMessageLite* optional_foreign_message) {
  delete optional_foreign_message_;
  optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    set_has_optional_foreign_message();
  } else {
    clear_has_optional_foreign_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_foreign_message)
}

// optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
bool TestAllTypesLite::has_optional_import_message() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void TestAllTypesLite::set_has_optional_import_message() {
  _has_bits_[0] |= 0x00040000u;
}
void TestAllTypesLite::clear_has_optional_import_message() {
  _has_bits_[0] &= ~0x00040000u;
}
void TestAllTypesLite::clear_optional_import_message() {
  if (optional_import_message_ != NULL) optional_import_message_->::protobuf_unittest_import::ImportMessageLite::Clear();
  clear_has_optional_import_message();
}
const ::protobuf_unittest_import::ImportMessageLite& TestAllTypesLite::optional_import_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_import_message)
  return optional_import_message_ != NULL ? *optional_import_message_
                         : *::protobuf_unittest_import::ImportMessageLite::internal_default_instance();
}
::protobuf_unittest_import::ImportMessageLite* TestAllTypesLite::mutable_optional_import_message() {
  set_has_optional_import_message();
  if (optional_import_message_ == NULL) {
    optional_import_message_ = new ::protobuf_unittest_import::ImportMessageLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_import_message)
  return optional_import_message_;
}
::protobuf_unittest_import::ImportMessageLite* TestAllTypesLite::release_optional_import_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_import_message)
  clear_has_optional_import_message();
  ::protobuf_unittest_import::ImportMessageLite* temp = optional_import_message_;
  optional_import_message_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessageLite* optional_import_message) {
  delete optional_import_message_;
  optional_import_message_ = optional_import_message;
  if (optional_import_message) {
    set_has_optional_import_message();
  } else {
    clear_has_optional_import_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_import_message)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
bool TestAllTypesLite::has_optional_nested_enum() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void TestAllTypesLite::set_has_optional_nested_enum() {
  _has_bits_[0] |= 0x00080000u;
}
void TestAllTypesLite::clear_has_optional_nested_enum() {
  _has_bits_[0] &= ~0x00080000u;
}
void TestAllTypesLite::clear_optional_nested_enum() {
  optional_nested_enum_ = 1;
  clear_has_optional_nested_enum();
}
::protobuf_unittest::TestAllTypesLite_NestedEnum TestAllTypesLite::optional_nested_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(optional_nested_enum_);
}
void TestAllTypesLite::set_optional_nested_enum(::protobuf_unittest::TestAllTypesLite_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value));
  set_has_optional_nested_enum();
  optional_nested_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_nested_enum)
}

// optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
bool TestAllTypesLite::has_optional_foreign_enum() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void TestAllTypesLite::set_has_optional_foreign_enum() {
  _has_bits_[0] |= 0x00100000u;
}
void TestAllTypesLite::clear_has_optional_foreign_enum() {
  _has_bits_[0] &= ~0x00100000u;
}
void TestAllTypesLite::clear_optional_foreign_enum() {
  optional_foreign_enum_ = 4;
  clear_has_optional_foreign_enum();
}
::protobuf_unittest::ForeignEnumLite TestAllTypesLite::optional_foreign_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnumLite >(optional_foreign_enum_);
}
void TestAllTypesLite::set_optional_foreign_enum(::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  set_has_optional_foreign_enum();
  optional_foreign_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_foreign_enum)
}

// optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
bool TestAllTypesLite::has_optional_import_enum() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void TestAllTypesLite::set_has_optional_import_enum() {
  _has_bits_[0] |= 0x00200000u;
}
void TestAllTypesLite::clear_has_optional_import_enum() {
  _has_bits_[0] &= ~0x00200000u;
}
void TestAllTypesLite::clear_optional_import_enum() {
  optional_import_enum_ = 7;
  clear_has_optional_import_enum();
}
::protobuf_unittest_import::ImportEnumLite TestAllTypesLite::optional_import_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnumLite >(optional_import_enum_);
}
void TestAllTypesLite::set_optional_import_enum(::protobuf_unittest_import::ImportEnumLite value) {
  assert(::protobuf_unittest_import::ImportEnumLite_IsValid(value));
  set_has_optional_import_enum();
  optional_import_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_import_enum)
}

// optional string optional_string_piece = 24 [ctype = STRING_PIECE];
bool TestAllTypesLite::has_optional_string_piece() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void TestAllTypesLite::set_has_optional_string_piece() {
  _has_bits_[0] |= 0x00400000u;
}
void TestAllTypesLite::clear_has_optional_string_piece() {
  _has_bits_[0] &= ~0x00400000u;
}
void TestAllTypesLite::clear_optional_string_piece() {
  optional_string_piece_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_string_piece();
}
const ::std::string& TestAllTypesLite::optional_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_string_piece)
  return optional_string_piece_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_optional_string_piece(const ::std::string& value) {
  set_has_optional_string_piece();
  optional_string_piece_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_string_piece)
}
void TestAllTypesLite::set_optional_string_piece(const char* value) {
  set_has_optional_string_piece();
  optional_string_piece_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.optional_string_piece)
}
void TestAllTypesLite::set_optional_string_piece(const char* value, size_t size) {
  set_has_optional_string_piece();
  optional_string_piece_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.optional_string_piece)
}
::std::string* TestAllTypesLite::mutable_optional_string_piece() {
  set_has_optional_string_piece();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_string_piece)
  return optional_string_piece_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_optional_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_string_piece)
  clear_has_optional_string_piece();
  return optional_string_piece_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_allocated_optional_string_piece(::std::string* optional_string_piece) {
  if (optional_string_piece != NULL) {
    set_has_optional_string_piece();
  } else {
    clear_has_optional_string_piece();
  }
  optional_string_piece_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_string_piece);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_string_piece)
}

// optional string optional_cord = 25 [ctype = CORD];
bool TestAllTypesLite::has_optional_cord() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void TestAllTypesLite::set_has_optional_cord() {
  _has_bits_[0] |= 0x00800000u;
}
void TestAllTypesLite::clear_has_optional_cord() {
  _has_bits_[0] &= ~0x00800000u;
}
void TestAllTypesLite::clear_optional_cord() {
  optional_cord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_cord();
}
const ::std::string& TestAllTypesLite::optional_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_cord)
  return optional_cord_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_optional_cord(const ::std::string& value) {
  set_has_optional_cord();
  optional_cord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.optional_cord)
}
void TestAllTypesLite::set_optional_cord(const char* value) {
  set_has_optional_cord();
  optional_cord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.optional_cord)
}
void TestAllTypesLite::set_optional_cord(const char* value, size_t size) {
  set_has_optional_cord();
  optional_cord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.optional_cord)
}
::std::string* TestAllTypesLite::mutable_optional_cord() {
  set_has_optional_cord();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_cord)
  return optional_cord_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_optional_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_cord)
  clear_has_optional_cord();
  return optional_cord_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestAllTypesLite::set_allocated_optional_cord(::std::string* optional_cord) {
  if (optional_cord != NULL) {
    set_has_optional_cord();
  } else {
    clear_has_optional_cord();
  }
  optional_cord_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_cord);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_cord)
}

// optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
bool TestAllTypesLite::has_optional_public_import_message() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void TestAllTypesLite::set_has_optional_public_import_message() {
  _has_bits_[0] |= 0x01000000u;
}
void TestAllTypesLite::clear_has_optional_public_import_message() {
  _has_bits_[0] &= ~0x01000000u;
}
void TestAllTypesLite::clear_optional_public_import_message() {
  if (optional_public_import_message_ != NULL) optional_public_import_message_->::protobuf_unittest_import::PublicImportMessageLite::Clear();
  clear_has_optional_public_import_message();
}
const ::protobuf_unittest_import::PublicImportMessageLite& TestAllTypesLite::optional_public_import_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_public_import_message)
  return optional_public_import_message_ != NULL ? *optional_public_import_message_
                         : *::protobuf_unittest_import::PublicImportMessageLite::internal_default_instance();
}
::protobuf_unittest_import::PublicImportMessageLite* TestAllTypesLite::mutable_optional_public_import_message() {
  set_has_optional_public_import_message();
  if (optional_public_import_message_ == NULL) {
    optional_public_import_message_ = new ::protobuf_unittest_import::PublicImportMessageLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_public_import_message)
  return optional_public_import_message_;
}
::protobuf_unittest_import::PublicImportMessageLite* TestAllTypesLite::release_optional_public_import_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_public_import_message)
  clear_has_optional_public_import_message();
  ::protobuf_unittest_import::PublicImportMessageLite* temp = optional_public_import_message_;
  optional_public_import_message_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessageLite* optional_public_import_message) {
  delete optional_public_import_message_;
  optional_public_import_message_ = optional_public_import_message;
  if (optional_public_import_message) {
    set_has_optional_public_import_message();
  } else {
    clear_has_optional_public_import_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_public_import_message)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
bool TestAllTypesLite::has_optional_lazy_message() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void TestAllTypesLite::set_has_optional_lazy_message() {
  _has_bits_[0] |= 0x02000000u;
}
void TestAllTypesLite::clear_has_optional_lazy_message() {
  _has_bits_[0] &= ~0x02000000u;
}
void TestAllTypesLite::clear_optional_lazy_message() {
  if (optional_lazy_message_ != NULL) optional_lazy_message_->::protobuf_unittest::TestAllTypesLite_NestedMessage::Clear();
  clear_has_optional_lazy_message();
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::optional_lazy_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.optional_lazy_message)
  return optional_lazy_message_ != NULL ? *optional_lazy_message_
                         : *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_optional_lazy_message() {
  set_has_optional_lazy_message();
  if (optional_lazy_message_ == NULL) {
    optional_lazy_message_ = new ::protobuf_unittest::TestAllTypesLite_NestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.optional_lazy_message)
  return optional_lazy_message_;
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::release_optional_lazy_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.optional_lazy_message)
  clear_has_optional_lazy_message();
  ::protobuf_unittest::TestAllTypesLite_NestedMessage* temp = optional_lazy_message_;
  optional_lazy_message_ = NULL;
  return temp;
}
void TestAllTypesLite::set_allocated_optional_lazy_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* optional_lazy_message) {
  delete optional_lazy_message_;
  optional_lazy_message_ = optional_lazy_message;
  if (optional_lazy_message) {
    set_has_optional_lazy_message();
  } else {
    clear_has_optional_lazy_message();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.optional_lazy_message)
}

// repeated int32 repeated_int32 = 31;
int TestAllTypesLite::repeated_int32_size() const {
  return repeated_int32_.size();
}
void TestAllTypesLite::clear_repeated_int32() {
  repeated_int32_.Clear();
}
::google::protobuf::int32 TestAllTypesLite::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_int32)
  return repeated_int32_.Get(index);
}
void TestAllTypesLite::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_int32)
}
void TestAllTypesLite::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypesLite::repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_int32)
  return repeated_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypesLite::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_int32)
  return &repeated_int32_;
}

// repeated int64 repeated_int64 = 32;
int TestAllTypesLite::repeated_int64_size() const {
  return repeated_int64_.size();
}
void TestAllTypesLite::clear_repeated_int64() {
  repeated_int64_.Clear();
}
::google::protobuf::int64 TestAllTypesLite::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_int64)
  return repeated_int64_.Get(index);
}
void TestAllTypesLite::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_int64)
}
void TestAllTypesLite::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypesLite::repeated_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_int64)
  return repeated_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypesLite::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_int64)
  return &repeated_int64_;
}

// repeated uint32 repeated_uint32 = 33;
int TestAllTypesLite::repeated_uint32_size() const {
  return repeated_uint32_.size();
}
void TestAllTypesLite::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
::google::protobuf::uint32 TestAllTypesLite::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_uint32)
  return repeated_uint32_.Get(index);
}
void TestAllTypesLite::set_repeated_uint32(int index, ::google::protobuf::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_uint32)
}
void TestAllTypesLite::add_repeated_uint32(::google::protobuf::uint32 value) {
  repeated_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_uint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestAllTypesLite::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_uint32)
  return repeated_uint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestAllTypesLite::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_uint32)
  return &repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 34;
int TestAllTypesLite::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
void TestAllTypesLite::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
::google::protobuf::uint64 TestAllTypesLite::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_uint64)
  return repeated_uint64_.Get(index);
}
void TestAllTypesLite::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_uint64)
}
void TestAllTypesLite::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestAllTypesLite::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_uint64)
  return repeated_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestAllTypesLite::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_uint64)
  return &repeated_uint64_;
}

// repeated sint32 repeated_sint32 = 35;
int TestAllTypesLite::repeated_sint32_size() const {
  return repeated_sint32_.size();
}
void TestAllTypesLite::clear_repeated_sint32() {
  repeated_sint32_.Clear();
}
::google::protobuf::int32 TestAllTypesLite::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_sint32)
  return repeated_sint32_.Get(index);
}
void TestAllTypesLite::set_repeated_sint32(int index, ::google::protobuf::int32 value) {
  repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_sint32)
}
void TestAllTypesLite::add_repeated_sint32(::google::protobuf::int32 value) {
  repeated_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_sint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypesLite::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_sint32)
  return repeated_sint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypesLite::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_sint32)
  return &repeated_sint32_;
}

// repeated sint64 repeated_sint64 = 36;
int TestAllTypesLite::repeated_sint64_size() const {
  return repeated_sint64_.size();
}
void TestAllTypesLite::clear_repeated_sint64() {
  repeated_sint64_.Clear();
}
::google::protobuf::int64 TestAllTypesLite::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_sint64)
  return repeated_sint64_.Get(index);
}
void TestAllTypesLite::set_repeated_sint64(int index, ::google::protobuf::int64 value) {
  repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_sint64)
}
void TestAllTypesLite::add_repeated_sint64(::google::protobuf::int64 value) {
  repeated_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_sint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypesLite::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_sint64)
  return repeated_sint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypesLite::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_sint64)
  return &repeated_sint64_;
}

// repeated fixed32 repeated_fixed32 = 37;
int TestAllTypesLite::repeated_fixed32_size() const {
  return repeated_fixed32_.size();
}
void TestAllTypesLite::clear_repeated_fixed32() {
  repeated_fixed32_.Clear();
}
::google::protobuf::uint32 TestAllTypesLite::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_fixed32)
  return repeated_fixed32_.Get(index);
}
void TestAllTypesLite::set_repeated_fixed32(int index, ::google::protobuf::uint32 value) {
  repeated_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_fixed32)
}
void TestAllTypesLite::add_repeated_fixed32(::google::protobuf::uint32 value) {
  repeated_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestAllTypesLite::repeated_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_fixed32)
  return repeated_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestAllTypesLite::mutable_repeated_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_fixed32)
  return &repeated_fixed32_;
}

// repeated fixed64 repeated_fixed64 = 38;
int TestAllTypesLite::repeated_fixed64_size() const {
  return repeated_fixed64_.size();
}
void TestAllTypesLite::clear_repeated_fixed64() {
  repeated_fixed64_.Clear();
}
::google::protobuf::uint64 TestAllTypesLite::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_fixed64)
  return repeated_fixed64_.Get(index);
}
void TestAllTypesLite::set_repeated_fixed64(int index, ::google::protobuf::uint64 value) {
  repeated_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_fixed64)
}
void TestAllTypesLite::add_repeated_fixed64(::google::protobuf::uint64 value) {
  repeated_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestAllTypesLite::repeated_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_fixed64)
  return repeated_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestAllTypesLite::mutable_repeated_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_fixed64)
  return &repeated_fixed64_;
}

// repeated sfixed32 repeated_sfixed32 = 39;
int TestAllTypesLite::repeated_sfixed32_size() const {
  return repeated_sfixed32_.size();
}
void TestAllTypesLite::clear_repeated_sfixed32() {
  repeated_sfixed32_.Clear();
}
::google::protobuf::int32 TestAllTypesLite::repeated_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_sfixed32)
  return repeated_sfixed32_.Get(index);
}
void TestAllTypesLite::set_repeated_sfixed32(int index, ::google::protobuf::int32 value) {
  repeated_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_sfixed32)
}
void TestAllTypesLite::add_repeated_sfixed32(::google::protobuf::int32 value) {
  repeated_sfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_sfixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestAllTypesLite::repeated_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_sfixed32)
  return repeated_sfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestAllTypesLite::mutable_repeated_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_sfixed32)
  return &repeated_sfixed32_;
}

// repeated sfixed64 repeated_sfixed64 = 40;
int TestAllTypesLite::repeated_sfixed64_size() const {
  return repeated_sfixed64_.size();
}
void TestAllTypesLite::clear_repeated_sfixed64() {
  repeated_sfixed64_.Clear();
}
::google::protobuf::int64 TestAllTypesLite::repeated_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_sfixed64)
  return repeated_sfixed64_.Get(index);
}
void TestAllTypesLite::set_repeated_sfixed64(int index, ::google::protobuf::int64 value) {
  repeated_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_sfixed64)
}
void TestAllTypesLite::add_repeated_sfixed64(::google::protobuf::int64 value) {
  repeated_sfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_sfixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestAllTypesLite::repeated_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_sfixed64)
  return repeated_sfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestAllTypesLite::mutable_repeated_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_sfixed64)
  return &repeated_sfixed64_;
}

// repeated float repeated_float = 41;
int TestAllTypesLite::repeated_float_size() const {
  return repeated_float_.size();
}
void TestAllTypesLite::clear_repeated_float() {
  repeated_float_.Clear();
}
float TestAllTypesLite::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_float)
  return repeated_float_.Get(index);
}
void TestAllTypesLite::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_float)
}
void TestAllTypesLite::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_float)
}
const ::google::protobuf::RepeatedField< float >&
TestAllTypesLite::repeated_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_float)
  return repeated_float_;
}
::google::protobuf::RepeatedField< float >*
TestAllTypesLite::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_float)
  return &repeated_float_;
}

// repeated double repeated_double = 42;
int TestAllTypesLite::repeated_double_size() const {
  return repeated_double_.size();
}
void TestAllTypesLite::clear_repeated_double() {
  repeated_double_.Clear();
}
double TestAllTypesLite::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_double)
  return repeated_double_.Get(index);
}
void TestAllTypesLite::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_double)
}
void TestAllTypesLite::add_repeated_double(double value) {
  repeated_double_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_double)
}
const ::google::protobuf::RepeatedField< double >&
TestAllTypesLite::repeated_double() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_double)
  return repeated_double_;
}
::google::protobuf::RepeatedField< double >*
TestAllTypesLite::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_double)
  return &repeated_double_;
}

// repeated bool repeated_bool = 43;
int TestAllTypesLite::repeated_bool_size() const {
  return repeated_bool_.size();
}
void TestAllTypesLite::clear_repeated_bool() {
  repeated_bool_.Clear();
}
bool TestAllTypesLite::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_bool)
  return repeated_bool_.Get(index);
}
void TestAllTypesLite::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_bool)
}
void TestAllTypesLite::add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_bool)
}
const ::google::protobuf::RepeatedField< bool >&
TestAllTypesLite::repeated_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_bool)
  return repeated_bool_;
}
::google::protobuf::RepeatedField< bool >*
TestAllTypesLite::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_bool)
  return &repeated_bool_;
}

// repeated string repeated_string = 44;
int TestAllTypesLite::repeated_string_size() const {
  return repeated_string_.size();
}
void TestAllTypesLite::clear_repeated_string() {
  repeated_string_.Clear();
}
const ::std::string& TestAllTypesLite::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_string)
  return repeated_string_.Get(index);
}
::std::string* TestAllTypesLite::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_string)
  return repeated_string_.Mutable(index);
}
void TestAllTypesLite::set_repeated_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_string)
  repeated_string_.Mutable(index)->assign(value);
}
void TestAllTypesLite::set_repeated_string(int index, const char* value) {
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.repeated_string)
}
void TestAllTypesLite::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.repeated_string)
}
::std::string* TestAllTypesLite::add_repeated_string() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypesLite.repeated_string)
  return repeated_string_.Add();
}
void TestAllTypesLite::add_repeated_string(const ::std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_string)
}
void TestAllTypesLite::add_repeated_string(const char* value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypesLite.repeated_string)
}
void TestAllTypesLite::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypesLite.repeated_string)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypesLite::repeated_string() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_string)
  return repeated_string_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypesLite::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 45;
int TestAllTypesLite::repeated_bytes_size() const {
  return repeated_bytes_.size();
}
void TestAllTypesLite::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
const ::std::string& TestAllTypesLite::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  return repeated_bytes_.Get(index);
}
::std::string* TestAllTypesLite::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
void TestAllTypesLite::set_repeated_bytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(value);
}
void TestAllTypesLite::set_repeated_bytes(int index, const char* value) {
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.repeated_bytes)
}
void TestAllTypesLite::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.repeated_bytes)
}
::std::string* TestAllTypesLite::add_repeated_bytes() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  return repeated_bytes_.Add();
}
void TestAllTypesLite::add_repeated_bytes(const ::std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_bytes)
}
void TestAllTypesLite::add_repeated_bytes(const char* value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypesLite.repeated_bytes)
}
void TestAllTypesLite::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypesLite.repeated_bytes)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypesLite::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  return repeated_bytes_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypesLite::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_bytes)
  return &repeated_bytes_;
}

// repeated group RepeatedGroup = 46 { ... };
int TestAllTypesLite::repeatedgroup_size() const {
  return repeatedgroup_.size();
}
void TestAllTypesLite::clear_repeatedgroup() {
  repeatedgroup_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite_RepeatedGroup& TestAllTypesLite::repeatedgroup(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeatedgroup)
  return repeatedgroup_.Get(index);
}
::protobuf_unittest::TestAllTypesLite_RepeatedGroup* TestAllTypesLite::mutable_repeatedgroup(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeatedgroup)
  return repeatedgroup_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite_RepeatedGroup* TestAllTypesLite::add_repeatedgroup() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeatedgroup)
  return repeatedgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_RepeatedGroup >*
TestAllTypesLite::mutable_repeatedgroup() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeatedgroup)
  return &repeatedgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_RepeatedGroup >&
TestAllTypesLite::repeatedgroup() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeatedgroup)
  return repeatedgroup_;
}

// repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
int TestAllTypesLite::repeated_nested_message_size() const {
  return repeated_nested_message_.size();
}
void TestAllTypesLite::clear_repeated_nested_message() {
  repeated_nested_message_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::repeated_nested_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_nested_message)
  return repeated_nested_message_.Get(index);
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_repeated_nested_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_nested_message)
  return repeated_nested_message_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::add_repeated_nested_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_nested_message)
  return repeated_nested_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_NestedMessage >*
TestAllTypesLite::mutable_repeated_nested_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_nested_message)
  return &repeated_nested_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_NestedMessage >&
TestAllTypesLite::repeated_nested_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_nested_message)
  return repeated_nested_message_;
}

// repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
int TestAllTypesLite::repeated_foreign_message_size() const {
  return repeated_foreign_message_.size();
}
void TestAllTypesLite::clear_repeated_foreign_message() {
  repeated_foreign_message_.Clear();
}
const ::protobuf_unittest::ForeignMessageLite& TestAllTypesLite::repeated_foreign_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_foreign_message)
  return repeated_foreign_message_.Get(index);
}
::protobuf_unittest::ForeignMessageLite* TestAllTypesLite::mutable_repeated_foreign_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_foreign_message)
  return repeated_foreign_message_.Mutable(index);
}
::protobuf_unittest::ForeignMessageLite* TestAllTypesLite::add_repeated_foreign_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_foreign_message)
  return repeated_foreign_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessageLite >*
TestAllTypesLite::mutable_repeated_foreign_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_foreign_message)
  return &repeated_foreign_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::ForeignMessageLite >&
TestAllTypesLite::repeated_foreign_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_foreign_message)
  return repeated_foreign_message_;
}

// repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
int TestAllTypesLite::repeated_import_message_size() const {
  return repeated_import_message_.size();
}
void TestAllTypesLite::clear_repeated_import_message() {
  repeated_import_message_.Clear();
}
const ::protobuf_unittest_import::ImportMessageLite& TestAllTypesLite::repeated_import_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_import_message)
  return repeated_import_message_.Get(index);
}
::protobuf_unittest_import::ImportMessageLite* TestAllTypesLite::mutable_repeated_import_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_import_message)
  return repeated_import_message_.Mutable(index);
}
::protobuf_unittest_import::ImportMessageLite* TestAllTypesLite::add_repeated_import_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_import_message)
  return repeated_import_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest_import::ImportMessageLite >*
TestAllTypesLite::mutable_repeated_import_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_import_message)
  return &repeated_import_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest_import::ImportMessageLite >&
TestAllTypesLite::repeated_import_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_import_message)
  return repeated_import_message_;
}

// repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
int TestAllTypesLite::repeated_nested_enum_size() const {
  return repeated_nested_enum_.size();
}
void TestAllTypesLite::clear_repeated_nested_enum() {
  repeated_nested_enum_.Clear();
}
::protobuf_unittest::TestAllTypesLite_NestedEnum TestAllTypesLite::repeated_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(repeated_nested_enum_.Get(index));
}
void TestAllTypesLite::set_repeated_nested_enum(int index, ::protobuf_unittest::TestAllTypesLite_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value));
  repeated_nested_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_nested_enum)
}
void TestAllTypesLite::add_repeated_nested_enum(::protobuf_unittest::TestAllTypesLite_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value));
  repeated_nested_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_nested_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypesLite::repeated_nested_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_nested_enum)
  return repeated_nested_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypesLite::mutable_repeated_nested_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_nested_enum)
  return &repeated_nested_enum_;
}

// repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
int TestAllTypesLite::repeated_foreign_enum_size() const {
  return repeated_foreign_enum_.size();
}
void TestAllTypesLite::clear_repeated_foreign_enum() {
  repeated_foreign_enum_.Clear();
}
::protobuf_unittest::ForeignEnumLite TestAllTypesLite::repeated_foreign_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnumLite >(repeated_foreign_enum_.Get(index));
}
void TestAllTypesLite::set_repeated_foreign_enum(int index, ::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  repeated_foreign_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_foreign_enum)
}
void TestAllTypesLite::add_repeated_foreign_enum(::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  repeated_foreign_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_foreign_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypesLite::repeated_foreign_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_foreign_enum)
  return repeated_foreign_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypesLite::mutable_repeated_foreign_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_foreign_enum)
  return &repeated_foreign_enum_;
}

// repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
int TestAllTypesLite::repeated_import_enum_size() const {
  return repeated_import_enum_.size();
}
void TestAllTypesLite::clear_repeated_import_enum() {
  repeated_import_enum_.Clear();
}
::protobuf_unittest_import::ImportEnumLite TestAllTypesLite::repeated_import_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnumLite >(repeated_import_enum_.Get(index));
}
void TestAllTypesLite::set_repeated_import_enum(int index, ::protobuf_unittest_import::ImportEnumLite value) {
  assert(::protobuf_unittest_import::ImportEnumLite_IsValid(value));
  repeated_import_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_import_enum)
}
void TestAllTypesLite::add_repeated_import_enum(::protobuf_unittest_import::ImportEnumLite value) {
  assert(::protobuf_unittest_import::ImportEnumLite_IsValid(value));
  repeated_import_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_import_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestAllTypesLite::repeated_import_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_import_enum)
  return repeated_import_enum_;
}
::google::protobuf::RepeatedField<int>*
TestAllTypesLite::mutable_repeated_import_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_import_enum)
  return &repeated_import_enum_;
}

// repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
int TestAllTypesLite::repeated_string_piece_size() const {
  return repeated_string_piece_.size();
}
void TestAllTypesLite::clear_repeated_string_piece() {
  repeated_string_piece_.Clear();
}
const ::std::string& TestAllTypesLite::repeated_string_piece(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  return repeated_string_piece_.Get(index);
}
::std::string* TestAllTypesLite::mutable_repeated_string_piece(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  return repeated_string_piece_.Mutable(index);
}
void TestAllTypesLite::set_repeated_string_piece(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  repeated_string_piece_.Mutable(index)->assign(value);
}
void TestAllTypesLite::set_repeated_string_piece(int index, const char* value) {
  repeated_string_piece_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
}
void TestAllTypesLite::set_repeated_string_piece(int index, const char* value, size_t size) {
  repeated_string_piece_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
}
::std::string* TestAllTypesLite::add_repeated_string_piece() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  return repeated_string_piece_.Add();
}
void TestAllTypesLite::add_repeated_string_piece(const ::std::string& value) {
  repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
}
void TestAllTypesLite::add_repeated_string_piece(const char* value) {
  repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
}
void TestAllTypesLite::add_repeated_string_piece(const char* value, size_t size) {
  repeated_string_piece_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypesLite::repeated_string_piece() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  return repeated_string_piece_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypesLite::mutable_repeated_string_piece() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_string_piece)
  return &repeated_string_piece_;
}

// repeated string repeated_cord = 55 [ctype = CORD];
int TestAllTypesLite::repeated_cord_size() const {
  return repeated_cord_.size();
}
void TestAllTypesLite::clear_repeated_cord() {
  repeated_cord_.Clear();
}
const ::std::string& TestAllTypesLite::repeated_cord(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_cord)
  return repeated_cord_.Get(index);
}
::std::string* TestAllTypesLite::mutable_repeated_cord(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_cord)
  return repeated_cord_.Mutable(index);
}
void TestAllTypesLite::set_repeated_cord(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.repeated_cord)
  repeated_cord_.Mutable(index)->assign(value);
}
void TestAllTypesLite::set_repeated_cord(int index, const char* value) {
  repeated_cord_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.repeated_cord)
}
void TestAllTypesLite::set_repeated_cord(int index, const char* value, size_t size) {
  repeated_cord_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.repeated_cord)
}
::std::string* TestAllTypesLite::add_repeated_cord() {
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestAllTypesLite.repeated_cord)
  return repeated_cord_.Add();
}
void TestAllTypesLite::add_repeated_cord(const ::std::string& value) {
  repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_cord)
}
void TestAllTypesLite::add_repeated_cord(const char* value) {
  repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_unittest.TestAllTypesLite.repeated_cord)
}
void TestAllTypesLite::add_repeated_cord(const char* value, size_t size) {
  repeated_cord_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_unittest.TestAllTypesLite.repeated_cord)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAllTypesLite::repeated_cord() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_cord)
  return repeated_cord_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TestAllTypesLite::mutable_repeated_cord() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_cord)
  return &repeated_cord_;
}

// repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
int TestAllTypesLite::repeated_lazy_message_size() const {
  return repeated_lazy_message_.size();
}
void TestAllTypesLite::clear_repeated_lazy_message() {
  repeated_lazy_message_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::repeated_lazy_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.repeated_lazy_message)
  return repeated_lazy_message_.Get(index);
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_repeated_lazy_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.repeated_lazy_message)
  return repeated_lazy_message_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::add_repeated_lazy_message() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestAllTypesLite.repeated_lazy_message)
  return repeated_lazy_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_NestedMessage >*
TestAllTypesLite::mutable_repeated_lazy_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestAllTypesLite.repeated_lazy_message)
  return &repeated_lazy_message_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite_NestedMessage >&
TestAllTypesLite::repeated_lazy_message() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestAllTypesLite.repeated_lazy_message)
  return repeated_lazy_message_;
}

// optional int32 default_int32 = 61 [default = 41];
bool TestAllTypesLite::has_default_int32() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
void TestAllTypesLite::set_has_default_int32() {
  _has_bits_[1] |= 0x00080000u;
}
void TestAllTypesLite::clear_has_default_int32() {
  _has_bits_[1] &= ~0x00080000u;
}
void TestAllTypesLite::clear_default_int32() {
  default_int32_ = 41;
  clear_has_default_int32();
}
::google::protobuf::int32 TestAllTypesLite::default_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_int32)
  return default_int32_;
}
void TestAllTypesLite::set_default_int32(::google::protobuf::int32 value) {
  set_has_default_int32();
  default_int32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_int32)
}

// optional int64 default_int64 = 62 [default = 42];
bool TestAllTypesLite::has_default_int64() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
void TestAllTypesLite::set_has_default_int64() {
  _has_bits_[1] |= 0x00100000u;
}
void TestAllTypesLite::clear_has_default_int64() {
  _has_bits_[1] &= ~0x00100000u;
}
void TestAllTypesLite::clear_default_int64() {
  default_int64_ = GOOGLE_LONGLONG(42);
  clear_has_default_int64();
}
::google::protobuf::int64 TestAllTypesLite::default_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_int64)
  return default_int64_;
}
void TestAllTypesLite::set_default_int64(::google::protobuf::int64 value) {
  set_has_default_int64();
  default_int64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_int64)
}

// optional uint32 default_uint32 = 63 [default = 43];
bool TestAllTypesLite::has_default_uint32() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
void TestAllTypesLite::set_has_default_uint32() {
  _has_bits_[1] |= 0x00200000u;
}
void TestAllTypesLite::clear_has_default_uint32() {
  _has_bits_[1] &= ~0x00200000u;
}
void TestAllTypesLite::clear_default_uint32() {
  default_uint32_ = 43u;
  clear_has_default_uint32();
}
::google::protobuf::uint32 TestAllTypesLite::default_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_uint32)
  return default_uint32_;
}
void TestAllTypesLite::set_default_uint32(::google::protobuf::uint32 value) {
  set_has_default_uint32();
  default_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_uint32)
}

// optional uint64 default_uint64 = 64 [default = 44];
bool TestAllTypesLite::has_default_uint64() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
void TestAllTypesLite::set_has_default_uint64() {
  _has_bits_[1] |= 0x00400000u;
}
void TestAllTypesLite::clear_has_default_uint64() {
  _has_bits_[1] &= ~0x00400000u;
}
void TestAllTypesLite::clear_default_uint64() {
  default_uint64_ = GOOGLE_ULONGLONG(44);
  clear_has_default_uint64();
}
::google::protobuf::uint64 TestAllTypesLite::default_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_uint64)
  return default_uint64_;
}
void TestAllTypesLite::set_default_uint64(::google::protobuf::uint64 value) {
  set_has_default_uint64();
  default_uint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_uint64)
}

// optional sint32 default_sint32 = 65 [default = -45];
bool TestAllTypesLite::has_default_sint32() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
void TestAllTypesLite::set_has_default_sint32() {
  _has_bits_[1] |= 0x00800000u;
}
void TestAllTypesLite::clear_has_default_sint32() {
  _has_bits_[1] &= ~0x00800000u;
}
void TestAllTypesLite::clear_default_sint32() {
  default_sint32_ = -45;
  clear_has_default_sint32();
}
::google::protobuf::int32 TestAllTypesLite::default_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_sint32)
  return default_sint32_;
}
void TestAllTypesLite::set_default_sint32(::google::protobuf::int32 value) {
  set_has_default_sint32();
  default_sint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_sint32)
}

// optional sint64 default_sint64 = 66 [default = 46];
bool TestAllTypesLite::has_default_sint64() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
void TestAllTypesLite::set_has_default_sint64() {
  _has_bits_[1] |= 0x01000000u;
}
void TestAllTypesLite::clear_has_default_sint64() {
  _has_bits_[1] &= ~0x01000000u;
}
void TestAllTypesLite::clear_default_sint64() {
  default_sint64_ = GOOGLE_LONGLONG(46);
  clear_has_default_sint64();
}
::google::protobuf::int64 TestAllTypesLite::default_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_sint64)
  return default_sint64_;
}
void TestAllTypesLite::set_default_sint64(::google::protobuf::int64 value) {
  set_has_default_sint64();
  default_sint64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_sint64)
}

// optional fixed32 default_fixed32 = 67 [default = 47];
bool TestAllTypesLite::has_default_fixed32() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
void TestAllTypesLite::set_has_default_fixed32() {
  _has_bits_[1] |= 0x02000000u;
}
void TestAllTypesLite::clear_has_default_fixed32() {
  _has_bits_[1] &= ~0x02000000u;
}
void TestAllTypesLite::clear_default_fixed32() {
  default_fixed32_ = 47u;
  clear_has_default_fixed32();
}
::google::protobuf::uint32 TestAllTypesLite::default_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_fixed32)
  return default_fixed32_;
}
void TestAllTypesLite::set_default_fixed32(::google::protobuf::uint32 value) {
  set_has_default_fixed32();
  default_fixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_fixed32)
}

// optional fixed64 default_fixed64 = 68 [default = 48];
bool TestAllTypesLite::has_default_fixed64() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
void TestAllTypesLite::set_has_default_fixed64() {
  _has_bits_[1] |= 0x04000000u;
}
void TestAllTypesLite::clear_has_default_fixed64() {
  _has_bits_[1] &= ~0x04000000u;
}
void TestAllTypesLite::clear_default_fixed64() {
  default_fixed64_ = GOOGLE_ULONGLONG(48);
  clear_has_default_fixed64();
}
::google::protobuf::uint64 TestAllTypesLite::default_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_fixed64)
  return default_fixed64_;
}
void TestAllTypesLite::set_default_fixed64(::google::protobuf::uint64 value) {
  set_has_default_fixed64();
  default_fixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_fixed64)
}

// optional sfixed32 default_sfixed32 = 69 [default = 49];
bool TestAllTypesLite::has_default_sfixed32() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
void TestAllTypesLite::set_has_default_sfixed32() {
  _has_bits_[1] |= 0x08000000u;
}
void TestAllTypesLite::clear_has_default_sfixed32() {
  _has_bits_[1] &= ~0x08000000u;
}
void TestAllTypesLite::clear_default_sfixed32() {
  default_sfixed32_ = 49;
  clear_has_default_sfixed32();
}
::google::protobuf::int32 TestAllTypesLite::default_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_sfixed32)
  return default_sfixed32_;
}
void TestAllTypesLite::set_default_sfixed32(::google::protobuf::int32 value) {
  set_has_default_sfixed32();
  default_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_sfixed32)
}

// optional sfixed64 default_sfixed64 = 70 [default = -50];
bool TestAllTypesLite::has_default_sfixed64() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
void TestAllTypesLite::set_has_default_sfixed64() {
  _has_bits_[1] |= 0x10000000u;
}
void TestAllTypesLite::clear_has_default_sfixed64() {
  _has_bits_[1] &= ~0x10000000u;
}
void TestAllTypesLite::clear_default_sfixed64() {
  default_sfixed64_ = GOOGLE_LONGLONG(-50);
  clear_has_default_sfixed64();
}
::google::protobuf::int64 TestAllTypesLite::default_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_sfixed64)
  return default_sfixed64_;
}
void TestAllTypesLite::set_default_sfixed64(::google::protobuf::int64 value) {
  set_has_default_sfixed64();
  default_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_sfixed64)
}

// optional float default_float = 71 [default = 51.5];
bool TestAllTypesLite::has_default_float() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
void TestAllTypesLite::set_has_default_float() {
  _has_bits_[1] |= 0x20000000u;
}
void TestAllTypesLite::clear_has_default_float() {
  _has_bits_[1] &= ~0x20000000u;
}
void TestAllTypesLite::clear_default_float() {
  default_float_ = 51.5f;
  clear_has_default_float();
}
float TestAllTypesLite::default_float() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_float)
  return default_float_;
}
void TestAllTypesLite::set_default_float(float value) {
  set_has_default_float();
  default_float_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_float)
}

// optional double default_double = 72 [default = 52000];
bool TestAllTypesLite::has_default_double() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
void TestAllTypesLite::set_has_default_double() {
  _has_bits_[1] |= 0x40000000u;
}
void TestAllTypesLite::clear_has_default_double() {
  _has_bits_[1] &= ~0x40000000u;
}
void TestAllTypesLite::clear_default_double() {
  default_double_ = 52000;
  clear_has_default_double();
}
double TestAllTypesLite::default_double() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_double)
  return default_double_;
}
void TestAllTypesLite::set_default_double(double value) {
  set_has_default_double();
  default_double_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_double)
}

// optional bool default_bool = 73 [default = true];
bool TestAllTypesLite::has_default_bool() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
void TestAllTypesLite::set_has_default_bool() {
  _has_bits_[1] |= 0x80000000u;
}
void TestAllTypesLite::clear_has_default_bool() {
  _has_bits_[1] &= ~0x80000000u;
}
void TestAllTypesLite::clear_default_bool() {
  default_bool_ = true;
  clear_has_default_bool();
}
bool TestAllTypesLite::default_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_bool)
  return default_bool_;
}
void TestAllTypesLite::set_default_bool(bool value) {
  set_has_default_bool();
  default_bool_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_bool)
}

// optional string default_string = 74 [default = "hello"];
bool TestAllTypesLite::has_default_string() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
void TestAllTypesLite::set_has_default_string() {
  _has_bits_[2] |= 0x00000001u;
}
void TestAllTypesLite::clear_has_default_string() {
  _has_bits_[2] &= ~0x00000001u;
}
void TestAllTypesLite::clear_default_string() {
  default_string_.ClearToDefaultNoArena(_default_default_string_);
  clear_has_default_string();
}
const ::std::string& TestAllTypesLite::default_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_string)
  return default_string_.GetNoArena(_default_default_string_);
}
void TestAllTypesLite::set_default_string(const ::std::string& value) {
  set_has_default_string();
  default_string_.SetNoArena(_default_default_string_, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_string)
}
void TestAllTypesLite::set_default_string(const char* value) {
  set_has_default_string();
  default_string_.SetNoArena(_default_default_string_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.default_string)
}
void TestAllTypesLite::set_default_string(const char* value, size_t size) {
  set_has_default_string();
  default_string_.SetNoArena(_default_default_string_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.default_string)
}
::std::string* TestAllTypesLite::mutable_default_string() {
  set_has_default_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.default_string)
  return default_string_.MutableNoArena(_default_default_string_);
}
::std::string* TestAllTypesLite::release_default_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.default_string)
  clear_has_default_string();
  return default_string_.ReleaseNoArena(_default_default_string_);
}
void TestAllTypesLite::set_allocated_default_string(::std::string* default_string) {
  if (default_string != NULL) {
    set_has_default_string();
  } else {
    clear_has_default_string();
  }
  default_string_.SetAllocatedNoArena(_default_default_string_, default_string);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.default_string)
}

// optional bytes default_bytes = 75 [default = "world"];
bool TestAllTypesLite::has_default_bytes() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
void TestAllTypesLite::set_has_default_bytes() {
  _has_bits_[2] |= 0x00000002u;
}
void TestAllTypesLite::clear_has_default_bytes() {
  _has_bits_[2] &= ~0x00000002u;
}
void TestAllTypesLite::clear_default_bytes() {
  default_bytes_.ClearToDefaultNoArena(_default_default_bytes_);
  clear_has_default_bytes();
}
const ::std::string& TestAllTypesLite::default_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_bytes)
  return default_bytes_.GetNoArena(_default_default_bytes_);
}
void TestAllTypesLite::set_default_bytes(const ::std::string& value) {
  set_has_default_bytes();
  default_bytes_.SetNoArena(_default_default_bytes_, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_bytes)
}
void TestAllTypesLite::set_default_bytes(const char* value) {
  set_has_default_bytes();
  default_bytes_.SetNoArena(_default_default_bytes_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.default_bytes)
}
void TestAllTypesLite::set_default_bytes(const void* value, size_t size) {
  set_has_default_bytes();
  default_bytes_.SetNoArena(_default_default_bytes_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.default_bytes)
}
::std::string* TestAllTypesLite::mutable_default_bytes() {
  set_has_default_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.default_bytes)
  return default_bytes_.MutableNoArena(_default_default_bytes_);
}
::std::string* TestAllTypesLite::release_default_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.default_bytes)
  clear_has_default_bytes();
  return default_bytes_.ReleaseNoArena(_default_default_bytes_);
}
void TestAllTypesLite::set_allocated_default_bytes(::std::string* default_bytes) {
  if (default_bytes != NULL) {
    set_has_default_bytes();
  } else {
    clear_has_default_bytes();
  }
  default_bytes_.SetAllocatedNoArena(_default_default_bytes_, default_bytes);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.default_bytes)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
bool TestAllTypesLite::has_default_nested_enum() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
void TestAllTypesLite::set_has_default_nested_enum() {
  _has_bits_[2] |= 0x00000004u;
}
void TestAllTypesLite::clear_has_default_nested_enum() {
  _has_bits_[2] &= ~0x00000004u;
}
void TestAllTypesLite::clear_default_nested_enum() {
  default_nested_enum_ = 2;
  clear_has_default_nested_enum();
}
::protobuf_unittest::TestAllTypesLite_NestedEnum TestAllTypesLite::default_nested_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_nested_enum)
  return static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(default_nested_enum_);
}
void TestAllTypesLite::set_default_nested_enum(::protobuf_unittest::TestAllTypesLite_NestedEnum value) {
  assert(::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid(value));
  set_has_default_nested_enum();
  default_nested_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_nested_enum)
}

// optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
bool TestAllTypesLite::has_default_foreign_enum() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
void TestAllTypesLite::set_has_default_foreign_enum() {
  _has_bits_[2] |= 0x00000008u;
}
void TestAllTypesLite::clear_has_default_foreign_enum() {
  _has_bits_[2] &= ~0x00000008u;
}
void TestAllTypesLite::clear_default_foreign_enum() {
  default_foreign_enum_ = 5;
  clear_has_default_foreign_enum();
}
::protobuf_unittest::ForeignEnumLite TestAllTypesLite::default_foreign_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_foreign_enum)
  return static_cast< ::protobuf_unittest::ForeignEnumLite >(default_foreign_enum_);
}
void TestAllTypesLite::set_default_foreign_enum(::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  set_has_default_foreign_enum();
  default_foreign_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_foreign_enum)
}

// optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
bool TestAllTypesLite::has_default_import_enum() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
void TestAllTypesLite::set_has_default_import_enum() {
  _has_bits_[2] |= 0x00000010u;
}
void TestAllTypesLite::clear_has_default_import_enum() {
  _has_bits_[2] &= ~0x00000010u;
}
void TestAllTypesLite::clear_default_import_enum() {
  default_import_enum_ = 8;
  clear_has_default_import_enum();
}
::protobuf_unittest_import::ImportEnumLite TestAllTypesLite::default_import_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_import_enum)
  return static_cast< ::protobuf_unittest_import::ImportEnumLite >(default_import_enum_);
}
void TestAllTypesLite::set_default_import_enum(::protobuf_unittest_import::ImportEnumLite value) {
  assert(::protobuf_unittest_import::ImportEnumLite_IsValid(value));
  set_has_default_import_enum();
  default_import_enum_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_import_enum)
}

// optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
bool TestAllTypesLite::has_default_string_piece() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
void TestAllTypesLite::set_has_default_string_piece() {
  _has_bits_[2] |= 0x00000020u;
}
void TestAllTypesLite::clear_has_default_string_piece() {
  _has_bits_[2] &= ~0x00000020u;
}
void TestAllTypesLite::clear_default_string_piece() {
  default_string_piece_.ClearToDefaultNoArena(_default_default_string_piece_);
  clear_has_default_string_piece();
}
const ::std::string& TestAllTypesLite::default_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_string_piece)
  return default_string_piece_.GetNoArena(_default_default_string_piece_);
}
void TestAllTypesLite::set_default_string_piece(const ::std::string& value) {
  set_has_default_string_piece();
  default_string_piece_.SetNoArena(_default_default_string_piece_, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_string_piece)
}
void TestAllTypesLite::set_default_string_piece(const char* value) {
  set_has_default_string_piece();
  default_string_piece_.SetNoArena(_default_default_string_piece_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.default_string_piece)
}
void TestAllTypesLite::set_default_string_piece(const char* value, size_t size) {
  set_has_default_string_piece();
  default_string_piece_.SetNoArena(_default_default_string_piece_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.default_string_piece)
}
::std::string* TestAllTypesLite::mutable_default_string_piece() {
  set_has_default_string_piece();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.default_string_piece)
  return default_string_piece_.MutableNoArena(_default_default_string_piece_);
}
::std::string* TestAllTypesLite::release_default_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.default_string_piece)
  clear_has_default_string_piece();
  return default_string_piece_.ReleaseNoArena(_default_default_string_piece_);
}
void TestAllTypesLite::set_allocated_default_string_piece(::std::string* default_string_piece) {
  if (default_string_piece != NULL) {
    set_has_default_string_piece();
  } else {
    clear_has_default_string_piece();
  }
  default_string_piece_.SetAllocatedNoArena(_default_default_string_piece_, default_string_piece);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.default_string_piece)
}

// optional string default_cord = 85 [default = "123", ctype = CORD];
bool TestAllTypesLite::has_default_cord() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
void TestAllTypesLite::set_has_default_cord() {
  _has_bits_[2] |= 0x00000040u;
}
void TestAllTypesLite::clear_has_default_cord() {
  _has_bits_[2] &= ~0x00000040u;
}
void TestAllTypesLite::clear_default_cord() {
  default_cord_.ClearToDefaultNoArena(_default_default_cord_);
  clear_has_default_cord();
}
const ::std::string& TestAllTypesLite::default_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.default_cord)
  return default_cord_.GetNoArena(_default_default_cord_);
}
void TestAllTypesLite::set_default_cord(const ::std::string& value) {
  set_has_default_cord();
  default_cord_.SetNoArena(_default_default_cord_, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.default_cord)
}
void TestAllTypesLite::set_default_cord(const char* value) {
  set_has_default_cord();
  default_cord_.SetNoArena(_default_default_cord_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.default_cord)
}
void TestAllTypesLite::set_default_cord(const char* value, size_t size) {
  set_has_default_cord();
  default_cord_.SetNoArena(_default_default_cord_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.default_cord)
}
::std::string* TestAllTypesLite::mutable_default_cord() {
  set_has_default_cord();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.default_cord)
  return default_cord_.MutableNoArena(_default_default_cord_);
}
::std::string* TestAllTypesLite::release_default_cord() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.default_cord)
  clear_has_default_cord();
  return default_cord_.ReleaseNoArena(_default_default_cord_);
}
void TestAllTypesLite::set_allocated_default_cord(::std::string* default_cord) {
  if (default_cord != NULL) {
    set_has_default_cord();
  } else {
    clear_has_default_cord();
  }
  default_cord_.SetAllocatedNoArena(_default_default_cord_, default_cord);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.default_cord)
}

// optional uint32 oneof_uint32 = 111;
bool TestAllTypesLite::has_oneof_uint32() const {
  return oneof_field_case() == kOneofUint32;
}
void TestAllTypesLite::set_has_oneof_uint32() {
  _oneof_case_[0] = kOneofUint32;
}
void TestAllTypesLite::clear_oneof_uint32() {
  if (has_oneof_uint32()) {
    oneof_field_.oneof_uint32_ = 0u;
    clear_has_oneof_field();
  }
}
::google::protobuf::uint32 TestAllTypesLite::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.oneof_uint32)
  if (has_oneof_uint32()) {
    return oneof_field_.oneof_uint32_;
  }
  return 0u;
}
void TestAllTypesLite::set_oneof_uint32(::google::protobuf::uint32 value) {
  if (!has_oneof_uint32()) {
    clear_oneof_field();
    set_has_oneof_uint32();
  }
  oneof_field_.oneof_uint32_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.oneof_uint32)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
bool TestAllTypesLite::has_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage;
}
void TestAllTypesLite::set_has_oneof_nested_message() {
  _oneof_case_[0] = kOneofNestedMessage;
}
void TestAllTypesLite::clear_oneof_nested_message() {
  if (has_oneof_nested_message()) {
    delete oneof_field_.oneof_nested_message_;
    clear_has_oneof_field();
  }
}
 const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::oneof_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.oneof_nested_message)
  return has_oneof_nested_message()
      ? *oneof_field_.oneof_nested_message_
      : ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance();
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_oneof_nested_message() {
  if (!has_oneof_nested_message()) {
    clear_oneof_field();
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = new ::protobuf_unittest::TestAllTypesLite_NestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.oneof_nested_message)
  return oneof_field_.oneof_nested_message_;
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::release_oneof_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.oneof_nested_message)
  if (has_oneof_nested_message()) {
    clear_has_oneof_field();
    ::protobuf_unittest::TestAllTypesLite_NestedMessage* temp = oneof_field_.oneof_nested_message_;
    oneof_field_.oneof_nested_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TestAllTypesLite::set_allocated_oneof_nested_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* oneof_nested_message) {
  clear_oneof_field();
  if (oneof_nested_message) {
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_nested_message)
}

// optional string oneof_string = 113;
bool TestAllTypesLite::has_oneof_string() const {
  return oneof_field_case() == kOneofString;
}
void TestAllTypesLite::set_has_oneof_string() {
  _oneof_case_[0] = kOneofString;
}
void TestAllTypesLite::clear_oneof_string() {
  if (has_oneof_string()) {
    oneof_field_.oneof_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oneof_field();
  }
}
const ::std::string& TestAllTypesLite::oneof_string() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.oneof_string)
  if (has_oneof_string()) {
    return oneof_field_.oneof_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestAllTypesLite::set_oneof_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.oneof_string)
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.oneof_string)
}
void TestAllTypesLite::set_oneof_string(const char* value) {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.oneof_string)
}
void TestAllTypesLite::set_oneof_string(const char* value, size_t size) {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.oneof_string)
}
::std::string* TestAllTypesLite::mutable_oneof_string() {
  if (!has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.oneof_string)
  return oneof_field_.oneof_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_oneof_string() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.oneof_string)
  if (has_oneof_string()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TestAllTypesLite::set_allocated_oneof_string(::std::string* oneof_string) {
  if (!has_oneof_string()) {
    oneof_field_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_string != NULL) {
    set_has_oneof_string();
    oneof_field_.oneof_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        oneof_string);
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_string)
}

// optional bytes oneof_bytes = 114;
bool TestAllTypesLite::has_oneof_bytes() const {
  return oneof_field_case() == kOneofBytes;
}
void TestAllTypesLite::set_has_oneof_bytes() {
  _oneof_case_[0] = kOneofBytes;
}
void TestAllTypesLite::clear_oneof_bytes() {
  if (has_oneof_bytes()) {
    oneof_field_.oneof_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oneof_field();
  }
}
const ::std::string& TestAllTypesLite::oneof_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.oneof_bytes)
  if (has_oneof_bytes()) {
    return oneof_field_.oneof_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TestAllTypesLite::set_oneof_bytes(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.oneof_bytes)
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestAllTypesLite.oneof_bytes)
}
void TestAllTypesLite::set_oneof_bytes(const char* value) {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestAllTypesLite.oneof_bytes)
}
void TestAllTypesLite::set_oneof_bytes(const void* value, size_t size) {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_field_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestAllTypesLite.oneof_bytes)
}
::std::string* TestAllTypesLite::mutable_oneof_bytes() {
  if (!has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.oneof_bytes)
  return oneof_field_.oneof_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestAllTypesLite::release_oneof_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.oneof_bytes)
  if (has_oneof_bytes()) {
    clear_has_oneof_field();
    return oneof_field_.oneof_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TestAllTypesLite::set_allocated_oneof_bytes(::std::string* oneof_bytes) {
  if (!has_oneof_bytes()) {
    oneof_field_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_field();
  if (oneof_bytes != NULL) {
    set_has_oneof_bytes();
    oneof_field_.oneof_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        oneof_bytes);
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_bytes)
}

// optional .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115 [lazy = true];
bool TestAllTypesLite::has_oneof_lazy_nested_message() const {
  return oneof_field_case() == kOneofLazyNestedMessage;
}
void TestAllTypesLite::set_has_oneof_lazy_nested_message() {
  _oneof_case_[0] = kOneofLazyNestedMessage;
}
void TestAllTypesLite::clear_oneof_lazy_nested_message() {
  if (has_oneof_lazy_nested_message()) {
    delete oneof_field_.oneof_lazy_nested_message_;
    clear_has_oneof_field();
  }
}
 const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::oneof_lazy_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestAllTypesLite.oneof_lazy_nested_message)
  return has_oneof_lazy_nested_message()
      ? *oneof_field_.oneof_lazy_nested_message_
      : ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance();
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::mutable_oneof_lazy_nested_message() {
  if (!has_oneof_lazy_nested_message()) {
    clear_oneof_field();
    set_has_oneof_lazy_nested_message();
    oneof_field_.oneof_lazy_nested_message_ = new ::protobuf_unittest::TestAllTypesLite_NestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestAllTypesLite.oneof_lazy_nested_message)
  return oneof_field_.oneof_lazy_nested_message_;
}
::protobuf_unittest::TestAllTypesLite_NestedMessage* TestAllTypesLite::release_oneof_lazy_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestAllTypesLite.oneof_lazy_nested_message)
  if (has_oneof_lazy_nested_message()) {
    clear_has_oneof_field();
    ::protobuf_unittest::TestAllTypesLite_NestedMessage* temp = oneof_field_.oneof_lazy_nested_message_;
    oneof_field_.oneof_lazy_nested_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TestAllTypesLite::set_allocated_oneof_lazy_nested_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* oneof_lazy_nested_message) {
  clear_oneof_field();
  if (oneof_lazy_nested_message) {
    set_has_oneof_lazy_nested_message();
    oneof_field_.oneof_lazy_nested_message_ = oneof_lazy_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_lazy_nested_message)
}

bool TestAllTypesLite::has_oneof_field() const {
  return oneof_field_case() != ONEOF_FIELD_NOT_SET;
}
void TestAllTypesLite::clear_has_oneof_field() {
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}
TestAllTypesLite::OneofFieldCase TestAllTypesLite::oneof_field_case() const {
  return TestAllTypesLite::OneofFieldCase(_oneof_case_[0]);
}
inline const TestAllTypesLite* TestAllTypesLite::internal_default_instance() {
  return &TestAllTypesLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForForeignMessageLite(
    ForeignMessageLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForeignMessageLite::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForeignMessageLite::ForeignMessageLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.ForeignMessageLite)
}

void ForeignMessageLite::InitAsDefaultInstance() {
}

ForeignMessageLite::ForeignMessageLite(const ForeignMessageLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ForeignMessageLite)
}

void ForeignMessageLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_ = 0;
}

ForeignMessageLite::~ForeignMessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessageLite)
  SharedDtor();
}

void ForeignMessageLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForeignMessageLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ForeignMessageLite& ForeignMessageLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ForeignMessageLite> ForeignMessageLite_default_instance_;

ForeignMessageLite* ForeignMessageLite::New(::google::protobuf::Arena* arena) const {
  ForeignMessageLite* n = new ForeignMessageLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForeignMessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ForeignMessageLite)
  c_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ForeignMessageLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForForeignMessageLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.ForeignMessageLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 c = 1;
      case 1: {
        if (tag == 8) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.ForeignMessageLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.ForeignMessageLite)
  return false;
#undef DO_
}

void ForeignMessageLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.ForeignMessageLite)
  // optional int32 c = 1;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.ForeignMessageLite)
}

size_t ForeignMessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ForeignMessageLite)
  size_t total_size = 0;

  // optional int32 c = 1;
  if (has_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForeignMessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ForeignMessageLite*>(&from));
}

void ForeignMessageLite::MergeFrom(const ForeignMessageLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ForeignMessageLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ForeignMessageLite::UnsafeMergeFrom(const ForeignMessageLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void ForeignMessageLite::CopyFrom(const ForeignMessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ForeignMessageLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ForeignMessageLite::IsInitialized() const {

  return true;
}

void ForeignMessageLite::Swap(ForeignMessageLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForeignMessageLite::InternalSwap(ForeignMessageLite* other) {
  std::swap(c_, other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ForeignMessageLite::GetTypeName() const {
  return "protobuf_unittest.ForeignMessageLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForeignMessageLite

// optional int32 c = 1;
bool ForeignMessageLite::has_c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ForeignMessageLite::set_has_c() {
  _has_bits_[0] |= 0x00000001u;
}
void ForeignMessageLite::clear_has_c() {
  _has_bits_[0] &= ~0x00000001u;
}
void ForeignMessageLite::clear_c() {
  c_ = 0;
  clear_has_c();
}
::google::protobuf::int32 ForeignMessageLite::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ForeignMessageLite.c)
  return c_;
}
void ForeignMessageLite::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.ForeignMessageLite.c)
}

inline const ForeignMessageLite* ForeignMessageLite::internal_default_instance() {
  return &ForeignMessageLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestPackedTypesLite(
    TestPackedTypesLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestPackedTypesLite::kPackedInt32FieldNumber;
const int TestPackedTypesLite::kPackedInt64FieldNumber;
const int TestPackedTypesLite::kPackedUint32FieldNumber;
const int TestPackedTypesLite::kPackedUint64FieldNumber;
const int TestPackedTypesLite::kPackedSint32FieldNumber;
const int TestPackedTypesLite::kPackedSint64FieldNumber;
const int TestPackedTypesLite::kPackedFixed32FieldNumber;
const int TestPackedTypesLite::kPackedFixed64FieldNumber;
const int TestPackedTypesLite::kPackedSfixed32FieldNumber;
const int TestPackedTypesLite::kPackedSfixed64FieldNumber;
const int TestPackedTypesLite::kPackedFloatFieldNumber;
const int TestPackedTypesLite::kPackedDoubleFieldNumber;
const int TestPackedTypesLite::kPackedBoolFieldNumber;
const int TestPackedTypesLite::kPackedEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPackedTypesLite::TestPackedTypesLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedTypesLite)
}

void TestPackedTypesLite::InitAsDefaultInstance() {
}

TestPackedTypesLite::TestPackedTypesLite(const TestPackedTypesLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedTypesLite)
}

void TestPackedTypesLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestPackedTypesLite::~TestPackedTypesLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedTypesLite)
  SharedDtor();
}

void TestPackedTypesLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestPackedTypesLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestPackedTypesLite& TestPackedTypesLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestPackedTypesLite> TestPackedTypesLite_default_instance_;

TestPackedTypesLite* TestPackedTypesLite::New(::google::protobuf::Arena* arena) const {
  TestPackedTypesLite* n = new TestPackedTypesLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestPackedTypesLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedTypesLite)
  packed_int32_.Clear();
  packed_int64_.Clear();
  packed_uint32_.Clear();
  packed_uint64_.Clear();
  packed_sint32_.Clear();
  packed_sint64_.Clear();
  packed_fixed32_.Clear();
  packed_fixed64_.Clear();
  packed_sfixed32_.Clear();
  packed_sfixed64_.Clear();
  packed_float_.Clear();
  packed_double_.Clear();
  packed_bool_.Clear();
  packed_enum_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestPackedTypesLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestPackedTypesLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedTypesLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 packed_int32 = 90 [packed = true];
      case 90: {
        if (tag == 722) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_packed_int32())));
        } else if (tag == 720) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 722, input, this->mutable_packed_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_packed_int64;
        break;
      }

      // repeated int64 packed_int64 = 91 [packed = true];
      case 91: {
        if (tag == 730) {
         parse_packed_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_packed_int64())));
        } else if (tag == 728) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 730, input, this->mutable_packed_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_packed_uint32;
        break;
      }

      // repeated uint32 packed_uint32 = 92 [packed = true];
      case 92: {
        if (tag == 738) {
         parse_packed_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_packed_uint32())));
        } else if (tag == 736) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 738, input, this->mutable_packed_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(746)) goto parse_packed_uint64;
        break;
      }

      // repeated uint64 packed_uint64 = 93 [packed = true];
      case 93: {
        if (tag == 746) {
         parse_packed_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_packed_uint64())));
        } else if (tag == 744) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 746, input, this->mutable_packed_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(754)) goto parse_packed_sint32;
        break;
      }

      // repeated sint32 packed_sint32 = 94 [packed = true];
      case 94: {
        if (tag == 754) {
         parse_packed_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_sint32())));
        } else if (tag == 752) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 754, input, this->mutable_packed_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(762)) goto parse_packed_sint64;
        break;
      }

      // repeated sint64 packed_sint64 = 95 [packed = true];
      case 95: {
        if (tag == 762) {
         parse_packed_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_packed_sint64())));
        } else if (tag == 760) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 762, input, this->mutable_packed_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(770)) goto parse_packed_fixed32;
        break;
      }

      // repeated fixed32 packed_fixed32 = 96 [packed = true];
      case 96: {
        if (tag == 770) {
         parse_packed_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_packed_fixed32())));
        } else if (tag == 773) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 770, input, this->mutable_packed_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(778)) goto parse_packed_fixed64;
        break;
      }

      // repeated fixed64 packed_fixed64 = 97 [packed = true];
      case 97: {
        if (tag == 778) {
         parse_packed_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_packed_fixed64())));
        } else if (tag == 777) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 778, input, this->mutable_packed_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(786)) goto parse_packed_sfixed32;
        break;
      }

      // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
      case 98: {
        if (tag == 786) {
         parse_packed_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_packed_sfixed32())));
        } else if (tag == 789) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 786, input, this->mutable_packed_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(794)) goto parse_packed_sfixed64;
        break;
      }

      // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
      case 99: {
        if (tag == 794) {
         parse_packed_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_packed_sfixed64())));
        } else if (tag == 793) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 794, input, this->mutable_packed_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_packed_float;
        break;
      }

      // repeated float packed_float = 100 [packed = true];
      case 100: {
        if (tag == 802) {
         parse_packed_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_packed_float())));
        } else if (tag == 805) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 802, input, this->mutable_packed_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_packed_double;
        break;
      }

      // repeated double packed_double = 101 [packed = true];
      case 101: {
        if (tag == 810) {
         parse_packed_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_packed_double())));
        } else if (tag == 809) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 810, input, this->mutable_packed_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_packed_bool;
        break;
      }

      // repeated bool packed_bool = 102 [packed = true];
      case 102: {
        if (tag == 818) {
         parse_packed_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_packed_bool())));
        } else if (tag == 816) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 818, input, this->mutable_packed_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_packed_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
      case 103: {
        if (tag == 826) {
         parse_packed_enum:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::protobuf_unittest::ForeignEnumLite_IsValid(value)) {
              add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnumLite >(value));
            } else {
              unknown_fields_stream.WriteVarint32(tag);
              unknown_fields_stream.WriteVarint32(value);
            }
          }
          input->PopLimit(limit);
        } else if (tag == 824) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnumLite_IsValid(value)) {
            add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedTypesLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedTypesLite)
  return false;
#undef DO_
}

void TestPackedTypesLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedTypesLite)
  // repeated int32 packed_int32 = 90 [packed = true];
  if (this->packed_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(90, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->packed_int32(i), output);
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  if (this->packed_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(91, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->packed_int64(i), output);
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  if (this->packed_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(92, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->packed_uint32(i), output);
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  if (this->packed_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(93, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->packed_uint64(i), output);
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  if (this->packed_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(94, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_sint32(i), output);
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  if (this->packed_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(95, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->packed_sint64(i), output);
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->packed_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(96, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32NoTag(
      this->packed_fixed32(i), output);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->packed_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(97, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64NoTag(
      this->packed_fixed64(i), output);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->packed_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(98, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32NoTag(
      this->packed_sfixed32(i), output);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->packed_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(99, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64NoTag(
      this->packed_sfixed64(i), output);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->packed_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(100, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_float_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->packed_float(i), output);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->packed_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(101, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_double_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->packed_double(i), output);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->packed_bool_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(102, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_bool_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->packed_bool(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
  if (this->packed_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_packed_enum_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->packed_enum(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedTypesLite)
}

size_t TestPackedTypesLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedTypesLite)
  size_t total_size = 0;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_int32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->packed_int32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_int64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->packed_int64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_uint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->packed_uint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_uint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->packed_uint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sint32_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_sint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sint64_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->packed_sint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_fixed32_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_fixed64_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sfixed32_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_sfixed64_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float packed_float = 100 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_float_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_float_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double packed_double = 101 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_double_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_double_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool packed_bool = 102 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_bool_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_bool_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->packed_enum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->packed_enum(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_enum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedTypesLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestPackedTypesLite*>(&from));
}

void TestPackedTypesLite::MergeFrom(const TestPackedTypesLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedTypesLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestPackedTypesLite::UnsafeMergeFrom(const TestPackedTypesLite& from) {
  GOOGLE_DCHECK(&from != this);
  packed_int32_.UnsafeMergeFrom(from.packed_int32_);
  packed_int64_.UnsafeMergeFrom(from.packed_int64_);
  packed_uint32_.UnsafeMergeFrom(from.packed_uint32_);
  packed_uint64_.UnsafeMergeFrom(from.packed_uint64_);
  packed_sint32_.UnsafeMergeFrom(from.packed_sint32_);
  packed_sint64_.UnsafeMergeFrom(from.packed_sint64_);
  packed_fixed32_.UnsafeMergeFrom(from.packed_fixed32_);
  packed_fixed64_.UnsafeMergeFrom(from.packed_fixed64_);
  packed_sfixed32_.UnsafeMergeFrom(from.packed_sfixed32_);
  packed_sfixed64_.UnsafeMergeFrom(from.packed_sfixed64_);
  packed_float_.UnsafeMergeFrom(from.packed_float_);
  packed_double_.UnsafeMergeFrom(from.packed_double_);
  packed_bool_.UnsafeMergeFrom(from.packed_bool_);
  packed_enum_.UnsafeMergeFrom(from.packed_enum_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestPackedTypesLite::CopyFrom(const TestPackedTypesLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedTypesLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestPackedTypesLite::IsInitialized() const {

  return true;
}

void TestPackedTypesLite::Swap(TestPackedTypesLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestPackedTypesLite::InternalSwap(TestPackedTypesLite* other) {
  packed_int32_.UnsafeArenaSwap(&other->packed_int32_);
  packed_int64_.UnsafeArenaSwap(&other->packed_int64_);
  packed_uint32_.UnsafeArenaSwap(&other->packed_uint32_);
  packed_uint64_.UnsafeArenaSwap(&other->packed_uint64_);
  packed_sint32_.UnsafeArenaSwap(&other->packed_sint32_);
  packed_sint64_.UnsafeArenaSwap(&other->packed_sint64_);
  packed_fixed32_.UnsafeArenaSwap(&other->packed_fixed32_);
  packed_fixed64_.UnsafeArenaSwap(&other->packed_fixed64_);
  packed_sfixed32_.UnsafeArenaSwap(&other->packed_sfixed32_);
  packed_sfixed64_.UnsafeArenaSwap(&other->packed_sfixed64_);
  packed_float_.UnsafeArenaSwap(&other->packed_float_);
  packed_double_.UnsafeArenaSwap(&other->packed_double_);
  packed_bool_.UnsafeArenaSwap(&other->packed_bool_);
  packed_enum_.UnsafeArenaSwap(&other->packed_enum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestPackedTypesLite::GetTypeName() const {
  return "protobuf_unittest.TestPackedTypesLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestPackedTypesLite

// repeated int32 packed_int32 = 90 [packed = true];
int TestPackedTypesLite::packed_int32_size() const {
  return packed_int32_.size();
}
void TestPackedTypesLite::clear_packed_int32() {
  packed_int32_.Clear();
}
::google::protobuf::int32 TestPackedTypesLite::packed_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_int32)
  return packed_int32_.Get(index);
}
void TestPackedTypesLite::set_packed_int32(int index, ::google::protobuf::int32 value) {
  packed_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_int32)
}
void TestPackedTypesLite::add_packed_int32(::google::protobuf::int32 value) {
  packed_int32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_int32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypesLite::packed_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_int32)
  return packed_int32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypesLite::mutable_packed_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_int32)
  return &packed_int32_;
}

// repeated int64 packed_int64 = 91 [packed = true];
int TestPackedTypesLite::packed_int64_size() const {
  return packed_int64_.size();
}
void TestPackedTypesLite::clear_packed_int64() {
  packed_int64_.Clear();
}
::google::protobuf::int64 TestPackedTypesLite::packed_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_int64)
  return packed_int64_.Get(index);
}
void TestPackedTypesLite::set_packed_int64(int index, ::google::protobuf::int64 value) {
  packed_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_int64)
}
void TestPackedTypesLite::add_packed_int64(::google::protobuf::int64 value) {
  packed_int64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_int64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypesLite::packed_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_int64)
  return packed_int64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypesLite::mutable_packed_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_int64)
  return &packed_int64_;
}

// repeated uint32 packed_uint32 = 92 [packed = true];
int TestPackedTypesLite::packed_uint32_size() const {
  return packed_uint32_.size();
}
void TestPackedTypesLite::clear_packed_uint32() {
  packed_uint32_.Clear();
}
::google::protobuf::uint32 TestPackedTypesLite::packed_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_uint32)
  return packed_uint32_.Get(index);
}
void TestPackedTypesLite::set_packed_uint32(int index, ::google::protobuf::uint32 value) {
  packed_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_uint32)
}
void TestPackedTypesLite::add_packed_uint32(::google::protobuf::uint32 value) {
  packed_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_uint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestPackedTypesLite::packed_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_uint32)
  return packed_uint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestPackedTypesLite::mutable_packed_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_uint32)
  return &packed_uint32_;
}

// repeated uint64 packed_uint64 = 93 [packed = true];
int TestPackedTypesLite::packed_uint64_size() const {
  return packed_uint64_.size();
}
void TestPackedTypesLite::clear_packed_uint64() {
  packed_uint64_.Clear();
}
::google::protobuf::uint64 TestPackedTypesLite::packed_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_uint64)
  return packed_uint64_.Get(index);
}
void TestPackedTypesLite::set_packed_uint64(int index, ::google::protobuf::uint64 value) {
  packed_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_uint64)
}
void TestPackedTypesLite::add_packed_uint64(::google::protobuf::uint64 value) {
  packed_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_uint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestPackedTypesLite::packed_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_uint64)
  return packed_uint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestPackedTypesLite::mutable_packed_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_uint64)
  return &packed_uint64_;
}

// repeated sint32 packed_sint32 = 94 [packed = true];
int TestPackedTypesLite::packed_sint32_size() const {
  return packed_sint32_.size();
}
void TestPackedTypesLite::clear_packed_sint32() {
  packed_sint32_.Clear();
}
::google::protobuf::int32 TestPackedTypesLite::packed_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_sint32)
  return packed_sint32_.Get(index);
}
void TestPackedTypesLite::set_packed_sint32(int index, ::google::protobuf::int32 value) {
  packed_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_sint32)
}
void TestPackedTypesLite::add_packed_sint32(::google::protobuf::int32 value) {
  packed_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_sint32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypesLite::packed_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_sint32)
  return packed_sint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypesLite::mutable_packed_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_sint32)
  return &packed_sint32_;
}

// repeated sint64 packed_sint64 = 95 [packed = true];
int TestPackedTypesLite::packed_sint64_size() const {
  return packed_sint64_.size();
}
void TestPackedTypesLite::clear_packed_sint64() {
  packed_sint64_.Clear();
}
::google::protobuf::int64 TestPackedTypesLite::packed_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_sint64)
  return packed_sint64_.Get(index);
}
void TestPackedTypesLite::set_packed_sint64(int index, ::google::protobuf::int64 value) {
  packed_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_sint64)
}
void TestPackedTypesLite::add_packed_sint64(::google::protobuf::int64 value) {
  packed_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_sint64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypesLite::packed_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_sint64)
  return packed_sint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypesLite::mutable_packed_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_sint64)
  return &packed_sint64_;
}

// repeated fixed32 packed_fixed32 = 96 [packed = true];
int TestPackedTypesLite::packed_fixed32_size() const {
  return packed_fixed32_.size();
}
void TestPackedTypesLite::clear_packed_fixed32() {
  packed_fixed32_.Clear();
}
::google::protobuf::uint32 TestPackedTypesLite::packed_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_fixed32)
  return packed_fixed32_.Get(index);
}
void TestPackedTypesLite::set_packed_fixed32(int index, ::google::protobuf::uint32 value) {
  packed_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_fixed32)
}
void TestPackedTypesLite::add_packed_fixed32(::google::protobuf::uint32 value) {
  packed_fixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_fixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestPackedTypesLite::packed_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_fixed32)
  return packed_fixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestPackedTypesLite::mutable_packed_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_fixed32)
  return &packed_fixed32_;
}

// repeated fixed64 packed_fixed64 = 97 [packed = true];
int TestPackedTypesLite::packed_fixed64_size() const {
  return packed_fixed64_.size();
}
void TestPackedTypesLite::clear_packed_fixed64() {
  packed_fixed64_.Clear();
}
::google::protobuf::uint64 TestPackedTypesLite::packed_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_fixed64)
  return packed_fixed64_.Get(index);
}
void TestPackedTypesLite::set_packed_fixed64(int index, ::google::protobuf::uint64 value) {
  packed_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_fixed64)
}
void TestPackedTypesLite::add_packed_fixed64(::google::protobuf::uint64 value) {
  packed_fixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_fixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestPackedTypesLite::packed_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_fixed64)
  return packed_fixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestPackedTypesLite::mutable_packed_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_fixed64)
  return &packed_fixed64_;
}

// repeated sfixed32 packed_sfixed32 = 98 [packed = true];
int TestPackedTypesLite::packed_sfixed32_size() const {
  return packed_sfixed32_.size();
}
void TestPackedTypesLite::clear_packed_sfixed32() {
  packed_sfixed32_.Clear();
}
::google::protobuf::int32 TestPackedTypesLite::packed_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_sfixed32)
  return packed_sfixed32_.Get(index);
}
void TestPackedTypesLite::set_packed_sfixed32(int index, ::google::protobuf::int32 value) {
  packed_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_sfixed32)
}
void TestPackedTypesLite::add_packed_sfixed32(::google::protobuf::int32 value) {
  packed_sfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_sfixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestPackedTypesLite::packed_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_sfixed32)
  return packed_sfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestPackedTypesLite::mutable_packed_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_sfixed32)
  return &packed_sfixed32_;
}

// repeated sfixed64 packed_sfixed64 = 99 [packed = true];
int TestPackedTypesLite::packed_sfixed64_size() const {
  return packed_sfixed64_.size();
}
void TestPackedTypesLite::clear_packed_sfixed64() {
  packed_sfixed64_.Clear();
}
::google::protobuf::int64 TestPackedTypesLite::packed_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_sfixed64)
  return packed_sfixed64_.Get(index);
}
void TestPackedTypesLite::set_packed_sfixed64(int index, ::google::protobuf::int64 value) {
  packed_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_sfixed64)
}
void TestPackedTypesLite::add_packed_sfixed64(::google::protobuf::int64 value) {
  packed_sfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_sfixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestPackedTypesLite::packed_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_sfixed64)
  return packed_sfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestPackedTypesLite::mutable_packed_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_sfixed64)
  return &packed_sfixed64_;
}

// repeated float packed_float = 100 [packed = true];
int TestPackedTypesLite::packed_float_size() const {
  return packed_float_.size();
}
void TestPackedTypesLite::clear_packed_float() {
  packed_float_.Clear();
}
float TestPackedTypesLite::packed_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_float)
  return packed_float_.Get(index);
}
void TestPackedTypesLite::set_packed_float(int index, float value) {
  packed_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_float)
}
void TestPackedTypesLite::add_packed_float(float value) {
  packed_float_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_float)
}
const ::google::protobuf::RepeatedField< float >&
TestPackedTypesLite::packed_float() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_float)
  return packed_float_;
}
::google::protobuf::RepeatedField< float >*
TestPackedTypesLite::mutable_packed_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_float)
  return &packed_float_;
}

// repeated double packed_double = 101 [packed = true];
int TestPackedTypesLite::packed_double_size() const {
  return packed_double_.size();
}
void TestPackedTypesLite::clear_packed_double() {
  packed_double_.Clear();
}
double TestPackedTypesLite::packed_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_double)
  return packed_double_.Get(index);
}
void TestPackedTypesLite::set_packed_double(int index, double value) {
  packed_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_double)
}
void TestPackedTypesLite::add_packed_double(double value) {
  packed_double_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_double)
}
const ::google::protobuf::RepeatedField< double >&
TestPackedTypesLite::packed_double() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_double)
  return packed_double_;
}
::google::protobuf::RepeatedField< double >*
TestPackedTypesLite::mutable_packed_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_double)
  return &packed_double_;
}

// repeated bool packed_bool = 102 [packed = true];
int TestPackedTypesLite::packed_bool_size() const {
  return packed_bool_.size();
}
void TestPackedTypesLite::clear_packed_bool() {
  packed_bool_.Clear();
}
bool TestPackedTypesLite::packed_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_bool)
  return packed_bool_.Get(index);
}
void TestPackedTypesLite::set_packed_bool(int index, bool value) {
  packed_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_bool)
}
void TestPackedTypesLite::add_packed_bool(bool value) {
  packed_bool_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_bool)
}
const ::google::protobuf::RepeatedField< bool >&
TestPackedTypesLite::packed_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_bool)
  return packed_bool_;
}
::google::protobuf::RepeatedField< bool >*
TestPackedTypesLite::mutable_packed_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_bool)
  return &packed_bool_;
}

// repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
int TestPackedTypesLite::packed_enum_size() const {
  return packed_enum_.size();
}
void TestPackedTypesLite::clear_packed_enum() {
  packed_enum_.Clear();
}
::protobuf_unittest::ForeignEnumLite TestPackedTypesLite::packed_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestPackedTypesLite.packed_enum)
  return static_cast< ::protobuf_unittest::ForeignEnumLite >(packed_enum_.Get(index));
}
void TestPackedTypesLite::set_packed_enum(int index, ::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  packed_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestPackedTypesLite.packed_enum)
}
void TestPackedTypesLite::add_packed_enum(::protobuf_unittest::ForeignEnumLite value) {
  assert(::protobuf_unittest::ForeignEnumLite_IsValid(value));
  packed_enum_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestPackedTypesLite.packed_enum)
}
const ::google::protobuf::RepeatedField<int>&
TestPackedTypesLite::packed_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestPackedTypesLite.packed_enum)
  return packed_enum_;
}
::google::protobuf::RepeatedField<int>*
TestPackedTypesLite::mutable_packed_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestPackedTypesLite.packed_enum)
  return &packed_enum_;
}

inline const TestPackedTypesLite* TestPackedTypesLite::internal_default_instance() {
  return &TestPackedTypesLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestAllExtensionsLite(
    TestAllExtensionsLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllExtensionsLite::TestAllExtensionsLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllExtensionsLite)
}

void TestAllExtensionsLite::InitAsDefaultInstance() {
}

TestAllExtensionsLite::TestAllExtensionsLite(const TestAllExtensionsLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllExtensionsLite)
}

void TestAllExtensionsLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestAllExtensionsLite::~TestAllExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllExtensionsLite)
  SharedDtor();
}

void TestAllExtensionsLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestAllExtensionsLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestAllExtensionsLite& TestAllExtensionsLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestAllExtensionsLite> TestAllExtensionsLite_default_instance_;

TestAllExtensionsLite* TestAllExtensionsLite::New(::google::protobuf::Arena* arena) const {
  TestAllExtensionsLite* n = new TestAllExtensionsLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestAllExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllExtensionsLite)
  _extensions_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestAllExtensionsLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestAllExtensionsLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllExtensionsLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  &unknown_fields_stream));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllExtensionsLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllExtensionsLite)
  return false;
#undef DO_
}

void TestAllExtensionsLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllExtensionsLite)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllExtensionsLite)
}

size_t TestAllExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllExtensionsLite)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestAllExtensionsLite*>(&from));
}

void TestAllExtensionsLite::MergeFrom(const TestAllExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllExtensionsLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestAllExtensionsLite::UnsafeMergeFrom(const TestAllExtensionsLite& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestAllExtensionsLite::CopyFrom(const TestAllExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllExtensionsLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestAllExtensionsLite::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestAllExtensionsLite::Swap(TestAllExtensionsLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestAllExtensionsLite::InternalSwap(TestAllExtensionsLite* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::std::string TestAllExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestAllExtensionsLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestAllExtensionsLite

inline const TestAllExtensionsLite* TestAllExtensionsLite::internal_default_instance() {
  return &TestAllExtensionsLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForOptionalGroup_extension_lite(
    OptionalGroup_extension_lite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionalGroup_extension_lite::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionalGroup_extension_lite::OptionalGroup_extension_lite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OptionalGroup_extension_lite)
}

void OptionalGroup_extension_lite::InitAsDefaultInstance() {
}

OptionalGroup_extension_lite::OptionalGroup_extension_lite(const OptionalGroup_extension_lite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OptionalGroup_extension_lite)
}

void OptionalGroup_extension_lite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

OptionalGroup_extension_lite::~OptionalGroup_extension_lite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OptionalGroup_extension_lite)
  SharedDtor();
}

void OptionalGroup_extension_lite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OptionalGroup_extension_lite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OptionalGroup_extension_lite& OptionalGroup_extension_lite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OptionalGroup_extension_lite> OptionalGroup_extension_lite_default_instance_;

OptionalGroup_extension_lite* OptionalGroup_extension_lite::New(::google::protobuf::Arena* arena) const {
  OptionalGroup_extension_lite* n = new OptionalGroup_extension_lite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionalGroup_extension_lite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OptionalGroup_extension_lite)
  a_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OptionalGroup_extension_lite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForOptionalGroup_extension_lite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OptionalGroup_extension_lite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OptionalGroup_extension_lite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OptionalGroup_extension_lite)
  return false;
#undef DO_
}

void OptionalGroup_extension_lite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OptionalGroup_extension_lite)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OptionalGroup_extension_lite)
}

size_t OptionalGroup_extension_lite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OptionalGroup_extension_lite)
  size_t total_size = 0;

  // optional int32 a = 17;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionalGroup_extension_lite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OptionalGroup_extension_lite*>(&from));
}

void OptionalGroup_extension_lite::MergeFrom(const OptionalGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OptionalGroup_extension_lite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OptionalGroup_extension_lite::UnsafeMergeFrom(const OptionalGroup_extension_lite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void OptionalGroup_extension_lite::CopyFrom(const OptionalGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OptionalGroup_extension_lite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OptionalGroup_extension_lite::IsInitialized() const {

  return true;
}

void OptionalGroup_extension_lite::Swap(OptionalGroup_extension_lite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionalGroup_extension_lite::InternalSwap(OptionalGroup_extension_lite* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OptionalGroup_extension_lite::GetTypeName() const {
  return "protobuf_unittest.OptionalGroup_extension_lite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptionalGroup_extension_lite

// optional int32 a = 17;
bool OptionalGroup_extension_lite::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OptionalGroup_extension_lite::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void OptionalGroup_extension_lite::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void OptionalGroup_extension_lite::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 OptionalGroup_extension_lite::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.OptionalGroup_extension_lite.a)
  return a_;
}
void OptionalGroup_extension_lite::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.OptionalGroup_extension_lite.a)
}

inline const OptionalGroup_extension_lite* OptionalGroup_extension_lite::internal_default_instance() {
  return &OptionalGroup_extension_lite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForRepeatedGroup_extension_lite(
    RepeatedGroup_extension_lite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedGroup_extension_lite::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedGroup_extension_lite::RepeatedGroup_extension_lite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RepeatedGroup_extension_lite)
}

void RepeatedGroup_extension_lite::InitAsDefaultInstance() {
}

RepeatedGroup_extension_lite::RepeatedGroup_extension_lite(const RepeatedGroup_extension_lite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RepeatedGroup_extension_lite)
}

void RepeatedGroup_extension_lite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_ = 0;
}

RepeatedGroup_extension_lite::~RepeatedGroup_extension_lite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedGroup_extension_lite)
  SharedDtor();
}

void RepeatedGroup_extension_lite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RepeatedGroup_extension_lite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RepeatedGroup_extension_lite& RepeatedGroup_extension_lite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RepeatedGroup_extension_lite> RepeatedGroup_extension_lite_default_instance_;

RepeatedGroup_extension_lite* RepeatedGroup_extension_lite::New(::google::protobuf::Arena* arena) const {
  RepeatedGroup_extension_lite* n = new RepeatedGroup_extension_lite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepeatedGroup_extension_lite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RepeatedGroup_extension_lite)
  a_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RepeatedGroup_extension_lite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRepeatedGroup_extension_lite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.RepeatedGroup_extension_lite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.RepeatedGroup_extension_lite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.RepeatedGroup_extension_lite)
  return false;
#undef DO_
}

void RepeatedGroup_extension_lite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.RepeatedGroup_extension_lite)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.RepeatedGroup_extension_lite)
}

size_t RepeatedGroup_extension_lite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RepeatedGroup_extension_lite)
  size_t total_size = 0;

  // optional int32 a = 47;
  if (has_a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepeatedGroup_extension_lite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RepeatedGroup_extension_lite*>(&from));
}

void RepeatedGroup_extension_lite::MergeFrom(const RepeatedGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RepeatedGroup_extension_lite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RepeatedGroup_extension_lite::UnsafeMergeFrom(const RepeatedGroup_extension_lite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void RepeatedGroup_extension_lite::CopyFrom(const RepeatedGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RepeatedGroup_extension_lite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RepeatedGroup_extension_lite::IsInitialized() const {

  return true;
}

void RepeatedGroup_extension_lite::Swap(RepeatedGroup_extension_lite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatedGroup_extension_lite::InternalSwap(RepeatedGroup_extension_lite* other) {
  std::swap(a_, other->a_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RepeatedGroup_extension_lite::GetTypeName() const {
  return "protobuf_unittest.RepeatedGroup_extension_lite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepeatedGroup_extension_lite

// optional int32 a = 47;
bool RepeatedGroup_extension_lite::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RepeatedGroup_extension_lite::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void RepeatedGroup_extension_lite::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void RepeatedGroup_extension_lite::clear_a() {
  a_ = 0;
  clear_has_a();
}
::google::protobuf::int32 RepeatedGroup_extension_lite::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RepeatedGroup_extension_lite.a)
  return a_;
}
void RepeatedGroup_extension_lite::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.RepeatedGroup_extension_lite.a)
}

inline const RepeatedGroup_extension_lite* RepeatedGroup_extension_lite::internal_default_instance() {
  return &RepeatedGroup_extension_lite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestPackedExtensionsLite(
    TestPackedExtensionsLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPackedExtensionsLite::TestPackedExtensionsLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedExtensionsLite)
}

void TestPackedExtensionsLite::InitAsDefaultInstance() {
}

TestPackedExtensionsLite::TestPackedExtensionsLite(const TestPackedExtensionsLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedExtensionsLite)
}

void TestPackedExtensionsLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestPackedExtensionsLite::~TestPackedExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedExtensionsLite)
  SharedDtor();
}

void TestPackedExtensionsLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestPackedExtensionsLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestPackedExtensionsLite& TestPackedExtensionsLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestPackedExtensionsLite> TestPackedExtensionsLite_default_instance_;

TestPackedExtensionsLite* TestPackedExtensionsLite::New(::google::protobuf::Arena* arena) const {
  TestPackedExtensionsLite* n = new TestPackedExtensionsLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestPackedExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedExtensionsLite)
  _extensions_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestPackedExtensionsLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestPackedExtensionsLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedExtensionsLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  &unknown_fields_stream));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedExtensionsLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedExtensionsLite)
  return false;
#undef DO_
}

void TestPackedExtensionsLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedExtensionsLite)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedExtensionsLite)
}

size_t TestPackedExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedExtensionsLite)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestPackedExtensionsLite*>(&from));
}

void TestPackedExtensionsLite::MergeFrom(const TestPackedExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedExtensionsLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestPackedExtensionsLite::UnsafeMergeFrom(const TestPackedExtensionsLite& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestPackedExtensionsLite::CopyFrom(const TestPackedExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedExtensionsLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestPackedExtensionsLite::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestPackedExtensionsLite::Swap(TestPackedExtensionsLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestPackedExtensionsLite::InternalSwap(TestPackedExtensionsLite* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::std::string TestPackedExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestPackedExtensionsLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestPackedExtensionsLite

inline const TestPackedExtensionsLite* TestPackedExtensionsLite::internal_default_instance() {
  return &TestPackedExtensionsLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestNestedExtensionLite(
    TestNestedExtensionLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedExtensionLite::kNestedExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  TestNestedExtensionLite::nested_extension(kNestedExtensionFieldNumber, 0);
TestNestedExtensionLite::TestNestedExtensionLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedExtensionLite)
}

void TestNestedExtensionLite::InitAsDefaultInstance() {
}

TestNestedExtensionLite::TestNestedExtensionLite(const TestNestedExtensionLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedExtensionLite)
}

void TestNestedExtensionLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestNestedExtensionLite::~TestNestedExtensionLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedExtensionLite)
  SharedDtor();
}

void TestNestedExtensionLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestNestedExtensionLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestNestedExtensionLite& TestNestedExtensionLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestNestedExtensionLite> TestNestedExtensionLite_default_instance_;

TestNestedExtensionLite* TestNestedExtensionLite::New(::google::protobuf::Arena* arena) const {
  TestNestedExtensionLite* n = new TestNestedExtensionLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestNestedExtensionLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedExtensionLite)
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestNestedExtensionLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestNestedExtensionLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedExtensionLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedExtensionLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedExtensionLite)
  return false;
#undef DO_
}

void TestNestedExtensionLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedExtensionLite)
  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedExtensionLite)
}

size_t TestNestedExtensionLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedExtensionLite)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedExtensionLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestNestedExtensionLite*>(&from));
}

void TestNestedExtensionLite::MergeFrom(const TestNestedExtensionLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedExtensionLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestNestedExtensionLite::UnsafeMergeFrom(const TestNestedExtensionLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestNestedExtensionLite::CopyFrom(const TestNestedExtensionLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedExtensionLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestNestedExtensionLite::IsInitialized() const {

  return true;
}

void TestNestedExtensionLite::Swap(TestNestedExtensionLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestNestedExtensionLite::InternalSwap(TestNestedExtensionLite* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestNestedExtensionLite::GetTypeName() const {
  return "protobuf_unittest.TestNestedExtensionLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestNestedExtensionLite

inline const TestNestedExtensionLite* TestNestedExtensionLite::internal_default_instance() {
  return &TestNestedExtensionLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestDeprecatedLite(
    TestDeprecatedLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestDeprecatedLite::kDeprecatedFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestDeprecatedLite::TestDeprecatedLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDeprecatedLite)
}

void TestDeprecatedLite::InitAsDefaultInstance() {
}

TestDeprecatedLite::TestDeprecatedLite(const TestDeprecatedLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedLite)
}

void TestDeprecatedLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecated_field_ = 0;
}

TestDeprecatedLite::~TestDeprecatedLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDeprecatedLite)
  SharedDtor();
}

void TestDeprecatedLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestDeprecatedLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestDeprecatedLite& TestDeprecatedLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestDeprecatedLite> TestDeprecatedLite_default_instance_;

TestDeprecatedLite* TestDeprecatedLite::New(::google::protobuf::Arena* arena) const {
  TestDeprecatedLite* n = new TestDeprecatedLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestDeprecatedLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDeprecatedLite)
  deprecated_field_ = 0;
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestDeprecatedLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestDeprecatedLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDeprecatedLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 deprecated_field = 1 [deprecated = true];
      case 1: {
        if (tag == 8) {
          set_has_deprecated_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deprecated_field_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDeprecatedLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDeprecatedLite)
  return false;
#undef DO_
}

void TestDeprecatedLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDeprecatedLite)
  // optional int32 deprecated_field = 1 [deprecated = true];
  if (has_deprecated_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deprecated_field(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDeprecatedLite)
}

size_t TestDeprecatedLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDeprecatedLite)
  size_t total_size = 0;

  // optional int32 deprecated_field = 1 [deprecated = true];
  if (has_deprecated_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deprecated_field());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDeprecatedLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestDeprecatedLite*>(&from));
}

void TestDeprecatedLite::MergeFrom(const TestDeprecatedLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDeprecatedLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestDeprecatedLite::UnsafeMergeFrom(const TestDeprecatedLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deprecated_field()) {
      set_deprecated_field(from.deprecated_field());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestDeprecatedLite::CopyFrom(const TestDeprecatedLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDeprecatedLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestDeprecatedLite::IsInitialized() const {

  return true;
}

void TestDeprecatedLite::Swap(TestDeprecatedLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestDeprecatedLite::InternalSwap(TestDeprecatedLite* other) {
  std::swap(deprecated_field_, other->deprecated_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestDeprecatedLite::GetTypeName() const {
  return "protobuf_unittest.TestDeprecatedLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestDeprecatedLite

// optional int32 deprecated_field = 1 [deprecated = true];
bool TestDeprecatedLite::has_deprecated_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestDeprecatedLite::set_has_deprecated_field() {
  _has_bits_[0] |= 0x00000001u;
}
void TestDeprecatedLite::clear_has_deprecated_field() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestDeprecatedLite::clear_deprecated_field() {
  deprecated_field_ = 0;
  clear_has_deprecated_field();
}
::google::protobuf::int32 TestDeprecatedLite::deprecated_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDeprecatedLite.deprecated_field)
  return deprecated_field_;
}
void TestDeprecatedLite::set_deprecated_field(::google::protobuf::int32 value) {
  set_has_deprecated_field();
  deprecated_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDeprecatedLite.deprecated_field)
}

inline const TestDeprecatedLite* TestDeprecatedLite::internal_default_instance() {
  return &TestDeprecatedLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite(
    TestParsingMergeLite* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator(
    TestParsingMergeLite_RepeatedFieldsGenerator* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator_Group1(
    TestParsingMergeLite_RepeatedFieldsGenerator_Group1* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite_RepeatedFieldsGenerator_Group1::kField1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMergeLite_RepeatedFieldsGenerator_Group1::TestParsingMergeLite_RepeatedFieldsGenerator_Group1()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
}

TestParsingMergeLite_RepeatedFieldsGenerator_Group1::TestParsingMergeLite_RepeatedFieldsGenerator_Group1(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field1_ = NULL;
}

TestParsingMergeLite_RepeatedFieldsGenerator_Group1::~TestParsingMergeLite_RepeatedFieldsGenerator_Group1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  SharedDtor();
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_.get()) {
    delete field1_;
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& TestParsingMergeLite_RepeatedFieldsGenerator_Group1::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_;

TestParsingMergeLite_RepeatedFieldsGenerator_Group1* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1* n = new TestParsingMergeLite_RepeatedFieldsGenerator_Group1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypesLite::Clear();
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite_RepeatedFieldsGenerator_Group1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator_Group1, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  return false;
#undef DO_
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->field1_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
}

size_t TestParsingMergeLite_RepeatedFieldsGenerator_Group1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
  if (has_field1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field1_);
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite_RepeatedFieldsGenerator_Group1*>(&from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::UnsafeMergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.field1());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite_RepeatedFieldsGenerator_Group1::IsInitialized() const {

  return true;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Swap(TestParsingMergeLite_RepeatedFieldsGenerator_Group1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator_Group1* other) {
  std::swap(field1_, other->field1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestParsingMergeLite_RepeatedFieldsGenerator_Group1::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator_Group2(
    TestParsingMergeLite_RepeatedFieldsGenerator_Group2* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite_RepeatedFieldsGenerator_Group2::kField1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMergeLite_RepeatedFieldsGenerator_Group2::TestParsingMergeLite_RepeatedFieldsGenerator_Group2()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
}

TestParsingMergeLite_RepeatedFieldsGenerator_Group2::TestParsingMergeLite_RepeatedFieldsGenerator_Group2(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field1_ = NULL;
}

TestParsingMergeLite_RepeatedFieldsGenerator_Group2::~TestParsingMergeLite_RepeatedFieldsGenerator_Group2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  SharedDtor();
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_.get()) {
    delete field1_;
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& TestParsingMergeLite_RepeatedFieldsGenerator_Group2::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_;

TestParsingMergeLite_RepeatedFieldsGenerator_Group2* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2* n = new TestParsingMergeLite_RepeatedFieldsGenerator_Group2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypesLite::Clear();
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite_RepeatedFieldsGenerator_Group2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator_Group2, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  return false;
#undef DO_
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->field1_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
}

size_t TestParsingMergeLite_RepeatedFieldsGenerator_Group2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
  if (has_field1()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field1_);
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite_RepeatedFieldsGenerator_Group2*>(&from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::UnsafeMergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.field1());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite_RepeatedFieldsGenerator_Group2::IsInitialized() const {

  return true;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Swap(TestParsingMergeLite_RepeatedFieldsGenerator_Group2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator_Group2* other) {
  std::swap(field1_, other->field1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestParsingMergeLite_RepeatedFieldsGenerator_Group2::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite_RepeatedFieldsGenerator::kField1FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kField2FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kField3FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kGroup1FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kGroup2FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kExt1FieldNumber;
const int TestParsingMergeLite_RepeatedFieldsGenerator::kExt2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMergeLite_RepeatedFieldsGenerator::TestParsingMergeLite_RepeatedFieldsGenerator()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
}

void TestParsingMergeLite_RepeatedFieldsGenerator::InitAsDefaultInstance() {
}

TestParsingMergeLite_RepeatedFieldsGenerator::TestParsingMergeLite_RepeatedFieldsGenerator(const TestParsingMergeLite_RepeatedFieldsGenerator& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
}

void TestParsingMergeLite_RepeatedFieldsGenerator::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestParsingMergeLite_RepeatedFieldsGenerator::~TestParsingMergeLite_RepeatedFieldsGenerator() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  SharedDtor();
}

void TestParsingMergeLite_RepeatedFieldsGenerator::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestParsingMergeLite_RepeatedFieldsGenerator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite_RepeatedFieldsGenerator& TestParsingMergeLite_RepeatedFieldsGenerator::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite_RepeatedFieldsGenerator> TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_;

TestParsingMergeLite_RepeatedFieldsGenerator* TestParsingMergeLite_RepeatedFieldsGenerator::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite_RepeatedFieldsGenerator* n = new TestParsingMergeLite_RepeatedFieldsGenerator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite_RepeatedFieldsGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  field1_.Clear();
  field2_.Clear();
  field3_.Clear();
  group1_.Clear();
  group2_.Clear();
  ext1_.Clear();
  ext2_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite_RepeatedFieldsGenerator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite_RepeatedFieldsGenerator, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field1;
        if (input->ExpectTag(18)) goto parse_loop_field2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_field2;
        if (input->ExpectTag(26)) goto parse_loop_field3;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_field3;
        if (input->ExpectTag(83)) goto parse_loop_group1;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated group Group1 = 10 { ... };
      case 10: {
        if (tag == 83) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                10, input, add_group1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_loop_group1;
        if (input->ExpectTag(163)) goto parse_loop_group2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated group Group2 = 20 { ... };
      case 20: {
        if (tag == 163) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                20, input, add_group2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_loop_group2;
        if (input->ExpectTag(8002)) goto parse_loop_ext1;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
      case 1000: {
        if (tag == 8002) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ext1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ext1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_loop_ext1;
        if (input->ExpectTag(8010)) goto parse_loop_ext2;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
      case 1001: {
        if (tag == 8010) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ext2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ext2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_loop_ext2;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  return false;
#undef DO_
}

void TestParsingMergeLite_RepeatedFieldsGenerator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
  for (unsigned int i = 0, n = this->field1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->field1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
  for (unsigned int i = 0, n = this->field2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->field2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
  for (unsigned int i = 0, n = this->field3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->field3(i), output);
  }

  // repeated group Group1 = 10 { ... };
  for (unsigned int i = 0, n = this->group1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      10, this->group1(i), output);
  }

  // repeated group Group2 = 20 { ... };
  for (unsigned int i = 0, n = this->group2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      20, this->group2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
  for (unsigned int i = 0, n = this->ext1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1000, this->ext1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
  for (unsigned int i = 0, n = this->ext2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1001, this->ext2(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
}

size_t TestParsingMergeLite_RepeatedFieldsGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  size_t total_size = 0;

  // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
  {
    unsigned int count = this->field1_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
  {
    unsigned int count = this->field2_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field2(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
  {
    unsigned int count = this->field3_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field3(i));
    }
  }

  // repeated group Group1 = 10 { ... };
  {
    unsigned int count = this->group1_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->group1(i));
    }
  }

  // repeated group Group2 = 20 { ... };
  {
    unsigned int count = this->group2_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->group2(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
  {
    unsigned int count = this->ext1_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext1(i));
    }
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
  {
    unsigned int count = this->ext2_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext2(i));
    }
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite_RepeatedFieldsGenerator*>(&from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator::UnsafeMergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator& from) {
  GOOGLE_DCHECK(&from != this);
  field1_.MergeFrom(from.field1_);
  field2_.MergeFrom(from.field2_);
  field3_.MergeFrom(from.field3_);
  group1_.MergeFrom(from.group1_);
  group2_.MergeFrom(from.group2_);
  ext1_.MergeFrom(from.ext1_);
  ext2_.MergeFrom(from.ext2_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite_RepeatedFieldsGenerator::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite_RepeatedFieldsGenerator::IsInitialized() const {

  return true;
}

void TestParsingMergeLite_RepeatedFieldsGenerator::Swap(TestParsingMergeLite_RepeatedFieldsGenerator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite_RepeatedFieldsGenerator::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator* other) {
  field1_.UnsafeArenaSwap(&other->field1_);
  field2_.UnsafeArenaSwap(&other->field2_);
  field3_.UnsafeArenaSwap(&other->field3_);
  group1_.UnsafeArenaSwap(&other->group1_);
  group2_.UnsafeArenaSwap(&other->group2_);
  ext1_.UnsafeArenaSwap(&other->ext1_);
  ext2_.UnsafeArenaSwap(&other->ext2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestParsingMergeLite_RepeatedFieldsGenerator::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite_OptionalGroup(
    TestParsingMergeLite_OptionalGroup* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite_OptionalGroup::kOptionalGroupAllTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMergeLite_OptionalGroup::TestParsingMergeLite_OptionalGroup()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
}

void TestParsingMergeLite_OptionalGroup::InitAsDefaultInstance() {
  optional_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
}

TestParsingMergeLite_OptionalGroup::TestParsingMergeLite_OptionalGroup(const TestParsingMergeLite_OptionalGroup& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
}

void TestParsingMergeLite_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_group_all_types_ = NULL;
}

TestParsingMergeLite_OptionalGroup::~TestParsingMergeLite_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  SharedDtor();
}

void TestParsingMergeLite_OptionalGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TestParsingMergeLite_OptionalGroup_default_instance_.get()) {
    delete optional_group_all_types_;
  }
}

void TestParsingMergeLite_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite_OptionalGroup& TestParsingMergeLite_OptionalGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite_OptionalGroup> TestParsingMergeLite_OptionalGroup_default_instance_;

TestParsingMergeLite_OptionalGroup* TestParsingMergeLite_OptionalGroup::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite_OptionalGroup* n = new TestParsingMergeLite_OptionalGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  if (has_optional_group_all_types()) {
    if (optional_group_all_types_ != NULL) optional_group_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite_OptionalGroup, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  return false;
#undef DO_
}

void TestParsingMergeLite_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->optional_group_all_types_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
}

size_t TestParsingMergeLite_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optional_group_all_types_);
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite_OptionalGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite_OptionalGroup*>(&from));
}

void TestParsingMergeLite_OptionalGroup::MergeFrom(const TestParsingMergeLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite_OptionalGroup::UnsafeMergeFrom(const TestParsingMergeLite_OptionalGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_group_all_types()) {
      mutable_optional_group_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.optional_group_all_types());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite_OptionalGroup::CopyFrom(const TestParsingMergeLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite_OptionalGroup::IsInitialized() const {

  return true;
}

void TestParsingMergeLite_OptionalGroup::Swap(TestParsingMergeLite_OptionalGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite_OptionalGroup::InternalSwap(TestParsingMergeLite_OptionalGroup* other) {
  std::swap(optional_group_all_types_, other->optional_group_all_types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestParsingMergeLite_OptionalGroup::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.OptionalGroup";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForTestParsingMergeLite_RepeatedGroup(
    TestParsingMergeLite_RepeatedGroup* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite_RepeatedGroup::kRepeatedGroupAllTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParsingMergeLite_RepeatedGroup::TestParsingMergeLite_RepeatedGroup()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
}

void TestParsingMergeLite_RepeatedGroup::InitAsDefaultInstance() {
  repeated_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
}

TestParsingMergeLite_RepeatedGroup::TestParsingMergeLite_RepeatedGroup(const TestParsingMergeLite_RepeatedGroup& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
}

void TestParsingMergeLite_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repeated_group_all_types_ = NULL;
}

TestParsingMergeLite_RepeatedGroup::~TestParsingMergeLite_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  SharedDtor();
}

void TestParsingMergeLite_RepeatedGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TestParsingMergeLite_RepeatedGroup_default_instance_.get()) {
    delete repeated_group_all_types_;
  }
}

void TestParsingMergeLite_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite_RepeatedGroup& TestParsingMergeLite_RepeatedGroup::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite_RepeatedGroup> TestParsingMergeLite_RepeatedGroup_default_instance_;

TestParsingMergeLite_RepeatedGroup* TestParsingMergeLite_RepeatedGroup::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite_RepeatedGroup* n = new TestParsingMergeLite_RepeatedGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  if (has_repeated_group_all_types()) {
    if (repeated_group_all_types_ != NULL) repeated_group_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite_RepeatedGroup, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repeated_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  return false;
#undef DO_
}

void TestParsingMergeLite_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->repeated_group_all_types_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
}

size_t TestParsingMergeLite_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  size_t total_size = 0;

  // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->repeated_group_all_types_);
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite_RepeatedGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite_RepeatedGroup*>(&from));
}

void TestParsingMergeLite_RepeatedGroup::MergeFrom(const TestParsingMergeLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite_RepeatedGroup::UnsafeMergeFrom(const TestParsingMergeLite_RepeatedGroup& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_repeated_group_all_types()) {
      mutable_repeated_group_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.repeated_group_all_types());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite_RepeatedGroup::CopyFrom(const TestParsingMergeLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestParsingMergeLite_RepeatedGroup::Swap(TestParsingMergeLite_RepeatedGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite_RepeatedGroup::InternalSwap(TestParsingMergeLite_RepeatedGroup* other) {
  std::swap(repeated_group_all_types_, other->repeated_group_all_types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestParsingMergeLite_RepeatedGroup::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedGroup";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite::kRequiredAllTypesFieldNumber;
const int TestParsingMergeLite::kOptionalAllTypesFieldNumber;
const int TestParsingMergeLite::kRepeatedAllTypesFieldNumber;
const int TestParsingMergeLite::kOptionalgroupFieldNumber;
const int TestParsingMergeLite::kRepeatedgroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite::kOptionalExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMergeLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite >, 11, false >
  TestParsingMergeLite::optional_ext(kOptionalExtFieldNumber, *::protobuf_unittest::TestAllTypesLite::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParsingMergeLite::kRepeatedExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMergeLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite >, 11, false >
  TestParsingMergeLite::repeated_ext(kRepeatedExtFieldNumber, *::protobuf_unittest::TestAllTypesLite::internal_default_instance());
TestParsingMergeLite::TestParsingMergeLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMergeLite)
}

void TestParsingMergeLite::InitAsDefaultInstance() {
  required_all_types_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
  optional_all_types_ = const_cast< ::protobuf_unittest::TestAllTypesLite*>(
      ::protobuf_unittest::TestAllTypesLite::internal_default_instance());
  optionalgroup_ = const_cast< ::protobuf_unittest::TestParsingMergeLite_OptionalGroup*>(
      ::protobuf_unittest::TestParsingMergeLite_OptionalGroup::internal_default_instance());
}

TestParsingMergeLite::TestParsingMergeLite(const TestParsingMergeLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite)
}

void TestParsingMergeLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_all_types_ = NULL;
  optional_all_types_ = NULL;
  optionalgroup_ = NULL;
}

TestParsingMergeLite::~TestParsingMergeLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite)
  SharedDtor();
}

void TestParsingMergeLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TestParsingMergeLite_default_instance_.get()) {
    delete required_all_types_;
    delete optional_all_types_;
    delete optionalgroup_;
  }
}

void TestParsingMergeLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestParsingMergeLite& TestParsingMergeLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestParsingMergeLite> TestParsingMergeLite_default_instance_;

TestParsingMergeLite* TestParsingMergeLite::New(::google::protobuf::Arena* arena) const {
  TestParsingMergeLite* n = new TestParsingMergeLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParsingMergeLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite)
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 11u) {
    if (has_required_all_types()) {
      if (required_all_types_ != NULL) required_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
    }
    if (has_optional_all_types()) {
      if (optional_all_types_ != NULL) optional_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestParsingMergeLite_OptionalGroup::Clear();
    }
  }
  repeated_all_types_.Clear();
  repeatedgroup_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestParsingMergeLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestParsingMergeLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMergeLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_required_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_optional_all_types;
        break;
      }

      // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
      case 2: {
        if (tag == 18) {
         parse_optional_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repeated_all_types;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
      case 3: {
        if (tag == 26) {
         parse_repeated_all_types:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeated_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_repeated_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_repeated_all_types;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(83)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 10 { ... };
      case 10: {
        if (tag == 83) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 20 { ... };
      case 20: {
        if (tag == 163) {
         parse_repeatedgroup:
          DO_(input->IncrementRecursionDepth());
         parse_loop_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                20, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_loop_repeatedgroup;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                      &unknown_fields_stream));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMergeLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMergeLite)
  return false;
#undef DO_
}

void TestParsingMergeLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMergeLite)
  // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
  if (has_required_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->required_all_types_, output);
  }

  // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
  if (has_optional_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->optional_all_types_, output);
  }

  // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
  for (unsigned int i = 0, n = this->repeated_all_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->repeated_all_types(i), output);
  }

  // optional group OptionalGroup = 10 { ... };
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      10, *this->optionalgroup_, output);
  }

  // repeated group RepeatedGroup = 20 { ... };
  for (unsigned int i = 0, n = this->repeatedgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroup(
      20, this->repeatedgroup(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMergeLite)
}

size_t TestParsingMergeLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite)
  size_t total_size = 0;

  // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
  if (has_required_all_types()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->required_all_types_);
  }
  if (_has_bits_[1 / 32] & 10u) {
    // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
    if (has_optional_all_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->optional_all_types_);
    }

    // optional group OptionalGroup = 10 { ... };
    if (has_optionalgroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->optionalgroup_);
    }

  }
  // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
  {
    unsigned int count = this->repeated_all_types_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_all_types(i));
    }
  }

  // repeated group RepeatedGroup = 20 { ... };
  {
    unsigned int count = this->repeatedgroup_size();
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->repeatedgroup(i));
    }
  }

  total_size += _extensions_.ByteSize();

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMergeLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestParsingMergeLite*>(&from));
}

void TestParsingMergeLite::MergeFrom(const TestParsingMergeLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestParsingMergeLite::UnsafeMergeFrom(const TestParsingMergeLite& from) {
  GOOGLE_DCHECK(&from != this);
  repeated_all_types_.MergeFrom(from.repeated_all_types_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_all_types()) {
      mutable_required_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.required_all_types());
    }
    if (from.has_optional_all_types()) {
      mutable_optional_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(from.optional_all_types());
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestParsingMergeLite_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestParsingMergeLite::CopyFrom(const TestParsingMergeLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestParsingMergeLite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestParsingMergeLite::Swap(TestParsingMergeLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParsingMergeLite::InternalSwap(TestParsingMergeLite* other) {
  std::swap(required_all_types_, other->required_all_types_);
  std::swap(optional_all_types_, other->optional_all_types_);
  repeated_all_types_.UnsafeArenaSwap(&other->repeated_all_types_);
  std::swap(optionalgroup_, other->optionalgroup_);
  repeatedgroup_.UnsafeArenaSwap(&other->repeatedgroup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::std::string TestParsingMergeLite::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestParsingMergeLite_RepeatedFieldsGenerator_Group1

// optional .protobuf_unittest.TestAllTypesLite field1 = 11;
bool TestParsingMergeLite_RepeatedFieldsGenerator_Group1::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::clear_field1() {
  if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_field1();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator_Group1::field1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.field1)
  return field1_ != NULL ? *field1_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::mutable_field1() {
  set_has_field1();
  if (field1_ == NULL) {
    field1_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.field1)
  return field1_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::release_field1() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.field1)
  clear_has_field1();
  ::protobuf_unittest::TestAllTypesLite* temp = field1_;
  field1_ = NULL;
  return temp;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::set_allocated_field1(::protobuf_unittest::TestAllTypesLite* field1) {
  delete field1_;
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.field1)
}

inline const TestParsingMergeLite_RepeatedFieldsGenerator_Group1* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::internal_default_instance() {
  return &TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMergeLite_RepeatedFieldsGenerator_Group2

// optional .protobuf_unittest.TestAllTypesLite field1 = 21;
bool TestParsingMergeLite_RepeatedFieldsGenerator_Group2::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::clear_field1() {
  if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_field1();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator_Group2::field1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.field1)
  return field1_ != NULL ? *field1_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::mutable_field1() {
  set_has_field1();
  if (field1_ == NULL) {
    field1_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.field1)
  return field1_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::release_field1() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.field1)
  clear_has_field1();
  ::protobuf_unittest::TestAllTypesLite* temp = field1_;
  field1_ = NULL;
  return temp;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::set_allocated_field1(::protobuf_unittest::TestAllTypesLite* field1) {
  delete field1_;
  field1_ = field1;
  if (field1) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.field1)
}

inline const TestParsingMergeLite_RepeatedFieldsGenerator_Group2* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::internal_default_instance() {
  return &TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMergeLite_RepeatedFieldsGenerator

// repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
int TestParsingMergeLite_RepeatedFieldsGenerator::field1_size() const {
  return field1_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_field1() {
  field1_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator::field1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field1)
  return field1_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field1)
  return field1_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::add_field1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field1)
  return field1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field1)
  return &field1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite_RepeatedFieldsGenerator::field1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field1)
  return field1_;
}

// repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
int TestParsingMergeLite_RepeatedFieldsGenerator::field2_size() const {
  return field2_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_field2() {
  field2_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator::field2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field2)
  return field2_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field2)
  return field2_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::add_field2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field2)
  return field2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field2)
  return &field2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite_RepeatedFieldsGenerator::field2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field2)
  return field2_;
}

// repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
int TestParsingMergeLite_RepeatedFieldsGenerator::field3_size() const {
  return field3_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_field3() {
  field3_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator::field3(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field3)
  return field3_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field3(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field3)
  return field3_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::add_field3() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field3)
  return field3_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_field3() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field3)
  return &field3_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite_RepeatedFieldsGenerator::field3() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.field3)
  return field3_;
}

// repeated group Group1 = 10 { ... };
int TestParsingMergeLite_RepeatedFieldsGenerator::group1_size() const {
  return group1_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_group1() {
  group1_.Clear();
}
const ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1& TestParsingMergeLite_RepeatedFieldsGenerator::group1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group1)
  return group1_.Get(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_group1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group1)
  return group1_.Mutable(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1* TestParsingMergeLite_RepeatedFieldsGenerator::add_group1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group1)
  return group1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1 >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_group1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group1)
  return &group1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1 >&
TestParsingMergeLite_RepeatedFieldsGenerator::group1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group1)
  return group1_;
}

// repeated group Group2 = 20 { ... };
int TestParsingMergeLite_RepeatedFieldsGenerator::group2_size() const {
  return group2_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_group2() {
  group2_.Clear();
}
const ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2& TestParsingMergeLite_RepeatedFieldsGenerator::group2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group2)
  return group2_.Get(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_group2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group2)
  return group2_.Mutable(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2* TestParsingMergeLite_RepeatedFieldsGenerator::add_group2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group2)
  return group2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2 >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_group2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group2)
  return &group2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2 >&
TestParsingMergeLite_RepeatedFieldsGenerator::group2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.group2)
  return group2_;
}

// repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
int TestParsingMergeLite_RepeatedFieldsGenerator::ext1_size() const {
  return ext1_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_ext1() {
  ext1_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator::ext1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext1)
  return ext1_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_ext1(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext1)
  return ext1_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::add_ext1() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext1)
  return ext1_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_ext1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext1)
  return &ext1_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite_RepeatedFieldsGenerator::ext1() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext1)
  return ext1_;
}

// repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
int TestParsingMergeLite_RepeatedFieldsGenerator::ext2_size() const {
  return ext2_.size();
}
void TestParsingMergeLite_RepeatedFieldsGenerator::clear_ext2() {
  ext2_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator::ext2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext2)
  return ext2_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::mutable_ext2(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext2)
  return ext2_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedFieldsGenerator::add_ext2() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext2)
  return ext2_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite_RepeatedFieldsGenerator::mutable_ext2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext2)
  return &ext2_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite_RepeatedFieldsGenerator::ext2() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.ext2)
  return ext2_;
}

inline const TestParsingMergeLite_RepeatedFieldsGenerator* TestParsingMergeLite_RepeatedFieldsGenerator::internal_default_instance() {
  return &TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMergeLite_OptionalGroup

// optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
bool TestParsingMergeLite_OptionalGroup::has_optional_group_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMergeLite_OptionalGroup::set_has_optional_group_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMergeLite_OptionalGroup::clear_has_optional_group_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMergeLite_OptionalGroup::clear_optional_group_all_types() {
  if (optional_group_all_types_ != NULL) optional_group_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_optional_group_all_types();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_OptionalGroup::optional_group_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.OptionalGroup.optional_group_all_types)
  return optional_group_all_types_ != NULL ? *optional_group_all_types_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_OptionalGroup::mutable_optional_group_all_types() {
  set_has_optional_group_all_types();
  if (optional_group_all_types_ == NULL) {
    optional_group_all_types_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.OptionalGroup.optional_group_all_types)
  return optional_group_all_types_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_OptionalGroup::release_optional_group_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.OptionalGroup.optional_group_all_types)
  clear_has_optional_group_all_types();
  ::protobuf_unittest::TestAllTypesLite* temp = optional_group_all_types_;
  optional_group_all_types_ = NULL;
  return temp;
}
void TestParsingMergeLite_OptionalGroup::set_allocated_optional_group_all_types(::protobuf_unittest::TestAllTypesLite* optional_group_all_types) {
  delete optional_group_all_types_;
  optional_group_all_types_ = optional_group_all_types;
  if (optional_group_all_types) {
    set_has_optional_group_all_types();
  } else {
    clear_has_optional_group_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.OptionalGroup.optional_group_all_types)
}

inline const TestParsingMergeLite_OptionalGroup* TestParsingMergeLite_OptionalGroup::internal_default_instance() {
  return &TestParsingMergeLite_OptionalGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMergeLite_RepeatedGroup

// optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
bool TestParsingMergeLite_RepeatedGroup::has_repeated_group_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMergeLite_RepeatedGroup::set_has_repeated_group_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMergeLite_RepeatedGroup::clear_has_repeated_group_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMergeLite_RepeatedGroup::clear_repeated_group_all_types() {
  if (repeated_group_all_types_ != NULL) repeated_group_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_repeated_group_all_types();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedGroup::repeated_group_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.RepeatedGroup.repeated_group_all_types)
  return repeated_group_all_types_ != NULL ? *repeated_group_all_types_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedGroup::mutable_repeated_group_all_types() {
  set_has_repeated_group_all_types();
  if (repeated_group_all_types_ == NULL) {
    repeated_group_all_types_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.RepeatedGroup.repeated_group_all_types)
  return repeated_group_all_types_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite_RepeatedGroup::release_repeated_group_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.RepeatedGroup.repeated_group_all_types)
  clear_has_repeated_group_all_types();
  ::protobuf_unittest::TestAllTypesLite* temp = repeated_group_all_types_;
  repeated_group_all_types_ = NULL;
  return temp;
}
void TestParsingMergeLite_RepeatedGroup::set_allocated_repeated_group_all_types(::protobuf_unittest::TestAllTypesLite* repeated_group_all_types) {
  delete repeated_group_all_types_;
  repeated_group_all_types_ = repeated_group_all_types;
  if (repeated_group_all_types) {
    set_has_repeated_group_all_types();
  } else {
    clear_has_repeated_group_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.RepeatedGroup.repeated_group_all_types)
}

inline const TestParsingMergeLite_RepeatedGroup* TestParsingMergeLite_RepeatedGroup::internal_default_instance() {
  return &TestParsingMergeLite_RepeatedGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TestParsingMergeLite

// required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
bool TestParsingMergeLite::has_required_all_types() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestParsingMergeLite::set_has_required_all_types() {
  _has_bits_[0] |= 0x00000001u;
}
void TestParsingMergeLite::clear_has_required_all_types() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestParsingMergeLite::clear_required_all_types() {
  if (required_all_types_ != NULL) required_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_required_all_types();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite::required_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.required_all_types)
  return required_all_types_ != NULL ? *required_all_types_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::mutable_required_all_types() {
  set_has_required_all_types();
  if (required_all_types_ == NULL) {
    required_all_types_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.required_all_types)
  return required_all_types_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::release_required_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.required_all_types)
  clear_has_required_all_types();
  ::protobuf_unittest::TestAllTypesLite* temp = required_all_types_;
  required_all_types_ = NULL;
  return temp;
}
void TestParsingMergeLite::set_allocated_required_all_types(::protobuf_unittest::TestAllTypesLite* required_all_types) {
  delete required_all_types_;
  required_all_types_ = required_all_types;
  if (required_all_types) {
    set_has_required_all_types();
  } else {
    clear_has_required_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.required_all_types)
}

// optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
bool TestParsingMergeLite::has_optional_all_types() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestParsingMergeLite::set_has_optional_all_types() {
  _has_bits_[0] |= 0x00000002u;
}
void TestParsingMergeLite::clear_has_optional_all_types() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestParsingMergeLite::clear_optional_all_types() {
  if (optional_all_types_ != NULL) optional_all_types_->::protobuf_unittest::TestAllTypesLite::Clear();
  clear_has_optional_all_types();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite::optional_all_types() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.optional_all_types)
  return optional_all_types_ != NULL ? *optional_all_types_
                         : *::protobuf_unittest::TestAllTypesLite::internal_default_instance();
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::mutable_optional_all_types() {
  set_has_optional_all_types();
  if (optional_all_types_ == NULL) {
    optional_all_types_ = new ::protobuf_unittest::TestAllTypesLite;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.optional_all_types)
  return optional_all_types_;
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::release_optional_all_types() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.optional_all_types)
  clear_has_optional_all_types();
  ::protobuf_unittest::TestAllTypesLite* temp = optional_all_types_;
  optional_all_types_ = NULL;
  return temp;
}
void TestParsingMergeLite::set_allocated_optional_all_types(::protobuf_unittest::TestAllTypesLite* optional_all_types) {
  delete optional_all_types_;
  optional_all_types_ = optional_all_types;
  if (optional_all_types) {
    set_has_optional_all_types();
  } else {
    clear_has_optional_all_types();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.optional_all_types)
}

// repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
int TestParsingMergeLite::repeated_all_types_size() const {
  return repeated_all_types_.size();
}
void TestParsingMergeLite::clear_repeated_all_types() {
  repeated_all_types_.Clear();
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite::repeated_all_types(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.repeated_all_types)
  return repeated_all_types_.Get(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::mutable_repeated_all_types(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.repeated_all_types)
  return repeated_all_types_.Mutable(index);
}
::protobuf_unittest::TestAllTypesLite* TestParsingMergeLite::add_repeated_all_types() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.repeated_all_types)
  return repeated_all_types_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >*
TestParsingMergeLite::mutable_repeated_all_types() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.repeated_all_types)
  return &repeated_all_types_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestAllTypesLite >&
TestParsingMergeLite::repeated_all_types() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.repeated_all_types)
  return repeated_all_types_;
}

// optional group OptionalGroup = 10 { ... };
bool TestParsingMergeLite::has_optionalgroup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestParsingMergeLite::set_has_optionalgroup() {
  _has_bits_[0] |= 0x00000008u;
}
void TestParsingMergeLite::clear_has_optionalgroup() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestParsingMergeLite::clear_optionalgroup() {
  if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestParsingMergeLite_OptionalGroup::Clear();
  clear_has_optionalgroup();
}
const ::protobuf_unittest::TestParsingMergeLite_OptionalGroup& TestParsingMergeLite::optionalgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.optionalgroup)
  return optionalgroup_ != NULL ? *optionalgroup_
                         : *::protobuf_unittest::TestParsingMergeLite_OptionalGroup::internal_default_instance();
}
::protobuf_unittest::TestParsingMergeLite_OptionalGroup* TestParsingMergeLite::mutable_optionalgroup() {
  set_has_optionalgroup();
  if (optionalgroup_ == NULL) {
    optionalgroup_ = new ::protobuf_unittest::TestParsingMergeLite_OptionalGroup;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.optionalgroup)
  return optionalgroup_;
}
::protobuf_unittest::TestParsingMergeLite_OptionalGroup* TestParsingMergeLite::release_optionalgroup() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestParsingMergeLite.optionalgroup)
  clear_has_optionalgroup();
  ::protobuf_unittest::TestParsingMergeLite_OptionalGroup* temp = optionalgroup_;
  optionalgroup_ = NULL;
  return temp;
}
void TestParsingMergeLite::set_allocated_optionalgroup(::protobuf_unittest::TestParsingMergeLite_OptionalGroup* optionalgroup) {
  delete optionalgroup_;
  optionalgroup_ = optionalgroup;
  if (optionalgroup) {
    set_has_optionalgroup();
  } else {
    clear_has_optionalgroup();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestParsingMergeLite.optionalgroup)
}

// repeated group RepeatedGroup = 20 { ... };
int TestParsingMergeLite::repeatedgroup_size() const {
  return repeatedgroup_.size();
}
void TestParsingMergeLite::clear_repeatedgroup() {
  repeatedgroup_.Clear();
}
const ::protobuf_unittest::TestParsingMergeLite_RepeatedGroup& TestParsingMergeLite::repeatedgroup(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestParsingMergeLite.repeatedgroup)
  return repeatedgroup_.Get(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedGroup* TestParsingMergeLite::mutable_repeatedgroup(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestParsingMergeLite.repeatedgroup)
  return repeatedgroup_.Mutable(index);
}
::protobuf_unittest::TestParsingMergeLite_RepeatedGroup* TestParsingMergeLite::add_repeatedgroup() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestParsingMergeLite.repeatedgroup)
  return repeatedgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedGroup >*
TestParsingMergeLite::mutable_repeatedgroup() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestParsingMergeLite.repeatedgroup)
  return &repeatedgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestParsingMergeLite_RepeatedGroup >&
TestParsingMergeLite::repeatedgroup() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestParsingMergeLite.repeatedgroup)
  return repeatedgroup_;
}

inline const TestParsingMergeLite* TestParsingMergeLite::internal_default_instance() {
  return &TestParsingMergeLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestEmptyMessageLite(
    TestEmptyMessageLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEmptyMessageLite::TestEmptyMessageLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessageLite)
}

void TestEmptyMessageLite::InitAsDefaultInstance() {
}

TestEmptyMessageLite::TestEmptyMessageLite(const TestEmptyMessageLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageLite)
}

void TestEmptyMessageLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestEmptyMessageLite::~TestEmptyMessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageLite)
  SharedDtor();
}

void TestEmptyMessageLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestEmptyMessageLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestEmptyMessageLite& TestEmptyMessageLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestEmptyMessageLite> TestEmptyMessageLite_default_instance_;

TestEmptyMessageLite* TestEmptyMessageLite::New(::google::protobuf::Arena* arena) const {
  TestEmptyMessageLite* n = new TestEmptyMessageLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestEmptyMessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageLite)
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestEmptyMessageLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestEmptyMessageLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessageLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessageLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessageLite)
  return false;
#undef DO_
}

void TestEmptyMessageLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessageLite)
  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessageLite)
}

size_t TestEmptyMessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageLite)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestEmptyMessageLite*>(&from));
}

void TestEmptyMessageLite::MergeFrom(const TestEmptyMessageLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestEmptyMessageLite::UnsafeMergeFrom(const TestEmptyMessageLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestEmptyMessageLite::CopyFrom(const TestEmptyMessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestEmptyMessageLite::IsInitialized() const {

  return true;
}

void TestEmptyMessageLite::Swap(TestEmptyMessageLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestEmptyMessageLite::InternalSwap(TestEmptyMessageLite* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TestEmptyMessageLite::GetTypeName() const {
  return "protobuf_unittest.TestEmptyMessageLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEmptyMessageLite

inline const TestEmptyMessageLite* TestEmptyMessageLite::internal_default_instance() {
  return &TestEmptyMessageLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTestEmptyMessageWithExtensionsLite(
    TestEmptyMessageWithExtensionsLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEmptyMessageWithExtensionsLite::TestEmptyMessageWithExtensionsLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
}

void TestEmptyMessageWithExtensionsLite::InitAsDefaultInstance() {
}

TestEmptyMessageWithExtensionsLite::TestEmptyMessageWithExtensionsLite(const TestEmptyMessageWithExtensionsLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
}

void TestEmptyMessageWithExtensionsLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestEmptyMessageWithExtensionsLite::~TestEmptyMessageWithExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  SharedDtor();
}

void TestEmptyMessageWithExtensionsLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestEmptyMessageWithExtensionsLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TestEmptyMessageWithExtensionsLite& TestEmptyMessageWithExtensionsLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TestEmptyMessageWithExtensionsLite> TestEmptyMessageWithExtensionsLite_default_instance_;

TestEmptyMessageWithExtensionsLite* TestEmptyMessageWithExtensionsLite::New(::google::protobuf::Arena* arena) const {
  TestEmptyMessageWithExtensionsLite* n = new TestEmptyMessageWithExtensionsLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestEmptyMessageWithExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  _extensions_.Clear();
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TestEmptyMessageWithExtensionsLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForTestEmptyMessageWithExtensionsLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                  &unknown_fields_stream));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  return false;
#undef DO_
}

void TestEmptyMessageWithExtensionsLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
}

size_t TestEmptyMessageWithExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessageWithExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TestEmptyMessageWithExtensionsLite*>(&from));
}

void TestEmptyMessageWithExtensionsLite::MergeFrom(const TestEmptyMessageWithExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TestEmptyMessageWithExtensionsLite::UnsafeMergeFrom(const TestEmptyMessageWithExtensionsLite& from) {
  GOOGLE_DCHECK(&from != this);
  _extensions_.MergeFrom(from._extensions_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void TestEmptyMessageWithExtensionsLite::CopyFrom(const TestEmptyMessageWithExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TestEmptyMessageWithExtensionsLite::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void TestEmptyMessageWithExtensionsLite::Swap(TestEmptyMessageWithExtensionsLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestEmptyMessageWithExtensionsLite::InternalSwap(TestEmptyMessageWithExtensionsLite* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::std::string TestEmptyMessageWithExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestEmptyMessageWithExtensionsLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEmptyMessageWithExtensionsLite

inline const TestEmptyMessageWithExtensionsLite* TestEmptyMessageWithExtensionsLite::internal_default_instance() {
  return &TestEmptyMessageWithExtensionsLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForV1MessageLite(
    V1MessageLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V1MessageLite::kIntFieldFieldNumber;
const int V1MessageLite::kEnumFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V1MessageLite::V1MessageLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.V1MessageLite)
}

void V1MessageLite::InitAsDefaultInstance() {
}

V1MessageLite::V1MessageLite(const V1MessageLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.V1MessageLite)
}

void V1MessageLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int_field_ = 0;
  enum_field_ = 1;
}

V1MessageLite::~V1MessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.V1MessageLite)
  SharedDtor();
}

void V1MessageLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void V1MessageLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const V1MessageLite& V1MessageLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<V1MessageLite> V1MessageLite_default_instance_;

V1MessageLite* V1MessageLite::New(::google::protobuf::Arena* arena) const {
  V1MessageLite* n = new V1MessageLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void V1MessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.V1MessageLite)
  if (_has_bits_[0 / 32] & 3u) {
    int_field_ = 0;
    enum_field_ = 1;
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool V1MessageLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForV1MessageLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.V1MessageLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 int_field = 1;
      case 1: {
        if (tag == 8) {
          set_has_int_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_field_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enum_field;
        break;
      }

      // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
      case 2: {
        if (tag == 16) {
         parse_enum_field:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::V1EnumLite_IsValid(value)) {
            set_enum_field(static_cast< ::protobuf_unittest::V1EnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.V1MessageLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.V1MessageLite)
  return false;
#undef DO_
}

void V1MessageLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.V1MessageLite)
  // required int32 int_field = 1;
  if (has_int_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int_field(), output);
  }

  // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
  if (has_enum_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enum_field(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.V1MessageLite)
}

size_t V1MessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.V1MessageLite)
  size_t total_size = 0;

  // required int32 int_field = 1;
  if (has_int_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_field());
  }
  // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
  if (has_enum_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_field());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void V1MessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const V1MessageLite*>(&from));
}

void V1MessageLite::MergeFrom(const V1MessageLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.V1MessageLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void V1MessageLite::UnsafeMergeFrom(const V1MessageLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_int_field()) {
      set_int_field(from.int_field());
    }
    if (from.has_enum_field()) {
      set_enum_field(from.enum_field());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void V1MessageLite::CopyFrom(const V1MessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.V1MessageLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool V1MessageLite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void V1MessageLite::Swap(V1MessageLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V1MessageLite::InternalSwap(V1MessageLite* other) {
  std::swap(int_field_, other->int_field_);
  std::swap(enum_field_, other->enum_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string V1MessageLite::GetTypeName() const {
  return "protobuf_unittest.V1MessageLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// V1MessageLite

// required int32 int_field = 1;
bool V1MessageLite::has_int_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void V1MessageLite::set_has_int_field() {
  _has_bits_[0] |= 0x00000001u;
}
void V1MessageLite::clear_has_int_field() {
  _has_bits_[0] &= ~0x00000001u;
}
void V1MessageLite::clear_int_field() {
  int_field_ = 0;
  clear_has_int_field();
}
::google::protobuf::int32 V1MessageLite::int_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.V1MessageLite.int_field)
  return int_field_;
}
void V1MessageLite::set_int_field(::google::protobuf::int32 value) {
  set_has_int_field();
  int_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.V1MessageLite.int_field)
}

// optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
bool V1MessageLite::has_enum_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void V1MessageLite::set_has_enum_field() {
  _has_bits_[0] |= 0x00000002u;
}
void V1MessageLite::clear_has_enum_field() {
  _has_bits_[0] &= ~0x00000002u;
}
void V1MessageLite::clear_enum_field() {
  enum_field_ = 1;
  clear_has_enum_field();
}
::protobuf_unittest::V1EnumLite V1MessageLite::enum_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.V1MessageLite.enum_field)
  return static_cast< ::protobuf_unittest::V1EnumLite >(enum_field_);
}
void V1MessageLite::set_enum_field(::protobuf_unittest::V1EnumLite value) {
  assert(::protobuf_unittest::V1EnumLite_IsValid(value));
  set_has_enum_field();
  enum_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.V1MessageLite.enum_field)
}

inline const V1MessageLite* V1MessageLite::internal_default_instance() {
  return &V1MessageLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForV2MessageLite(
    V2MessageLite* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2MessageLite::kIntFieldFieldNumber;
const int V2MessageLite::kEnumFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2MessageLite::V2MessageLite()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.V2MessageLite)
}

void V2MessageLite::InitAsDefaultInstance() {
}

V2MessageLite::V2MessageLite(const V2MessageLite& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.V2MessageLite)
}

void V2MessageLite::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int_field_ = 0;
  enum_field_ = 1;
}

V2MessageLite::~V2MessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.V2MessageLite)
  SharedDtor();
}

void V2MessageLite::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void V2MessageLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const V2MessageLite& V2MessageLite::default_instance() {
  protobuf_InitDefaults_google_2fprotobuf_2funittest_5flite_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<V2MessageLite> V2MessageLite_default_instance_;

V2MessageLite* V2MessageLite::New(::google::protobuf::Arena* arena) const {
  V2MessageLite* n = new V2MessageLite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void V2MessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.V2MessageLite)
  if (_has_bits_[0 / 32] & 3u) {
    int_field_ = 0;
    enum_field_ = 1;
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool V2MessageLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForV2MessageLite, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:protobuf_unittest.V2MessageLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 int_field = 1;
      case 1: {
        if (tag == 8) {
          set_has_int_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_field_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enum_field;
        break;
      }

      // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
      case 2: {
        if (tag == 16) {
         parse_enum_field:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::V2EnumLite_IsValid(value)) {
            set_enum_field(static_cast< ::protobuf_unittest::V2EnumLite >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.V2MessageLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.V2MessageLite)
  return false;
#undef DO_
}

void V2MessageLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.V2MessageLite)
  // required int32 int_field = 1;
  if (has_int_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int_field(), output);
  }

  // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
  if (has_enum_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enum_field(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.V2MessageLite)
}

size_t V2MessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.V2MessageLite)
  size_t total_size = 0;

  // required int32 int_field = 1;
  if (has_int_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_field());
  }
  // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
  if (has_enum_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_field());
  }

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void V2MessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const V2MessageLite*>(&from));
}

void V2MessageLite::MergeFrom(const V2MessageLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.V2MessageLite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void V2MessageLite::UnsafeMergeFrom(const V2MessageLite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_int_field()) {
      set_int_field(from.int_field());
    }
    if (from.has_enum_field()) {
      set_enum_field(from.enum_field());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void V2MessageLite::CopyFrom(const V2MessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.V2MessageLite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool V2MessageLite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void V2MessageLite::Swap(V2MessageLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2MessageLite::InternalSwap(V2MessageLite* other) {
  std::swap(int_field_, other->int_field_);
  std::swap(enum_field_, other->enum_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string V2MessageLite::GetTypeName() const {
  return "protobuf_unittest.V2MessageLite";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// V2MessageLite

// required int32 int_field = 1;
bool V2MessageLite::has_int_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void V2MessageLite::set_has_int_field() {
  _has_bits_[0] |= 0x00000001u;
}
void V2MessageLite::clear_has_int_field() {
  _has_bits_[0] &= ~0x00000001u;
}
void V2MessageLite::clear_int_field() {
  int_field_ = 0;
  clear_has_int_field();
}
::google::protobuf::int32 V2MessageLite::int_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.V2MessageLite.int_field)
  return int_field_;
}
void V2MessageLite::set_int_field(::google::protobuf::int32 value) {
  set_has_int_field();
  int_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.V2MessageLite.int_field)
}

// optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
bool V2MessageLite::has_enum_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void V2MessageLite::set_has_enum_field() {
  _has_bits_[0] |= 0x00000002u;
}
void V2MessageLite::clear_has_enum_field() {
  _has_bits_[0] &= ~0x00000002u;
}
void V2MessageLite::clear_enum_field() {
  enum_field_ = 1;
  clear_has_enum_field();
}
::protobuf_unittest::V2EnumLite V2MessageLite::enum_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.V2MessageLite.enum_field)
  return static_cast< ::protobuf_unittest::V2EnumLite >(enum_field_);
}
void V2MessageLite::set_enum_field(::protobuf_unittest::V2EnumLite value) {
  assert(::protobuf_unittest::V2EnumLite_IsValid(value));
  set_has_enum_field();
  enum_field_ = value;
  // @@protoc_insertion_point(field_set:protobuf_unittest.V2MessageLite.enum_field)
}

inline const V2MessageLite* V2MessageLite::internal_default_instance() {
  return &V2MessageLite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  optional_int32_extension_lite(kOptionalInt32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  optional_int64_extension_lite(kOptionalInt64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  optional_uint32_extension_lite(kOptionalUint32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  optional_uint64_extension_lite(kOptionalUint64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  optional_sint32_extension_lite(kOptionalSint32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  optional_sint64_extension_lite(kOptionalSint64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  optional_fixed32_extension_lite(kOptionalFixed32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  optional_fixed64_extension_lite(kOptionalFixed64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  optional_sfixed32_extension_lite(kOptionalSfixed32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  optional_sfixed64_extension_lite(kOptionalSfixed64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  optional_float_extension_lite(kOptionalFloatExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  optional_double_extension_lite(kOptionalDoubleExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  optional_bool_extension_lite(kOptionalBoolExtensionLiteFieldNumber, false);
const ::std::string optional_string_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_extension_lite(kOptionalStringExtensionLiteFieldNumber, optional_string_extension_lite_default);
const ::std::string optional_bytes_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  optional_bytes_extension_lite(kOptionalBytesExtensionLiteFieldNumber, optional_bytes_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::OptionalGroup_extension_lite >, 10, false >
  optionalgroup_extension_lite(kOptionalgroupExtensionLiteFieldNumber, *::protobuf_unittest::OptionalGroup_extension_lite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false >
  optional_nested_message_extension_lite(kOptionalNestedMessageExtensionLiteFieldNumber, *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::ForeignMessageLite >, 11, false >
  optional_foreign_message_extension_lite(kOptionalForeignMessageExtensionLiteFieldNumber, *::protobuf_unittest::ForeignMessageLite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessageLite >, 11, false >
  optional_import_message_extension_lite(kOptionalImportMessageExtensionLiteFieldNumber, *::protobuf_unittest_import::ImportMessageLite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false >
  optional_nested_enum_extension_lite(kOptionalNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false >
  optional_foreign_enum_extension_lite(kOptionalForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false >
  optional_import_enum_extension_lite(kOptionalImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(7));
const ::std::string optional_string_piece_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_piece_extension_lite(kOptionalStringPieceExtensionLiteFieldNumber, optional_string_piece_extension_lite_default);
const ::std::string optional_cord_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_cord_extension_lite(kOptionalCordExtensionLiteFieldNumber, optional_cord_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessageLite >, 11, false >
  optional_public_import_message_extension_lite(kOptionalPublicImportMessageExtensionLiteFieldNumber, *::protobuf_unittest_import::PublicImportMessageLite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false >
  optional_lazy_message_extension_lite(kOptionalLazyMessageExtensionLiteFieldNumber, *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  repeated_int32_extension_lite(kRepeatedInt32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  repeated_int64_extension_lite(kRepeatedInt64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  repeated_uint32_extension_lite(kRepeatedUint32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  repeated_uint64_extension_lite(kRepeatedUint64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  repeated_sint32_extension_lite(kRepeatedSint32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  repeated_sint64_extension_lite(kRepeatedSint64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  repeated_fixed32_extension_lite(kRepeatedFixed32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  repeated_fixed64_extension_lite(kRepeatedFixed64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  repeated_sfixed32_extension_lite(kRepeatedSfixed32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  repeated_sfixed64_extension_lite(kRepeatedSfixed64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false >
  repeated_float_extension_lite(kRepeatedFloatExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  repeated_double_extension_lite(kRepeatedDoubleExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false >
  repeated_bool_extension_lite(kRepeatedBoolExtensionLiteFieldNumber, false);
const ::std::string repeated_string_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_extension_lite(kRepeatedStringExtensionLiteFieldNumber, repeated_string_extension_lite_default);
const ::std::string repeated_bytes_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 12, false >
  repeated_bytes_extension_lite(kRepeatedBytesExtensionLiteFieldNumber, repeated_bytes_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::RepeatedGroup_extension_lite >, 10, false >
  repeatedgroup_extension_lite(kRepeatedgroupExtensionLiteFieldNumber, *::protobuf_unittest::RepeatedGroup_extension_lite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false >
  repeated_nested_message_extension_lite(kRepeatedNestedMessageExtensionLiteFieldNumber, *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::ForeignMessageLite >, 11, false >
  repeated_foreign_message_extension_lite(kRepeatedForeignMessageExtensionLiteFieldNumber, *::protobuf_unittest::ForeignMessageLite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessageLite >, 11, false >
  repeated_import_message_extension_lite(kRepeatedImportMessageExtensionLiteFieldNumber, *::protobuf_unittest_import::ImportMessageLite::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false >
  repeated_nested_enum_extension_lite(kRepeatedNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false >
  repeated_foreign_enum_extension_lite(kRepeatedForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false >
  repeated_import_enum_extension_lite(kRepeatedImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(7));
const ::std::string repeated_string_piece_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_piece_extension_lite(kRepeatedStringPieceExtensionLiteFieldNumber, repeated_string_piece_extension_lite_default);
const ::std::string repeated_cord_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_cord_extension_lite(kRepeatedCordExtensionLiteFieldNumber, repeated_cord_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false >
  repeated_lazy_message_extension_lite(kRepeatedLazyMessageExtensionLiteFieldNumber, *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  default_int32_extension_lite(kDefaultInt32ExtensionLiteFieldNumber, 41);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  default_int64_extension_lite(kDefaultInt64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(42));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  default_uint32_extension_lite(kDefaultUint32ExtensionLiteFieldNumber, 43u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  default_uint64_extension_lite(kDefaultUint64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(44));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  default_sint32_extension_lite(kDefaultSint32ExtensionLiteFieldNumber, -45);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  default_sint64_extension_lite(kDefaultSint64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(46));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  default_fixed32_extension_lite(kDefaultFixed32ExtensionLiteFieldNumber, 47u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  default_fixed64_extension_lite(kDefaultFixed64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(48));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  default_sfixed32_extension_lite(kDefaultSfixed32ExtensionLiteFieldNumber, 49);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  default_sfixed64_extension_lite(kDefaultSfixed64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(-50));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  default_float_extension_lite(kDefaultFloatExtensionLiteFieldNumber, 51.5f);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  default_double_extension_lite(kDefaultDoubleExtensionLiteFieldNumber, 52000);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  default_bool_extension_lite(kDefaultBoolExtensionLiteFieldNumber, true);
const ::std::string default_string_extension_lite_default("hello");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_extension_lite(kDefaultStringExtensionLiteFieldNumber, default_string_extension_lite_default);
const ::std::string default_bytes_extension_lite_default("world");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  default_bytes_extension_lite(kDefaultBytesExtensionLiteFieldNumber, default_bytes_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false >
  default_nested_enum_extension_lite(kDefaultNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(2));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false >
  default_foreign_enum_extension_lite(kDefaultForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(5));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false >
  default_import_enum_extension_lite(kDefaultImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(8));
const ::std::string default_string_piece_extension_lite_default("abc");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_piece_extension_lite(kDefaultStringPieceExtensionLiteFieldNumber, default_string_piece_extension_lite_default);
const ::std::string default_cord_extension_lite_default("123");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_cord_extension_lite(kDefaultCordExtensionLiteFieldNumber, default_cord_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  oneof_uint32_extension_lite(kOneofUint32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false >
  oneof_nested_message_extension_lite(kOneofNestedMessageExtensionLiteFieldNumber, *::protobuf_unittest::TestAllTypesLite_NestedMessage::internal_default_instance());
const ::std::string oneof_string_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  oneof_string_extension_lite(kOneofStringExtensionLiteFieldNumber, oneof_string_extension_lite_default);
const ::std::string oneof_bytes_extension_lite_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  oneof_bytes_extension_lite(kOneofBytesExtensionLiteFieldNumber, oneof_bytes_extension_lite_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, true >
  packed_int32_extension_lite(kPackedInt32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, true >
  packed_int64_extension_lite(kPackedInt64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, true >
  packed_uint32_extension_lite(kPackedUint32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, true >
  packed_uint64_extension_lite(kPackedUint64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, true >
  packed_sint32_extension_lite(kPackedSint32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, true >
  packed_sint64_extension_lite(kPackedSint64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, true >
  packed_fixed32_extension_lite(kPackedFixed32ExtensionLiteFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, true >
  packed_fixed64_extension_lite(kPackedFixed64ExtensionLiteFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, true >
  packed_sfixed32_extension_lite(kPackedSfixed32ExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, true >
  packed_sfixed64_extension_lite(kPackedSfixed64ExtensionLiteFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, true >
  packed_float_extension_lite(kPackedFloatExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, true >
  packed_double_extension_lite(kPackedDoubleExtensionLiteFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true >
  packed_bool_extension_lite(kPackedBoolExtensionLiteFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, true >
  packed_enum_extension_lite(kPackedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4));

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
