#include "config.txt"

loadPlugin(pluginPath)
go

/* Index */
share table(1:0,`MDDate`MDTime`HTSCSecurityID`LastPx`TotalVolumeTrade`TotalValueTrade`UpdateTime1 , [ DATE, TIME,SYMBOL, LONG, LONG, LONG,TIMESTAMP]) as t1
filterIndex = table(["000928.SH","000929.SH","000930.SH","000931.SH","000932.SH","000933.SH","000934.SH","000935.SH","000936.SH","000937.SH"] as HTSCSecurityID)

/*  Futures */
share table(
    array(SYMBOL, 0) as  HTSCSecurityID,
    array(DATE, 0) as  MDDate,
    array(TIME, 0) as  MDTime,
    array(SYMBOL, 0) as securityIDSource,
    array(LONG, 0) as  PreClosePx,
    array(LONG, 0) as  TotalVolumeTrade,
    array(LONG, 0) as  TotalValueTrade,
    array(LONG, 0) as  LastPx,
    array(LONG, 0) as  OpenPx,
    array(LONG, 0) as  HighPx,
    array(LONG, 0) as  LowPx,
    array(LONG, 0) as  PreOpenInterest,
    array(LONG, 0) as  PreSettlePrice,
    array(LONG, 0) as  OpenInterest,
    array(LONG, 0) as  BuyPrice1,
    array(LONG, 0) as  BuyPrice2,
    array(LONG, 0) as  BuyPrice3,
    array(LONG, 0) as  BuyPrice4,
    array(LONG, 0) as  BuyPrice5,
    array(LONG, 0) as  BuyOrderQty1,
    array(LONG, 0) as  BuyOrderQty2,
    array(LONG, 0) as  BuyOrderQty3,
    array(LONG, 0) as  BuyOrderQty4,
    array(LONG, 0) as  BuyOrderQty5,
    array(LONG, 0) as  SellPrice1,
    array(LONG, 0) as  SellPrice2,
    array(LONG, 0) as  SellPrice3,
    array(LONG, 0) as  SellPrice4,
    array(LONG, 0) as  SellPrice5,
    array(LONG, 0) as  SellOrderQty1,
    array(LONG, 0) as  SellOrderQty2,
    array(LONG, 0) as  SellOrderQty3,
    array(LONG, 0) as  SellOrderQty4,
    array(LONG, 0) as  SellOrderQty5,
    array(TIMESTAMP, 0) as  UpdateTime1
) as t2
queryClient = insight::queryLoginByPassword(userQuery, passwordQuery, serverQuery)
filterFuture = insight::queryFuturesFilter(queryClient)
queryClient.close()

//////////////////////////////////////////////////////////////

udpClient = insight::registHandle(dict([`IndexType,`FuturesType], [t1,t2]) , dict([`IndexType,`FuturesType], [filterIndex,filterFuture]), 1)
insight::loginById(udpClient, ip, port, user, password, backups)
insight::addSubscribeDetail(udpClient, [`MD_TICK], `XSHG, `IndexType)
insight::addSubscribeDetail(udpClient, [`MD_TICK], `CCFX, `FuturesType)
insight::subscribe(udpClient, interfaceIP)

udpClient.close()
